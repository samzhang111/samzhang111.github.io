/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/defineProperty.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _extends)\n/* harmony export */ });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/@babel/runtime/helpers/esm/extends.js?");

/***/ }),

/***/ "./node_modules/canvas/browser.js":
/*!****************************************!*\
  !*** ./node_modules/canvas/browser.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* globals document, ImageData */\nconst parseFont = __webpack_require__(/*! ./lib/parse-font */ \"./node_modules/canvas/lib/parse-font.js\");\n\nexports.parseFont = parseFont;\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), {\n    width: width,\n    height: height\n  });\n};\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0:\n      return new ImageData();\n\n    case 1:\n      return new ImageData(array);\n\n    case 2:\n      return new ImageData(array, width);\n\n    default:\n      return new ImageData(array, width, height);\n  }\n};\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options);\n\n    function cleanup() {\n      image.onload = null;\n      image.onerror = null;\n    }\n\n    image.onload = function () {\n      cleanup();\n      resolve(image);\n    };\n\n    image.onerror = function () {\n      cleanup();\n      reject(new Error('Failed to load the image \"' + src + '\"'));\n    };\n\n    image.src = src;\n  });\n};\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/canvas/browser.js?");

/***/ }),

/***/ "./node_modules/canvas/lib/parse-font.js":
/*!***********************************************!*\
  !*** ./node_modules/canvas/lib/parse-font.js ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
eval("\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00',\n      styles = 'italic|oblique',\n      variants = 'small-caps',\n      stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded',\n      units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q',\n      string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'; // [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\n\nconst weightRe = new RegExp('(' + weights + ') +', 'i');\nconst styleRe = new RegExp('(' + styles + ') +', 'i');\nconst variantRe = new RegExp('(' + variants + ') +', 'i');\nconst stretchRe = new RegExp('(' + stretches + ') +', 'i');\nconst sizeFamilyRe = new RegExp('([\\\\d\\\\.]+)(' + units + ') *' + '((?:' + string + ')( *, *(?:' + string + '))*)');\n/**\n * Cache font parsing.\n */\n\nconst cache = {};\nconst defaultHeight = 16; // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = function (str) {\n  // Cached\n  if (cache[str]) return cache[str]; // Try for required properties first.\n\n  const sizeFamily = sizeFamilyRe.exec(str);\n  if (!sizeFamily) return; // invalid\n  // Default values and required properties\n\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }; // Optional, unordered properties.\n\n  let weight, style, variant, stretch; // Stop search at `sizeFamily.index`\n\n  let substr = str.substring(0, sizeFamily.index);\n  if (weight = weightRe.exec(substr)) font.weight = weight[1];\n  if (style = styleRe.exec(substr)) font.style = style[1];\n  if (variant = variantRe.exec(substr)) font.variant = variant[1];\n  if (stretch = stretchRe.exec(substr)) font.stretch = stretch[1]; // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75;\n      break;\n\n    case 'pc':\n      font.size *= 16;\n      break;\n\n    case 'in':\n      font.size *= 96;\n      break;\n\n    case 'cm':\n      font.size *= 96.0 / 2.54;\n      break;\n\n    case 'mm':\n      font.size *= 96.0 / 25.4;\n      break;\n\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break;\n\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75;\n      break;\n\n    case 'q':\n      font.size *= 96 / 25.4 / 4;\n      break;\n  }\n\n  return cache[str] = font;\n};\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/canvas/lib/parse-font.js?");

/***/ }),

/***/ "./node_modules/complex.js/complex.js":
/*!********************************************!*\
  !*** ./node_modules/complex.js/complex.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license Complex.js v2.0.15 12/05/2020\n *\n * Copyright (c) 2020, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * var c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n(function (root) {\n  'use strict';\n\n  var cosh = function (x) {\n    return (Math.exp(x) + Math.exp(-x)) * 0.5;\n  };\n\n  var sinh = function (x) {\n    return (Math.exp(x) - Math.exp(-x)) * 0.5;\n  };\n  /**\n   * Calculates cos(x) - 1 using Taylor series if x is small (-¼π ≤ x ≤ ¼π).\n   *\n   * @param {number} x\n   * @returns {number} cos(x) - 1\n   */\n\n\n  var cosm1 = function (x) {\n    var b = Math.PI / 4;\n\n    if (-b > x || x > b) {\n      return Math.cos(x) - 1.0;\n    }\n    /* Calculate horner form of polynomial of taylor series in Q\n    var fac = 1, alt = 1, pol = {};\n    for (var i = 0; i <= 16; i++) {\n      fac*= i || 1;\n      if (i % 2 == 0) {\n        pol[i] = new Fraction(1, alt * fac);\n        alt = -alt;\n      }\n    }\n    console.log(new Polynomial(pol).toHorner()); // (((((((1/20922789888000x^2-1/87178291200)x^2+1/479001600)x^2-1/3628800)x^2+1/40320)x^2-1/720)x^2+1/24)x^2-1/2)x^2+1\n    */\n\n\n    var xx = x * x;\n    return xx * (xx * (xx * (xx * (xx * (xx * (xx * (xx / 20922789888000 - 1 / 87178291200) + 1 / 479001600) - 1 / 3628800) + 1 / 40320) - 1 / 720) + 1 / 24) - 1 / 2);\n  };\n\n  var hypot = function (x, y) {\n    var a = Math.abs(x);\n    var b = Math.abs(y);\n\n    if (a < 3000 && b < 3000) {\n      return Math.sqrt(a * a + b * b);\n    }\n\n    if (a < b) {\n      a = b;\n      b = x / y;\n    } else {\n      b = y / x;\n    }\n\n    return a * Math.sqrt(1 + b * b);\n  };\n\n  var parser_exit = function () {\n    throw SyntaxError('Invalid Param');\n  };\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n\n\n  function logHypot(a, b) {\n    var _a = Math.abs(a);\n\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n    /* I got 4 ideas to compute this property without overflow:\n     *\n     * Testing 1000000 times with random samples for a,b ∈ [1, 1000000000] against a big decimal library to get an error estimate\n     *\n     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n      Math.log(a * a + b * b) / 2\n      *\n     *\n     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n      var fn = function(a, b) {\n     a = Math.abs(a);\n     b = Math.abs(b);\n     var t = Math.min(a, b);\n     a = Math.max(a, b);\n     t = t / a;\n      return Math.log(a) + Math.log(1 + t * t) / 2;\n     };\n      * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n      Math.log(a / Math.cos(Math.atan2(b, a)))\n      * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n      Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n      */\n\n\n    return Math.log(a / Math.cos(Math.atan2(b, a)));\n  }\n\n  var parse = function (a, b) {\n    var z = {\n      're': 0,\n      'im': 0\n    };\n\n    if (a === undefined || a === null) {\n      z['re'] = z['im'] = 0;\n    } else if (b !== undefined) {\n      z['re'] = a;\n      z['im'] = b;\n    } else switch (typeof a) {\n      case 'object':\n        if ('im' in a && 're' in a) {\n          z['re'] = a['re'];\n          z['im'] = a['im'];\n        } else if ('abs' in a && 'arg' in a) {\n          if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {\n            return Complex['INFINITY'];\n          }\n\n          z['re'] = a['abs'] * Math.cos(a['arg']);\n          z['im'] = a['abs'] * Math.sin(a['arg']);\n        } else if ('r' in a && 'phi' in a) {\n          if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {\n            return Complex['INFINITY'];\n          }\n\n          z['re'] = a['r'] * Math.cos(a['phi']);\n          z['im'] = a['r'] * Math.sin(a['phi']);\n        } else if (a.length === 2) {\n          // Quick array check\n          z['re'] = a[0];\n          z['im'] = a[1];\n        } else {\n          parser_exit();\n        }\n\n        break;\n\n      case 'string':\n        z['im'] =\n        /* void */\n        z['re'] = 0;\n        var tokens = a.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n        var plus = 1;\n        var minus = 0;\n\n        if (tokens === null) {\n          parser_exit();\n        }\n\n        for (var i = 0; i < tokens.length; i++) {\n          var c = tokens[i];\n\n          if (c === ' ' || c === '\\t' || c === '\\n') {\n            /* void */\n          } else if (c === '+') {\n            plus++;\n          } else if (c === '-') {\n            minus++;\n          } else if (c === 'i' || c === 'I') {\n            if (plus + minus === 0) {\n              parser_exit();\n            }\n\n            if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n              i++;\n            } else {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n            }\n\n            plus = minus = 0;\n          } else {\n            if (plus + minus === 0 || isNaN(c)) {\n              parser_exit();\n            }\n\n            if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n              z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n              i++;\n            } else {\n              z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n            }\n\n            plus = minus = 0;\n          }\n        } // Still something on the stack\n\n\n        if (plus + minus > 0) {\n          parser_exit();\n        }\n\n        break;\n\n      case 'number':\n        z['im'] = 0;\n        z['re'] = a;\n        break;\n\n      default:\n        parser_exit();\n    }\n\n    if (isNaN(z['re']) || isNaN(z['im'])) {// If a calculation is NaN, we treat it as NaN and don't throw\n      //parser_exit();\n    }\n\n    return z;\n  };\n  /**\n   * @constructor\n   * @returns {Complex}\n   */\n\n\n  function Complex(a, b) {\n    if (!(this instanceof Complex)) {\n      return new Complex(a, b);\n    }\n\n    var z = parse(a, b);\n    this['re'] = z['re'];\n    this['im'] = z['im'];\n  }\n\n  Complex.prototype = {\n    're': 0,\n    'im': 0,\n\n    /**\n     * Calculates the sign of a complex number, which is a normalized complex\n     *\n     * @returns {Complex}\n     */\n    'sign': function () {\n      var abs = this['abs']();\n      return new Complex(this['re'] / abs, this['im'] / abs);\n    },\n\n    /**\n     * Adds two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'add': function (a, b) {\n      var z = new Complex(a, b); // Infinity + Infinity = NaN\n\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      } // Infinity + z = Infinity { where z != Infinity }\n\n\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(this['re'] + z['re'], this['im'] + z['im']);\n    },\n\n    /**\n     * Subtracts two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'sub': function (a, b) {\n      var z = new Complex(a, b); // Infinity - Infinity = NaN\n\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      } // Infinity - z = Infinity { where z != Infinity }\n\n\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(this['re'] - z['re'], this['im'] - z['im']);\n    },\n\n    /**\n     * Multiplies two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'mul': function (a, b) {\n      var z = new Complex(a, b); // Infinity * 0 = NaN\n\n      if (this['isInfinite']() && z['isZero']() || this['isZero']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      } // Infinity * z = Infinity { where z != 0 }\n\n\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      } // Short circuit for real values\n\n\n      if (z['im'] === 0 && this['im'] === 0) {\n        return new Complex(this['re'] * z['re'], 0);\n      }\n\n      return new Complex(this['re'] * z['re'] - this['im'] * z['im'], this['re'] * z['im'] + this['im'] * z['re']);\n    },\n\n    /**\n     * Divides two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'div': function (a, b) {\n      var z = new Complex(a, b); // 0 / 0 = NaN and Infinity / Infinity = NaN\n\n      if (this['isZero']() && z['isZero']() || this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      } // Infinity / 0 = Infinity\n\n\n      if (this['isInfinite']() || z['isZero']()) {\n        return Complex['INFINITY'];\n      } // 0 / Infinity = 0\n\n\n      if (this['isZero']() || z['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      a = this['re'];\n      b = this['im'];\n      var c = z['re'];\n      var d = z['im'];\n      var t, x;\n\n      if (0 === d) {\n        // Divisor is real\n        return new Complex(a / c, b / c);\n      }\n\n      if (Math.abs(c) < Math.abs(d)) {\n        x = c / d;\n        t = c * x + d;\n        return new Complex((a * x + b) / t, (b * x - a) / t);\n      } else {\n        x = d / c;\n        t = d * x + c;\n        return new Complex((a + b * x) / t, (b - a * x) / t);\n      }\n    },\n\n    /**\n     * Calculate the power of two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'pow': function (a, b) {\n      var z = new Complex(a, b);\n      a = this['re'];\n      b = this['im'];\n\n      if (z['isZero']()) {\n        return Complex['ONE'];\n      } // If the exponent is real\n\n\n      if (z['im'] === 0) {\n        if (b === 0 && a > 0) {\n          return new Complex(Math.pow(a, z['re']), 0);\n        } else if (a === 0) {\n          // If base is fully imaginary\n          switch ((z['re'] % 4 + 4) % 4) {\n            case 0:\n              return new Complex(Math.pow(b, z['re']), 0);\n\n            case 1:\n              return new Complex(0, Math.pow(b, z['re']));\n\n            case 2:\n              return new Complex(-Math.pow(b, z['re']), 0);\n\n            case 3:\n              return new Complex(0, -Math.pow(b, z['re']));\n          }\n        }\n      }\n      /* I couldn't find a good formula, so here is a derivation and optimization\n       *\n       * z_1^z_2 = (a + bi)^(c + di)\n       *         = exp((c + di) * log(a + bi)\n       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n       * =>...\n       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       *\n       * =>...\n       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       *\n       * =>\n       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n       *\n       */\n\n\n      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {\n        return Complex['ZERO'];\n      }\n\n      var arg = Math.atan2(b, a);\n      var loh = logHypot(a, b);\n      a = Math.exp(z['re'] * loh - z['im'] * arg);\n      b = z['im'] * loh + z['re'] * arg;\n      return new Complex(a * Math.cos(b), a * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex square root\n     *\n     * @returns {Complex}\n     */\n    'sqrt': function () {\n      var a = this['re'];\n      var b = this['im'];\n      var r = this['abs']();\n      var re, im;\n\n      if (a >= 0) {\n        if (b === 0) {\n          return new Complex(Math.sqrt(a), 0);\n        }\n\n        re = 0.5 * Math.sqrt(2.0 * (r + a));\n      } else {\n        re = Math.abs(b) / Math.sqrt(2 * (r - a));\n      }\n\n      if (a <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - a));\n      } else {\n        im = Math.abs(b) / Math.sqrt(2 * (r + a));\n      }\n\n      return new Complex(re, b < 0 ? -im : im);\n    },\n\n    /**\n     * Calculate the complex exponent\n     *\n     * @returns {Complex}\n     */\n    'exp': function () {\n      var tmp = Math.exp(this['re']);\n\n      if (this['im'] === 0) {//return new Complex(tmp, 0);\n      }\n\n      return new Complex(tmp * Math.cos(this['im']), tmp * Math.sin(this['im']));\n    },\n\n    /**\n     * Calculate the complex exponent and subtracts one.\n     *\n     * This may be more accurate than `Complex(x).exp().sub(1)` if\n     * `x` is small.\n     *\n     * @returns {Complex}\n     */\n    'expm1': function () {\n      /**\n       * exp(a + i*b) - 1\n       = exp(a) * (cos(b) + j*sin(b)) - 1\n       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n       */\n      var a = this['re'];\n      var b = this['im'];\n      return new Complex(Math.expm1(a) * Math.cos(b) + cosm1(b), Math.exp(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the natural log\n     *\n     * @returns {Complex}\n     */\n    'log': function () {\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0 && a > 0) {//return new Complex(Math.log(a), 0);\n      }\n\n      return new Complex(logHypot(a, b), Math.atan2(b, a));\n    },\n\n    /**\n     * Calculate the magnitude of the complex number\n     *\n     * @returns {number}\n     */\n    'abs': function () {\n      return hypot(this['re'], this['im']);\n    },\n\n    /**\n     * Calculate the angle of the complex number\n     *\n     * @returns {number}\n     */\n    'arg': function () {\n      return Math.atan2(this['im'], this['re']);\n    },\n\n    /**\n     * Calculate the sine of the complex number\n     *\n     * @returns {Complex}\n     */\n    'sin': function () {\n      // sin(c) = (e^b - e^(-b)) / (2i)\n      var a = this['re'];\n      var b = this['im'];\n      return new Complex(Math.sin(a) * cosh(b), Math.cos(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the cosine\n     *\n     * @returns {Complex}\n     */\n    'cos': function () {\n      // cos(z) = (e^b + e^(-b)) / 2\n      var a = this['re'];\n      var b = this['im'];\n      return new Complex(Math.cos(a) * cosh(b), -Math.sin(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the tangent\n     *\n     * @returns {Complex}\n     */\n    'tan': function () {\n      // tan(c) = (e^(ci) - e^(-ci)) / (i(e^(ci) + e^(-ci)))\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) + cosh(b);\n      return new Complex(Math.sin(a) / d, sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cotangent\n     *\n     * @returns {Complex}\n     */\n    'cot': function () {\n      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) - cosh(b);\n      return new Complex(-Math.sin(a) / d, sinh(b) / d);\n    },\n\n    /**\n     * Calculate the secant\n     *\n     * @returns {Complex}\n     */\n    'sec': function () {\n      // sec(c) = 2 / (e^(ci) + e^(-ci))\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n      return new Complex(Math.cos(a) * cosh(b) / d, Math.sin(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cosecans\n     *\n     * @returns {Complex}\n     */\n    'csc': function () {\n      // csc(c) = 2i / (e^(ci) - e^(-ci))\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n      return new Complex(Math.sin(a) * cosh(b) / d, -Math.cos(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the complex arcus sinus\n     *\n     * @returns {Complex}\n     */\n    'asin': function () {\n      // asin(c) = -i * log(ci + sqrt(1 - c^2))\n      var a = this['re'];\n      var b = this['im'];\n      var t1 = new Complex(b * b - a * a + 1, -2 * a * b)['sqrt']();\n      var t2 = new Complex(t1['re'] - b, t1['im'] + a)['log']();\n      return new Complex(t2['im'], -t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cosinus\n     *\n     * @returns {Complex}\n     */\n    'acos': function () {\n      // acos(c) = i * log(c - i * sqrt(1 - c^2))\n      var a = this['re'];\n      var b = this['im'];\n      var t1 = new Complex(b * b - a * a + 1, -2 * a * b)['sqrt']();\n      var t2 = new Complex(t1['re'] - b, t1['im'] + a)['log']();\n      return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus tangent\n     *\n     * @returns {Complex}\n     */\n    'atan': function () {\n      // atan(c) = i / 2 log((i + x) / (i - x))\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0) {\n        if (b === 1) {\n          return new Complex(0, Infinity);\n        }\n\n        if (b === -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      var d = a * a + (1.0 - b) * (1.0 - b);\n      var t1 = new Complex((1 - b * b - a * a) / d, -2 * a / d).log();\n      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cotangent\n     *\n     * @returns {Complex}\n     */\n    'acot': function () {\n      // acot(c) = i / 2 log((c - i) / (c + i))\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(Math.atan2(1, a), 0);\n      }\n\n      var d = a * a + b * b;\n      return d !== 0 ? new Complex(a / d, -b / d).atan() : new Complex(a !== 0 ? a / 0 : 0, b !== 0 ? -b / 0 : 0).atan();\n    },\n\n    /**\n     * Calculate the complex arcus secant\n     *\n     * @returns {Complex}\n     */\n    'asec': function () {\n      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return d !== 0 ? new Complex(a / d, -b / d).acos() : new Complex(a !== 0 ? a / 0 : 0, b !== 0 ? -b / 0 : 0).acos();\n    },\n\n    /**\n     * Calculate the complex arcus cosecans\n     *\n     * @returns {Complex}\n     */\n    'acsc': function () {\n      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(Math.PI / 2, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return d !== 0 ? new Complex(a / d, -b / d).asin() : new Complex(a !== 0 ? a / 0 : 0, b !== 0 ? -b / 0 : 0).asin();\n    },\n\n    /**\n     * Calculate the complex sinh\n     *\n     * @returns {Complex}\n     */\n    'sinh': function () {\n      // sinh(c) = (e^c - e^-c) / 2\n      var a = this['re'];\n      var b = this['im'];\n      return new Complex(sinh(a) * Math.cos(b), cosh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex cosh\n     *\n     * @returns {Complex}\n     */\n    'cosh': function () {\n      // cosh(c) = (e^c + e^-c) / 2\n      var a = this['re'];\n      var b = this['im'];\n      return new Complex(cosh(a) * Math.cos(b), sinh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex tanh\n     *\n     * @returns {Complex}\n     */\n    'tanh': function () {\n      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) + Math.cos(b);\n      return new Complex(sinh(a) / d, Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'coth': function () {\n      // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) - Math.cos(b);\n      return new Complex(sinh(a) / d, -Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'csch': function () {\n      // csch(c) = 2 / (e^c - e^-c)\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) - cosh(2 * a);\n      return new Complex(-2 * sinh(a) * Math.cos(b) / d, 2 * cosh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex sech\n     *\n     * @returns {Complex}\n     */\n    'sech': function () {\n      // sech(c) = 2 / (e^c + e^-c)\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) + cosh(2 * a);\n      return new Complex(2 * cosh(a) * Math.cos(b) / d, -2 * sinh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'asinh': function () {\n      // asinh(c) = log(c + sqrt(c^2 + 1))\n      var tmp = this['im'];\n      this['im'] = -this['re'];\n      this['re'] = tmp;\n      var res = this['asin']();\n      this['re'] = -this['im'];\n      this['im'] = tmp;\n      tmp = res['re'];\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n      return res;\n    },\n\n    /**\n     * Calculate the complex acosh\n     *\n     * @returns {Complex}\n     */\n    'acosh': function () {\n      // acosh(c) = log(c + sqrt(c^2 - 1))\n      var res = this['acos']();\n\n      if (res['im'] <= 0) {\n        var tmp = res['re'];\n        res['re'] = -res['im'];\n        res['im'] = tmp;\n      } else {\n        var tmp = res['im'];\n        res['im'] = -res['re'];\n        res['re'] = tmp;\n      }\n\n      return res;\n    },\n\n    /**\n     * Calculate the complex atanh\n     *\n     * @returns {Complex}\n     */\n    'atanh': function () {\n      // atanh(c) = log((1+c) / (1-c)) / 2\n      var a = this['re'];\n      var b = this['im'];\n      var noIM = a > 1 && b === 0;\n      var oneMinus = 1 - a;\n      var onePlus = 1 + a;\n      var d = oneMinus * oneMinus + b * b;\n      var x = d !== 0 ? new Complex((onePlus * oneMinus - b * b) / d, (b * oneMinus + onePlus * b) / d) : new Complex(a !== -1 ? a / 0 : 0, b !== 0 ? b / 0 : 0);\n      var temp = x['re'];\n      x['re'] = logHypot(x['re'], x['im']) / 2;\n      x['im'] = Math.atan2(x['im'], temp) / 2;\n\n      if (noIM) {\n        x['im'] = -x['im'];\n      }\n\n      return x;\n    },\n\n    /**\n     * Calculate the complex acoth\n     *\n     * @returns {Complex}\n     */\n    'acoth': function () {\n      // acoth(c) = log((c+1) / (c-1)) / 2\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Math.PI / 2);\n      }\n\n      var d = a * a + b * b;\n      return d !== 0 ? new Complex(a / d, -b / d).atanh() : new Complex(a !== 0 ? a / 0 : 0, b !== 0 ? -b / 0 : 0).atanh();\n    },\n\n    /**\n     * Calculate the complex acsch\n     *\n     * @returns {Complex}\n     */\n    'acsch': function () {\n      // acsch(c) = log((1+sqrt(1+c^2))/c)\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(a !== 0 ? Math.log(a + Math.sqrt(a * a + 1)) : Infinity, 0);\n      }\n\n      var d = a * a + b * b;\n      return d !== 0 ? new Complex(a / d, -b / d).asinh() : new Complex(a !== 0 ? a / 0 : 0, b !== 0 ? -b / 0 : 0).asinh();\n    },\n\n    /**\n     * Calculate the complex asech\n     *\n     * @returns {Complex}\n     */\n    'asech': function () {\n      // asech(c) = log((1+sqrt(1-c^2))/c)\n      var a = this['re'];\n      var b = this['im'];\n\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      var d = a * a + b * b;\n      return d !== 0 ? new Complex(a / d, -b / d).acosh() : new Complex(a !== 0 ? a / 0 : 0, b !== 0 ? -b / 0 : 0).acosh();\n    },\n\n    /**\n     * Calculate the complex inverse 1/z\n     *\n     * @returns {Complex}\n     */\n    'inverse': function () {\n      // 1 / 0 = Infinity and 1 / Infinity = 0\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      if (this['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = a * a + b * b;\n      return new Complex(a / d, -b / d);\n    },\n\n    /**\n     * Returns the complex conjugate\n     *\n     * @returns {Complex}\n     */\n    'conjugate': function () {\n      return new Complex(this['re'], -this['im']);\n    },\n\n    /**\n     * Gets the negated complex number\n     *\n     * @returns {Complex}\n     */\n    'neg': function () {\n      return new Complex(-this['re'], -this['im']);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'ceil': function (places) {\n      places = Math.pow(10, places || 0);\n      return new Complex(Math.ceil(this['re'] * places) / places, Math.ceil(this['im'] * places) / places);\n    },\n\n    /**\n     * Floors the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'floor': function (places) {\n      places = Math.pow(10, places || 0);\n      return new Complex(Math.floor(this['re'] * places) / places, Math.floor(this['im'] * places) / places);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'round': function (places) {\n      places = Math.pow(10, places || 0);\n      return new Complex(Math.round(this['re'] * places) / places, Math.round(this['im'] * places) / places);\n    },\n\n    /**\n     * Compares two complex numbers\n     *\n     * **Note:** new Complex(Infinity).equals(Infinity) === false\n     *\n     * @returns {boolean}\n     */\n    'equals': function (a, b) {\n      var z = new Complex(a, b);\n      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] && Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * @returns {Complex}\n     */\n    'clone': function () {\n      return new Complex(this['re'], this['im']);\n    },\n\n    /**\n     * Gets a string of the actual complex number\n     *\n     * @returns {string}\n     */\n    'toString': function () {\n      var a = this['re'];\n      var b = this['im'];\n      var ret = \"\";\n\n      if (this['isNaN']()) {\n        return 'NaN';\n      }\n\n      if (this['isInfinite']()) {\n        return 'Infinity';\n      }\n\n      if (Math.abs(a) < Complex['EPSILON']) {\n        a = 0;\n      }\n\n      if (Math.abs(b) < Complex['EPSILON']) {\n        b = 0;\n      } // If is real number\n\n\n      if (b === 0) {\n        return ret + a;\n      }\n\n      if (a !== 0) {\n        ret += a;\n        ret += \" \";\n\n        if (b < 0) {\n          b = -b;\n          ret += \"-\";\n        } else {\n          ret += \"+\";\n        }\n\n        ret += \" \";\n      } else if (b < 0) {\n        b = -b;\n        ret += \"-\";\n      }\n\n      if (1 !== b) {\n        // b is the absolute imaginary part\n        ret += b;\n      }\n\n      return ret + \"i\";\n    },\n\n    /**\n     * Returns the actual number as a vector\n     *\n     * @returns {Array}\n     */\n    'toVector': function () {\n      return [this['re'], this['im']];\n    },\n\n    /**\n     * Returns the actual real value of the current object\n     *\n     * @returns {number|null}\n     */\n    'valueOf': function () {\n      if (this['im'] === 0) {\n        return this['re'];\n      }\n\n      return null;\n    },\n\n    /**\n     * Determines whether a complex number is not on the Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function () {\n      return isNaN(this['re']) || isNaN(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the zero pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isZero': function () {\n      return this['im'] === 0 && this['re'] === 0;\n    },\n\n    /**\n     * Determines whether a complex number is not at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function () {\n      return isFinite(this['re']) && isFinite(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isInfinite': function () {\n      return !(this['isNaN']() || this['isFinite']());\n    }\n  };\n  Complex['ZERO'] = new Complex(0, 0);\n  Complex['ONE'] = new Complex(1, 0);\n  Complex['I'] = new Complex(0, 1);\n  Complex['PI'] = new Complex(Math.PI, 0);\n  Complex['E'] = new Complex(Math.E, 0);\n  Complex['INFINITY'] = new Complex(Infinity, Infinity);\n  Complex['NAN'] = new Complex(NaN, NaN);\n  Complex['EPSILON'] = 1e-15;\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return Complex;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/complex.js/complex.js?");

/***/ }),

/***/ "./node_modules/decimal.js/decimal.js":
/*!********************************************!*\
  !*** ./node_modules/decimal.js/decimal.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;;\n\n(function (globalScope) {\n  'use strict';\n  /*\r\n   *  decimal.js v10.3.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\n  // The maximum exponent magnitude.\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\n\n  var EXP_LIMIT = 9e15,\n      // 0 to 9e15\n  // The limit on the value of `precision`, and on the value of the first argument to\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\n  MAX_DIGITS = 1e9,\n      // 0 to 1e9\n  // Base conversion alphabet.\n  NUMERALS = '0123456789abcdef',\n      // The natural logarithm of 10 (1025 digits).\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\n      // Pi (1025 digits).\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\n      // The initial configuration properties of the Decimal constructor.\n  DEFAULTS = {\n    // These values must be integers within the stated ranges (inclusive).\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\n    // The maximum number of significant digits of the result of a calculation or base conversion.\n    // E.g. `Decimal.config({ precision: 20 });`\n    precision: 20,\n    // 1 to MAX_DIGITS\n    // The rounding mode used when rounding to `precision`.\n    //\n    // ROUND_UP         0 Away from zero.\n    // ROUND_DOWN       1 Towards zero.\n    // ROUND_CEIL       2 Towards +Infinity.\n    // ROUND_FLOOR      3 Towards -Infinity.\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\n    //\n    // E.g.\n    // `Decimal.rounding = 4;`\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\n    rounding: 4,\n    // 0 to 8\n    // The modulo mode used when calculating the modulus: a mod n.\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\n    // The remainder (r) is calculated as: r = a - n * q.\n    //\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\n    // HALF_EVEN  6 The IEEE 754 remainder function.\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\n    //\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\n    // be used, but they may not give useful results.\n    modulo: 1,\n    // 0 to 9\n    // The exponent value at and beneath which `toString` returns exponential notation.\n    // JavaScript numbers: -7\n    toExpNeg: -7,\n    // 0 to -EXP_LIMIT\n    // The exponent value at and above which `toString` returns exponential notation.\n    // JavaScript numbers: 21\n    toExpPos: 21,\n    // 0 to EXP_LIMIT\n    // The minimum exponent value, beneath which underflow to zero occurs.\n    // JavaScript numbers: -324  (5e-324)\n    minE: -EXP_LIMIT,\n    // -1 to -EXP_LIMIT\n    // The maximum exponent value, above which overflow to Infinity occurs.\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\n    maxE: EXP_LIMIT,\n    // 1 to EXP_LIMIT\n    // Whether to use cryptographically-secure random number generation, if available.\n    crypto: false // true/false\n\n  },\n      // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\n  Decimal,\n      inexact,\n      noConflict,\n      quadrant,\n      external = true,\n      decimalError = '[DecimalError] ',\n      invalidArgument = decimalError + 'Invalid argument: ',\n      precisionLimitExceeded = decimalError + 'Precision limit exceeded',\n      cryptoUnavailable = decimalError + 'crypto unavailable',\n      tag = '[object Decimal]',\n      mathfloor = Math.floor,\n      mathpow = Math.pow,\n      isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\n      isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\n      isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\n      isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n      BASE = 1e7,\n      LOG_BASE = 7,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      LN10_PRECISION = LN10.length - 1,\n      PI_PRECISION = PI.length - 1,\n      // Decimal.prototype object\n  P = {\n    toStringTag: tag\n  }; // Decimal prototype methods\n\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\n\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\n\n  P.absoluteValue = P.abs = function () {\n    var x = new this.constructor(this);\n    if (x.s < 0) x.s = 1;\n    return finalise(x);\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\n\n\n  P.ceil = function () {\n    return finalise(new this.constructor(this), this.e + 1, 2);\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\n\n\n  P.clampedTo = P.clamp = function (min, max) {\n    var k,\n        x = this,\n        Ctor = x.constructor;\n    min = new Ctor(min);\n    max = new Ctor(max);\n    if (!min.s || !max.s) return new Ctor(NaN);\n    if (min.gt(max)) throw Error(invalidArgument + max);\n    k = x.cmp(min);\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\n  };\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\n\n\n  P.comparedTo = P.cmp = function (y) {\n    var i,\n        j,\n        xdL,\n        ydL,\n        x = this,\n        xd = x.d,\n        yd = (y = new x.constructor(y)).d,\n        xs = x.s,\n        ys = y.s; // Either NaN or ±Infinity?\n\n    if (!xd || !yd) {\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\n    } // Either zero?\n\n\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0; // Signs differ?\n\n    if (xs !== ys) return xs; // Compare exponents.\n\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\n    xdL = xd.length;\n    ydL = yd.length; // Compare digit by digit.\n\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\n    } // Compare lengths.\n\n\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\n  };\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\n\n\n  P.cosine = P.cos = function () {\n    var pr,\n        rm,\n        x = this,\n        Ctor = x.constructor;\n    if (!x.d) return new Ctor(NaN); // cos(0) = cos(-0) = 1\n\n    if (!x.d[0]) return new Ctor(1);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n    Ctor.rounding = 1;\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\n  };\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\n\n\n  P.cubeRoot = P.cbrt = function () {\n    var e,\n        m,\n        n,\n        r,\n        rep,\n        s,\n        sd,\n        t,\n        t3,\n        t3plusx,\n        x = this,\n        Ctor = x.constructor;\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\n    external = false; // Initial estimate.\n\n    s = x.s * mathpow(x.s * x, 1 / 3); // Math.cbrt underflow/overflow?\n    // Pass x to Math.pow as integer, then adjust the exponent of the result.\n\n    if (!s || Math.abs(s) == 1 / 0) {\n      n = digitsToString(x.d);\n      e = x.e; // Adjust n exponent so it is a multiple of 3 away from x exponent.\n\n      if (s = (e - n.length + 1) % 3) n += s == 1 || s == -2 ? '0' : '00';\n      s = mathpow(n, 1 / 3); // Rarely, e may be one less than the result exponent value.\n\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\n\n      if (s == 1 / 0) {\n        n = '5e' + e;\n      } else {\n        n = s.toExponential();\n        n = n.slice(0, n.indexOf('e') + 1) + e;\n      }\n\n      r = new Ctor(n);\n      r.s = x.s;\n    } else {\n      r = new Ctor(s.toString());\n    }\n\n    sd = (e = Ctor.precision) + 3; // Halley's method.\n    // TODO? Compare Newton's method.\n\n    for (;;) {\n      t = r;\n      t3 = t.times(t).times(t);\n      t3plusx = t3.plus(x);\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1); // TODO? Replace with for-loop and checkRoundingDigits.\n\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n        n = n.slice(sd - 3, sd + 1); // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\n        // , i.e. approaching a rounding boundary, continue the iteration.\n\n        if (n == '9999' || !rep && n == '4999') {\n          // On the first iteration only, check to see if rounding up gives the exact result as the\n          // nines may infinitely repeat.\n          if (!rep) {\n            finalise(t, e + 1, 0);\n\n            if (t.times(t).times(t).eq(x)) {\n              r = t;\n              break;\n            }\n          }\n\n          sd += 4;\n          rep = 1;\n        } else {\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\n          // If not, then there are further digits and m will be truthy.\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n            // Truncate to the first rounding digit.\n            finalise(r, e + 1, 1);\n            m = !r.times(r).times(r).eq(x);\n          }\n\n          break;\n        }\n      }\n    }\n\n    external = true;\n    return finalise(r, e, Ctor.rounding, m);\n  };\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\n\n\n  P.decimalPlaces = P.dp = function () {\n    var w,\n        d = this.d,\n        n = NaN;\n\n    if (d) {\n      w = d.length - 1;\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE; // Subtract the number of trailing zeros of the last word.\n\n      w = d[w];\n      if (w) for (; w % 10 == 0; w /= 10) n--;\n      if (n < 0) n = 0;\n    }\n\n    return n;\n  };\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\n\n\n  P.dividedBy = P.div = function (y) {\n    return divide(this, new this.constructor(y));\n  };\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\n\n\n  P.dividedToIntegerBy = P.divToInt = function (y) {\n    var x = this,\n        Ctor = x.constructor;\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\n  };\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\n\n\n  P.equals = P.eq = function (y) {\n    return this.cmp(y) === 0;\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\n\n\n  P.floor = function () {\n    return finalise(new this.constructor(this), this.e + 1, 3);\n  };\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\n\n\n  P.greaterThan = P.gt = function (y) {\n    return this.cmp(y) > 0;\n  };\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\n\n\n  P.greaterThanOrEqualTo = P.gte = function (y) {\n    var k = this.cmp(y);\n    return k == 1 || k === 0;\n  };\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\n\n\n  P.hyperbolicCosine = P.cosh = function () {\n    var k,\n        n,\n        pr,\n        rm,\n        len,\n        x = this,\n        Ctor = x.constructor,\n        one = new Ctor(1);\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\n    if (x.isZero()) return one;\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n    Ctor.rounding = 1;\n    len = x.d.length; // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\n    // Estimate the optimum number of times to use the argument reduction.\n    // TODO? Estimation reused from cosine() and may not be optimal here.\n\n    if (len < 32) {\n      k = Math.ceil(len / 3);\n      n = (1 / tinyPow(4, k)).toString();\n    } else {\n      k = 16;\n      n = '2.3283064365386962890625e-10';\n    }\n\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true); // Reverse argument reduction\n\n    var cosh2_x,\n        i = k,\n        d8 = new Ctor(8);\n\n    for (; i--;) {\n      cosh2_x = x.times(x);\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\n    }\n\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\n  };\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\n\n\n  P.hyperbolicSine = P.sinh = function () {\n    var k,\n        pr,\n        rm,\n        len,\n        x = this,\n        Ctor = x.constructor;\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\n    Ctor.rounding = 1;\n    len = x.d.length;\n\n    if (len < 3) {\n      x = taylorSeries(Ctor, 2, x, x, true);\n    } else {\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\n      // 3 multiplications and 1 addition\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\n      // 4 multiplications and 2 additions\n      // Estimate the optimum number of times to use the argument reduction.\n      k = 1.4 * Math.sqrt(len);\n      k = k > 16 ? 16 : k | 0;\n      x = x.times(1 / tinyPow(5, k));\n      x = taylorSeries(Ctor, 2, x, x, true); // Reverse argument reduction\n\n      var sinh2_x,\n          d5 = new Ctor(5),\n          d16 = new Ctor(16),\n          d20 = new Ctor(20);\n\n      for (; k--;) {\n        sinh2_x = x.times(x);\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\n      }\n    }\n\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return finalise(x, pr, rm, true);\n  };\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\n\n\n  P.hyperbolicTangent = P.tanh = function () {\n    var pr,\n        rm,\n        x = this,\n        Ctor = x.constructor;\n    if (!x.isFinite()) return new Ctor(x.s);\n    if (x.isZero()) return new Ctor(x);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + 7;\n    Ctor.rounding = 1;\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\n  };\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\n\n\n  P.inverseCosine = P.acos = function () {\n    var halfPi,\n        x = this,\n        Ctor = x.constructor,\n        k = x.abs().cmp(1),\n        pr = Ctor.precision,\n        rm = Ctor.rounding;\n\n    if (k !== -1) {\n      return k === 0 // |x| is 1\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) // |x| > 1 or x is NaN\n      : new Ctor(NaN);\n    }\n\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5); // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\n\n    Ctor.precision = pr + 6;\n    Ctor.rounding = 1;\n    x = x.asin();\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return halfPi.minus(x);\n  };\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\n\n\n  P.inverseHyperbolicCosine = P.acosh = function () {\n    var pr,\n        rm,\n        x = this,\n        Ctor = x.constructor;\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\n    if (!x.isFinite()) return new Ctor(x);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\n    Ctor.rounding = 1;\n    external = false;\n    x = x.times(x).minus(1).sqrt().plus(x);\n    external = true;\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return x.ln();\n  };\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\n\n\n  P.inverseHyperbolicSine = P.asinh = function () {\n    var pr,\n        rm,\n        x = this,\n        Ctor = x.constructor;\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\n    Ctor.rounding = 1;\n    external = false;\n    x = x.times(x).plus(1).sqrt().plus(x);\n    external = true;\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return x.ln();\n  };\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\n\n\n  P.inverseHyperbolicTangent = P.atanh = function () {\n    var pr,\n        rm,\n        wpr,\n        xsd,\n        x = this,\n        Ctor = x.constructor;\n    if (!x.isFinite()) return new Ctor(NaN);\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    xsd = x.sd();\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\n    Ctor.precision = wpr = xsd - x.e;\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\n    Ctor.precision = pr + 4;\n    Ctor.rounding = 1;\n    x = x.ln();\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return x.times(0.5);\n  };\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\n\n\n  P.inverseSine = P.asin = function () {\n    var halfPi,\n        k,\n        pr,\n        rm,\n        x = this,\n        Ctor = x.constructor;\n    if (x.isZero()) return new Ctor(x);\n    k = x.abs().cmp(1);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n\n    if (k !== -1) {\n      // |x| is 1\n      if (k === 0) {\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\n        halfPi.s = x.s;\n        return halfPi;\n      } // |x| > 1 or x is NaN\n\n\n      return new Ctor(NaN);\n    } // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\n\n\n    Ctor.precision = pr + 6;\n    Ctor.rounding = 1;\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return x.times(2);\n  };\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\n\n\n  P.inverseTangent = P.atan = function () {\n    var i,\n        j,\n        k,\n        n,\n        px,\n        t,\n        r,\n        wpr,\n        x2,\n        x = this,\n        Ctor = x.constructor,\n        pr = Ctor.precision,\n        rm = Ctor.rounding;\n\n    if (!x.isFinite()) {\n      if (!x.s) return new Ctor(NaN);\n\n      if (pr + 4 <= PI_PRECISION) {\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\n        r.s = x.s;\n        return r;\n      }\n    } else if (x.isZero()) {\n      return new Ctor(x);\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\n      r.s = x.s;\n      return r;\n    }\n\n    Ctor.precision = wpr = pr + 10;\n    Ctor.rounding = 1; // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\n    // Argument reduction\n    // Ensure |x| < 0.42\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\n\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\n\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\n\n    external = false;\n    j = Math.ceil(wpr / LOG_BASE);\n    n = 1;\n    x2 = x.times(x);\n    r = new Ctor(x);\n    px = x; // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\n\n    for (; i !== -1;) {\n      px = px.times(x2);\n      t = r.minus(px.div(n += 2));\n      px = px.times(x2);\n      r = t.plus(px.div(n += 2));\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\n    }\n\n    if (k) r = r.times(2 << k - 1);\n    external = true;\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\n  };\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\n\n\n  P.isFinite = function () {\n    return !!this.d;\n  };\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\n\n\n  P.isInteger = P.isInt = function () {\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\n  };\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\n\n\n  P.isNaN = function () {\n    return !this.s;\n  };\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\n\n\n  P.isNegative = P.isNeg = function () {\n    return this.s < 0;\n  };\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\n\n\n  P.isPositive = P.isPos = function () {\n    return this.s > 0;\n  };\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\n\n\n  P.isZero = function () {\n    return !!this.d && this.d[0] === 0;\n  };\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\n\n\n  P.lessThan = P.lt = function (y) {\n    return this.cmp(y) < 0;\n  };\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\n\n\n  P.lessThanOrEqualTo = P.lte = function (y) {\n    return this.cmp(y) < 1;\n  };\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\n\n\n  P.logarithm = P.log = function (base) {\n    var isBase10,\n        d,\n        denominator,\n        k,\n        inf,\n        num,\n        sd,\n        r,\n        arg = this,\n        Ctor = arg.constructor,\n        pr = Ctor.precision,\n        rm = Ctor.rounding,\n        guard = 5; // Default base is 10.\n\n    if (base == null) {\n      base = new Ctor(10);\n      isBase10 = true;\n    } else {\n      base = new Ctor(base);\n      d = base.d; // Return NaN if base is negative, or non-finite, or is 0 or 1.\n\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\n      isBase10 = base.eq(10);\n    }\n\n    d = arg.d; // Is arg negative, non-finite, 0 or 1?\n\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\n    } // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\n    // integer power of 10.\n\n\n    if (isBase10) {\n      if (d.length > 1) {\n        inf = true;\n      } else {\n        for (k = d[0]; k % 10 === 0;) k /= 10;\n\n        inf = k !== 1;\n      }\n    }\n\n    external = false;\n    sd = pr + guard;\n    num = naturalLogarithm(arg, sd);\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd); // The result will have 5 rounding digits.\n\n    r = divide(num, denominator, sd, 1); // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\n    // calculate 10 further digits.\n    //\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\n    // further digits, the last 14 are nines, round up and assume the result is exact.\n    // Also assume the result is exact if the last 14 are zero.\n    //\n    // Example of a result that will be incorrectly rounded:\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\n    // place is still 2.6.\n\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\n      do {\n        sd += 10;\n        num = naturalLogarithm(arg, sd);\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\n        r = divide(num, denominator, sd, 1);\n\n        if (!inf) {\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\n            r = finalise(r, pr + 1, 0);\n          }\n\n          break;\n        }\n      } while (checkRoundingDigits(r.d, k += 10, rm));\n    }\n\n    external = true;\n    return finalise(r, pr, rm);\n  };\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\n\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\n\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\n\n\n  P.minus = P.sub = function (y) {\n    var d,\n        e,\n        i,\n        j,\n        k,\n        len,\n        pr,\n        rm,\n        xd,\n        xe,\n        xLTy,\n        yd,\n        x = this,\n        Ctor = x.constructor;\n    y = new Ctor(y); // If either is not finite...\n\n    if (!x.d || !y.d) {\n      // Return NaN if either is NaN.\n      if (!x.s || !y.s) y = new Ctor(NaN); // Return y negated if x is finite and y is ±Infinity.\n      else if (x.d) y.s = -y.s; // Return x if y is finite and x is ±Infinity.\n        // Return x if both are ±Infinity with different signs.\n        // Return NaN if both are ±Infinity with the same sign.\n        else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\n      return y;\n    } // If signs differ...\n\n\n    if (x.s != y.s) {\n      y.s = -y.s;\n      return x.plus(y);\n    }\n\n    xd = x.d;\n    yd = y.d;\n    pr = Ctor.precision;\n    rm = Ctor.rounding; // If either is zero...\n\n    if (!xd[0] || !yd[0]) {\n      // Return y negated if x is zero and y is non-zero.\n      if (yd[0]) y.s = -y.s; // Return x if y is zero and x is non-zero.\n      else if (xd[0]) y = new Ctor(x); // Return zero if both are zero.\n        // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\n        else return new Ctor(rm === 3 ? -0 : 0);\n      return external ? finalise(y, pr, rm) : y;\n    } // x and y are finite, non-zero numbers with the same sign.\n    // Calculate base 1e7 exponents.\n\n\n    e = mathfloor(y.e / LOG_BASE);\n    xe = mathfloor(x.e / LOG_BASE);\n    xd = xd.slice();\n    k = xe - e; // If base 1e7 exponents differ...\n\n    if (k) {\n      xLTy = k < 0;\n\n      if (xLTy) {\n        d = xd;\n        k = -k;\n        len = yd.length;\n      } else {\n        d = yd;\n        e = xe;\n        len = xd.length;\n      } // Numbers with massively different exponents would result in a very high number of\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\n\n\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\n\n      if (k > i) {\n        k = i;\n        d.length = 1;\n      } // Prepend zeros to equalise exponents.\n\n\n      d.reverse();\n\n      for (i = k; i--;) d.push(0);\n\n      d.reverse(); // Base 1e7 exponents equal.\n    } else {\n      // Check digits to determine which is the bigger number.\n      i = xd.length;\n      len = yd.length;\n      xLTy = i < len;\n      if (xLTy) len = i;\n\n      for (i = 0; i < len; i++) {\n        if (xd[i] != yd[i]) {\n          xLTy = xd[i] < yd[i];\n          break;\n        }\n      }\n\n      k = 0;\n    }\n\n    if (xLTy) {\n      d = xd;\n      xd = yd;\n      yd = d;\n      y.s = -y.s;\n    }\n\n    len = xd.length; // Append zeros to `xd` if shorter.\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\n\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0; // Subtract yd from xd.\n\n\n    for (i = yd.length; i > k;) {\n      if (xd[--i] < yd[i]) {\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\n\n        --xd[j];\n        xd[i] += BASE;\n      }\n\n      xd[i] -= yd[i];\n    } // Remove trailing zeros.\n\n\n    for (; xd[--len] === 0;) xd.pop(); // Remove leading zeros and adjust exponent accordingly.\n\n\n    for (; xd[0] === 0; xd.shift()) --e; // Zero?\n\n\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\n    y.d = xd;\n    y.e = getBase10Exponent(xd, e);\n    return external ? finalise(y, pr, rm) : y;\n  };\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\n\n\n  P.modulo = P.mod = function (y) {\n    var q,\n        x = this,\n        Ctor = x.constructor;\n    y = new Ctor(y); // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\n\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN); // Return x if y is ±Infinity or x is ±0.\n\n    if (!y.d || x.d && !x.d[0]) {\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\n    } // Prevent rounding of intermediate calculations.\n\n\n    external = false;\n\n    if (Ctor.modulo == 9) {\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\n      // result = x - q * y    where  0 <= result < abs(y)\n      q = divide(x, y.abs(), 0, 3, 1);\n      q.s *= y.s;\n    } else {\n      q = divide(x, y, 0, Ctor.modulo, 1);\n    }\n\n    q = q.times(y);\n    external = true;\n    return x.minus(q);\n  };\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\n\n\n  P.naturalExponential = P.exp = function () {\n    return naturalExponential(this);\n  };\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\n\n\n  P.naturalLogarithm = P.ln = function () {\n    return naturalLogarithm(this);\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\n\n\n  P.negated = P.neg = function () {\n    var x = new this.constructor(this);\n    x.s = -x.s;\n    return finalise(x);\n  };\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\n\n\n  P.plus = P.add = function (y) {\n    var carry,\n        d,\n        e,\n        i,\n        k,\n        len,\n        pr,\n        rm,\n        xd,\n        yd,\n        x = this,\n        Ctor = x.constructor;\n    y = new Ctor(y); // If either is not finite...\n\n    if (!x.d || !y.d) {\n      // Return NaN if either is NaN.\n      if (!x.s || !y.s) y = new Ctor(NaN); // Return x if y is finite and x is ±Infinity.\n      // Return x if both are ±Infinity with the same sign.\n      // Return NaN if both are ±Infinity with different signs.\n      // Return y if x is finite and y is ±Infinity.\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\n      return y;\n    } // If signs differ...\n\n\n    if (x.s != y.s) {\n      y.s = -y.s;\n      return x.minus(y);\n    }\n\n    xd = x.d;\n    yd = y.d;\n    pr = Ctor.precision;\n    rm = Ctor.rounding; // If either is zero...\n\n    if (!xd[0] || !yd[0]) {\n      // Return x if y is zero.\n      // Return y if y is non-zero.\n      if (!yd[0]) y = new Ctor(x);\n      return external ? finalise(y, pr, rm) : y;\n    } // x and y are finite, non-zero numbers with the same sign.\n    // Calculate base 1e7 exponents.\n\n\n    k = mathfloor(x.e / LOG_BASE);\n    e = mathfloor(y.e / LOG_BASE);\n    xd = xd.slice();\n    i = k - e; // If base 1e7 exponents differ...\n\n    if (i) {\n      if (i < 0) {\n        d = xd;\n        i = -i;\n        len = yd.length;\n      } else {\n        d = yd;\n        e = k;\n        len = xd.length;\n      } // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\n\n\n      k = Math.ceil(pr / LOG_BASE);\n      len = k > len ? k + 1 : len + 1;\n\n      if (i > len) {\n        i = len;\n        d.length = 1;\n      } // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\n\n\n      d.reverse();\n\n      for (; i--;) d.push(0);\n\n      d.reverse();\n    }\n\n    len = xd.length;\n    i = yd.length; // If yd is longer than xd, swap xd and yd so xd points to the longer array.\n\n    if (len - i < 0) {\n      i = len;\n      d = yd;\n      yd = xd;\n      xd = d;\n    } // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\n\n\n    for (carry = 0; i;) {\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\n      xd[i] %= BASE;\n    }\n\n    if (carry) {\n      xd.unshift(carry);\n      ++e;\n    } // Remove trailing zeros.\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n\n\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\n\n    y.d = xd;\n    y.e = getBase10Exponent(xd, e);\n    return external ? finalise(y, pr, rm) : y;\n  };\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\n\n\n  P.precision = P.sd = function (z) {\n    var k,\n        x = this;\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\n\n    if (x.d) {\n      k = getPrecision(x.d);\n      if (z && x.e + 1 > k) k = x.e + 1;\n    } else {\n      k = NaN;\n    }\n\n    return k;\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\n\n\n  P.round = function () {\n    var x = this,\n        Ctor = x.constructor;\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\n  };\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\n\n\n  P.sine = P.sin = function () {\n    var pr,\n        rm,\n        x = this,\n        Ctor = x.constructor;\n    if (!x.isFinite()) return new Ctor(NaN);\n    if (x.isZero()) return new Ctor(x);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\n    Ctor.rounding = 1;\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\n  };\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\n\n\n  P.squareRoot = P.sqrt = function () {\n    var m,\n        n,\n        sd,\n        r,\n        rep,\n        t,\n        x = this,\n        d = x.d,\n        e = x.e,\n        s = x.s,\n        Ctor = x.constructor; // Negative/NaN/Infinity/zero?\n\n    if (s !== 1 || !d || !d[0]) {\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\n    }\n\n    external = false; // Initial estimate.\n\n    s = Math.sqrt(+x); // Math.sqrt underflow/overflow?\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\n\n    if (s == 0 || s == 1 / 0) {\n      n = digitsToString(d);\n      if ((n.length + e) % 2 == 0) n += '0';\n      s = Math.sqrt(n);\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\n\n      if (s == 1 / 0) {\n        n = '5e' + e;\n      } else {\n        n = s.toExponential();\n        n = n.slice(0, n.indexOf('e') + 1) + e;\n      }\n\n      r = new Ctor(n);\n    } else {\n      r = new Ctor(s.toString());\n    }\n\n    sd = (e = Ctor.precision) + 3; // Newton-Raphson iteration.\n\n    for (;;) {\n      t = r;\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5); // TODO? Replace with for-loop and checkRoundingDigits.\n\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\n        n = n.slice(sd - 3, sd + 1); // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\n\n        if (n == '9999' || !rep && n == '4999') {\n          // On the first iteration only, check to see if rounding up gives the exact result as the\n          // nines may infinitely repeat.\n          if (!rep) {\n            finalise(t, e + 1, 0);\n\n            if (t.times(t).eq(x)) {\n              r = t;\n              break;\n            }\n          }\n\n          sd += 4;\n          rep = 1;\n        } else {\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\n          // If not, then there are further digits and m will be truthy.\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\n            // Truncate to the first rounding digit.\n            finalise(r, e + 1, 1);\n            m = !r.times(r).eq(x);\n          }\n\n          break;\n        }\n      }\n    }\n\n    external = true;\n    return finalise(r, e, Ctor.rounding, m);\n  };\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\n\n\n  P.tangent = P.tan = function () {\n    var pr,\n        rm,\n        x = this,\n        Ctor = x.constructor;\n    if (!x.isFinite()) return new Ctor(NaN);\n    if (x.isZero()) return new Ctor(x);\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    Ctor.precision = pr + 10;\n    Ctor.rounding = 1;\n    x = x.sin();\n    x.s = 1;\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\n    Ctor.precision = pr;\n    Ctor.rounding = rm;\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\n  };\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\n\n\n  P.times = P.mul = function (y) {\n    var carry,\n        e,\n        i,\n        k,\n        r,\n        rL,\n        t,\n        xdL,\n        ydL,\n        x = this,\n        Ctor = x.constructor,\n        xd = x.d,\n        yd = (y = new Ctor(y)).d;\n    y.s *= x.s; // If either is NaN, ±Infinity or ±0...\n\n    if (!xd || !xd[0] || !yd || !yd[0]) {\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd // Return NaN if either is NaN.\n      // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\n      ? NaN // Return ±Infinity if either is ±Infinity.\n      // Return ±0 if either is ±0.\n      : !xd || !yd ? y.s / 0 : y.s * 0);\n    }\n\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\n    xdL = xd.length;\n    ydL = yd.length; // Ensure xd points to the longer array.\n\n    if (xdL < ydL) {\n      r = xd;\n      xd = yd;\n      yd = r;\n      rL = xdL;\n      xdL = ydL;\n      ydL = rL;\n    } // Initialise the result array with zeros.\n\n\n    r = [];\n    rL = xdL + ydL;\n\n    for (i = rL; i--;) r.push(0); // Multiply!\n\n\n    for (i = ydL; --i >= 0;) {\n      carry = 0;\n\n      for (k = xdL + i; k > i;) {\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\n        r[k--] = t % BASE | 0;\n        carry = t / BASE | 0;\n      }\n\n      r[k] = (r[k] + carry) % BASE | 0;\n    } // Remove trailing zeros.\n\n\n    for (; !r[--rL];) r.pop();\n\n    if (carry) ++e;else r.shift();\n    y.d = r;\n    y.e = getBase10Exponent(r, e);\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\n  };\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\n\n\n  P.toBinary = function (sd, rm) {\n    return toStringBinary(this, 2, sd, rm);\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\n\n\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\n    var x = this,\n        Ctor = x.constructor;\n    x = new Ctor(x);\n    if (dp === void 0) return x;\n    checkInt32(dp, 0, MAX_DIGITS);\n    if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n    return finalise(x, dp + x.e + 1, rm);\n  };\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\n\n\n  P.toExponential = function (dp, rm) {\n    var str,\n        x = this,\n        Ctor = x.constructor;\n\n    if (dp === void 0) {\n      str = finiteToString(x, true);\n    } else {\n      checkInt32(dp, 0, MAX_DIGITS);\n      if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n      x = finalise(new Ctor(x), dp + 1, rm);\n      str = finiteToString(x, true, dp + 1);\n    }\n\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\n  };\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\n\n\n  P.toFixed = function (dp, rm) {\n    var str,\n        y,\n        x = this,\n        Ctor = x.constructor;\n\n    if (dp === void 0) {\n      str = finiteToString(x);\n    } else {\n      checkInt32(dp, 0, MAX_DIGITS);\n      if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\n      str = finiteToString(y, false, dp + y.e + 1);\n    } // To determine whether to add the minus sign look at the value before it was rounded,\n    // i.e. look at `x` rather than `y`.\n\n\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\n  };\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\n\n\n  P.toFraction = function (maxD) {\n    var d,\n        d0,\n        d1,\n        d2,\n        e,\n        k,\n        n,\n        n0,\n        n1,\n        pr,\n        q,\n        r,\n        x = this,\n        xd = x.d,\n        Ctor = x.constructor;\n    if (!xd) return new Ctor(x);\n    n1 = d0 = new Ctor(1);\n    d1 = n0 = new Ctor(0);\n    d = new Ctor(d1);\n    e = d.e = getPrecision(xd) - x.e - 1;\n    k = e % LOG_BASE;\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\n\n    if (maxD == null) {\n      // d is 10**e, the minimum max-denominator needed.\n      maxD = e > 0 ? d : n1;\n    } else {\n      n = new Ctor(maxD);\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\n      maxD = n.gt(d) ? e > 0 ? d : n1 : n;\n    }\n\n    external = false;\n    n = new Ctor(digitsToString(xd));\n    pr = Ctor.precision;\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\n\n    for (;;) {\n      q = divide(n, d, 0, 1, 1);\n      d2 = d0.plus(q.times(d1));\n      if (d2.cmp(maxD) == 1) break;\n      d0 = d1;\n      d1 = d2;\n      d2 = n1;\n      n1 = n0.plus(q.times(d2));\n      n0 = d2;\n      d2 = d;\n      d = n.minus(q.times(d2));\n      n = d2;\n    }\n\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\n    n0 = n0.plus(d2.times(n1));\n    d0 = d0.plus(d2.times(d1));\n    n0.s = n1.s = x.s; // Determine which fraction is closer to x, n0/d0 or n1/d1?\n\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\n    Ctor.precision = pr;\n    external = true;\n    return r;\n  };\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\n\n\n  P.toHexadecimal = P.toHex = function (sd, rm) {\n    return toStringBinary(this, 16, sd, rm);\n  };\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\n\n\n  P.toNearest = function (y, rm) {\n    var x = this,\n        Ctor = x.constructor;\n    x = new Ctor(x);\n\n    if (y == null) {\n      // If x is not finite, return x.\n      if (!x.d) return x;\n      y = new Ctor(1);\n      rm = Ctor.rounding;\n    } else {\n      y = new Ctor(y);\n\n      if (rm === void 0) {\n        rm = Ctor.rounding;\n      } else {\n        checkInt32(rm, 0, 8);\n      } // If x is not finite, return x if y is not NaN, else NaN.\n\n\n      if (!x.d) return y.s ? x : y; // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\n\n      if (!y.d) {\n        if (y.s) y.s = x.s;\n        return y;\n      }\n    } // If y is not zero, calculate the nearest multiple of y to x.\n\n\n    if (y.d[0]) {\n      external = false;\n      x = divide(x, y, 0, rm, 1).times(y);\n      external = true;\n      finalise(x); // If y is zero, return zero with the sign of x.\n    } else {\n      y.s = x.s;\n      x = y;\n    }\n\n    return x;\n  };\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\n\n\n  P.toNumber = function () {\n    return +this;\n  };\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\n\n\n  P.toOctal = function (sd, rm) {\n    return toStringBinary(this, 8, sd, rm);\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n     *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\n\n\n  P.toPower = P.pow = function (y) {\n    var e,\n        k,\n        pr,\n        r,\n        rm,\n        s,\n        x = this,\n        Ctor = x.constructor,\n        yn = +(y = new Ctor(y)); // Either ±Infinity, NaN or ±0?\n\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\n    x = new Ctor(x);\n    if (x.eq(1)) return x;\n    pr = Ctor.precision;\n    rm = Ctor.rounding;\n    if (y.eq(1)) return finalise(x, pr, rm); // y exponent\n\n    e = mathfloor(y.e / LOG_BASE); // If y is a small integer use the 'exponentiation by squaring' algorithm.\n\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\n      r = intPow(Ctor, x, k, pr);\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\n    }\n\n    s = x.s; // if x is negative\n\n    if (s < 0) {\n      // if y is not an integer\n      if (e < y.d.length - 1) return new Ctor(NaN); // Result is positive if x is negative and the last digit of integer y is even.\n\n      if ((y.d[e] & 1) == 0) s = 1; // if x.eq(-1)\n\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\n        x.s = s;\n        return x;\n      }\n    } // Estimate result exponent.\n    // x^y = 10^e,  where e = y * log10(x)\n    // log10(x) = log10(x_significand) + x_exponent\n    // log10(x_significand) = ln(x_significand) / ln(10)\n\n\n    k = mathpow(+x, yn);\n    e = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + '').e; // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\n    // Overflow/underflow?\n\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\n    external = false;\n    Ctor.rounding = x.s = 1; // Estimate the extra guard digits needed to ensure five correct rounding digits from\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\n    // new Decimal(2.32456).pow('2087987436534566.46411')\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\n\n    k = Math.min(12, (e + '').length); // r = x^y = exp(y*ln(x))\n\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr); // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\n\n    if (r.d) {\n      // Truncate to the required precision plus five rounding digits.\n      r = finalise(r, pr + 5, 1); // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\n      // the result.\n\n      if (checkRoundingDigits(r.d, pr, rm)) {\n        e = pr + 10; // Truncate to the increased precision plus five rounding digits.\n\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1); // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\n\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\n          r = finalise(r, pr + 1, 0);\n        }\n      }\n    }\n\n    r.s = s;\n    external = true;\n    Ctor.rounding = rm;\n    return finalise(r, pr, rm);\n  };\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\n\n\n  P.toPrecision = function (sd, rm) {\n    var str,\n        x = this,\n        Ctor = x.constructor;\n\n    if (sd === void 0) {\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n    } else {\n      checkInt32(sd, 1, MAX_DIGITS);\n      if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n      x = finalise(new Ctor(x), sd, rm);\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\n    }\n\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\n\n\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\n    var x = this,\n        Ctor = x.constructor;\n\n    if (sd === void 0) {\n      sd = Ctor.precision;\n      rm = Ctor.rounding;\n    } else {\n      checkInt32(sd, 1, MAX_DIGITS);\n      if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n    }\n\n    return finalise(new Ctor(x), sd, rm);\n  };\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\n\n\n  P.toString = function () {\n    var x = this,\n        Ctor = x.constructor,\n        str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\n  };\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\n\n\n  P.truncated = P.trunc = function () {\n    return finalise(new this.constructor(this), this.e + 1, 1);\n  };\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\n\n\n  P.valueOf = P.toJSON = function () {\n    var x = this,\n        Ctor = x.constructor,\n        str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\n    return x.isNeg() ? '-' + str : str;\n  }; // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\n\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\n\n\n  function digitsToString(d) {\n    var i,\n        k,\n        ws,\n        indexOfLastWord = d.length - 1,\n        str = '',\n        w = d[0];\n\n    if (indexOfLastWord > 0) {\n      str += w;\n\n      for (i = 1; i < indexOfLastWord; i++) {\n        ws = d[i] + '';\n        k = LOG_BASE - ws.length;\n        if (k) str += getZeroString(k);\n        str += ws;\n      }\n\n      w = d[i];\n      ws = w + '';\n      k = LOG_BASE - ws.length;\n      if (k) str += getZeroString(k);\n    } else if (w === 0) {\n      return '0';\n    } // Remove trailing zeros of last w.\n\n\n    for (; w % 10 === 0;) w /= 10;\n\n    return str + w;\n  }\n\n  function checkInt32(i, min, max) {\n    if (i !== ~~i || i < min || i > max) {\n      throw Error(invalidArgument + i);\n    }\n  }\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\n\n\n  function checkRoundingDigits(d, i, rm, repeating) {\n    var di, k, r, rd; // Get the length of the first word of the array d.\n\n    for (k = d[0]; k >= 10; k /= 10) --i; // Is the rounding digit in the first word of d?\n\n\n    if (--i < 0) {\n      i += LOG_BASE;\n      di = 0;\n    } else {\n      di = Math.ceil((i + 1) / LOG_BASE);\n      i %= LOG_BASE;\n    } // i is the index (0 - 6) of the rounding digit.\n    // E.g. if within the word 3487563 the first rounding digit is 5,\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\n\n\n    k = mathpow(10, LOG_BASE - i);\n    rd = d[di] % k | 0;\n\n    if (repeating == null) {\n      if (i < 3) {\n        if (i == 0) rd = rd / 100 | 0;else if (i == 1) rd = rd / 10 | 0;\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\n      } else {\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 || (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\n      }\n    } else {\n      if (i < 4) {\n        if (i == 0) rd = rd / 1000 | 0;else if (i == 1) rd = rd / 100 | 0;else if (i == 2) rd = rd / 10 | 0;\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\n      } else {\n        r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\n      }\n    }\n\n    return r;\n  } // Convert string of `baseIn` to an array of numbers of `baseOut`.\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\n\n\n  function convertBase(str, baseIn, baseOut) {\n    var j,\n        arr = [0],\n        arrL,\n        i = 0,\n        strL = str.length;\n\n    for (; i < strL;) {\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\n\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\n\n      for (j = 0; j < arr.length; j++) {\n        if (arr[j] > baseOut - 1) {\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\n          arr[j + 1] += arr[j] / baseOut | 0;\n          arr[j] %= baseOut;\n        }\n      }\n    }\n\n    return arr.reverse();\n  }\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\n\n\n  function cosine(Ctor, x) {\n    var k, len, y;\n    if (x.isZero()) return x; // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\n    // Estimate the optimum number of times to use the argument reduction.\n\n    len = x.d.length;\n\n    if (len < 32) {\n      k = Math.ceil(len / 3);\n      y = (1 / tinyPow(4, k)).toString();\n    } else {\n      k = 16;\n      y = '2.3283064365386962890625e-10';\n    }\n\n    Ctor.precision += k;\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1)); // Reverse argument reduction\n\n    for (var i = k; i--;) {\n      var cos2x = x.times(x);\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\n    }\n\n    Ctor.precision -= k;\n    return x;\n  }\n  /*\r\n   * Perform division in the specified base.\r\n   */\n\n\n  var divide = function () {\n    // Assumes non-zero x and k, and hence non-zero result.\n    function multiplyInteger(x, k, base) {\n      var temp,\n          carry = 0,\n          i = x.length;\n\n      for (x = x.slice(); i--;) {\n        temp = x[i] * k + carry;\n        x[i] = temp % base | 0;\n        carry = temp / base | 0;\n      }\n\n      if (carry) x.unshift(carry);\n      return x;\n    }\n\n    function compare(a, b, aL, bL) {\n      var i, r;\n\n      if (aL != bL) {\n        r = aL > bL ? 1 : -1;\n      } else {\n        for (i = r = 0; i < aL; i++) {\n          if (a[i] != b[i]) {\n            r = a[i] > b[i] ? 1 : -1;\n            break;\n          }\n        }\n      }\n\n      return r;\n    }\n\n    function subtract(a, b, aL, base) {\n      var i = 0; // Subtract b from a.\n\n      for (; aL--;) {\n        a[aL] -= i;\n        i = a[aL] < b[aL] ? 1 : 0;\n        a[aL] = i * base + a[aL] - b[aL];\n      } // Remove leading zeros.\n\n\n      for (; !a[0] && a.length > 1;) a.shift();\n    }\n\n    return function (x, y, pr, rm, dp, base) {\n      var cmp,\n          e,\n          i,\n          k,\n          logBase,\n          more,\n          prod,\n          prodL,\n          q,\n          qd,\n          rem,\n          remL,\n          rem0,\n          sd,\n          t,\n          xi,\n          xL,\n          yd0,\n          yL,\n          yz,\n          Ctor = x.constructor,\n          sign = x.s == y.s ? 1 : -1,\n          xd = x.d,\n          yd = y.d; // Either NaN, Infinity or 0?\n\n      if (!xd || !xd[0] || !yd || !yd[0]) {\n        return new Ctor( // Return NaN if either NaN, or both Infinity or 0.\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\n      }\n\n      if (base) {\n        logBase = 1;\n        e = x.e - y.e;\n      } else {\n        base = BASE;\n        logBase = LOG_BASE;\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\n      }\n\n      yL = yd.length;\n      xL = xd.length;\n      q = new Ctor(sign);\n      qd = q.d = []; // Result exponent may be one less than e.\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\n\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\n\n      if (yd[i] > (xd[i] || 0)) e--;\n\n      if (pr == null) {\n        sd = pr = Ctor.precision;\n        rm = Ctor.rounding;\n      } else if (dp) {\n        sd = pr + (x.e - y.e) + 1;\n      } else {\n        sd = pr;\n      }\n\n      if (sd < 0) {\n        qd.push(1);\n        more = true;\n      } else {\n        // Convert precision in number of base 10 digits to base 1e7 digits.\n        sd = sd / logBase + 2 | 0;\n        i = 0; // divisor < 1e7\n\n        if (yL == 1) {\n          k = 0;\n          yd = yd[0];\n          sd++; // k is the carry.\n\n          for (; (i < xL || k) && sd--; i++) {\n            t = k * base + (xd[i] || 0);\n            qd[i] = t / yd | 0;\n            k = t % yd | 0;\n          }\n\n          more = k || i < xL; // divisor >= 1e7\n        } else {\n          // Normalise xd and yd so highest order digit of yd is >= base/2\n          k = base / (yd[0] + 1) | 0;\n\n          if (k > 1) {\n            yd = multiplyInteger(yd, k, base);\n            xd = multiplyInteger(xd, k, base);\n            yL = yd.length;\n            xL = xd.length;\n          }\n\n          xi = yL;\n          rem = xd.slice(0, yL);\n          remL = rem.length; // Add zeros to make remainder as long as divisor.\n\n          for (; remL < yL;) rem[remL++] = 0;\n\n          yz = yd.slice();\n          yz.unshift(0);\n          yd0 = yd[0];\n          if (yd[1] >= base / 2) ++yd0;\n\n          do {\n            k = 0; // Compare divisor and remainder.\n\n            cmp = compare(yd, rem, yL, remL); // If divisor < remainder.\n\n            if (cmp < 0) {\n              // Calculate trial digit, k.\n              rem0 = rem[0];\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0); // k will be how many times the divisor goes into the current remainder.\n\n              k = rem0 / yd0 | 0; //  Algorithm:\n              //  1. product = divisor * trial digit (k)\n              //  2. if product > remainder: product -= divisor, k--\n              //  3. remainder -= product\n              //  4. if product was < remainder at 2:\n              //    5. compare new remainder and divisor\n              //    6. If remainder > divisor: remainder -= divisor, k++\n\n              if (k > 1) {\n                if (k >= base) k = base - 1; // product = divisor * trial digit.\n\n                prod = multiplyInteger(yd, k, base);\n                prodL = prod.length;\n                remL = rem.length; // Compare product and remainder.\n\n                cmp = compare(prod, rem, prodL, remL); // product > remainder.\n\n                if (cmp == 1) {\n                  k--; // Subtract divisor from product.\n\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\n                }\n              } else {\n                // cmp is -1.\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\n                if (k == 0) cmp = k = 1;\n                prod = yd.slice();\n              }\n\n              prodL = prod.length;\n              if (prodL < remL) prod.unshift(0); // Subtract product from remainder.\n\n              subtract(rem, prod, remL, base); // If product was < previous remainder.\n\n              if (cmp == -1) {\n                remL = rem.length; // Compare divisor and new remainder.\n\n                cmp = compare(yd, rem, yL, remL); // If divisor < new remainder, subtract divisor from remainder.\n\n                if (cmp < 1) {\n                  k++; // Subtract divisor from remainder.\n\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\n                }\n              }\n\n              remL = rem.length;\n            } else if (cmp === 0) {\n              k++;\n              rem = [0];\n            } // if cmp === 1, k will be 0\n            // Add the next digit, k, to the result array.\n\n\n            qd[i++] = k; // Update the remainder.\n\n            if (cmp && rem[0]) {\n              rem[remL++] = xd[xi] || 0;\n            } else {\n              rem = [xd[xi]];\n              remL = 1;\n            }\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\n\n          more = rem[0] !== void 0;\n        } // Leading zero?\n\n\n        if (!qd[0]) qd.shift();\n      } // logBase is 1 when divide is being used for base conversion.\n\n\n      if (logBase == 1) {\n        q.e = e;\n        inexact = more;\n      } else {\n        // To calculate q.e, first get the number of digits of qd[0].\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\n\n        q.e = i + e * logBase - 1;\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\n      }\n\n      return q;\n    };\n  }();\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\n\n\n  function finalise(x, sd, rm, isTruncated) {\n    var digits,\n        i,\n        j,\n        k,\n        rd,\n        roundUp,\n        w,\n        xd,\n        xdi,\n        Ctor = x.constructor; // Don't round if sd is null or undefined.\n\n    out: if (sd != null) {\n      xd = x.d; // Infinity/NaN.\n\n      if (!xd) return x; // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\n      // w: the word of xd containing rd, a base 1e7 number.\n      // xdi: the index of w within xd.\n      // digits: the number of digits of w.\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\n      // they had leading zeros)\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\n      // Get the length of the first word of the digits array xd.\n\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\n\n      i = sd - digits; // Is the rounding digit in the first word of xd?\n\n      if (i < 0) {\n        i += LOG_BASE;\n        j = sd;\n        w = xd[xdi = 0]; // Get the rounding digit at index j of w.\n\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\n      } else {\n        xdi = Math.ceil((i + 1) / LOG_BASE);\n        k = xd.length;\n\n        if (xdi >= k) {\n          if (isTruncated) {\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\n            for (; k++ <= xdi;) xd.push(0);\n\n            w = rd = 0;\n            digits = 1;\n            i %= LOG_BASE;\n            j = i - LOG_BASE + 1;\n          } else {\n            break out;\n          }\n        } else {\n          w = k = xd[xdi]; // Get the number of digits of w.\n\n          for (digits = 1; k >= 10; k /= 10) digits++; // Get the index of rd within w.\n\n\n          i %= LOG_BASE; // Get the index of rd within w, adjusted for leading zeros.\n          // The number of leading zeros of w is given by LOG_BASE - digits.\n\n          j = i - LOG_BASE + digits; // Get the rounding digit at index j of w.\n\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\n        }\n      } // Are there any non-zero digits after the rounding digit?\n\n\n      isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1)); // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\n      // will give 714.\n\n      roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.\n      (i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));\n\n      if (sd < 1 || !xd[0]) {\n        xd.length = 0;\n\n        if (roundUp) {\n          // Convert sd to decimal places.\n          sd -= x.e + 1; // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\n          x.e = -sd || 0;\n        } else {\n          // Zero.\n          xd[0] = x.e = 0;\n        }\n\n        return x;\n      } // Remove excess digits.\n\n\n      if (i == 0) {\n        xd.length = xdi;\n        k = 1;\n        xdi--;\n      } else {\n        xd.length = xdi + 1;\n        k = mathpow(10, LOG_BASE - i); // E.g. 56700 becomes 56000 if 7 is the rounding digit.\n        // j > 0 means i > number of leading zeros of w.\n\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\n      }\n\n      if (roundUp) {\n        for (;;) {\n          // Is the digit to be rounded up in the first word of xd?\n          if (xdi == 0) {\n            // i will be the length of xd[0] before k is added.\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\n\n            j = xd[0] += k;\n\n            for (k = 1; j >= 10; j /= 10) k++; // if i != k the length has increased.\n\n\n            if (i != k) {\n              x.e++;\n              if (xd[0] == BASE) xd[0] = 1;\n            }\n\n            break;\n          } else {\n            xd[xdi] += k;\n            if (xd[xdi] != BASE) break;\n            xd[xdi--] = 0;\n            k = 1;\n          }\n        }\n      } // Remove trailing zeros.\n\n\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\n    }\n\n    if (external) {\n      // Overflow?\n      if (x.e > Ctor.maxE) {\n        // Infinity.\n        x.d = null;\n        x.e = NaN; // Underflow?\n      } else if (x.e < Ctor.minE) {\n        // Zero.\n        x.e = 0;\n        x.d = [0]; // Ctor.underflow = true;\n      } // else Ctor.underflow = false;\n\n    }\n\n    return x;\n  }\n\n  function finiteToString(x, isExp, sd) {\n    if (!x.isFinite()) return nonFiniteToString(x);\n    var k,\n        e = x.e,\n        str = digitsToString(x.d),\n        len = str.length;\n\n    if (isExp) {\n      if (sd && (k = sd - len) > 0) {\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\n      } else if (len > 1) {\n        str = str.charAt(0) + '.' + str.slice(1);\n      }\n\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\n    } else if (e < 0) {\n      str = '0.' + getZeroString(-e - 1) + str;\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\n    } else if (e >= len) {\n      str += getZeroString(e + 1 - len);\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\n    } else {\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\n\n      if (sd && (k = sd - len) > 0) {\n        if (e + 1 === len) str += '.';\n        str += getZeroString(k);\n      }\n    }\n\n    return str;\n  } // Calculate the base 10 exponent from the base 1e7 exponent.\n\n\n  function getBase10Exponent(digits, e) {\n    var w = digits[0]; // Add the number of digits of the first word of the digits array.\n\n    for (e *= LOG_BASE; w >= 10; w /= 10) e++;\n\n    return e;\n  }\n\n  function getLn10(Ctor, sd, pr) {\n    if (sd > LN10_PRECISION) {\n      // Reset global state in case the exception is caught.\n      external = true;\n      if (pr) Ctor.precision = pr;\n      throw Error(precisionLimitExceeded);\n    }\n\n    return finalise(new Ctor(LN10), sd, 1, true);\n  }\n\n  function getPi(Ctor, sd, rm) {\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\n    return finalise(new Ctor(PI), sd, rm, true);\n  }\n\n  function getPrecision(digits) {\n    var w = digits.length - 1,\n        len = w * LOG_BASE + 1;\n    w = digits[w]; // If non-zero...\n\n    if (w) {\n      // Subtract the number of trailing zeros of the last word.\n      for (; w % 10 == 0; w /= 10) len--; // Add the number of digits of the first word.\n\n\n      for (w = digits[0]; w >= 10; w /= 10) len++;\n    }\n\n    return len;\n  }\n\n  function getZeroString(k) {\n    var zs = '';\n\n    for (; k--;) zs += '0';\n\n    return zs;\n  }\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\n\n\n  function intPow(Ctor, x, n, pr) {\n    var isTruncated,\n        r = new Ctor(1),\n        // Max n of 9007199254740991 takes 53 loop iterations.\n    // Maximum digits array length; leaves [28, 34] guard digits.\n    k = Math.ceil(pr / LOG_BASE + 4);\n    external = false;\n\n    for (;;) {\n      if (n % 2) {\n        r = r.times(x);\n        if (truncate(r.d, k)) isTruncated = true;\n      }\n\n      n = mathfloor(n / 2);\n\n      if (n === 0) {\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\n        n = r.d.length - 1;\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\n        break;\n      }\n\n      x = x.times(x);\n      truncate(x.d, k);\n    }\n\n    external = true;\n    return r;\n  }\n\n  function isOdd(n) {\n    return n.d[n.d.length - 1] & 1;\n  }\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\n\n\n  function maxOrMin(Ctor, args, ltgt) {\n    var y,\n        x = new Ctor(args[0]),\n        i = 0;\n\n    for (; ++i < args.length;) {\n      y = new Ctor(args[i]);\n\n      if (!y.s) {\n        x = y;\n        break;\n      } else if (x[ltgt](y)) {\n        x = y;\n      }\n    }\n\n    return x;\n  }\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\n\n\n  function naturalExponential(x, sd) {\n    var denominator,\n        guard,\n        j,\n        pow,\n        sum,\n        t,\n        wpr,\n        rep = 0,\n        i = 0,\n        k = 0,\n        Ctor = x.constructor,\n        rm = Ctor.rounding,\n        pr = Ctor.precision; // 0/NaN/Infinity?\n\n    if (!x.d || !x.d[0] || x.e > 17) {\n      return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);\n    }\n\n    if (sd == null) {\n      external = false;\n      wpr = pr;\n    } else {\n      wpr = sd;\n    }\n\n    t = new Ctor(0.03125); // while abs(x) >= 0.1\n\n    while (x.e > -2) {\n      // x = x / 2^5\n      x = x.times(t);\n      k += 5;\n    } // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\n    // necessary to ensure the first 4 rounding digits are correct.\n\n\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\n    wpr += guard;\n    denominator = pow = sum = new Ctor(1);\n    Ctor.precision = wpr;\n\n    for (;;) {\n      pow = finalise(pow.times(x), wpr, 1);\n      denominator = denominator.times(++i);\n      t = sum.plus(divide(pow, denominator, wpr, 1));\n\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n        j = k;\n\n        while (j--) sum = finalise(sum.times(sum), wpr, 1); // Check to see if the first 4 rounding digits are [49]999.\n        // If so, repeat the summation with a higher precision, otherwise\n        // e.g. with precision: 18, rounding: 1\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\n        // `wpr - guard` is the index of first rounding digit.\n\n\n        if (sd == null) {\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n            Ctor.precision = wpr += 10;\n            denominator = pow = t = new Ctor(1);\n            i = 0;\n            rep++;\n          } else {\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\n          }\n        } else {\n          Ctor.precision = pr;\n          return sum;\n        }\n      }\n\n      sum = t;\n    }\n  }\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\n\n\n  function naturalLogarithm(y, sd) {\n    var c,\n        c0,\n        denominator,\n        e,\n        numerator,\n        rep,\n        sum,\n        t,\n        wpr,\n        x1,\n        x2,\n        n = 1,\n        guard = 10,\n        x = y,\n        xd = x.d,\n        Ctor = x.constructor,\n        rm = Ctor.rounding,\n        pr = Ctor.precision; // Is x negative or Infinity, NaN, 0 or 1?\n\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\n    }\n\n    if (sd == null) {\n      external = false;\n      wpr = pr;\n    } else {\n      wpr = sd;\n    }\n\n    Ctor.precision = wpr += guard;\n    c = digitsToString(xd);\n    c0 = c.charAt(0);\n\n    if (Math.abs(e = x.e) < 1.5e15) {\n      // Argument reduction.\n      // The series converges faster the closer the argument is to 1, so using\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\n      // later be divided by this number, then separate out the power of 10 using\n      // ln(a*10^b) = ln(a) + b*ln(10).\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\n      // max n is 6 (gives 0.7 - 1.3)\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\n        x = x.times(y);\n        c = digitsToString(x.d);\n        c0 = c.charAt(0);\n        n++;\n      }\n\n      e = x.e;\n\n      if (c0 > 1) {\n        x = new Ctor('0.' + c);\n        e++;\n      } else {\n        x = new Ctor(c0 + '.' + c.slice(1));\n      }\n    } else {\n      // The argument reduction method above may result in overflow if the argument y is a massive\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\n      Ctor.precision = pr;\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\n    } // x1 is x reduced to a value near 1.\n\n\n    x1 = x; // Taylor series.\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\n\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\n    x2 = finalise(x.times(x), wpr, 1);\n    denominator = 3;\n\n    for (;;) {\n      numerator = finalise(numerator.times(x2), wpr, 1);\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\n\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\n        sum = sum.times(2); // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\n\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\n        sum = divide(sum, new Ctor(n), wpr, 1); // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\n        // been repeated previously) and the first 4 rounding digits 9999?\n        // If so, restart the summation with a higher precision, otherwise\n        // e.g. with precision: 12, rounding: 1\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\n        // `wpr - guard` is the index of first rounding digit.\n\n        if (sd == null) {\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\n            Ctor.precision = wpr += guard;\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\n            x2 = finalise(x.times(x), wpr, 1);\n            denominator = rep = 1;\n          } else {\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\n          }\n        } else {\n          Ctor.precision = pr;\n          return sum;\n        }\n      }\n\n      sum = t;\n      denominator += 2;\n    }\n  } // ±Infinity, NaN.\n\n\n  function nonFiniteToString(x) {\n    // Unsigned.\n    return String(x.s * x.s / 0);\n  }\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\n\n\n  function parseDecimal(x, str) {\n    var e, i, len; // Decimal point?\n\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', ''); // Exponential form?\n\n    if ((i = str.search(/e/i)) > 0) {\n      // Determine exponent.\n      if (e < 0) e = i;\n      e += +str.slice(i + 1);\n      str = str.substring(0, i);\n    } else if (e < 0) {\n      // Integer.\n      e = str.length;\n    } // Determine leading zeros.\n\n\n    for (i = 0; str.charCodeAt(i) === 48; i++); // Determine trailing zeros.\n\n\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\n\n    str = str.slice(i, len);\n\n    if (str) {\n      len -= i;\n      x.e = e = e - i - 1;\n      x.d = []; // Transform base\n      // e is the base 10 exponent.\n      // i is where to slice str to get the first word of the digits array.\n\n      i = (e + 1) % LOG_BASE;\n      if (e < 0) i += LOG_BASE;\n\n      if (i < len) {\n        if (i) x.d.push(+str.slice(0, i));\n\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\n\n        str = str.slice(i);\n        i = LOG_BASE - str.length;\n      } else {\n        i -= len;\n      }\n\n      for (; i--;) str += '0';\n\n      x.d.push(+str);\n\n      if (external) {\n        // Overflow?\n        if (x.e > x.constructor.maxE) {\n          // Infinity.\n          x.d = null;\n          x.e = NaN; // Underflow?\n        } else if (x.e < x.constructor.minE) {\n          // Zero.\n          x.e = 0;\n          x.d = [0]; // x.constructor.underflow = true;\n        } // else x.constructor.underflow = false;\n\n      }\n    } else {\n      // Zero.\n      x.e = 0;\n      x.d = [0];\n    }\n\n    return x;\n  }\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\n\n\n  function parseOther(x, str) {\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\n\n    if (str.indexOf('_') > -1) {\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\n      if (isDecimal.test(str)) return parseDecimal(x, str);\n    } else if (str === 'Infinity' || str === 'NaN') {\n      if (!+str) x.s = NaN;\n      x.e = NaN;\n      x.d = null;\n      return x;\n    }\n\n    if (isHex.test(str)) {\n      base = 16;\n      str = str.toLowerCase();\n    } else if (isBinary.test(str)) {\n      base = 2;\n    } else if (isOctal.test(str)) {\n      base = 8;\n    } else {\n      throw Error(invalidArgument + str);\n    } // Is there a binary exponent part?\n\n\n    i = str.search(/p/i);\n\n    if (i > 0) {\n      p = +str.slice(i + 1);\n      str = str.substring(2, i);\n    } else {\n      str = str.slice(2);\n    } // Convert `str` as an integer then divide the result by `base` raised to a power such that the\n    // fraction part will be restored.\n\n\n    i = str.indexOf('.');\n    isFloat = i >= 0;\n    Ctor = x.constructor;\n\n    if (isFloat) {\n      str = str.replace('.', '');\n      len = str.length;\n      i = len - i; // log[10](16) = 1.2041... , log[10](88) = 1.9444....\n\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\n    }\n\n    xd = convertBase(str, base, BASE);\n    xe = xd.length - 1; // Remove trailing zeros.\n\n    for (i = xe; xd[i] === 0; --i) xd.pop();\n\n    if (i < 0) return new Ctor(x.s * 0);\n    x.e = getBase10Exponent(xd, xe);\n    x.d = xd;\n    external = false; // At what precision to perform the division to ensure exact conversion?\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\n    // Therefore using 4 * the number of digits of str will always be enough.\n\n    if (isFloat) x = divide(x, divisor, len * 4); // Multiply by the binary exponent part if present.\n\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\n    external = true;\n    return x;\n  }\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\n\n\n  function sine(Ctor, x) {\n    var k,\n        len = x.d.length;\n\n    if (len < 3) {\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\n    } // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\n    // Estimate the optimum number of times to use the argument reduction.\n\n\n    k = 1.4 * Math.sqrt(len);\n    k = k > 16 ? 16 : k | 0;\n    x = x.times(1 / tinyPow(5, k));\n    x = taylorSeries(Ctor, 2, x, x); // Reverse argument reduction\n\n    var sin2_x,\n        d5 = new Ctor(5),\n        d16 = new Ctor(16),\n        d20 = new Ctor(20);\n\n    for (; k--;) {\n      sin2_x = x.times(x);\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\n    }\n\n    return x;\n  } // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\n\n\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\n    var j,\n        t,\n        u,\n        x2,\n        i = 1,\n        pr = Ctor.precision,\n        k = Math.ceil(pr / LOG_BASE);\n    external = false;\n    x2 = x.times(x);\n    u = new Ctor(y);\n\n    for (;;) {\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\n      t = u.plus(y);\n\n      if (t.d[k] !== void 0) {\n        for (j = k; t.d[j] === u.d[j] && j--;);\n\n        if (j == -1) break;\n      }\n\n      j = u;\n      u = y;\n      y = t;\n      t = j;\n      i++;\n    }\n\n    external = true;\n    t.d.length = k + 1;\n    return t;\n  } // Exponent e must be positive and non-zero.\n\n\n  function tinyPow(b, e) {\n    var n = b;\n\n    while (--e) n *= b;\n\n    return n;\n  } // Return the absolute value of `x` reduced to less than or equal to half pi.\n\n\n  function toLessThanHalfPi(Ctor, x) {\n    var t,\n        isNeg = x.s < 0,\n        pi = getPi(Ctor, Ctor.precision, 1),\n        halfPi = pi.times(0.5);\n    x = x.abs();\n\n    if (x.lte(halfPi)) {\n      quadrant = isNeg ? 4 : 1;\n      return x;\n    }\n\n    t = x.divToInt(pi);\n\n    if (t.isZero()) {\n      quadrant = isNeg ? 3 : 2;\n    } else {\n      x = x.minus(t.times(pi)); // 0 <= x < pi\n\n      if (x.lte(halfPi)) {\n        quadrant = isOdd(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;\n        return x;\n      }\n\n      quadrant = isOdd(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;\n    }\n\n    return x.minus(pi).abs();\n  }\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\n\n\n  function toStringBinary(x, baseOut, sd, rm) {\n    var base,\n        e,\n        i,\n        k,\n        len,\n        roundUp,\n        str,\n        xd,\n        y,\n        Ctor = x.constructor,\n        isExp = sd !== void 0;\n\n    if (isExp) {\n      checkInt32(sd, 1, MAX_DIGITS);\n      if (rm === void 0) rm = Ctor.rounding;else checkInt32(rm, 0, 8);\n    } else {\n      sd = Ctor.precision;\n      rm = Ctor.rounding;\n    }\n\n    if (!x.isFinite()) {\n      str = nonFiniteToString(x);\n    } else {\n      str = finiteToString(x);\n      i = str.indexOf('.'); // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\n      // log[2](10) = 3.321928094887362347870319429489390175864\n\n      if (isExp) {\n        base = 2;\n\n        if (baseOut == 16) {\n          sd = sd * 4 - 3;\n        } else if (baseOut == 8) {\n          sd = sd * 3 - 2;\n        }\n      } else {\n        base = baseOut;\n      } // Convert the number as an integer then divide the result by its base raised to a power such\n      // that the fraction part will be restored.\n      // Non-integer.\n\n\n      if (i >= 0) {\n        str = str.replace('.', '');\n        y = new Ctor(1);\n        y.e = str.length - i;\n        y.d = convertBase(finiteToString(y), 10, base);\n        y.e = y.d.length;\n      }\n\n      xd = convertBase(str, 10, base);\n      e = len = xd.length; // Remove trailing zeros.\n\n      for (; xd[--len] == 0;) xd.pop();\n\n      if (!xd[0]) {\n        str = isExp ? '0p+0' : '0';\n      } else {\n        if (i < 0) {\n          e--;\n        } else {\n          x = new Ctor(x);\n          x.d = xd;\n          x.e = e;\n          x = divide(x, y, sd, rm, 0, base);\n          xd = x.d;\n          e = x.e;\n          roundUp = inexact;\n        } // The rounding digit, i.e. the digit after the digit that may be rounded up.\n\n\n        i = xd[sd];\n        k = base / 2;\n        roundUp = roundUp || xd[sd + 1] !== void 0;\n        roundUp = rm < 4 ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));\n        xd.length = sd;\n\n        if (roundUp) {\n          // Rounding up may mean the previous digit has to be rounded up and so on.\n          for (; ++xd[--sd] > base - 1;) {\n            xd[sd] = 0;\n\n            if (!sd) {\n              ++e;\n              xd.unshift(1);\n            }\n          }\n        } // Determine trailing zeros.\n\n\n        for (len = xd.length; !xd[len - 1]; --len); // E.g. [4, 11, 15] becomes 4bf.\n\n\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]); // Add binary exponent suffix?\n\n\n        if (isExp) {\n          if (len > 1) {\n            if (baseOut == 16 || baseOut == 8) {\n              i = baseOut == 16 ? 4 : 3;\n\n              for (--len; len % i; len++) str += '0';\n\n              xd = convertBase(str, base, baseOut);\n\n              for (len = xd.length; !xd[len - 1]; --len); // xd[0] will always be be 1\n\n\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\n            } else {\n              str = str.charAt(0) + '.' + str.slice(1);\n            }\n          }\n\n          str = str + (e < 0 ? 'p' : 'p+') + e;\n        } else if (e < 0) {\n          for (; ++e;) str = '0' + str;\n\n          str = '0.' + str;\n        } else {\n          if (++e > len) for (e -= len; e--;) str += '0';else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\n        }\n      }\n\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\n    }\n\n    return x.s < 0 ? '-' + str : str;\n  } // Does not strip trailing zeros.\n\n\n  function truncate(arr, len) {\n    if (arr.length > len) {\n      arr.length = len;\n      return true;\n    }\n  } // Decimal methods\n\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\n\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function abs(x) {\n    return new this(x).abs();\n  }\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function acos(x) {\n    return new this(x).acos();\n  }\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function acosh(x) {\n    return new this(x).acosh();\n  }\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function add(x, y) {\n    return new this(x).plus(y);\n  }\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function asin(x) {\n    return new this(x).asin();\n  }\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function asinh(x) {\n    return new this(x).asinh();\n  }\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function atan(x) {\n    return new this(x).atan();\n  }\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function atanh(x) {\n    return new this(x).atanh();\n  }\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\n\n\n  function atan2(y, x) {\n    y = new this(y);\n    x = new this(x);\n    var r,\n        pr = this.precision,\n        rm = this.rounding,\n        wpr = pr + 4; // Either NaN\n\n    if (!y.s || !x.s) {\n      r = new this(NaN); // Both ±Infinity\n    } else if (!y.d && !x.d) {\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\n      r.s = y.s; // x is ±Infinity or y is ±0\n    } else if (!x.d || y.isZero()) {\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\n      r.s = y.s; // y is ±Infinity or x is ±0\n    } else if (!y.d || x.isZero()) {\n      r = getPi(this, wpr, 1).times(0.5);\n      r.s = y.s; // Both non-zero and finite\n    } else if (x.s < 0) {\n      this.precision = wpr;\n      this.rounding = 1;\n      r = this.atan(divide(y, x, wpr, 1));\n      x = getPi(this, wpr, 1);\n      this.precision = pr;\n      this.rounding = rm;\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\n    } else {\n      r = this.atan(divide(y, x, wpr, 1));\n    }\n\n    return r;\n  }\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function cbrt(x) {\n    return new this(x).cbrt();\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function ceil(x) {\n    return finalise(x = new this(x), x.e + 1, 2);\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function clamp(x, min, max) {\n    return new this(x).clamp(min, max);\n  }\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\n\n\n  function config(obj) {\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\n    var i,\n        p,\n        v,\n        useDefaults = obj.defaults === true,\n        ps = ['precision', 1, MAX_DIGITS, 'rounding', 0, 8, 'toExpNeg', -EXP_LIMIT, 0, 'toExpPos', 0, EXP_LIMIT, 'maxE', 0, EXP_LIMIT, 'minE', -EXP_LIMIT, 0, 'modulo', 0, 9];\n\n    for (i = 0; i < ps.length; i += 3) {\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\n\n      if ((v = obj[p]) !== void 0) {\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;else throw Error(invalidArgument + p + ': ' + v);\n      }\n    }\n\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\n\n    if ((v = obj[p]) !== void 0) {\n      if (v === true || v === false || v === 0 || v === 1) {\n        if (v) {\n          if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {\n            this[p] = true;\n          } else {\n            throw Error(cryptoUnavailable);\n          }\n        } else {\n          this[p] = false;\n        }\n      } else {\n        throw Error(invalidArgument + p + ': ' + v);\n      }\n    }\n\n    return this;\n  }\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function cos(x) {\n    return new this(x).cos();\n  }\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function cosh(x) {\n    return new this(x).cosh();\n  }\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\n\n\n  function clone(obj) {\n    var i, p, ps;\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\n\n    function Decimal(v) {\n      var e,\n          i,\n          t,\n          x = this; // Decimal called without new.\n\n      if (!(x instanceof Decimal)) return new Decimal(v); // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\n      // which points to Object.\n\n      x.constructor = Decimal; // Duplicate.\n\n      if (isDecimalInstance(v)) {\n        x.s = v.s;\n\n        if (external) {\n          if (!v.d || v.e > Decimal.maxE) {\n            // Infinity.\n            x.e = NaN;\n            x.d = null;\n          } else if (v.e < Decimal.minE) {\n            // Zero.\n            x.e = 0;\n            x.d = [0];\n          } else {\n            x.e = v.e;\n            x.d = v.d.slice();\n          }\n        } else {\n          x.e = v.e;\n          x.d = v.d ? v.d.slice() : v.d;\n        }\n\n        return;\n      }\n\n      t = typeof v;\n\n      if (t === 'number') {\n        if (v === 0) {\n          x.s = 1 / v < 0 ? -1 : 1;\n          x.e = 0;\n          x.d = [0];\n          return;\n        }\n\n        if (v < 0) {\n          v = -v;\n          x.s = -1;\n        } else {\n          x.s = 1;\n        } // Fast path for small integers.\n\n\n        if (v === ~~v && v < 1e7) {\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\n\n          if (external) {\n            if (e > Decimal.maxE) {\n              x.e = NaN;\n              x.d = null;\n            } else if (e < Decimal.minE) {\n              x.e = 0;\n              x.d = [0];\n            } else {\n              x.e = e;\n              x.d = [v];\n            }\n          } else {\n            x.e = e;\n            x.d = [v];\n          }\n\n          return; // Infinity, NaN.\n        } else if (v * 0 !== 0) {\n          if (!v) x.s = NaN;\n          x.e = NaN;\n          x.d = null;\n          return;\n        }\n\n        return parseDecimal(x, v.toString());\n      } else if (t !== 'string') {\n        throw Error(invalidArgument + v);\n      } // Minus sign?\n\n\n      if ((i = v.charCodeAt(0)) === 45) {\n        v = v.slice(1);\n        x.s = -1;\n      } else {\n        // Plus sign?\n        if (i === 43) v = v.slice(1);\n        x.s = 1;\n      }\n\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\n    }\n\n    Decimal.prototype = P;\n    Decimal.ROUND_UP = 0;\n    Decimal.ROUND_DOWN = 1;\n    Decimal.ROUND_CEIL = 2;\n    Decimal.ROUND_FLOOR = 3;\n    Decimal.ROUND_HALF_UP = 4;\n    Decimal.ROUND_HALF_DOWN = 5;\n    Decimal.ROUND_HALF_EVEN = 6;\n    Decimal.ROUND_HALF_CEIL = 7;\n    Decimal.ROUND_HALF_FLOOR = 8;\n    Decimal.EUCLID = 9;\n    Decimal.config = Decimal.set = config;\n    Decimal.clone = clone;\n    Decimal.isDecimal = isDecimalInstance;\n    Decimal.abs = abs;\n    Decimal.acos = acos;\n    Decimal.acosh = acosh; // ES6\n\n    Decimal.add = add;\n    Decimal.asin = asin;\n    Decimal.asinh = asinh; // ES6\n\n    Decimal.atan = atan;\n    Decimal.atanh = atanh; // ES6\n\n    Decimal.atan2 = atan2;\n    Decimal.cbrt = cbrt; // ES6\n\n    Decimal.ceil = ceil;\n    Decimal.clamp = clamp;\n    Decimal.cos = cos;\n    Decimal.cosh = cosh; // ES6\n\n    Decimal.div = div;\n    Decimal.exp = exp;\n    Decimal.floor = floor;\n    Decimal.hypot = hypot; // ES6\n\n    Decimal.ln = ln;\n    Decimal.log = log;\n    Decimal.log10 = log10; // ES6\n\n    Decimal.log2 = log2; // ES6\n\n    Decimal.max = max;\n    Decimal.min = min;\n    Decimal.mod = mod;\n    Decimal.mul = mul;\n    Decimal.pow = pow;\n    Decimal.random = random;\n    Decimal.round = round;\n    Decimal.sign = sign; // ES6\n\n    Decimal.sin = sin;\n    Decimal.sinh = sinh; // ES6\n\n    Decimal.sqrt = sqrt;\n    Decimal.sub = sub;\n    Decimal.sum = sum;\n    Decimal.tan = tan;\n    Decimal.tanh = tanh; // ES6\n\n    Decimal.trunc = trunc; // ES6\n\n    if (obj === void 0) obj = {};\n\n    if (obj) {\n      if (obj.defaults !== true) {\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\n\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\n      }\n    }\n\n    Decimal.config(obj);\n    return Decimal;\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function div(x, y) {\n    return new this(x).div(y);\n  }\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\n\n\n  function exp(x) {\n    return new this(x).exp();\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function floor(x) {\n    return finalise(x = new this(x), x.e + 1, 3);\n  }\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function hypot() {\n    var i,\n        n,\n        t = new this(0);\n    external = false;\n\n    for (i = 0; i < arguments.length;) {\n      n = new this(arguments[i++]);\n\n      if (!n.d) {\n        if (n.s) {\n          external = true;\n          return new this(1 / 0);\n        }\n\n        t = n;\n      } else if (t.d) {\n        t = t.plus(n.times(n));\n      }\n    }\n\n    external = true;\n    return t.sqrt();\n  }\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\n\n\n  function isDecimalInstance(obj) {\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\n  }\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function ln(x) {\n    return new this(x).ln();\n  }\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\n\n\n  function log(x, y) {\n    return new this(x).log(y);\n  }\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function log2(x) {\n    return new this(x).log(2);\n  }\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function log10(x) {\n    return new this(x).log(10);\n  }\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function max() {\n    return maxOrMin(this, arguments, 'lt');\n  }\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function min() {\n    return maxOrMin(this, arguments, 'gt');\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function mod(x, y) {\n    return new this(x).mod(y);\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function mul(x, y) {\n    return new this(x).mul(y);\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\n\n\n  function pow(x, y) {\n    return new this(x).pow(y);\n  }\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\n\n\n  function random(sd) {\n    var d,\n        e,\n        k,\n        n,\n        i = 0,\n        r = new this(1),\n        rd = [];\n    if (sd === void 0) sd = this.precision;else checkInt32(sd, 1, MAX_DIGITS);\n    k = Math.ceil(sd / LOG_BASE);\n\n    if (!this.crypto) {\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0; // Browsers supporting crypto.getRandomValues.\n\n    } else if (crypto.getRandomValues) {\n      d = crypto.getRandomValues(new Uint32Array(k));\n\n      for (; i < k;) {\n        n = d[i]; // 0 <= n < 4294967296\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\n\n        if (n >= 4.29e9) {\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\n        } else {\n          // 0 <= n <= 4289999999\n          // 0 <= (n % 1e7) <= 9999999\n          rd[i++] = n % 1e7;\n        }\n      } // Node.js supporting crypto.randomBytes.\n\n    } else if (crypto.randomBytes) {\n      // buffer\n      d = crypto.randomBytes(k *= 4);\n\n      for (; i < k;) {\n        // 0 <= n < 2147483648\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24); // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\n\n        if (n >= 2.14e9) {\n          crypto.randomBytes(4).copy(d, i);\n        } else {\n          // 0 <= n <= 2139999999\n          // 0 <= (n % 1e7) <= 9999999\n          rd.push(n % 1e7);\n          i += 4;\n        }\n      }\n\n      i = k / 4;\n    } else {\n      throw Error(cryptoUnavailable);\n    }\n\n    k = rd[--i];\n    sd %= LOG_BASE; // Convert trailing digits to zeros according to sd.\n\n    if (k && sd) {\n      n = mathpow(10, LOG_BASE - sd);\n      rd[i] = (k / n | 0) * n;\n    } // Remove trailing words which are zero.\n\n\n    for (; rd[i] === 0; i--) rd.pop(); // Zero?\n\n\n    if (i < 0) {\n      e = 0;\n      rd = [0];\n    } else {\n      e = -1; // Remove leading words which are zero and adjust exponent accordingly.\n\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift(); // Count the digits of the first word of rd to determine leading zeros.\n\n\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++; // Adjust the exponent for leading zeros of the first word of rd.\n\n\n      if (k < LOG_BASE) e -= LOG_BASE - k;\n    }\n\n    r.e = e;\n    r.d = rd;\n    return r;\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function round(x) {\n    return finalise(x = new this(x), x.e + 1, this.rounding);\n  }\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function sign(x) {\n    x = new this(x);\n    return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;\n  }\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function sin(x) {\n    return new this(x).sin();\n  }\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function sinh(x) {\n    return new this(x).sinh();\n  }\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function sqrt(x) {\n    return new this(x).sqrt();\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function sub(x, y) {\n    return new this(x).sub(y);\n  }\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function sum() {\n    var i = 0,\n        args = arguments,\n        x = new this(args[i]);\n    external = false;\n\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\n\n    external = true;\n    return finalise(x, this.precision, this.rounding);\n  }\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function tan(x) {\n    return new this(x).tan();\n  }\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\n\n\n  function tanh(x) {\n    return new this(x).tanh();\n  }\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\n\n\n  function trunc(x) {\n    return finalise(x = new this(x), x.e + 1, 1);\n  } // Create and configure initial Decimal constructor.\n\n\n  Decimal = clone(DEFAULTS);\n  Decimal.prototype.constructor = Decimal;\n  Decimal['default'] = Decimal.Decimal = Decimal; // Create the internal constants from their string values.\n\n  LN10 = new Decimal(LN10);\n  PI = new Decimal(PI); // Export.\n  // AMD.\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return Decimal;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // Node and other environments that support module.exports.\n  } else {}\n})(this);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/decimal.js/decimal.js?");

/***/ }),

/***/ "./node_modules/fraction.js/fraction.js":
/*!**********************************************!*\
  !*** ./node_modules/fraction.js/fraction.js ***!
  \**********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license Fraction.js v4.1.1 23/05/2021\n * https://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2021, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n(function (root) {\n  \"use strict\"; // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n\n  var MAX_CYCLE_LEN = 2000; // Parsed data to avoid calling \"new\" all the time\n\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function createError(name) {\n    function errorConstructor() {\n      var temp = Error.apply(this, arguments);\n      temp['name'] = this['name'] = name;\n      this['stack'] = temp['stack'];\n      this['message'] = temp['message'];\n    }\n    /**\n     * Error constructor\n     *\n     * @constructor\n     */\n\n\n    function IntermediateInheritor() {}\n\n    IntermediateInheritor.prototype = Error.prototype;\n    errorConstructor.prototype = new IntermediateInheritor();\n    return errorConstructor;\n  }\n\n  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');\n  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');\n\n  function assign(n, s) {\n    if (isNaN(n = parseInt(n, 10))) {\n      throwInvalidParam();\n    }\n\n    return n * s;\n  }\n\n  function throwInvalidParam() {\n    throw new InvalidParameter();\n  }\n\n  function factorize(num) {\n    var factors = {};\n    var n = num;\n    var i = 2;\n    var s = 4;\n\n    while (s <= n) {\n      while (n % i === 0) {\n        n /= i;\n        factors[i] = (factors[i] || 0) + 1;\n      }\n\n      s += 1 + 2 * i++;\n    }\n\n    if (n !== num) {\n      if (n > 1) factors[n] = (factors[n] || 0) + 1;\n    } else {\n      factors[num] = (factors[num] || 0) + 1;\n    }\n\n    return factors;\n  }\n\n  var parse = function (p1, p2) {\n    var n = 0,\n        d = 1,\n        s = 1;\n    var v = 0,\n        w = 0,\n        x = 0,\n        y = 1,\n        z = 1;\n    var A = 0,\n        B = 1;\n    var C = 1,\n        D = 1;\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n    } else switch (typeof p1) {\n      case \"object\":\n        {\n          if (\"d\" in p1 && \"n\" in p1) {\n            n = p1[\"n\"];\n            d = p1[\"d\"];\n            if (\"s\" in p1) n *= p1[\"s\"];\n          } else if (0 in p1) {\n            n = p1[0];\n            if (1 in p1) d = p1[1];\n          } else {\n            throwInvalidParam();\n          }\n\n          s = n * d;\n          break;\n        }\n\n      case \"number\":\n        {\n          if (p1 < 0) {\n            s = p1;\n            p1 = -p1;\n          }\n\n          if (p1 % 1 === 0) {\n            n = p1;\n          } else if (p1 > 0) {\n            // check for != 0, scale would become NaN (log(0)), which converges really slow\n            if (p1 >= 1) {\n              z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n              p1 /= z;\n            } // Using Farey Sequences\n            // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n\n            while (B <= N && D <= N) {\n              M = (A + C) / (B + D);\n\n              if (p1 === M) {\n                if (B + D <= N) {\n                  n = A + C;\n                  d = B + D;\n                } else if (D > B) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n\n                break;\n              } else {\n                if (p1 > M) {\n                  A += C;\n                  B += D;\n                } else {\n                  C += A;\n                  D += B;\n                }\n\n                if (B > N) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n              }\n            }\n\n            n *= z;\n          } else if (isNaN(p1) || isNaN(p2)) {\n            d = n = NaN;\n          }\n\n          break;\n        }\n\n      case \"string\":\n        {\n          B = p1.match(/\\d+|./g);\n          if (B === null) throwInvalidParam();\n\n          if (B[A] === '-') {\n            // Check for minus sign at the beginning\n            s = -1;\n            A++;\n          } else if (B[A] === '+') {\n            // Check for plus sign at the beginning\n            A++;\n          }\n\n          if (B.length === A + 1) {\n            // Check if it's just a simple number \"1234\"\n            w = assign(B[A++], s);\n          } else if (B[A + 1] === '.' || B[A] === '.') {\n            // Check if it's a decimal number\n            if (B[A] !== '.') {\n              // Handle 0.5 and .5\n              v = assign(B[A++], s);\n            }\n\n            A++; // Check for decimal places\n\n            if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n              w = assign(B[A], s);\n              y = Math.pow(10, B[A].length);\n              A++;\n            } // Check for repeating places\n\n\n            if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n              x = assign(B[A + 1], s);\n              z = Math.pow(10, B[A + 1].length) - 1;\n              A += 3;\n            }\n          } else if (B[A + 1] === '/' || B[A + 1] === ':') {\n            // Check for a simple fraction \"123/456\" or \"123:456\"\n            w = assign(B[A], s);\n            y = assign(B[A + 2], 1);\n            A += 3;\n          } else if (B[A + 3] === '/' && B[A + 1] === ' ') {\n            // Check for a complex fraction \"123 1/2\"\n            v = assign(B[A], s);\n            w = assign(B[A + 2], s);\n            y = assign(B[A + 4], 1);\n            A += 5;\n          }\n\n          if (B.length <= A) {\n            // Check for more tokens on the stack\n            d = y * z;\n            s =\n            /* void */\n            n = x + d * v + z * w;\n            break;\n          }\n          /* Fall through on error */\n\n        }\n\n      default:\n        throwInvalidParam();\n    }\n\n    if (d === 0) {\n      throw new DivisionByZero();\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n    var r = 1;\n\n    for (; e > 0; b = b * b % m, e >>= 1) {\n      if (e & 1) {\n        r = r * b % m;\n      }\n    }\n\n    return r;\n  }\n\n  function cycleLen(n, d) {\n    for (; d % 2 === 0; d /= 2) {}\n\n    for (; d % 5 === 0; d /= 5) {}\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0; // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n      if (t > MAX_CYCLE_LEN) return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n\n    return t;\n  }\n\n  function cycleStart(n, d, len) {\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) {\n      // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n      if (rem1 === rem2) return t;\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n\n    return 0;\n  }\n\n  function gcd(a, b) {\n    if (!a) return b;\n    if (!b) return a;\n\n    while (1) {\n      a %= b;\n      if (!a) return b;\n      b %= a;\n      if (!b) return a;\n    }\n  }\n\n  ;\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n\n  function Fraction(a, b) {\n    if (!(this instanceof Fraction)) {\n      return new Fraction(a, b);\n    }\n\n    parse(a, b);\n\n    if (Fraction['REDUCE']) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    } else {\n      a = 1;\n    }\n\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  }\n  /**\n   * Boolean global variable to be able to disable automatic reduction of the fraction\n   *\n   */\n\n\n  Fraction['REDUCE'] = 1;\n  Fraction.prototype = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function () {\n      return new Fraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function () {\n      return new Fraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function (a, b) {\n      parse(a, b);\n      return new Fraction(this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"], this[\"d\"] * P[\"d\"]);\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function (a, b) {\n      parse(a, b);\n      return new Fraction(this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"], this[\"d\"] * P[\"d\"]);\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function (a, b) {\n      parse(a, b);\n      return new Fraction(this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"], this[\"d\"] * P[\"d\"]);\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function (a, b) {\n      parse(a, b);\n      return new Fraction(this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"], this[\"d\"] * P[\"n\"]);\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function () {\n      return new Fraction(this);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function (a, b) {\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return new Fraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        Fraction(0, 0); // Throw DivisionByZero\n      }\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n\n\n      return new Fraction(this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function (a, b) {\n      parse(a, b); // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return new Fraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function (a, b) {\n      parse(a, b); // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return new Fraction();\n      }\n\n      return new Fraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function (places) {\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n\n      return new Fraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function (places) {\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n\n      return new Fraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function (places) {\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n\n      return new Fraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denominator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function () {\n      return new Fraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some rational exponent, if possible\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function (a, b) {\n      parse(a, b); // Trivial case when exp is an integer\n\n      if (P['d'] === 1) {\n        if (P['s'] < 0) {\n          return new Fraction(Math.pow(this['s'] * this[\"d\"], P['n']), Math.pow(this[\"n\"], P['n']));\n        } else {\n          return new Fraction(Math.pow(this['s'] * this[\"n\"], P['n']), Math.pow(this[\"d\"], P['n']));\n        }\n      } // Negative roots become complex\n      //     (-a/b)^(c/d) = x\n      // <=> (-1)^(c/d) * (a/b)^(c/d) = x\n      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180°\n      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )\n      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.\n\n\n      if (this['s'] < 0) return null; // Now prime factor n and d\n\n      var N = factorize(this['n']);\n      var D = factorize(this['d']); // Exponentiate and take root for n and d individually\n\n      var n = 1;\n      var d = 1;\n\n      for (var k in N) {\n        if (k === '1') continue;\n\n        if (k === '0') {\n          n = 0;\n          break;\n        }\n\n        N[k] *= P['n'];\n\n        if (N[k] % P['d'] === 0) {\n          N[k] /= P['d'];\n        } else return null;\n\n        n *= Math.pow(k, N[k]);\n      }\n\n      for (var k in D) {\n        if (k === '1') continue;\n        D[k] *= P['n'];\n\n        if (D[k] % P['d'] === 0) {\n          D[k] /= P['d'];\n        } else return null;\n\n        d *= Math.pow(k, D[k]);\n      }\n\n      if (P['s'] < 0) {\n        return new Fraction(d, n);\n      }\n\n      return new Fraction(n, d);\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function (a, b) {\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function (a, b) {\n      parse(a, b);\n      var t = this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"];\n      return (0 < t) - (t < 0);\n    },\n    \"simplify\": function (eps) {\n      // First naive implementation, needs improvement\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      var cont = this['abs']()['toContinued']();\n      eps = eps || 0.001;\n\n      function rec(a) {\n        if (a.length === 1) return new Fraction(a[0]);\n        return rec(a.slice(1))['inverse']()['add'](a[0]);\n      }\n\n      for (var i = 0; i < cont.length; i++) {\n        var tmp = rec(cont.slice(0, i + 1));\n\n        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {\n          return tmp['mul'](this['s']);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function (a, b) {\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || this[\"n\"] * P[\"d\"] % (P[\"n\"] * this[\"d\"]));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function () {\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n     **/\n    'toFraction': function (excludeWhole) {\n      var whole,\n          str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          str += \" \";\n          n %= d;\n        }\n\n        str += n;\n        str += '/';\n        str += d;\n      }\n\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function (excludeWhole) {\n      var whole,\n          str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          n %= d;\n        }\n\n        str += \"\\\\frac{\";\n        str += n;\n        str += '}{';\n        str += d;\n        str += '}';\n      }\n\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function () {\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(a) || isNaN(b)) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function (dec) {\n      var g;\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      if (!Fraction['REDUCE']) {\n        g = gcd(N, D);\n        N /= g;\n        D /= g;\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repetation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] === -1 ? \"-\" : \"\";\n      str += N / D | 0;\n      N %= D;\n      N *= 10;\n      if (N) str += \".\";\n\n      if (cycLen) {\n        for (var i = cycOff; i--;) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n\n        str += \"(\";\n\n        for (var i = cycLen; i--;) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n\n        str += \")\";\n      } else {\n        for (var i = dec; N && i--;) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n      }\n\n      return str;\n    }\n  };\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return Fraction;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/fraction.js/fraction.js?");

/***/ }),

/***/ "./node_modules/javascript-natural-sort/naturalSort.js":
/*!*************************************************************!*\
  !*** ./node_modules/javascript-natural-sort/naturalSort.js ***!
  \*************************************************************/
/***/ ((module) => {

eval("/*\r\n * Natural Sort algorithm for Javascript - Version 0.7 - Released under MIT license\r\n * Author: Jim Palmer (based on chunking idea from Dave Koelle)\r\n */\n\n/*jshint unused:false */\nmodule.exports = function naturalSort(a, b) {\n  \"use strict\";\n\n  var re = /(^([+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,\n      sre = /(^[ ]*|[ ]*$)/g,\n      dre = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\n      hre = /^0x[0-9a-f]+$/i,\n      ore = /^0/,\n      i = function (s) {\n    return naturalSort.insensitive && ('' + s).toLowerCase() || '' + s;\n  },\n      // convert all to strings strip whitespace\n  x = i(a).replace(sre, '') || '',\n      y = i(b).replace(sre, '') || '',\n      // chunk/tokenize\n  xN = x.replace(re, '\\0$1\\0').replace(/\\0$/, '').replace(/^\\0/, '').split('\\0'),\n      yN = y.replace(re, '\\0$1\\0').replace(/\\0$/, '').replace(/^\\0/, '').split('\\0'),\n      // numeric, hex or date detection\n  xD = parseInt(x.match(hre), 16) || xN.length !== 1 && x.match(dre) && Date.parse(x),\n      yD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null,\n      oFxNcL,\n      oFyNcL; // first try and sort Hex codes or Dates\n\n\n  if (yD) {\n    if (xD < yD) {\n      return -1;\n    } else if (xD > yD) {\n      return 1;\n    }\n  } // natural sorting through split numeric strings and default strings\n\n\n  for (var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\n    // find floats not starting with '0', string or 0 if not defined (Clint Priest)\n    oFxNcL = !(xN[cLoc] || '').match(ore) && parseFloat(xN[cLoc]) || xN[cLoc] || 0;\n    oFyNcL = !(yN[cLoc] || '').match(ore) && parseFloat(yN[cLoc]) || yN[cLoc] || 0; // handle numeric vs string comparison - number < string - (Kyle Adams)\n\n    if (isNaN(oFxNcL) !== isNaN(oFyNcL)) {\n      return isNaN(oFxNcL) ? 1 : -1;\n    } // rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\n    else if (typeof oFxNcL !== typeof oFyNcL) {\n        oFxNcL += '';\n        oFyNcL += '';\n      }\n\n    if (oFxNcL < oFyNcL) {\n      return -1;\n    }\n\n    if (oFxNcL > oFyNcL) {\n      return 1;\n    }\n  }\n\n  return 0;\n};\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/javascript-natural-sort/naturalSort.js?");

/***/ }),

/***/ "./node_modules/jsxgraph/distrib/jsxgraphcore.js":
/*!*******************************************************!*\
  !*** ./node_modules/jsxgraph/distrib/jsxgraphcore.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n    JSXGraph 1.2.3\n\n    Copyright 2008-2021\n        Matthias Ehmann,\n        Michael Gerhaeuser,\n        Carsten Miller,\n        Bianca Valentin,\n        Alfred Wassermann,\n        Andreas Walter,\n        Peter Wilfahrt\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <https://www.gnu.org/licenses/>\n    and <https://opensource.org/licenses/MIT/>.\n*/ /**\n * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: https://github.com/jrburke/almond for details\n */ /**\n * UTF-8 Decoder by Bjoern Hoehrmann\n *\n * Copyright (c) 2008-2009 Bjoern Hoehrmann <bjoern@hoehrmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this\n * software and associated documentation files (the \"Software\"), to deal in the Software\n * without restriction, including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons\n * to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or\n * substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n * BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */!function(t,e){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0;}(this,function(){var requirejs,require,define;return function(t){function e(t,e){return v.call(t,e);}function i(t,e){var i,r,s,o,n,a,h,l,c,d,u,p,f=e&&e.split(\"/\"),m=g.map,b=m&&m[\"*\"]||{};if(t){for(t=t.split(\"/\"),n=t.length-1,g.nodeIdCompat&&C.test(t[n])&&(t[n]=t[n].replace(C,\"\")),\".\"===t[0].charAt(0)&&f&&(p=f.slice(0,f.length-1),t=p.concat(t)),c=0;c<t.length;c++)if(\".\"===(u=t[c]))t.splice(c,1),c-=1;else if(\"..\"===u){if(0===c||1===c&&\"..\"===t[2]||\"..\"===t[c-1])continue;c>0&&(t.splice(c-1,2),c-=2);}t=t.join(\"/\");}if((f||b)&&m){for(i=t.split(\"/\"),c=i.length;c>0;c-=1){if(r=i.slice(0,c).join(\"/\"),f)for(d=f.length;d>0;d-=1)if((s=m[f.slice(0,d).join(\"/\")])&&(s=s[r])){o=s,a=c;break;}if(o)break;!h&&b&&b[r]&&(h=b[r],l=c);}!o&&h&&(o=h,a=l),o&&(i.splice(0,a,o),t=i.join(\"/\"));}return t;}function r(e,i){return function(){var r=y.call(arguments,0);return\"string\"!=typeof r[0]&&1===r.length&&r.push(null),d.apply(t,r.concat([e,i]));};}function s(t){return function(e){return i(e,t);};}function o(t){return function(e){f[t]=e;};}function n(i){if(e(m,i)){var r=m[i];delete m[i],b[i]=!0,c.apply(t,r);}if(!e(f,i)&&!e(b,i))throw new Error(\"No \"+i);return f[i];}function a(t){var e,i=t?t.indexOf(\"!\"):-1;return i>-1&&(e=t.substring(0,i),t=t.substring(i+1,t.length)),[e,t];}function h(t){return t?a(t):[];}function l(t){return function(){return g&&g.config&&g.config[t]||{};};}var c,d,u,p,f={},m={},g={},b={},v=Object.prototype.hasOwnProperty,y=[].slice,C=/\\.js$/;u=function(t,e){var r,o=a(t),h=o[0],l=e[1];return t=o[1],h&&(h=i(h,l),r=n(h)),h?t=r&&r.normalize?r.normalize(t,s(l)):i(t,l):(t=i(t,l),o=a(t),h=o[0],t=o[1],h&&(r=n(h))),{f:h?h+\"!\"+t:t,n:t,pr:h,p:r};},p={require:function(t){return r(t);},exports:function(t){var e=f[t];return void 0!==e?e:f[t]={};},module:function(t){return{id:t,uri:\"\",exports:f[t],config:l(t)};}},c=function(i,s,a,l){var c,d,g,v,y,C,_,P=[],E=typeof a;if(l=l||i,C=h(l),\"undefined\"===E||\"function\"===E){for(s=!s.length&&a.length?[\"require\",\"exports\",\"module\"]:s,y=0;y<s.length;y+=1)if(v=u(s[y],C),\"require\"===(d=v.f))P[y]=p.require(i);else if(\"exports\"===d)P[y]=p.exports(i),_=!0;else if(\"module\"===d)c=P[y]=p.module(i);else if(e(f,d)||e(m,d)||e(b,d))P[y]=n(d);else{if(!v.p)throw new Error(i+\" missing \"+d);v.p.load(v.n,r(l,!0),o(d),{}),P[y]=f[d];}g=a?a.apply(f[i],P):void 0,i&&(c&&c.exports!==t&&c.exports!==f[i]?f[i]=c.exports:g===t&&_||(f[i]=g));}else i&&(f[i]=a);},requirejs=require=d=function(e,i,r,s,o){if(\"string\"==typeof e)return p[e]?p[e](i):n(u(e,h(i)).f);if(!e.splice){if(g=e,g.deps&&d(g.deps,g.callback),!i)return;i.splice?(e=i,i=r,r=null):e=t;}return i=i||function(){},\"function\"==typeof r&&(r=s,s=o),s?c(t,e,i,r):setTimeout(function(){c(t,e,i,r);},4),d;},d.config=function(t){return d(t);},requirejs._defined=f,define=function(t,i,r){if(\"string\"!=typeof t)throw new Error(\"See almond README: incorrect module build, no module name\");i.splice||(r=i,i=[]),e(f,t)||e(m,t)||(m[t]=[t,i,r]);},define.amd={jQuery:!0};}(),define(\"../node_modules/almond/almond\",function(){}),define(\"jxg\",[],function(){\"use strict\";var t={};return\"object\"!=typeof JXG||JXG.extend||(t=JXG),t.extend=function(t,e,i,r){var s,o;i=i||!1,r=r||!1;for(s in e)(!i||i&&e.hasOwnProperty(s))&&(o=r?s.toLowerCase():s,t[o]=e[s]);},t.defineConstant=function(e,i,r,s){(s=s||!1)&&t.exists(e[i])||Object.defineProperty(e,i,{value:r,writable:!1,enumerable:!0,configurable:!1});},t.extendConstants=function(t,e,i,r){var s,o;i=i||!1,r=r||!1;for(s in e)(!i||i&&extension.hasOwnProperty(s))&&(o=r?s.toUpperCase():s,this.defineConstant(t,o,e[s]));},t.extend(t,{boards:{},readers:{},elements:{},registerElement:function(t,e){t=t.toLowerCase(),this.elements[t]=e;},registerReader:function(t,e){var i,r;for(i=0;i<e.length;i++)r=e[i].toLowerCase(),\"function\"!=typeof this.readers[r]&&(this.readers[r]=t);},shortcut:function(t,e){return function(){return t[e].apply(this,arguments);};},getRef:function(e,i){return t.deprecated(\"JXG.getRef()\",\"Board.select()\"),e.select(i);},getReference:function(e,i){return t.deprecated(\"JXG.getReference()\",\"Board.select()\"),e.select(i);},getBoardByContainerId:function(t){var e;for(e in JXG.boards)if(JXG.boards.hasOwnProperty(e)&&JXG.boards[e].container===t)return JXG.boards[e];return null;},deprecated:function(e,i){var r=e+\" is deprecated.\";i&&(r+=\" Please use \"+i+\" instead.\"),t.warn(r);},warn:function(t){\"object\"==typeof window&&window.console&&console.warn?console.warn(\"WARNING:\",t):\"object\"==typeof document&&document.getElementById(\"warning\")&&(document.getElementById(\"debug\").innerHTML+=\"WARNING: \"+t+\"<br />\");},debugInt:function(t){var e,i;for(e=0;e<arguments.length;e++)i=arguments[e],\"object\"==typeof window&&window.console&&console.log?console.log(i):\"object\"==typeof document&&document.getElementById(\"debug\")&&(document.getElementById(\"debug\").innerHTML+=i+\"<br/>\");},debugWST:function(e){var i=new Error();t.debugInt.apply(this,arguments),i&&i.stack&&(t.debugInt(\"stacktrace\"),t.debugInt(i.stack.split(\"\\n\").slice(1).join(\"\\n\")));},debugLine:function(e){var i=new Error();t.debugInt.apply(this,arguments),i&&i.stack&&t.debugInt(\"Called from\",i.stack.split(\"\\n\").slice(2,3).join(\"\\n\"));},debug:function(e){t.debugInt.apply(this,arguments);}}),t;}),define(\"base/constants\",[\"jxg\"],function(t){\"use strict\";var e;return e={version:\"1.2.3\",licenseText:\"JSXGraph v1.2.3 Copyright (C) see https://jsxgraph.org\",COORDS_BY_USER:1,COORDS_BY_SCREEN:2,OBJECT_TYPE_ARC:1,OBJECT_TYPE_ARROW:2,OBJECT_TYPE_AXIS:3,OBJECT_TYPE_AXISPOINT:4,OBJECT_TYPE_TICKS:5,OBJECT_TYPE_CIRCLE:6,OBJECT_TYPE_CONIC:7,OBJECT_TYPE_CURVE:8,OBJECT_TYPE_GLIDER:9,OBJECT_TYPE_IMAGE:10,OBJECT_TYPE_LINE:11,OBJECT_TYPE_POINT:12,OBJECT_TYPE_SLIDER:13,OBJECT_TYPE_CAS:14,OBJECT_TYPE_GXTCAS:15,OBJECT_TYPE_POLYGON:16,OBJECT_TYPE_SECTOR:17,OBJECT_TYPE_TEXT:18,OBJECT_TYPE_ANGLE:19,OBJECT_TYPE_INTERSECTION:20,OBJECT_TYPE_TURTLE:21,OBJECT_TYPE_VECTOR:22,OBJECT_TYPE_OPROJECT:23,OBJECT_TYPE_GRID:24,OBJECT_TYPE_TANGENT:25,OBJECT_TYPE_HTMLSLIDER:26,OBJECT_TYPE_CHECKBOX:27,OBJECT_TYPE_INPUT:28,OBJECT_TYPE_BUTTON:29,OBJECT_TYPE_TRANSFORMATION:30,OBJECT_CLASS_POINT:1,OBJECT_CLASS_LINE:2,OBJECT_CLASS_CIRCLE:3,OBJECT_CLASS_CURVE:4,OBJECT_CLASS_AREA:5,OBJECT_CLASS_OTHER:6,OBJECT_CLASS_TEXT:7,GENTYPE_ABC:1,GENTYPE_AXIS:2,GENTYPE_MID:3,GENTYPE_REFLECTION:4,GENTYPE_MIRRORELEMENT:5,GENTYPE_REFLECTION_ON_LINE:4,GENTYPE_REFLECTION_ON_POINT:5,GENTYPE_TANGENT:6,GENTYPE_PARALLEL:7,GENTYPE_BISECTORLINES:8,GENTYPE_BOARDIMG:9,GENTYPE_BISECTOR:10,GENTYPE_NORMAL:11,GENTYPE_POINT:12,GENTYPE_GLIDER:13,GENTYPE_INTERSECTION:14,GENTYPE_CIRCLE:15,GENTYPE_CIRCLE2POINTS:16,GENTYPE_LINE:17,GENTYPE_TRIANGLE:18,GENTYPE_QUADRILATERAL:19,GENTYPE_TEXT:20,GENTYPE_POLYGON:21,GENTYPE_REGULARPOLYGON:22,GENTYPE_SECTOR:23,GENTYPE_ANGLE:24,GENTYPE_PLOT:25,GENTYPE_SLIDER:26,GENTYPE_TRUNCATE:27,GENTYPE_JCODE:28,GENTYPE_MOVEMENT:29,GENTYPE_COMBINED:30,GENTYPE_RULER:31,GENTYPE_SLOPETRIANGLE:32,GENTYPE_PERPSEGMENT:33,GENTYPE_LABELMOVEMENT:34,GENTYPE_VECTOR:35,GENTYPE_NONREFLEXANGLE:36,GENTYPE_REFLEXANGLE:37,GENTYPE_PATH:38,GENTYPE_DERIVATIVE:39,GENTYPE_DELETE:41,GENTYPE_COPY:42,GENTYPE_MIRROR:43,GENTYPE_ROTATE:44,GENTYPE_ABLATION:45,GENTYPE_MIGRATE:46,GENTYPE_VECTORCOPY:47,GENTYPE_POLYGONCOPY:48,GENTYPE_CTX_TYPE_G:51,GENTYPE_CTX_TYPE_P:52,GENTYPE_CTX_TRACE:53,GENTYPE_CTX_VISIBILITY:54,GENTYPE_CTX_CCVISIBILITY:55,GENTYPE_CTX_MPVISIBILITY:56,GENTYPE_CTX_WITHLABEL:57,GENTYPE_CTX_LABEL:58,GENTYPE_CTX_FIXED:59,GENTYPE_CTX_STROKEWIDTH:60,GENTYPE_CTX_LABELSIZE:61,GENTYPE_CTX_SIZE:62,GENTYPE_CTX_FACE:63,GENTYPE_CTX_STRAIGHT:64,GENTYPE_CTX_ARROW:65,GENTYPE_CTX_COLOR:66,GENTYPE_CTX_RADIUS:67,GENTYPE_CTX_COORDS:68,GENTYPE_CTX_TEXT:69,GENTYPE_CTX_ANGLERADIUS:70,GENTYPE_CTX_DOTVISIBILITY:71,GENTYPE_CTX_FILLOPACITY:72,GENTYPE_CTX_PLOT:73,GENTYPE_CTX_SCALE:74,GENTYPE_CTX_INTVAL:75,GENTYPE_CTX_POINT1:76,GENTYPE_CTX_POINT2:77,GENTYPE_CTX_LABELSTICKY:78,GENTYPE_CTX_TYPE_I:79,GENTYPE_CTX_HASINNERPOINTS:80,GENTYPE_CTX_SNAPWIDTH:81,GENTYPE_CTX_SNAPTOGRID:82},t.extendConstants(t,e),e;}),define(\"utils/type\",[\"jxg\",\"base/constants\"],function(t,e){\"use strict\";return t.extend(t,{isId:function(t,e){return\"string\"==typeof e&&!!t.objects[e];},isName:function(t,e){return\"string\"==typeof e&&!!t.elementsByName[e];},isGroup:function(t,e){return\"string\"==typeof e&&!!t.groups[e];},isString:function(t){return\"string\"==typeof t;},isNumber:function(t){return\"number\"==typeof t||\"[Object Number]\"===Object.prototype.toString.call(t);},isFunction:function(t){return\"function\"==typeof t;},isArray:function(t){return Array.isArray?Array.isArray(t):null!==t&&\"object\"==typeof t&&\"function\"==typeof t.splice&&\"function\"==typeof t.join;},isObject:function(t){return\"object\"==typeof t&&!this.isArray(t);},isPoint:function(t){return null!==t&&\"object\"==typeof t&&t.elementClass===e.OBJECT_CLASS_POINT;},isPointType:function(t,e){var i,r;return!!this.isArray(e)||!!(this.isFunction(e)&&(i=e(),this.isArray(i)&&i.length>1))||(r=t.select(e),this.isPoint(r));},isTransformationOrArray:function(t){if(null!==t){if(this.isArray(t)&&t.length>0)return this.isTransformationOrArray(t[0]);if(\"object\"==typeof t)return t.type===e.OBJECT_TYPE_TRANSFORMATION;}return!1;},exists:function(t){return function(t,e){var i=!(void 0===t||null===t);return e=e||!1,e?i&&\"\"!==t:i;};}(),isEmpty:function(t){return 0===Object.keys(t).length;},def:function(t,e){return this.exists(t)?t:e;},str2Bool:function(t){return!this.exists(t)||(\"boolean\"==typeof t?t:!!this.isString(t)&&\"true\"===t.toLowerCase());},createEvalFunction:function(e,i,r){var s,o=[];for(s=0;s<r;s++)o[s]=t.createFunction(i[s],e,\"\",!0);return function(t){return o[t]();};},createFunction:function(t,e,i,r){var s=null;return this.exists(r)&&!r||!this.isString(t)?this.isFunction(t)?s=t:this.isNumber(t)?s=function(){return t;}:this.isString(t)&&(s=function(){return t;}):s=e.jc.snippet(t,!0,i,!0),null!==s&&(s.origin=t),s;},providePoints:function(t,e,i,r,s){var o,n,a,h,l,c=0,d=[];for(this.isArray(e)||(e=[e]),a=e.length,this.exists(s)&&(c=s.length),0===c&&(h=this.copyAttributes(i,t.options,r)),o=0;o<a;++o)if(c>0&&(n=Math.min(o,c-1),h=this.copyAttributes(i,t.options,r,s[n])),this.isArray(e[o])&&e[o].length>1?(d.push(t.create(\"point\",e[o],h)),d[d.length-1]._is_new=!0):this.isFunction(e[o])?(l=e[o](),this.isArray(l)&&l.length>1&&(d.push(t.create(\"point\",[e[o]],h)),d[d.length-1]._is_new=!0)):d.push(t.select(e[o])),!this.isPoint(d[o]))return!1;return d;},bind:function(t,e){return function(){return t.apply(e,arguments);};},evaluate:function(t){return this.isFunction(t)?t():t;},indexOf:function(t,e,i){var r,s=this.exists(i);if(Array.indexOf&&!s)return t.indexOf(e);for(r=0;r<t.length;r++)if(s&&t[r][i]===e||!s&&t[r]===e)return r;return-1;},eliminateDuplicates:function(t){var e,i=t.length,r=[],s={};for(e=0;e<i;e++)s[t[e]]=0;for(e in s)s.hasOwnProperty(e)&&r.push(e);return r;},swap:function(t,e,i){var r;return r=t[e],t[e]=t[i],t[i]=r,t;},uniqueArray:function(e){var i,r,s,o=[];if(0===e.length)return[];for(i=0;i<e.length;i++)if(s=this.isArray(e[i]),this.exists(e[i]))for(r=i+1;r<e.length;r++)s&&t.cmpArrays(e[i],e[r])?e[i]=[]:s||e[i]!==e[r]||(e[i]=\"\");else e[i]=\"\";for(r=0,i=0;i<e.length;i++)s=this.isArray(e[i]),s||\"\"===e[i]?s&&0!==e[i].length&&(o[r]=e[i].slice(0),r++):(o[r]=e[i],r++);return e=o,o;},isInArray:function(e,i){return t.indexOf(e,i)>-1;},coordsArrayToMatrix:function(t,e){var i,r=[],s=[];for(i=0;i<t.length;i++)e?(r.push(t[i].usrCoords[1]),s.push(t[i].usrCoords[2])):s.push([t[i].usrCoords[1],t[i].usrCoords[2]]);return e&&(s=[r,s]),s;},cmpArrays:function(t,e){var i;if(t===e)return!0;if(t.length!==e.length)return!1;for(i=0;i<t.length;i++)if(this.isArray(t[i])&&this.isArray(e[i])){if(!this.cmpArrays(t[i],e[i]))return!1;}else if(t[i]!==e[i])return!1;return!0;},removeElementFromArray:function(t,e){var i;for(i=0;i<t.length;i++)if(t[i]===e)return t.splice(i,1),t;return t;},trunc:function(e,i){return i=t.def(i,0),this.toFixed(e,i);},_decimalAdjust:function(t,e,i){return void 0===i||0==+i?Math[t](e):(e=+e,i=+i,isNaN(e)||\"number\"!=typeof i||i%1!=0?NaN:(e=e.toString().split(\"e\"),e=Math[t](+(e[0]+\"e\"+(e[1]?+e[1]-i:-i))),e=e.toString().split(\"e\"),+(e[0]+\"e\"+(e[1]?+e[1]+i:i))));},_round10:function(t,e){return this._decimalAdjust(\"round\",t,e);},_floor10:function(t,e){return this._decimalAdjust(\"floor\",t,e);},_ceil10:function(t,e){return this._decimalAdjust(\"ceil\",t,e);},toFixed:function(t,e){return this._round10(t,-e).toFixed(e);},autoDigits:function(t){var e=Math.abs(t);return e>.1?this.toFixed(t,2):e>=.01?this.toFixed(t,4):e>=1e-4?this.toFixed(t,6):t;},keys:function(t,e){var i,r=[];for(i in t)e?t.hasOwnProperty(i)&&r.push(i):r.push(i);return r;},clone:function(t){var e={};return e.prototype=t,e;},cloneAndCopy:function(t,e){var i,r=function(){};r.prototype=t;for(i in e)r[i]=e[i];return r;},merge:function(t,e){var i,r;for(i in e)if(e.hasOwnProperty(i))if(this.isArray(e[i]))for(t[i]||(t[i]=[]),r=0;r<e[i].length;r++)\"object\"==typeof e[i][r]?t[i][r]=this.merge(t[i][r],e[i][r]):t[i][r]=e[i][r];else\"object\"==typeof e[i]?(t[i]||(t[i]={}),t[i]=this.merge(t[i],e[i])):t[i]=e[i];return t;},deepCopy:function(t,e,i){var r,s,o,n;if(i=i||!1,\"object\"!=typeof t||null===t)return t;if(this.isArray(t))for(r=[],s=0;s<t.length;s++)o=t[s],\"object\"==typeof o?this.exists(o.board)?r[s]=o.id:r[s]=this.deepCopy(o):r[s]=o;else{r={};for(s in t)t.hasOwnProperty(s)&&(n=i?s.toLowerCase():s,o=t[s],null!==o&&\"object\"==typeof o?this.exists(o.board)?r[n]=o.id:r[n]=this.deepCopy(o):r[n]=o);for(s in e)e.hasOwnProperty(s)&&(n=i?s.toLowerCase():s,o=e[s],\"object\"==typeof o?this.isArray(o)||!this.exists(r[n])?r[n]=this.deepCopy(o):r[n]=this.deepCopy(r[n],o,i):r[n]=o);}return r;},copyAttributes:function(e,i,r){var s,o,n,a,h,l={circle:1,curve:1,image:1,line:1,point:1,polygon:1,text:1,ticks:1,integral:1};for(n=arguments.length,s=n<3||l[r]?t.deepCopy(i.elements,null,!0):{},n<4&&this.exists(r)&&this.exists(i.layer[r])&&(s.layer=i.layer[r]),a=i,h=!0,o=2;o<n;o++){if(!this.exists(a[arguments[o]])){h=!1;break;}a=a[arguments[o]];}for(h&&(s=t.deepCopy(s,a,!0)),a=e,h=!0,o=3;o<n;o++){if(!this.exists(a[arguments[o]])){h=!1;break;}a=a[arguments[o]];}if(h&&this.extend(s,a,null,!0),\"board\"===arguments[2])return s;for(a=i,h=!0,o=2;o<n;o++){if(!this.exists(a[arguments[o]])){h=!1;break;}a=a[arguments[o]];}return h&&this.exists(a.label)&&(s.label=t.deepCopy(a.label,s.label)),s.label=t.deepCopy(i.label,s.label),s;},copyPrototypeMethods:function(t,e,i){var r;t.prototype[i]=e.prototype.constructor;for(r in e.prototype)e.prototype.hasOwnProperty(r)&&(t.prototype[r]=e.prototype[r]);},toJSON:function(e,i){var r,s,o,n;if(i=t.def(i,!1),JSON.stringify&&!i)try{return JSON.stringify(e);}catch(t){}switch(typeof e){case\"object\":if(e){if(r=[],this.isArray(e)){for(o=0;o<e.length;o++)r.push(t.toJSON(e[o],i));return\"[\"+r.join(\",\")+\"]\";}for(s in e)if(e.hasOwnProperty(s)){try{n=t.toJSON(e[s],i);}catch(t){n=\"\";}i?r.push(s+\":\"+n):r.push('\"'+s+'\":'+n);}return\"{\"+r.join(\",\")+\"} \";}return\"null\";case\"string\":return\"'\"+e.replace(/([\"'])/g,\"\\\\$1\")+\"'\";case\"number\":case\"boolean\":return e.toString();}return\"0\";},clearVisPropOld:function(t){return t.visPropOld={cssclass:\"\",cssdefaultstyle:\"\",cssstyle:\"\",fillcolor:\"\",fillopacity:\"\",firstarrow:!1,fontsize:-1,lastarrow:!1,left:-1e5,linecap:\"\",shadow:!1,strokecolor:\"\",strokeopacity:\"\",strokewidth:\"\",transitionduration:0,top:-1e5,visible:null},t;},isInObject:function(t,e){var i;for(i in t)if(t.hasOwnProperty(i)&&t[i]===e)return!0;return!1;},escapeHTML:function(t){return t.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\");},unescapeHTML:function(t){return t.replace(/<\\/?[^>]+>/gi,\"\").replace(/&amp;/g,\"&\").replace(/&lt;/g,\"<\").replace(/&gt;/g,\">\");},capitalize:function(t){return t.charAt(0).toUpperCase()+t.substring(1).toLowerCase();},trimNumber:function(t){return t=t.replace(/^0+/,\"\"),t=t.replace(/0+$/,\"\"),\".\"!==t[t.length-1]&&\",\"!==t[t.length-1]||(t=t.slice(0,-1)),\".\"!==t[0]&&\",\"!==t[0]||(t=\"0\"+t),t;},filterElements:function(t,e){var i,r,s,o,n,a,h,l=t.length,c=[];if(\"function\"!=typeof e&&\"object\"!=typeof e)return c;for(i=0;i<l;i++){if(h=!0,s=t[i],\"object\"==typeof e){for(r in e)if(e.hasOwnProperty(r)&&(o=r.toLowerCase(),n=\"function\"==typeof s[r]?s[r]():s[r],a=s.visProp&&\"function\"==typeof s.visProp[o]?s.visProp[o]():s.visProp&&s.visProp[o],!(h=\"function\"==typeof e[r]?e[r](n)||e[r](a):n===e[r]||a===e[r])))break;}else\"function\"==typeof e&&(h=e(s));h&&c.push(s);}return c;},trim:function(t){return t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\"\");},sanitizeHTML:function(t,e){return\"function\"==typeof html_sanitize&&e?html_sanitize(t,function(){},function(t){return t;}):(t&&(t=t.replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")),t);},evalSlider:function(t){return t&&t.type===e.OBJECT_TYPE_GLIDER&&\"function\"==typeof t.Value?t.Value():t;}}),t;}),define(\"utils/env\",[\"jxg\",\"utils/type\"],function(t,e){\"use strict\";return t.extendConstants(t,{touchProperty:\"touches\"}),t.extend(t,{isTouchEvent:function(e){return t.exists(e[t.touchProperty]);},isPointerEvent:function(e){return t.exists(e.pointerId);},isMouseEvent:function(e){return!t.isTouchEvent(e)&&!t.isPointerEvent(e);},getNumberOfTouchPoints:function(e){var i=-1;return t.isTouchEvent(e)&&(i=e[t.touchProperty].length),i;},isFirstTouch:function(e){var i=t.getNumberOfTouchPoints(e);return t.isPointerEvent(e)?e.isPrimary:1===i;},isBrowser:\"object\"==typeof window&&\"object\"==typeof document,supportsES6:function(){try{return new Function(\"(a = 0) => a\"),!0;}catch(t){return!1;}},supportsVML:function(){return this.isBrowser&&!!document.namespaces;},supportsSVG:function(){return this.isBrowser&&document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\");},supportsCanvas:function(){var t,e=!1;if(this.isNode())try{t= true?__webpack_require__(/*! canvas */ \"./node_modules/canvas/browser.js\"):0,e=!!t;}catch(t){}return e||this.isBrowser&&!!document.createElement(\"canvas\").getContext;},isNode:function(){return!this.isBrowser&&( true&&!!module.exports||\"object\"==typeof __webpack_require__.g&&__webpack_require__.g.requirejsVars&&!__webpack_require__.g.requirejsVars.isBrowser);},isWebWorker:function(){return!this.isBrowser&&\"object\"==typeof self&&\"function\"==typeof self.postMessage;},supportsPointerEvents:function(){return!!(this.isBrowser&&window.navigator&&(window.PointerEvent||window.navigator.pointerEnabled||window.navigator.msPointerEnabled));},isTouchDevice:function(){return this.isBrowser&&void 0!==window.ontouchstart;},isAndroid:function(){return e.exists(navigator)&&navigator.userAgent.toLowerCase().indexOf(\"android\")>-1;},isWebkitAndroid:function(){return this.isAndroid()&&navigator.userAgent.indexOf(\" AppleWebKit/\")>-1;},isApple:function(){return e.exists(navigator)&&(navigator.userAgent.indexOf(\"iPad\")>-1||navigator.userAgent.indexOf(\"iPhone\")>-1);},isWebkitApple:function(){return this.isApple()&&navigator.userAgent.search(/Mobile\\/[0-9A-Za-z\\.]*Safari/)>-1;},isMetroApp:function(){return\"object\"==typeof window&&window.clientInformation&&window.clientInformation.appVersion&&window.clientInformation.appVersion.indexOf(\"MSAppHost\")>-1;},isMozilla:function(){return e.exists(navigator)&&navigator.userAgent.toLowerCase().indexOf(\"mozilla\")>-1&&-1===navigator.userAgent.toLowerCase().indexOf(\"apple\");},isFirefoxOS:function(){return e.exists(navigator)&&-1===navigator.userAgent.toLowerCase().indexOf(\"android\")&&-1===navigator.userAgent.toLowerCase().indexOf(\"apple\")&&navigator.userAgent.toLowerCase().indexOf(\"mobile\")>-1&&navigator.userAgent.toLowerCase().indexOf(\"mozilla\")>-1;},ieVersion:function(){var t,e,i=3;if(\"object\"!=typeof document)return 0;t=document.createElement(\"div\"),e=t.getElementsByTagName(\"i\");do{t.innerHTML=\"\\x3c!--[if gt IE \"+ ++i+\"]><i></i><![endif]--\\x3e\";}while(e[0]);return i>4?i:void 0;}(),getDimensions:function(t,i){var r,s,o,n,a,h,l,c,d,u=/\\d+(\\.\\d*)?px/;if(!this.isBrowser||null===t)return{width:500,height:500};if(i=i||document,r=i.getElementById(t),!e.exists(r))throw new Error(\"\\nJSXGraph: HTML container element '\"+t+\"' not found.\");return\"none\"!==(s=r.style.display)&&null!==s?r.clientWidth>0&&r.clientHeight>0?{width:r.clientWidth,height:r.clientHeight}:(d=window.getComputedStyle?window.getComputedStyle(r):r.style,{width:u.test(d.width)?parseFloat(d.width):0,height:u.test(d.height)?parseFloat(d.height):0}):(o=r.style,n=o.visibility,a=o.position,h=o.display,o.visibility=\"hidden\",o.position=\"absolute\",o.display=\"block\",l=r.clientWidth,c=r.clientHeight,o.display=h,o.position=a,o.visibility=n,{width:l,height:c});},addEvent:function(t,i,r,s){var o=function(){return r.apply(s,arguments);};o.origin=r,s[\"x_internal\"+i]=s[\"x_internal\"+i]||[],s[\"x_internal\"+i].push(o),e.exists(t)&&e.exists(t.addEventListener)&&t.addEventListener(i,o,!1),e.exists(t)&&e.exists(t.attachEvent)&&t.attachEvent(\"on\"+i,o);},removeEvent:function(i,r,s,o){var n;if(!e.exists(o))return void t.debug(\"no such owner\");if(!e.exists(o[\"x_internal\"+r]))return void t.debug(\"no such type: \"+r);if(!e.isArray(o[\"x_internal\"+r]))return void t.debug(\"owner[x_internal + \"+r+\"] is not an array\");if(-1===(n=e.indexOf(o[\"x_internal\"+r],s,\"origin\")))return void t.debug(\"removeEvent: no such event function in internal list: \"+s);try{e.exists(i)&&e.exists(i.removeEventListener)&&i.removeEventListener(r,o[\"x_internal\"+r][n],!1),e.exists(i)&&e.exists(i.detachEvent)&&i.detachEvent(\"on\"+r,o[\"x_internal\"+r][n]);}catch(e){t.debug(\"event not registered in browser: (\"+r+\" -- \"+s+\")\");}o[\"x_internal\"+r].splice(n,1);},removeAllEvents:function(e,i,r){var s,o;if(r[\"x_internal\"+i]){for(o=r[\"x_internal\"+i].length,s=o-1;s>=0;s--)t.removeEvent(e,i,r[\"x_internal\"+i][s].origin,r);r[\"x_internal\"+i].length>0&&t.debug(\"removeAllEvents: Not all events could be removed.\");}},getPosition:function(i,r,s){var o,n,a,h=0,l=0;if(i||(i=window.event),s=s||document,a=i[t.touchProperty],e.exists(a)&&0===a.length&&(a=i.changedTouches),e.exists(r)&&e.exists(a))if(-1===r){for(n=a.length,o=0;o<n;o++)if(a[o]){i=a[o];break;}}else i=a[r];return i.clientX&&(h=i.clientX,l=i.clientY),[h,l];},getOffset:function(t){var e,i=t,r=t,s=i.offsetLeft-i.scrollLeft,o=i.offsetTop-i.scrollTop;for(e=this.getCSSTransform([s,o],i),s=e[0],o=e[1],i=i.offsetParent;i;){for(s+=i.offsetLeft,o+=i.offsetTop,i.offsetParent&&(s+=i.clientLeft-i.scrollLeft,o+=i.clientTop-i.scrollTop),e=this.getCSSTransform([s,o],i),s=e[0],o=e[1],r=r.parentNode;r!==i;)s+=r.clientLeft-r.scrollLeft,o+=r.clientTop-r.scrollTop,e=this.getCSSTransform([s,o],r),s=e[0],o=e[1],r=r.parentNode;i=i.offsetParent;}return[s,o];},getStyle:function(e,i){var r,s=e.ownerDocument;return s.defaultView&&s.defaultView.getComputedStyle?r=s.defaultView.getComputedStyle(e,null).getPropertyValue(i):e.currentStyle&&t.ieVersion>=9?r=e.currentStyle[i]:e.style&&(i=i.replace(/-([a-z]|[0-9])/gi,function(t,e){return e.toUpperCase();}),r=e.style[i]),r;},getProp:function(t,e){var i=parseInt(this.getStyle(t,e),10);return isNaN(i)?0:i;},getCSSTransform:function(t,i){var r,s,o,n,a,h,l,c,d=[\"transform\",\"webkitTransform\",\"MozTransform\",\"msTransform\",\"oTransform\"];for(h=d.length,r=0,o=\"\";r<h;r++)if(e.exists(i.style[d[r]])){o=i.style[d[r]];break;}if(\"\"!==o&&(a=o.indexOf(\"(\"))>0){for(h=o.length,n=o.substring(a+1,h-1),c=n.split(\",\"),s=0,l=c.length;s<l;s++)c[s]=parseFloat(c[s]);0===o.indexOf(\"matrix\")?(t[0]+=c[4],t[1]+=c[5]):0===o.indexOf(\"translateX\")?t[0]+=c[0]:0===o.indexOf(\"translateY\")?t[1]+=c[0]:0===o.indexOf(\"translate\")&&(t[0]+=c[0],t[1]+=c[1]);}return e.exists(i.style.zoom)&&\"\"!==(o=i.style.zoom)&&(t[0]*=parseFloat(o),t[1]*=parseFloat(o)),t;},getCSSTransformMatrix:function(t){var i,r,s,o,n,a,h,l,c,d=t.ownerDocument,u=[\"transform\",\"webkitTransform\",\"MozTransform\",\"msTransform\",\"oTransform\"],p=[[1,0,0],[0,1,0],[0,0,1]];if(d.defaultView&&d.defaultView.getComputedStyle)c=d.defaultView.getComputedStyle(t,null),s=c.getPropertyValue(\"-webkit-transform\")||c.getPropertyValue(\"-moz-transform\")||c.getPropertyValue(\"-ms-transform\")||c.getPropertyValue(\"-o-transform\")||c.getPropertyValue(\"transform\");else for(a=u.length,i=0,s=\"\";i<a;i++)if(e.exists(t.style[u[i]])){s=t.style[u[i]];break;}if(\"\"!==s&&(n=s.indexOf(\"(\"))>0){for(a=s.length,o=s.substring(n+1,a-1),l=o.split(\",\"),r=0,h=l.length;r<h;r++)l[r]=parseFloat(l[r]);0===s.indexOf(\"matrix\")?p=[[1,0,0],[0,l[0],l[1]],[0,l[2],l[3]]]:0===s.indexOf(\"scaleX\")?p[1][1]=l[0]:0===s.indexOf(\"scaleY\")?p[2][2]=l[0]:0===s.indexOf(\"scale\")&&(p[1][1]=l[0],p[2][2]=l[1]);}return e.exists(t.style.zoom)&&\"\"!==(s=t.style.zoom)&&(p[1][1]*=parseFloat(s),p[2][2]*=parseFloat(s)),p;},timedChunk:function(t,e,i,r){var s=t.concat(),o=function(){var n=+new Date();do{e.call(i,s.shift());}while(s.length>0&&+new Date()-n<300);s.length>0?window.setTimeout(o,1):r(t);};window.setTimeout(o,1);},scaleJSXGraphDiv:function(t,e,i,r){var s,o,n=document.styleSheets.length,a=[\":fullscreen\",\":-webkit-full-screen\",\":-moz-full-screen\",\":-ms-fullscreen\"],h=a.length,l=\"{margin:0 auto;transform:matrix(\"+i+\",0,0,\"+i+\",0,\"+r+\");}\",c=new RegExp(\".*\"+t+\":.*full.*screen.*\"+e+\".*auto;.*transform:.*matrix\");for(0===n&&(s=document.createElement(\"style\"),s.appendChild(document.createTextNode(\"\")),document.body.appendChild(s),n=document.styleSheets.length),document.styleSheets[n-1].cssRules.length>0&&c.test(document.styleSheets[n-1].cssRules[0].cssText)&&document.styleSheets[n-1].deleteRule&&document.styleSheets[n-1].deleteRule(0),o=0;o<h;o++)try{document.styleSheets[n-1].insertRule(t+a[o]+\" \"+e+l,0);break;}catch(t){console.log('JXG.scaleJSXGraphDiv: Could not add CSS rule \"'+a[o]+'\".'),console.log(\"One possible reason could be that the id of the JSXGraph container does not start with a letter.\");}},toFullscreen:function(t,e,i){var r=document.getElementById(t),s=document.getElementById(e),o=parseInt(s.style.height,10),n=parseInt(s.style.width,10),a=window.screen.width/n,h=window.screen.height/o,l=.5*(window.screen.height-o);i=i||Math.min(a,h),window.matchMedia&&window.matchMedia(\"(orientation:landscape)\").matches&&window.screen.width<window.screen.height&&(a=window.screen.height/n,h=window.screen.width/o,i=Math.min(a,h),l=.5*(window.screen.width-o)),i*=.85,this.scaleJSXGraphDiv(\"#\"+t,\"#\"+e,i,l),s._cssFullscreenStore={isFullscreen:!1,margin:s.style.margin,scale:i,vshift:l},r.requestFullscreen=r.requestFullscreen||r.webkitRequestFullscreen||r.mozRequestFullScreen||r.msRequestFullscreen,r.requestFullscreen&&r.requestFullscreen();}}),t;}),define(\"utils/xml\",[\"jxg\",\"utils/type\"],function(t,e){\"use strict\";return t.XML={cleanWhitespace:function(t){for(var i=t.firstChild;e.exists(i);)3!==i.nodeType||/\\S/.test(i.nodeValue)?1===i.nodeType&&this.cleanWhitespace(i):t.removeChild(i),i=i.nextSibling;},parse:function(t){var e,i,r;return r=\"function\"==typeof DOMParser||\"object\"==typeof DOMParser?DOMParser:function(){this.parseFromString=function(t){var e;return\"function\"==typeof ActiveXObject&&(e=new ActiveXObject(\"MSXML.DomDocument\"),e.loadXML(t)),e;};},e=new r(),i=e.parseFromString(t,\"text/xml\"),this.cleanWhitespace(i),i;}},t.XML;}),define(\"utils/event\",[\"jxg\",\"utils/type\"],function(t,e){\"use strict\";return t.EventEmitter={eventHandlers:{},suspended:{},trigger:function(t,e){var i,r,s,o,n,a;for(n=t.length,r=0;r<n;r++)if(o=this.eventHandlers[t[r]],!this.suspended[t[r]]){if(this.suspended[t[r]]=!0,o)for(a=o.length,i=0;i<a;i++)s=o[i],s.handler.apply(s.context,e);this.suspended[t[r]]=!1;}return this;},on:function(t,i,r){return e.isArray(this.eventHandlers[t])||(this.eventHandlers[t]=[]),r=e.def(r,this),this.eventHandlers[t].push({handler:i,context:r}),this;},off:function(t,i){var r;return t&&e.isArray(this.eventHandlers[t])?(i?(r=e.indexOf(this.eventHandlers[t],i,\"handler\"),r>-1&&this.eventHandlers[t].splice(r,1),0===this.eventHandlers[t].length&&delete this.eventHandlers[t]):delete this.eventHandlers[t],this):this;},eventify:function(t){t.eventHandlers={},t.on=this.on,t.off=this.off,t.triggerEventHandlers=this.trigger,t.trigger=this.trigger,t.suspended={};}},t.EventEmitter;}),define(\"math/math\",[\"jxg\",\"utils/type\"],function(t,e){\"use strict\";var i=function(t){var e,i;return t.memo?t.memo:(e={},i=Array.prototype.join,t.memo=function(){var r=i.call(arguments);return void 0!==e[r]?e[r]:e[r]=t.apply(this,arguments);},t.memo);};return t.Math={eps:1e-6,relDif:function(t,e){var i=Math.abs(t),r=Math.abs(e);return r=Math.max(i,r),0===r?0:Math.abs(t-e)/r;},mod:function(t,e){return t-Math.floor(t/e)*e;},vector:function(t,e){var i,r;for(e=e||0,i=[],r=0;r<t;r++)i[r]=e;return i;},matrix:function(t,e,i){var r,s,o;for(i=i||0,e=e||t,r=[],s=0;s<t;s++)for(r[s]=[],o=0;o<e;o++)r[s][o]=i;return r;},identity:function(t,e){var i,r;for(void 0===e&&\"number\"!=typeof e&&(e=t),i=this.matrix(t,e),r=0;r<Math.min(t,e);r++)i[r][r]=1;return i;},frustum:function(t,e,i,r,s,o){var n=this.matrix(4,4);return n[0][0]=2*s/(e-t),n[0][1]=0,n[0][2]=(e+t)/(e-t),n[0][3]=0,n[1][0]=0,n[1][1]=2*s/(r-i),n[1][2]=(r+i)/(r-i),n[1][3]=0,n[2][0]=0,n[2][1]=0,n[2][2]=-(o+s)/(o-s),n[2][3]=-o*s*2/(o-s),n[3][0]=0,n[3][1]=0,n[3][2]=-1,n[3][3]=0,n;},projection:function(t,e,i,r){var s=i*Math.tan(t/2),o=s*e;return this.frustum(-o,o,-s,s,i,r);},matVecMult:function(t,e){var i,r,s,o=t.length,n=e.length,a=[];if(3===n)for(i=0;i<o;i++)a[i]=t[i][0]*e[0]+t[i][1]*e[1]+t[i][2]*e[2];else for(i=0;i<o;i++){for(r=0,s=0;s<n;s++)r+=t[i][s]*e[s];a[i]=r;}return a;},matMatMult:function(t,e){var i,r,s,o,n=t.length,a=n>0?e[0].length:0,h=e.length,l=this.matrix(n,a);for(i=0;i<n;i++)for(r=0;r<a;r++){for(s=0,o=0;o<h;o++)s+=t[i][o]*e[o][r];l[i][r]=s;}return l;},transpose:function(t){var e,i,r,s,o;for(s=t.length,o=t.length>0?t[0].length:0,e=this.matrix(o,s),i=0;i<o;i++)for(r=0;r<s;r++)e[i][r]=t[r][i];return e;},inverse:function(t){var e,i,r,s,o,n,a,h=t.length,l=[],c=[],d=[];for(e=0;e<h;e++){for(l[e]=[],i=0;i<h;i++)l[e][i]=t[e][i];c[e]=e;}for(i=0;i<h;i++){for(o=Math.abs(l[i][i]),n=i,e=i+1;e<h;e++)Math.abs(l[e][i])>o&&(o=Math.abs(l[e][i]),n=e);if(o<=this.eps)return[];if(n>i){for(r=0;r<h;r++)a=l[i][r],l[i][r]=l[n][r],l[n][r]=a;a=c[i],c[i]=c[n],c[n]=a;}for(s=1/l[i][i],e=0;e<h;e++)l[e][i]*=s;for(l[i][i]=s,r=0;r<h;r++)if(r!==i){for(e=0;e<h;e++)e!==i&&(l[e][r]-=l[e][i]*l[i][r]);l[i][r]=-s*l[i][r];}}for(e=0;e<h;e++){for(r=0;r<h;r++)d[c[r]]=l[e][r];for(r=0;r<h;r++)l[e][r]=d[r];}return l;},innerProduct:function(t,i,r){var s,o=0;for(void 0!==r&&e.isNumber(r)||(r=t.length),s=0;s<r;s++)o+=t[s]*i[s];return o;},crossProduct:function(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]];},norm:function(t,i){var r,s=0;for(void 0!==i&&e.isNumber(i)||(i=t.length),r=0;r<i;r++)s+=t[r]*t[r];return Math.sqrt(s);},factorial:i(function(t){return t<0?NaN:(t=Math.floor(t),0===t||1===t?1:t*this.factorial(t-1));}),binomial:i(function(t,e){var i,r;if(e>t||e<0)return NaN;if(e=Math.round(e),t=Math.round(t),0===e||e===t)return 1;for(i=1,r=0;r<e;r++)i*=t-r,i/=r+1;return i;}),cosh:Math.cosh||function(t){return .5*(Math.exp(t)+Math.exp(-t));},sinh:Math.sinh||function(t){return .5*(Math.exp(t)-Math.exp(-t));},cot:function(t){return 1/Math.tan(t);},acot:function(t){return(t>=0?.5:-.5)*Math.PI-Math.atan(t);},nthroot:function(t,e){var i=1/e;return e<=0||Math.floor(e)!==e?NaN:0===t?0:t>0?Math.exp(i*Math.log(t)):e%2==1?-Math.exp(i*Math.log(-t)):NaN;},cbrt:Math.cbrt||function(t){return this.nthroot(t,3);},pow:function(t,e){return 0===t?0===e?1:0:Math.floor(e)===e?Math.pow(t,e):t>0?Math.exp(e*Math.log(t)):NaN;},ratpow:function(t,e,i){var r;return 0===e?1:0===i?NaN:(r=this.gcd(e,i),this.nthroot(this.pow(t,e/r),i/r));},log10:function(t){return Math.log(t)/Math.log(10);},log2:function(t){return Math.log(t)/Math.log(2);},log:function(t,i){return void 0!==i&&e.isNumber(i)?Math.log(t)/Math.log(i):Math.log(t);},sign:Math.sign||function(t){return t=+t,0===t||isNaN(t)?t:t>0?1:-1;},squampow:function(t,e){var i;if(Math.floor(e)===e){for(i=1,e<0&&(t=1/t,e*=-1);0!==e;)1&e&&(i*=t),e>>=1,t*=t;return i;}return this.pow(t,e);},gcd:function(t,i){if(t=Math.abs(t),i=Math.abs(i),!e.isNumber(t)||!e.isNumber(i))return NaN;if(i>t){var r=t;t=i,i=r;}for(;;){if(0===(t%=i))return i;if(0===(i%=t))return t;}},lcm:function(t,i){var r;return e.isNumber(t)&&e.isNumber(i)?(r=t*i,0!==r?r/this.gcd(t,i):0):NaN;},normalize:function(t){var e,i,r=2*t[3],s=t[4]/r;return t[5]=s,t[6]=-t[1]/r,t[7]=-t[2]/r,isFinite(s)?Math.abs(s)>=1?(t[0]=(t[6]*t[6]+t[7]*t[7]-s*s)/(2*s),t[1]=-t[6]/s,t[2]=-t[7]/s,t[3]=1/(2*s),t[4]=1):(i=s<=0?-1:1,t[0]=i*(t[6]*t[6]+t[7]*t[7]-s*s)*.5,t[1]=-i*t[6],t[2]=-i*t[7],t[3]=i/2,t[4]=i*s):(e=Math.sqrt(t[1]*t[1]+t[2]*t[2]),t[0]/=e,t[1]/=e,t[2]/=e,t[3]=0,t[4]=1),t;},toGL:function(t){var e,i,r;if(e=\"function\"==typeof Float32Array?new Float32Array(16):new Array(16),4!==t.length&&4!==t[0].length)return e;for(i=0;i<4;i++)for(r=0;r<4;r++)e[i+4*r]=t[i][r];return e;}},t.Math;}),define(\"base/coords\",[\"jxg\",\"base/constants\",\"utils/event\",\"utils/type\",\"math/math\"],function(t,e,i,r,s){\"use strict\";return t.Coords=function(t,e,s,o){this.board=s,this.usrCoords=[],this.scrCoords=[],this.emitter=!r.exists(o)||o,this.emitter&&i.eventify(this),this.setCoordinates(t,e,!1,!0);},t.extend(t.Coords.prototype,{normalizeUsrCoords:function(){Math.abs(this.usrCoords[0])>s.eps&&(this.usrCoords[1]/=this.usrCoords[0],this.usrCoords[2]/=this.usrCoords[0],this.usrCoords[0]=1);},usr2screen:function(t){var e=Math.round,i=this.board,r=this.usrCoords,s=i.origin.scrCoords;!0===t?(this.scrCoords[0]=e(r[0]),this.scrCoords[1]=e(r[0]*s[1]+r[1]*i.unitX),this.scrCoords[2]=e(r[0]*s[2]-r[2]*i.unitY)):(this.scrCoords[0]=r[0],this.scrCoords[1]=r[0]*s[1]+r[1]*i.unitX,this.scrCoords[2]=r[0]*s[2]-r[2]*i.unitY);},screen2usr:function(){var t=this.board.origin.scrCoords,e=this.scrCoords,i=this.board;this.usrCoords[0]=1,this.usrCoords[1]=(e[1]-t[1])/i.unitX,this.usrCoords[2]=(t[2]-e[2])/i.unitY;},distance:function(t,i){var r,o,n=0,a=this.usrCoords,h=this.scrCoords;if(t===e.COORDS_BY_USER){if(r=i.usrCoords,o=a[0]-r[0],(n=o*o)>s.eps*s.eps)return Number.POSITIVE_INFINITY;o=a[1]-r[1],n+=o*o,o=a[2]-r[2],n+=o*o;}else r=i.scrCoords,o=h[1]-r[1],n+=o*o,o=h[2]-r[2],n+=o*o;return Math.sqrt(n);},setCoordinates:function(t,i,r,s){var o=this.usrCoords,n=this.scrCoords,a=[o[0],o[1],o[2]],h=[n[0],n[1],n[2]];return t===e.COORDS_BY_USER?(2===i.length?(o[0]=1,o[1]=i[0],o[2]=i[1]):(o[0]=i[0],o[1]=i[1],o[2]=i[2],this.normalizeUsrCoords()),this.usr2screen(r)):(2===i.length?(n[1]=i[0],n[2]=i[1]):(n[1]=i[1],n[2]=i[2]),this.screen2usr()),!this.emitter||s||h[1]===n[1]&&h[2]===n[2]||this.triggerEventHandlers([\"update\"],[a,h]),this;},copy:function(t,e){return void 0===e&&(e=0),this[t].slice(e);},isReal:function(){return!isNaN(this.usrCoords[1]+this.usrCoords[2])&&Math.abs(this.usrCoords[0])>s.eps;},__evt__update:function(t,e){},__evt:function(){}}),t.Coords;}),define(\"utils/expect\",[\"jxg\",\"utils/type\",\"base/constants\",\"base/coords\"],function(t,e,i,r){\"use strict\";var s={each:function(t,i,r){var s,o,n=[];if(e.exists(t.length))for(o=t.length,s=0;s<o;s++)n.push(i.call(this,t[s],r));return n;},coords:function(t,e){var s=t;return t&&t.elementClass===i.OBJECT_CLASS_POINT?s=t.coords:t.usrCoords&&t.scrCoords&&t.usr2screen&&(s=t),e&&(s=new r(i.COORDS_BY_USER,s.usrCoords,s.board)),s;},coordsArray:function(t,i){var r;return r=e.isArray(t)?t:this.coords(t).usrCoords,r.length<3&&r.unshift(1),i&&(r=[r[0],r[1],r[2]]),r;}};return t.Expect=s,s;}),define(\"math/ia\",[\"jxg\",\"math/math\",\"utils/type\"],function(t,e,i){\"use strict\";t.Math.DoubleBits=function(){var t,e,i,r,s,o,n,a,h=new Float64Array(1),l=new Uint32Array(h.buffer);void 0!==Float64Array&&(h[0]=1,!0,1072693248===l[1]?(t=function(t){return h[0]=t,[l[0],l[1]];},e=function(t,e){return l[0]=t,l[1]=e,h[0];},i=function(t){return h[0]=t,l[0];},r=function(t){return h[0]=t,l[1];},this.doubleBits=t,this.pack=e,this.lo=i,this.hi=r):1072693248===l[0]&&(s=function(t){return h[0]=t,[l[1],l[0]];},o=function(t,e){return l[1]=t,l[0]=e,h[0];},n=function(t){return h[0]=t,l[1];},a=function(t){return h[0]=t,l[0];},this.doubleBits=s,this.pack=o,this.lo=n,this.hi=a));},t.extend(t.Math.DoubleBits.prototype,{sign:function(t){return this.hi(t)>>>31;},exponent:function(t){return(this.hi(t)<<1>>>21)-1023;},fraction:function(t){var e=this.lo(t),i=this.hi(t),r=1048575&i;return 2146435072&i&&(r+=1<<20),[e,r];},denormalized:function(t){return!(2146435072&this.hi(t));}});var r=new t.Math.DoubleBits(),s=function(t,i){if(void 0!==t&&void 0!==i){if(e.IntervalArithmetic.isInterval(t)){if(!e.IntervalArithmetic.isSingleton(t))throw new TypeError(\"JXG.Math.IntervalArithmetic: interval `lo` must be a singleton\");this.lo=t.lo;}else this.lo=t;if(e.IntervalArithmetic.isInterval(i)){if(!e.IntervalArithmetic.isSingleton(i))throw new TypeError(\"JXG.Math.IntervalArithmetic: interval `hi` must be a singleton\");this.hi=i.hi;}else this.hi=i;}else{if(void 0!==t)return Array.isArray(t)?new s(t[0],t[1]):new s(t,t);this.lo=this.hi=0;}};return t.extend(s.prototype,{print:function(){console.log(\"[\",this.lo,this.hi,\"]\");},set:function(t,e){return this.lo=t,this.hi=e,this;},bounded:function(t,i){return this.set(e.IntervalArithmetic.prev(t),e.IntervalArithmetic.next(i));},boundedSingleton:function(t){return this.bounded(t,t);},assign:function(t,e){if(\"number\"!=typeof t||\"number\"!=typeof e)throw new TypeError(\"JXG.Math.Interval#assign: arguments must be numbers\");return isNaN(t)||isNaN(e)||t>e?this.setEmpty():this.set(t,e);},setEmpty:function(){return this.set(Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY);},setWhole:function(){return this.set(Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY);},open:function(t,i){return this.assign(e.IntervalArithmetic.next(t),e.IntervalArithmetic.prev(i));},halfOpenLeft:function(t,i){return this.assign(e.IntervalArithmetic.next(t),i);},halfOpenRight:function(t,i){return this.assign(t,e.IntervalArithmetic.prev(i));},toArray:function(){return[this.lo,this.hi];},clone:function(){return new s().set(this.lo,this.hi);}}),t.Math.IntervalArithmetic={Interval:function(t,e){return new s(t,e);},isInterval:function(t){return null!==t&&\"object\"==typeof t&&\"number\"==typeof t.lo&&\"number\"==typeof t.hi;},isSingleton:function(t){return t.lo===t.hi;},add:function(t,e){return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),new s(this.addLo(t.lo,e.lo),this.addHi(t.hi,e.hi));},sub:function(t,e){return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),new s(this.subLo(t.lo,e.hi),this.subHi(t.hi,e.lo));},mul:function(t,e){var r,o,n,a,h;return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),this.isEmpty(t)||this.isEmpty(e)?this.EMPTY.clone():(r=t.lo,o=t.hi,n=e.lo,a=e.hi,h=new s(),r<0?o>0?n<0?a>0?(h.lo=Math.min(this.mulLo(r,a),this.mulLo(o,n)),h.hi=Math.max(this.mulHi(r,n),this.mulHi(o,a))):(h.lo=this.mulLo(o,n),h.hi=this.mulHi(r,n)):a>0?(h.lo=this.mulLo(r,a),h.hi=this.mulHi(o,a)):(h.lo=0,h.hi=0):n<0?a>0?(h.lo=this.mulLo(r,a),h.hi=this.mulHi(r,n)):(h.lo=this.mulLo(o,a),h.hi=this.mulHi(r,n)):a>0?(h.lo=this.mulLo(r,a),h.hi=this.mulHi(o,n)):(h.lo=0,h.hi=0):o>0?n<0?a>0?(h.lo=this.mulLo(o,n),h.hi=this.mulHi(o,a)):(h.lo=this.mulLo(o,n),h.hi=this.mulHi(r,a)):a>0?(h.lo=this.mulLo(r,n),h.hi=this.mulHi(o,a)):(h.lo=0,h.hi=0):(h.lo=0,h.hi=0),h);},div:function(t,e){return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),this.isEmpty(t)||this.isEmpty(e)?this.EMPTY.clone():this.zeroIn(e)?0!==e.lo?0!==e.hi?this.divZero(t):this.divNegative(t,e.lo):0!==e.hi?this.divPositive(t,e.hi):this.EMPTY.clone():this.divNonZero(t,e);},positive:function(t){return new s(t.lo,t.hi);},negative:function(t){return i.isNumber(t)?new s(-t):new s(-t.hi,-t.lo);},isEmpty:function(t){return t.lo>t.hi;},isWhole:function(t){return t.lo===-1/0&&t.hi===1/0;},zeroIn:function(t){return this.hasValue(t,0);},hasValue:function(t,e){return!this.isEmpty(t)&&t.lo<=e&&e<=t.hi;},hasInterval:function(t,e){return!!this.isEmpty(t)||!this.isEmpty(e)&&e.lo<=t.lo&&t.hi<=e.hi;},intervalsOverlap:function(t,e){return!this.isEmpty(t)&&!this.isEmpty(e)&&(t.lo<=e.lo&&e.lo<=t.hi||e.lo<=t.lo&&t.lo<=e.hi);},divNonZero:function(t,e){var i=t.lo,r=t.hi,o=e.lo,n=e.hi,a=new s();return r<0?n<0?(a.lo=this.divLo(r,o),a.hi=this.divHi(i,n)):(a.lo=this.divLo(i,o),a.hi=this.divHi(r,n)):i<0?n<0?(a.lo=this.divLo(r,n),a.hi=this.divHi(i,n)):(a.lo=this.divLo(i,o),a.hi=this.divHi(r,o)):n<0?(a.lo=this.divLo(r,n),a.hi=this.divHi(i,o)):(a.lo=this.divLo(i,n),a.hi=this.divHi(r,o)),a;},divPositive:function(t,e){return 0===t.lo&&0===t.hi?t:this.zeroIn(t)?this.WHOLE:t.hi<0?new s(Number.NEGATIVE_INFINITY,this.divHi(t.hi,e)):new s(this.divLo(t.lo,e),Number.POSITIVE_INFINITY);},divNegative:function(t,e){return 0===t.lo&&0===t.hi?t:this.zeroIn(t)?this.WHOLE:t.hi<0?new s(this.divLo(t.hi,e),Number.POSITIVE_INFINITY):new s(Number.NEGATIVE_INFINITY,this.divHi(t.lo,e));},divZero:function(t){return 0===t.lo&&0===t.hi?t:this.WHOLE;},fmod:function(t,e){var r,o;return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),this.isEmpty(t)||this.isEmpty(e)?this.EMPTY.clone():(r=t.lo<0?e.lo:e.hi,o=t.lo/r,o=o<0?Math.ceil(o):Math.floor(o),this.sub(t,this.mul(e,new s(o))));},multiplicativeInverse:function(t){return i.isNumber(t)&&(t=this.Interval(t)),this.isEmpty(t)?this.EMPTY.clone():this.zeroIn(t)?0!==t.lo?0!==t.hi?this.WHOLE:new s(Number.NEGATIVE_INFINITY,this.divHi(1,t.lo)):0!==t.hi?new s(this.divLo(1,t.hi),Number.POSITIVE_INFINITY):this.EMPTY.clone():new s(this.divLo(1,t.hi),this.divHi(1,t.lo));},pow:function(t,e){var r,o;if(i.isNumber(t)&&(t=this.Interval(t)),this.isEmpty(t))return this.EMPTY.clone();if(this.isInterval(e)){if(!this.isSingleton(e))return this.EMPTY.clone();e=e.lo;}return 0===e?0===t.lo&&0===t.hi?this.EMPTY.clone():this.ONE.clone():e<0?this.pow(this.multiplicativeInverse(t),-e):e%1==0?t.hi<0?(r=this.powLo(-t.hi,e),o=this.powHi(-t.lo,e),1==(1&e)?new s(-o,-r):new s(r,o)):t.lo<0?1==(1&e)?new s(-this.powLo(-t.lo,e),this.powHi(t.hi,e)):new s(0,this.powHi(Math.max(-t.lo,t.hi),e)):new s(this.powLo(t.lo,e),this.powHi(t.hi,e)):(console.warn(\"power is not an integer, you should use nth-root instead, returning an empty interval\"),this.EMPTY.clone());},sqrt:function(t){return i.isNumber(t)&&(t=this.Interval(t)),this.nthRoot(t,2);},nthRoot:function(t,e){var r,o,n,a,h;if(i.isNumber(t)&&(t=this.Interval(t)),this.isEmpty(t)||e<0)return this.EMPTY.clone();if(this.isInterval(e)){if(!this.isSingleton(e))return this.EMPTY.clone();e=e.lo;}return r=1/e,t.hi<0?e%1==0&&1==(1&e)?(o=this.powHi(-t.lo,r),n=this.powLo(-t.hi,r),new s(-o,-n)):this.EMPTY.clone():t.lo<0?(a=this.powHi(t.hi,r),e%1==0&&1==(1&e)?(h=-this.powHi(-t.lo,r),new s(h,a)):new s(0,a)):new s(this.powLo(t.lo,r),this.powHi(t.hi,r));},exp:function(t){return i.isNumber(t)&&(t=this.Interval(t)),this.isEmpty(t)?this.EMPTY.clone():new s(this.expLo(t.lo),this.expHi(t.hi));},log:function(t){var e;return i.isNumber(t)&&(t=this.Interval(t)),this.isEmpty(t)?this.EMPTY.clone():(e=t.lo<=0?Number.NEGATIVE_INFINITY:this.logLo(t.lo),new s(e,this.logHi(t.hi)));},ln:function(t){return this.log(t);},log10:function(t){return this.isEmpty(t)?this.EMPTY.clone():this.div(this.log(t),this.log(new s(10,10)));},log2:function(t){return this.isEmpty(t)?this.EMPTY.clone():this.div(this.log(t),this.log(new s(2,2)));},hull:function(t,e){var i=this.isEmpty(t),r=this.isEmpty(e);return i&&r?this.EMPTY.clone():i?e.clone():r?t.clone():new s(Math.min(t.lo,e.lo),Math.max(t.hi,e.hi));},intersection:function(t,e){var i,r;return this.isEmpty(t)||this.isEmpty(e)?this.EMPTY.clone():(i=Math.max(t.lo,e.lo),r=Math.min(t.hi,e.hi),i<=r?new s(i,r):this.EMPTY.clone());},union:function(t,e){if(!this.intervalsOverlap(t,e))throw new Error(\"Interval#unions do not overlap\");return new s(Math.min(t.lo,e.lo),Math.max(t.hi,e.hi));},difference:function(t,e){if(this.isEmpty(t)||this.isWhole(e))return this.EMPTY.clone();if(this.intervalsOverlap(t,e)){if(t.lo<e.lo&&e.hi<t.hi)throw new Error(\"Interval.difference: difference creates multiple intervals\");return e.lo<=t.lo&&e.hi===1/0||e.hi>=t.hi&&e.lo===-1/0?this.EMPTY.clone():e.lo<=t.lo?new s().halfOpenLeft(e.hi,t.hi):new s().halfOpenRight(t.lo,e.lo);}return t.clone();},width:function(t){return this.isEmpty(t)?0:this.subHi(t.hi,t.lo);},abs:function(t){return i.isNumber(t)&&(t=this.Interval(t)),this.isEmpty(t)?this.EMPTY.clone():t.lo>=0?t.clone():t.hi<=0?this.negative(t):new s(0,Math.max(-t.lo,t.hi));},max:function(t,e){var i=this.isEmpty(t),r=this.isEmpty(e);return i&&r?this.EMPTY.clone():i?e.clone():r?t.clone():new s(Math.max(t.lo,e.lo),Math.max(t.hi,e.hi));},min:function(t,e){var i=this.isEmpty(t),r=this.isEmpty(e);return i&&r?this.EMPTY.clone():i?e.clone():r?t.clone():new s(Math.min(t.lo,e.lo),Math.min(t.hi,e.hi));},onlyInfinity:function(t){return!isFinite(t.lo)&&t.lo===t.hi;},_handleNegative:function(t){var e;return t.lo<0&&(t.lo===-1/0?(t.lo=0,t.hi=1/0):(e=Math.ceil(-t.lo/this.piTwiceLow),t.lo+=this.piTwiceLow*e,t.hi+=this.piTwiceLow*e)),t;},cos:function(t){var e,i,r,o,n,a,h,l;return this.isEmpty(t)||this.onlyInfinity(t)?this.EMPTY.clone():(e=new s().set(t.lo,t.hi),this._handleNegative(e),i=this.PI_TWICE,r=this.fmod(e,i),this.width(r)>=i.lo?new s(-1,1):r.lo>=this.piHigh?(o=this.cos(this.sub(r,this.PI)),this.negative(o)):(n=r.lo,a=r.hi,h=this.cosLo(a),l=this.cosHi(n),a<=this.piLow?new s(h,l):a<=i.lo?new s(-1,Math.max(h,l)):new s(-1,1)));},sin:function(t){return this.isEmpty(t)||this.onlyInfinity(t)?this.EMPTY.clone():this.cos(this.sub(t,this.PI_HALF));},tan:function(t){var e,i,r;return this.isEmpty(t)||this.onlyInfinity(t)?this.EMPTY.clone():(e=new s().set(t.lo,t.hi),this._handleNegative(e),r=this.PI,i=this.fmod(e,r),i.lo>=this.piHalfLow&&(i=this.sub(i,r)),i.lo<=-this.piHalfLow||i.hi>=this.piHalfLow?this.WHOLE.clone():new s(this.tanLo(i.lo),this.tanHi(i.hi)));},asin:function(t){var e,i;return this.isEmpty(t)||t.hi<-1||t.lo>1?this.EMPTY.clone():(e=t.lo<=-1?-this.piHalfHigh:this.asinLo(t.lo),i=t.hi>=1?this.piHalfHigh:this.asinHi(t.hi),new s(e,i));},acos:function(t){var e,i;return this.isEmpty(t)||t.hi<-1||t.lo>1?this.EMPTY.clone():(e=t.hi>=1?0:this.acosLo(t.hi),i=t.lo<=-1?this.piHigh:this.acosHi(t.lo),new s(e,i));},atan:function(t){return this.isEmpty(t)?this.EMPTY.clone():new s(this.atanLo(t.lo),this.atanHi(t.hi));},sinh:function(t){return this.isEmpty(t)?this.EMPTY.clone():new s(this.sinhLo(t.lo),this.sinhHi(t.hi));},cosh:function(t){return this.isEmpty(t)?this.EMPTY.clone():t.hi<0?new s(this.coshLo(t.hi),this.coshHi(t.lo)):t.lo>=0?new s(this.coshLo(t.lo),this.coshHi(t.hi)):new s(1,this.coshHi(-t.lo>t.hi?t.lo:t.hi));},tanh:function(t){return this.isEmpty(t)?this.EMPTY.clone():new s(this.tanhLo(t.lo),this.tanhHi(t.hi));},equal:function(t,e){return this.isEmpty(t)?this.isEmpty(e):!this.isEmpty(e)&&t.lo===e.lo&&t.hi===e.hi;},notEqual:function(t,e){return this.isEmpty(t)?!this.isEmpty(e):this.isEmpty(e)||t.hi<e.lo||t.lo>e.hi;},lt:function(t,e){return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),!this.isEmpty(t)&&!this.isEmpty(e)&&t.hi<e.lo;},gt:function(t,e){return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),!this.isEmpty(t)&&!this.isEmpty(e)&&t.lo>e.hi;},leq:function(t,e){return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),!this.isEmpty(t)&&!this.isEmpty(e)&&t.hi<=e.lo;},geq:function(t,e){return i.isNumber(t)&&(t=this.Interval(t)),i.isNumber(e)&&(e=this.Interval(e)),!this.isEmpty(t)&&!this.isEmpty(e)&&t.lo>=e.hi;},piLow:3.141592653589793,piHigh:3.1415926535897936,piHalfLow:1.5707963267948966,piHalfHigh:1.5707963267948968,piTwiceLow:6.283185307179586,piTwiceHigh:6.283185307179587,identity:function(t){return t;},_prev:function(t){return t===1/0?t:this.nextafter(t,-1/0);},_next:function(t){return t===-1/0?t:this.nextafter(t,1/0);},prev:function(t){return this._prev(t);},next:function(t){return this._next(t);},toInteger:function(t){return t<0?Math.ceil(t):Math.floor(t);},addLo:function(t,e){return this.prev(t+e);},addHi:function(t,e){return this.next(t+e);},subLo:function(t,e){return this.prev(t-e);},subHi:function(t,e){return this.next(t-e);},mulLo:function(t,e){return this.prev(t*e);},mulHi:function(t,e){return this.next(t*e);},divLo:function(t,e){return this.prev(t/e);},divHi:function(t,e){return this.next(t/e);},intLo:function(t){return this.toInteger(this.prev(t));},intHi:function(t){return this.toInteger(this.next(t));},logLo:function(t){return this.prev(Math.log(t));},logHi:function(t){return this.next(Math.log(t));},expLo:function(t){return this.prev(Math.exp(t));},expHi:function(t){return this.next(Math.exp(t));},sinLo:function(t){return this.prev(Math.sin(t));},sinHi:function(t){return this.next(Math.sin(t));},cosLo:function(t){return this.prev(Math.cos(t));},cosHi:function(t){return this.next(Math.cos(t));},tanLo:function(t){return this.prev(Math.tan(t));},tanHi:function(t){return this.next(Math.tan(t));},asinLo:function(t){return this.prev(Math.asin(t));},asinHi:function(t){return this.next(Math.asin(t));},acosLo:function(t){return this.prev(Math.acos(t));},acosHi:function(t){return this.next(Math.acos(t));},atanLo:function(t){return this.prev(Math.atan(t));},atanHi:function(t){return this.next(Math.atan(t));},sinhLo:function(t){return this.prev(e.sinh(t));},sinhHi:function(t){return this.next(e.sinh(t));},coshLo:function(t){return this.prev(e.cosh(t));},coshHi:function(t){return this.next(e.cosh(t));},tanhLo:function(t){return this.prev(e.tanh(t));},tanhHi:function(t){return this.next(e.tanh(t));},sqrtLo:function(t){return this.prev(Math.sqrt(t));},sqrtHi:function(t){return this.next(Math.sqrt(t));},powLo:function(t,e){var i;if(e%1!=0)return this.prev(Math.pow(t,e));for(i=1==(1&e)?t:1,e>>=1;e>0;)t=this.mulLo(t,t),1==(1&e)&&(i=this.mulLo(t,i)),e>>=1;return i;},powHi:function(t,e){var i;if(e%1!=0)return this.next(Math.pow(t,e));for(i=1==(1&e)?t:1,e>>=1;e>0;)t=this.mulHi(t,t),1==(1&e)&&(i=this.mulHi(t,i)),e>>=1;return i;},disable:function(){this.next=this.prev=this.identity;},enable:function(){this.prev=function(t){return this._prev(t);},this.next=function(t){return this._next(t);};},SMALLEST_DENORM:Math.pow(2,-1074),UINT_MAX:-1>>>0,nextafter:function(t,e){var i,s;return isNaN(t)||isNaN(e)?NaN:t===e?t:0===t?e<0?-this.SMALLEST_DENORM:this.SMALLEST_DENORM:(s=r.hi(t),i=r.lo(t),e>t==t>0?i===this.UINT_MAX?(s+=1,i=0):i+=1:0===i?(i=this.UINT_MAX,s-=1):i-=1,r.pack(i,s));}},t.Math.IntervalArithmetic.PI=new s(e.IntervalArithmetic.piLow,e.IntervalArithmetic.piHigh),t.Math.IntervalArithmetic.PI_HALF=new s(e.IntervalArithmetic.piHalfLow,e.IntervalArithmetic.piHalfHigh),t.Math.IntervalArithmetic.PI_TWICE=new s(e.IntervalArithmetic.piTwiceLow,e.IntervalArithmetic.piTwiceHigh),t.Math.IntervalArithmetic.ZERO=new s(0),t.Math.IntervalArithmetic.ONE=new s(1),t.Math.IntervalArithmetic.WHOLE=new s().setWhole(),t.Math.IntervalArithmetic.EMPTY=new s().setEmpty(),t.Math.IntervalArithmetic;}),define(\"math/extrapolate\",[\"math/math\"],function(t){\"use strict\";return t.Extrapolate={upper:15,infty:1e4,wynnEps:function(t,e,i){var r,s,o,n,a,h;if(i[e]=t,0===e)h=t;else{for(n=0,s=e;s>0;s--)o=n,n=i[s-1],a=i[s]-n,Math.abs(a)<=1e-15?i[s-1]=1e20:(r=1,i[s-1]=o*r+1/a);h=i[e%2];}return h;},aitken:function(t,e,i){var r,s,o,n,a,h;if(i[e]=t,e<2)r=t;else{for(n=e/2,a=1;a<=n;a++)h=e-2*a,s=i[h+2]-2*i[h+1]+i[h],Math.abs(s)<1e-15?i[h]=1e20:(o=i[h]-i[h+1],i[h]-=o*o/s);r=i[e%2];}return r;},brezinski:function(t,e,i){var r,s,o,n,a,h,l,c;if(i[e]=t,e<3)r=t;else{for(h=e/3,c=e,l=1;l<=h;l++)c-=3,o=i[c+1]-i[c],n=i[c+2]-i[c+1],a=i[c+3]-i[c+2],s=a*(n-o)-o*(a-n),Math.abs(s)<1e-15?i[c]=1e20:i[c]=i[c+1]-o*n*(a-n)/s;r=i[e%3];}return r;},iteration:function(t,e,i,r,s){var o,n,a,h,l=NaN,c=[],d=\"finite\",u=e;for(s=s||0,o=1;o<=this.upper;o++){if(u=0===s?e/(o+1):.5*u,n=i(t+u,!0),a=this[r](n,o-1,c),isNaN(a)){d=\"NaN\";break;}if(0!==n&&a/n>this.infty){l=a,d=\"infinite\";break;}if(h=a-l,Math.abs(h)<1e-7)break;l=a;}return[l,d,1-(o-1)/this.upper];},levin:function(t,e,i,r,s,o){var n,a,h,l;if(l=1/(r+e),s[e]=t/i,o[e]=1/i,e>0&&(s[e-1]=s[e]-s[e-1],o[e-1]=o[e]-o[e-1],e>1))for(h=(r+e-1)*l,n=2;n<=e;n++)a=(r+e-n)*Math.pow(h,n-2)*l,s[e-n]=s[e-n+1]-a*s[e-n],o[e-n]=o[e-n+1]-a*o[e-n],l*=h;return Math.abs(o[0])<1e-15?1e20:s[0]/o[0];},iteration_levin:function(t,e,i,r){var s,o,n,a,h,l,c,d=NaN,u=[],p=[],f=\"finite\",m=e,g=\"u\";for(r=r||0,a=i(t+e,!0),s=1;s<=this.upper;s++){if(m=0===r?e/(s+1):.5*m,o=i(t+m,!0),h=o-a,g=Math.abs(h)<1?\"u\":\"t\",c=\"u\"===g?(1+s)*h:h,a=o,n=this.levin(o,s-1,c,1,u,p),l=n-d,isNaN(n)){f=\"NaN\";break;}if(0!==o&&n/o>this.infty){d=n,f=\"infinite\";break;}if(Math.abs(l)<1e-7)break;d=n;}return[d,f,1-(s-1)/this.upper];},limit:function(t,e,i){return this.iteration_levin(t,e,i,0);}},t.Extrapolate;}),define(\"math/qdt\",[\"math/math\",\"utils/type\"],function(t,e){\"use strict\";var i=function(t){this.capacity=10,this.points=[],this.xlb=t[0],this.xub=t[2],this.ylb=t[3],this.yub=t[1],this.northWest=null,this.northEast=null,this.southEast=null,this.southWest=null;};return e.extend(i.prototype,{contains:function(t,e){return this.xlb<t&&t<=this.xub&&this.ylb<e&&e<=this.yub;},insert:function(t){return!!this.contains(t.usrCoords[1],t.usrCoords[2])&&(this.points.length<this.capacity?(this.points.push(t),!0):(null===this.northWest&&this.subdivide(),!!this.northWest.insert(t)||!!this.northEast.insert(t)||!!this.southEast.insert(t)||!!this.southWest.insert(t)));},subdivide:function(){var t,e=this.points.length,r=this.xlb+(this.xub-this.xlb)/2,s=this.ylb+(this.yub-this.ylb)/2;for(this.northWest=new i([this.xlb,this.yub,r,s]),this.northEast=new i([r,this.yub,this.xub,s]),this.southEast=new i([this.xlb,s,r,this.ylb]),this.southWest=new i([r,s,this.xub,this.ylb]),t=0;t<e;t+=1)this.northWest.insert(this.points[t]),this.northEast.insert(this.points[t]),this.southEast.insert(this.points[t]),this.southWest.insert(this.points[t]);},_query:function(t,e){var i;if(this.contains(t,e)){if(null===this.northWest)return this;if(i=this.northWest._query(t,e))return i;if(i=this.northEast._query(t,e))return i;if(i=this.southEast._query(t,e))return i;if(i=this.southWest._query(t,e))return i;}return!1;},query:function(t,i){var r,s;return e.exists(i)?(r=t,s=i):(r=t.usrCoords[1],s=t.usrCoords[2]),this._query(r,s);}}),t.Quadtree=i,i;}),define(\"math/numerics\",[\"jxg\",\"utils/type\",\"math/math\"],function(t,e,i){\"use strict\";var r={rk4:{s:4,A:[[0,0,0,0],[.5,0,0,0],[0,.5,0,0],[0,0,1,0]],b:[1/6,1/3,1/3,1/6],c:[0,.5,.5,1]},heun:{s:2,A:[[0,0],[1,0]],b:[.5,.5],c:[0,1]},euler:{s:1,A:[[0]],b:[1],c:[0]}};return i.Numerics={Gauss:function(t,r){var s,o,n,a,h,l=i.eps,c=t.length>0?t[0].length:0;if(c!==r.length||c!==t.length)throw new Error(\"JXG.Math.Numerics.Gauss: Dimensions don't match. A must be a square matrix and b must be of the same length as A.\");for(a=[],h=r.slice(0,c),s=0;s<c;s++)a[s]=t[s].slice(0,c);for(o=0;o<c;o++){for(s=c-1;s>o;s--)if(Math.abs(a[s][o])>l)if(Math.abs(a[o][o])<l)e.swap(a,s,o),e.swap(h,s,o);else for(a[s][o]/=a[o][o],h[s]-=a[s][o]*h[o],n=o+1;n<c;n++)a[s][n]-=a[s][o]*a[o][n];if(Math.abs(a[o][o])<l)throw new Error(\"JXG.Math.Numerics.Gauss(): The given matrix seems to be singular.\");}return this.backwardSolve(a,h,!0),h;},backwardSolve:function(t,e,i){var r,s,o,n,a;for(r=i?e:e.slice(0,e.length),s=t.length,o=t.length>0?t[0].length:0,n=s-1;n>=0;n--){for(a=o-1;a>n;a--)r[n]-=t[n][a]*r[a];r[n]/=t[n][n];}return r;},gaussBareiss:function(t){var e,r,s,o,n,a,h,l,c,d=i.eps;if((h=t.length)<=0)return 0;for(t[0].length<h&&(h=t[0].length),l=[],o=0;o<h;o++)l[o]=t[o].slice(0,h);for(r=1,s=1,e=0;e<h-1;e++){if(a=l[e][e],Math.abs(a)<d){for(o=e+1;o<h&&!(Math.abs(l[o][e])>=d);o++);if(o===h)return 0;for(n=e;n<h;n++)c=l[o][n],l[o][n]=l[e][n],l[e][n]=c;s=-s,a=l[e][e];}for(o=e+1;o<h;o++)for(n=e+1;n<h;n++)c=a*l[o][n]-l[o][e]*l[e][n],l[o][n]=c/r;r=a;}return s*l[h-1][h-1];},det:function(t){return 2===t.length&&2===t[0].length?t[0][0]*t[1][1]-t[1][0]*t[0][1]:this.gaussBareiss(t);},Jacobi:function(t){var e,r,s,o,n,a,h,l,c,d=i.eps*i.eps,u=0,p=t.length,f=[[0,0,0],[0,0,0],[0,0,0]],m=[[0,0,0],[0,0,0],[0,0,0]],g=0;for(e=0;e<p;e++){for(r=0;r<p;r++)f[e][r]=0,m[e][r]=t[e][r],u+=Math.abs(m[e][r]);f[e][e]=1;}if(1===p)return[m,f];if(u<=0)return[m,f];u/=p*p;do{for(l=0,c=0,r=1;r<p;r++)for(e=0;e<r;e++)if(o=Math.abs(m[e][r]),o>c&&(c=o),l+=o,o>=d){for(o=.5*Math.atan2(2*m[e][r],m[e][e]-m[r][r]),n=Math.sin(o),a=Math.cos(o),s=0;s<p;s++)h=m[s][e],m[s][e]=a*h+n*m[s][r],m[s][r]=-n*h+a*m[s][r],h=f[s][e],f[s][e]=a*h+n*f[s][r],f[s][r]=-n*h+a*f[s][r];for(m[e][e]=a*m[e][e]+n*m[r][e],m[r][r]=-n*m[e][r]+a*m[r][r],m[e][r]=0,s=0;s<p;s++)m[e][s]=m[s][e],m[r][s]=m[s][r];}g+=1;}while(Math.abs(l)/u>d&&g<2e3);return[m,f];},NewtonCotes:function(t,i,r){var s,o,n,a=0,h=r&&e.isNumber(r.number_of_nodes)?r.number_of_nodes:28,l={trapez:!0,simpson:!0,milne:!0},c=r&&r.integration_type&&l.hasOwnProperty(r.integration_type)&&l[r.integration_type]?r.integration_type:\"milne\",d=(t[1]-t[0])/h;switch(c){case\"trapez\":for(a=.5*(i(t[0])+i(t[1])),s=t[0],o=0;o<h-1;o++)s+=d,a+=i(s);a*=d;break;case\"simpson\":if(h%2>0)throw new Error(\"JSXGraph:  INT_SIMPSON requires config.number_of_nodes dividable by 2.\");for(n=h/2,a=i(t[0])+i(t[1]),s=t[0],o=0;o<n-1;o++)s+=2*d,a+=2*i(s);for(s=t[0]-d,o=0;o<n;o++)s+=2*d,a+=4*i(s);a*=d/3;break;default:if(h%4>0)throw new Error(\"JSXGraph: Error in INT_MILNE: config.number_of_nodes must be a multiple of 4\");for(n=.25*h,a=7*(i(t[0])+i(t[1])),s=t[0],o=0;o<n-1;o++)s+=4*d,a+=14*i(s);for(s=t[0]-3*d,o=0;o<n;o++)s+=4*d,a+=32*(i(s)+i(s+2*d));for(s=t[0]-2*d,o=0;o<n;o++)s+=4*d,a+=12*i(s);a*=2*d/45;}return a;},Romberg:function(t,i,r){var s,o,n,a,h,l,c,d,u=[],p=0,f=1/0,m=r&&e.isNumber(r.max_iterations)?r.max_iterations:20,g=r&&e.isNumber(r.eps)?r.eps:r.eps||1e-7;for(s=t[0],o=t[1],n=o-s,h=1,u[0]=.5*n*(i(s)+i(o)),l=0;l<m;++l){for(a=0,n*=.5,h*=2,d=1,c=1;c<h;c+=2)a+=i(s+c*n);for(u[l+1]=.5*u[l]+a*n,p=u[l+1],c=l-1;c>=0;--c)d*=4,u[c]=u[c+1]+(u[c+1]-u[c])/(d-1),p=u[c];if(Math.abs(p-f)<g*Math.abs(p))break;f=p;}return p;},GaussLegendre:function(t,i,r){var s,o,n,a,h,l,c,d,u=0,p=[],f=[],m=r&&e.isNumber(r.n)?r.n:12;if(m>18&&(m=18),p[2]=[.5773502691896257],f[2]=[1],p[4]=[.33998104358485626,.8611363115940526],f[4]=[.6521451548625461,.34785484513745385],p[6]=[.2386191860831969,.6612093864662645,.932469514203152],f[6]=[.46791393457269104,.3607615730481386,.17132449237917036],p[8]=[.1834346424956498,.525532409916329,.7966664774136267,.9602898564975363],f[8]=[.362683783378362,.31370664587788727,.22238103445337448,.10122853629037626],p[10]=[.14887433898163122,.4333953941292472,.6794095682990244,.8650633666889845,.9739065285171717],f[10]=[.29552422471475287,.26926671930999635,.21908636251598204,.1494513491505806,.06667134430868814],p[12]=[.1252334085114689,.3678314989981802,.5873179542866175,.7699026741943047,.9041172563704749,.9815606342467192],f[12]=[.24914704581340277,.2334925365383548,.20316742672306592,.16007832854334622,.10693932599531843,.04717533638651183],p[14]=[.10805494870734367,.31911236892788974,.5152486363581541,.6872929048116855,.827201315069765,.9284348836635735,.9862838086968123],f[14]=[.2152638534631578,.2051984637212956,.18553839747793782,.15720316715819355,.12151857068790319,.08015808715976021,.03511946033175186],p[16]=[.09501250983763744,.2816035507792589,.45801677765722737,.6178762444026438,.755404408355003,.8656312023878318,.9445750230732326,.9894009349916499],f[16]=[.1894506104550685,.18260341504492358,.16915651939500254,.14959598881657674,.12462897125553388,.09515851168249279,.062253523938647894,.027152459411754096],p[18]=[.0847750130417353,.2518862256915055,.41175116146284263,.5597708310739475,.6916870430603532,.8037049589725231,.8926024664975557,.9558239495713977,.9915651684209309],f[18]=[.1691423829631436,.16427648374583273,.15468467512626524,.14064291467065065,.12255520671147846,.10094204410628717,.07642573025488905,.0497145488949698,.02161601352648331],p[3]=[0,.7745966692414834],f[3]=[.8888888888888888,.5555555555555556],p[5]=[0,.5384693101056831,.906179845938664],f[5]=[.5688888888888889,.47862867049936647,.23692688505618908],p[7]=[0,.4058451513773972,.7415311855993945,.9491079123427585],f[7]=[.4179591836734694,.3818300505051189,.27970539148927664,.1294849661688697],p[9]=[0,.3242534234038089,.6133714327005904,.8360311073266358,.9681602395076261],f[9]=[.3302393550012598,.31234707704000286,.26061069640293544,.1806481606948574,.08127438836157441],p[11]=[0,.26954315595234496,.5190961292068118,.7301520055740494,.8870625997680953,.978228658146057],f[11]=[.2729250867779006,.26280454451024665,.23319376459199048,.18629021092773426,.1255803694649046,.05566856711617366],p[13]=[0,.2304583159551348,.44849275103644687,.6423493394403402,.8015780907333099,.9175983992229779,.9841830547185881],f[13]=[.2325515532308739,.22628318026289723,.2078160475368885,.17814598076194574,.13887351021978725,.09212149983772845,.04048400476531588],p[15]=[0,.20119409399743451,.3941513470775634,.5709721726085388,.7244177313601701,.8482065834104272,.937273392400706,.9879925180204854],f[15]=[.2025782419255613,.19843148532711158,.1861610000155622,.16626920581699392,.13957067792615432,.10715922046717194,.07036604748810812,.03075324199611727],p[17]=[0,.17848418149584785,.3512317634538763,.5126905370864769,.6576711592166907,.7815140038968014,.8802391537269859,.9506755217687678,.9905754753144174],f[17]=[.17944647035620653,.17656270536699264,.16800410215645004,.15404576107681028,.13513636846852548,.11188384719340397,.08503614831717918,.0554595293739872,.02414830286854793],s=t[0],o=t[1],a=m+1>>1,c=p[m],d=f[m],l=.5*(o-s),h=.5*(o+s),!0&m)for(u=d[0]*i(h),n=1;n<a;++n)u+=d[n]*(i(h+l*c[n])+i(h-l*c[n]));else for(u=0,n=0;n<a;++n)u+=d[n]*(i(h+l*c[n])+i(h-l*c[n]));return l*u;},_rescale_error:function(t,e,i){var r,s;return t=Math.abs(t),0!==i&&0!==t&&(r=Math.pow(200*t/i,1.5),t=r<1?i*r:i),e>2.0041683600089728e-294&&(s=1.1102230246251565e-14*e)>t&&(t=s),t;},_gaussKronrod:function(t,e,i,r,s,o,n){var a,h,l,c,d,u,p,f,m,g=t[0],b=t[1],v=.5*(g+b),y=.5*(b-g),C=Math.abs(y),_=e(v),P=0,E=_*o[i-1],x=Math.abs(E),S=0,O=0,w=0,T=[],N=[];for(i%2==0&&(P=_*s[i/2-1]),a=Math.floor((i-1)/2),l=0;l<a;l++)c=2*l+1,d=y*r[c],u=e(v-d),p=e(v+d),f=u+p,T[c]=u,N[c]=p,P+=s[l]*f,E+=o[c]*f,x+=o[c]*(Math.abs(u)+Math.abs(p));for(a=Math.floor(i/2),l=0;l<a;l++)m=2*l,d=y*r[m],u=e(v-d),p=e(v+d),T[m]=u,N[m]=p,E+=o[m]*(u+p),x+=o[m]*(Math.abs(u)+Math.abs(p));for(O=.5*E,S=o[i-1]*Math.abs(_-O),l=0;l<i-1;l++)S+=o[l]*(Math.abs(T[l]-O)+Math.abs(N[l]-O));return w=(E-P)*y,E*=y,x*=C,S*=C,h=E,n.abserr=this._rescale_error(w,x,S),n.resabs=x,n.resasc=S,h;},GaussKronrod15:function(t,e,i){var r=[.9914553711208126,.9491079123427585,.8648644233597691,.7415311855993945,.5860872354676911,.4058451513773972,.20778495500789848,0],s=[.1294849661688697,.27970539148927664,.3818300505051189,.4179591836734694],o=[.022935322010529224,.06309209262997856,.10479001032225019,.14065325971552592,.1690047266392679,.19035057806478542,.20443294007529889,.20948214108472782];return this._gaussKronrod(t,e,8,r,s,o,i);},GaussKronrod21:function(t,e,i){var r=[.9956571630258081,.9739065285171717,.9301574913557082,.8650633666889845,.7808177265864169,.6794095682990244,.5627571346686047,.4333953941292472,.2943928627014602,.14887433898163122,0],s=[.06667134430868814,.1494513491505806,.21908636251598204,.26926671930999635,.29552422471475287],o=[.011694638867371874,.032558162307964725,.054755896574351995,.07503967481091996,.0931254545836976,.10938715880229764,.12349197626206584,.13470921731147334,.14277593857706009,.14773910490133849,.1494455540029169];return this._gaussKronrod(t,e,11,r,s,o,i);},GaussKronrod31:function(t,e,i){var r=[.9980022986933971,.9879925180204854,.9677390756791391,.937273392400706,.8972645323440819,.8482065834104272,.790418501442466,.7244177313601701,.650996741297417,.5709721726085388,.4850818636402397,.3941513470775634,.29918000715316884,.20119409399743451,.1011420669187175,0],s=[.03075324199611727,.07036604748810812,.10715922046717194,.13957067792615432,.16626920581699392,.1861610000155622,.19843148532711158,.2025782419255613],o=[.005377479872923349,.015007947329316122,.02546084732671532,.03534636079137585,.04458975132476488,.05348152469092809,.06200956780067064,.06985412131872826,.07684968075772038,.08308050282313302,.08856444305621176,.09312659817082532,.09664272698362368,.09917359872179196,.10076984552387559,.10133000701479154];return this._gaussKronrod(t,e,16,r,s,o,i);},_workspace:function(t,e){return{limit:e,size:0,nrmax:0,i:0,alist:[t[0]],blist:[t[1]],rlist:[0],elist:[0],order:[0],level:[0],qpsrt:function(){var t,e,i,r,s,o=this.size-1,n=this.limit,a=this.nrmax,h=this.order[a];if(o<2)return this.order[0]=0,this.order[1]=1,void(this.i=h);for(t=this.elist[h];a>0&&t>this.elist[this.order[a-1]];)this.order[a]=this.order[a-1],a--;for(s=o<n/2+2?o:n-o+1,i=a+1;i<s&&t<this.elist[this.order[i]];)this.order[i-1]=this.order[i],i++;for(this.order[i-1]=h,e=this.elist[o],r=s-1;r>i-2&&e>=this.elist[this.order[r]];)this.order[r+1]=this.order[r],r--;this.order[r+1]=o,h=this.order[a],this.i=h,this.nrmax=a;},set_initial_result:function(t,e){this.size=1,this.rlist[0]=t,this.elist[0]=e;},update:function(t,e,i,r,s,o,n,a){var h=this.i,l=this.size,c=this.level[this.i]+1;a>r?(this.alist[h]=s,this.rlist[h]=n,this.elist[h]=a,this.level[h]=c,this.alist[l]=t,this.blist[l]=e,this.rlist[l]=i,this.elist[l]=r,this.level[l]=c):(this.blist[h]=e,this.rlist[h]=i,this.elist[h]=r,this.level[h]=c,this.alist[l]=s,this.blist[l]=o,this.rlist[l]=n,this.elist[l]=a,this.level[l]=c),this.size++,c>this.maximum_level&&(this.maximum_level=c),this.qpsrt();},retrieve:function(){var t=this.i;return{a:this.alist[t],b:this.blist[t],r:this.rlist[t],e:this.elist[t]};},sum_results:function(){var t,e=this.size,i=0;for(t=0;t<e;t++)i+=this.rlist[t];return i;},subinterval_too_small:function(t,e,i){var r=1.0000000000000222*(Math.abs(e)+2.2250738585072014e-305);return Math.abs(t)<=r&&Math.abs(i)<=r;}};},Qag:function(r,s,o){var n,a,h,l,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O=this._workspace(r,1e3),w=o&&e.isNumber(o.limit)?o.limit:15,T=o&&e.isNumber(o.epsrel)?o.epsrel:1e-7,N=o&&e.isNumber(o.epsabs)?o.epsabs:1e-7,M=o&&e.isFunction(o.q)?o.q:this.GaussKronrod15,A={},R=0,L=0,k=0,B=0,I=0,Y=0,D=0,j=0,X=0,U=0;if(w>O.limit&&t.warn(\"iteration limit exceeds available workspace\"),N<=0&&(T<50*i.eps||T<5e-29)&&t.warn(\"tolerance cannot be acheived with given epsabs and epsrel\"),h=M.apply(this,[r,s,A]),l=A.abserr,c=A.resabs,d=A.resasc,O.set_initial_result(h,l),u=Math.max(N,T*Math.abs(h)),p=1.1102230246251565e-14*c,l<=p&&l>u)return h,t.warn(\"cannot reach tolerance because of roundoff error on first attempt\"),-1/0;if(l<=u&&l!==d||0===l)return h;if(1===w)return h,t.warn(\"a maximum of one iteration was insufficient\"),-1/0;n=h,a=l,R=1;do{I=0,Y=0,D=0,j=0,X=0,U=0,x=O.retrieve(),v=x.a,y=x.b,C=x.r,_=x.e,f=v,m=.5*(v+y),g=m,b=y,I=M.apply(this,[[f,m],s,A]),j=A.abserr,P=A.resasc,Y=M.apply(this,[[g,b],s,A]),X=A.abserr,E=A.resasc,D=I+Y,U=j+X,a+=U-_,n+=D-C,P!==j&&E!==X&&(S=C-D,Math.abs(S)<=1e-5*Math.abs(D)&&U>=.99*_&&L++,R>=10&&U>_&&k++),u=Math.max(N,T*Math.abs(n)),a>u&&((L>=6||k>=20)&&(B=2),O.subinterval_too_small(f,g,b)&&(B=3)),O.update(f,m,I,j,g,b,Y,X),x=O.retrieve(),v=x.a_i,y=x.b_i,C=x.r_i,_=x.e_i,R++;}while(R<w&&!B&&a>u);return O.sum_results();},I:function(t,e){return this.Qag(t,e,{q:this.GaussKronrod15,limit:15,epsrel:1e-7,epsabs:1e-7});},Newton:function(t,r,s){var o,n=0,a=i.eps,h=t.apply(s,[r]);for(e.isArray(r)&&(r=r[0]);n<50&&Math.abs(h)>a;)o=this.D(t,s)(r),Math.abs(o)>a?r-=h/o:r+=.2*Math.random()-1,h=t.apply(s,[r]),n+=1;return r;},root:function(t,e,i){return this.chandrupatla(t,e,i);},generalizedNewton:function(t,e,r,s){var o,n,a,h,l,c,d,u,p,f,m,g,b,v,y=0;for(this.generalizedNewton.t1memo?(o=this.generalizedNewton.t1memo,n=this.generalizedNewton.t2memo):(o=r,n=s),u=t.X(o)-e.X(n),p=t.Y(o)-e.Y(n),f=u*u+p*p,m=this.D(t.X,t),g=this.D(e.X,e),b=this.D(t.Y,t),v=this.D(e.Y,e);f>i.eps&&y<10;)a=m(o),h=-g(n),l=b(o),c=-v(n),d=a*c-h*l,o-=(c*u-h*p)/d,n-=(a*p-l*u)/d,u=t.X(o)-e.X(n),p=t.Y(o)-e.Y(n),f=u*u+p*p,y+=1;return this.generalizedNewton.t1memo=o,this.generalizedNewton.t2memo=n,Math.abs(o)<Math.abs(n)?[t.X(o),t.Y(o)]:[e.X(n),e.Y(n)];},Neville:function(t){var e=[],r=function(r){return function(s,o){var n,a,h,l=i.binomial,c=t.length,d=c-1,u=0,p=0;if(!o)for(h=1,n=0;n<c;n++)e[n]=l(d,n)*h,h*=-1;for(a=s,n=0;n<c;n++){if(0===a)return t[n][r]();h=e[n]/a,a-=1,u+=t[n][r]()*h,p+=h;}return u/p;};};return[r(\"X\"),r(\"Y\"),0,function(){return t.length-1;}];},splineDef:function(t,e){var i,r,s,o=Math.min(t.length,e.length),n=[],a=[],h=[],l=[],c=[],d=[];if(2===o)return[0,0];for(r=0;r<o;r++)i={X:t[r],Y:e[r]},h.push(i);for(h.sort(function(t,e){return t.X-e.X;}),r=0;r<o;r++)t[r]=h[r].X,e[r]=h[r].Y;for(r=0;r<o-1;r++)l.push(t[r+1]-t[r]);for(r=0;r<o-2;r++)c.push(6*(e[r+2]-e[r+1])/l[r+1]-6*(e[r+1]-e[r])/l[r]);for(n.push(2*(l[0]+l[1])),a.push(c[0]),r=0;r<o-3;r++)s=l[r+1]/n[r],n.push(2*(l[r+1]+l[r+2])-s*l[r+1]),a.push(c[r+1]-s*a[r]);for(d[o-3]=a[o-3]/n[o-3],r=o-4;r>=0;r--)d[r]=(a[r]-l[r+1]*d[r+1])/n[r];for(r=o-3;r>=0;r--)d[r+1]=d[r];return d[0]=0,d[o-1]=0,d;},splineEval:function(t,i,r,s){var o,n,a,h,l,c,d,u=Math.min(i.length,r.length),p=1,f=!1,m=[];for(e.isArray(t)?(p=t.length,f=!0):t=[t],o=0;o<p;o++){if(t[o]<i[0]||i[o]>i[u-1])return NaN;for(n=1;n<u&&!(t[o]<=i[n]);n++);n-=1,a=r[n],h=(r[n+1]-r[n])/(i[n+1]-i[n])-(i[n+1]-i[n])/6*(s[n+1]+2*s[n]),l=s[n]/2,c=(s[n+1]-s[n])/(6*(i[n+1]-i[n])),d=t[o]-i[n],m.push(a+(h+(l+c*d)*d)*d);}return f?m:m[0];},generatePolynomialTerm:function(t,e,i,r){var s,o=[];for(s=e;s>=0;s--)o=o.concat([\"(\",t[s].toPrecision(r),\")\"]),s>1?o=o.concat([\"*\",i,\"<sup>\",s,\"<\",\"/sup> + \"]):1===s&&(o=o.concat([\"*\",i,\" + \"]));return o.join(\"\");},lagrangePolynomial:function(t){var e=[],i=function(i,r){var s,o,n,a,h=t.length,l=0,c=0;if(!r)for(s=0;s<h;s++){for(e[s]=1,n=t[s].X(),o=0;o<h;o++)o!==s&&(e[s]*=n-t[o].X());e[s]=1/e[s];}for(s=0;s<h;s++){if(n=t[s].X(),i===n)return t[s].Y();a=e[s]/(i-n),c+=a,l+=a*t[s].Y();}return l/c;};return i.getTerm=function(){return\"\";},i;},_initCubicPoly:function(t,e,i,r){return[t,i,-3*t+3*e-2*i-r,2*t-2*e+i+r];},CardinalSpline:function(t,r,s){var o,n,a,h,l=[],c=this;return h=e.isFunction(r)?r:function(){return r;},void 0===s&&(s=\"uniform\"),n=function(e){return function(r,n){var d,u,p,f,m,g,b,v,y,C;if(t.length<2)return NaN;if(!n)for(a=h(),p={X:function(){return 2*t[0].X()-t[1].X();},Y:function(){return 2*t[0].Y()-t[1].Y();},Dist:function(t){var e=this.X()-t.X(),i=this.Y()-t.Y();return Math.sqrt(e*e+i*i);}},f={X:function(){return 2*t[t.length-1].X()-t[t.length-2].X();},Y:function(){return 2*t[t.length-1].Y()-t[t.length-2].Y();},Dist:function(t){var e=this.X()-t.X(),i=this.Y()-t.Y();return Math.sqrt(e*e+i*i);}},o=[p].concat(t,[f]),C=o.length,l[e]=[],d=0;d<C-3;d++)\"centripetal\"===s?(b=o[d].Dist(o[d+1]),v=o[d+2].Dist(o[d+1]),y=o[d+3].Dist(o[d+2]),b=Math.sqrt(b),v=Math.sqrt(v),y=Math.sqrt(y),v<i.eps&&(v=1),b<i.eps&&(b=v),y<i.eps&&(y=v),m=(o[d+1][e]()-o[d][e]())/b-(o[d+2][e]()-o[d][e]())/(v+b)+(o[d+2][e]()-o[d+1][e]())/v,g=(o[d+2][e]()-o[d+1][e]())/v-(o[d+3][e]()-o[d+1][e]())/(y+v)+(o[d+3][e]()-o[d+2][e]())/y,m*=v,g*=v,l[e][d]=c._initCubicPoly(o[d+1][e](),o[d+2][e](),a*m,a*g)):l[e][d]=c._initCubicPoly(o[d+1][e](),o[d+2][e](),a*(o[d+2][e]()-o[d][e]()),a*(o[d+3][e]()-o[d+1][e]()));return isNaN(r)?NaN:(C=t.length,r<=0?t[0][e]():r>=C?t[C-1][e]():(d=Math.floor(r))===r?t[d][e]():(r-=d,u=l[e][d],void 0===u?NaN:((u[3]*r+u[2])*r+u[1])*r+u[0]));};},[n(\"X\"),n(\"Y\"),0,function(){return t.length-1;}];},CatmullRomSpline:function(t,e){return this.CardinalSpline(t,.5,e);},regressionPolynomial:function(t,r,s){var o,n,a,h,l,c,d=\"\";if(e.isPoint(t)&&e.isFunction(t.Value))n=function(){return t.Value();};else if(e.isFunction(t))n=t;else{if(!e.isNumber(t))throw new Error(\"JSXGraph: Can't create regressionPolynomial from degree of type'\"+typeof t+\"'.\");n=function(){return t;};}if(3===arguments.length&&e.isArray(r)&&e.isArray(s))l=0;else if(2===arguments.length&&e.isArray(r)&&r.length>0&&e.isPoint(r[0]))l=1;else{if(!(2===arguments.length&&e.isArray(r)&&r.length>0&&r[0].usrCoords&&r[0].scrCoords))throw new Error(\"JSXGraph: Can't create regressionPolynomial. Wrong parameters.\");l=2;}return c=function(t,c){var u,p,f,m,g,b,v,y,C,_=r.length;if(C=Math.floor(n()),!c){if(1===l)for(a=[],h=[],u=0;u<_;u++)a[u]=r[u].X(),h[u]=r[u].Y();if(2===l)for(a=[],h=[],u=0;u<_;u++)a[u]=r[u].usrCoords[1],h[u]=r[u].usrCoords[2];if(0===l)for(a=[],h=[],u=0;u<_;u++)e.isFunction(r[u])?a.push(r[u]()):a.push(r[u]),e.isFunction(s[u])?h.push(s[u]()):h.push(s[u]);for(f=[],p=0;p<_;p++)f.push([1]);for(u=1;u<=C;u++)for(p=0;p<_;p++)f[p][u]=f[p][u-1]*a[p];g=h,m=i.transpose(f),b=i.matMatMult(m,f),v=i.matVecMult(m,g),o=i.Numerics.Gauss(b,v),d=i.Numerics.generatePolynomialTerm(o,C,\"x\",3);}for(y=o[C],u=C-1;u>=0;u--)y=y*t+o[u];return y;},c.getTerm=function(){return d;},c;},bezier:function(t){var e,i,r=function(r){return function(s,o){var n=3*Math.floor(s),a=s%1,h=1-a;return o||(i=3*Math.floor((t.length-1)/3),e=Math.floor(i/3)),s<0?t[0][r]():s>=e?t[i][r]():isNaN(s)?NaN:h*h*(h*t[n][r]()+3*a*t[n+1][r]())+(3*h*t[n+2][r]()+a*t[n+3][r]())*a*a;};};return[r(\"X\"),r(\"Y\"),0,function(){return Math.floor(t.length/3);}];},bspline:function(t,e){var i,r=function(t,e){var i,r=[];for(i=0;i<t+e+1;i++)r[i]=i<e?0:i<=t?i-e+1:t-e+2;return r;},s=function(t,e,i,r){var s,o,n,a,h,l=[];for(e[r]<=t&&t<e[r+1]?l[r]=1:l[r]=0,s=2;s<=i;s++)for(o=r-s+1;o<=r;o++)n=o<=r-s+1||o<0?0:l[o],a=o>=r?0:l[o+1],h=e[o+s-1]-e[o],l[o]=0===h?0:(t-e[o])/h*n,0!==(h=e[o+s]-e[o+1])&&(l[o]+=(e[o+s]-t)/h*a);return l;},o=function(o){return function(n,a){var h,l,c,d=[],u=t.length,p=u-1,f=e;if(p<=0)return NaN;if(p+2<=f&&(f=p+1),n<=0)return t[0][o]();if(n>=p-f+2)return t[p][o]();for(c=Math.floor(n)+f-1,i=r(p,f),d=s(n,i,f,c),h=0,l=c-f+1;l<=c;l++)l<u&&l>=0&&(h+=t[l][o]()*d[l]);return h;};};return[o(\"X\"),o(\"Y\"),0,function(){return t.length-1;}];},D:function(t,i){return e.exists(i)?function(e,r){var s=1e-5;return(t.apply(i,[e+s,r])-t.apply(i,[e-s,r]))/2e-5;}:function(e,i){var r=1e-5;return(t(e+r,i)-t(e-r,i))/2e-5;};},_riemannValue:function(t,e,i,r){var s,o,n,a;if(r<0&&(\"trapezoidal\"!==i&&(t+=r),r*=-1,\"lower\"===i?i=\"upper\":\"upper\"===i&&(i=\"lower\")),a=.01*r,\"right\"===i)s=e(t+r);else if(\"middle\"===i)s=e(t+.5*r);else if(\"left\"===i||\"trapezoidal\"===i)s=e(t);else if(\"lower\"===i){for(s=e(t),n=t+a;n<=t+r;n+=a)(o=e(n))<s&&(s=o);o=e(t+r),o<s&&(s=o);}else if(\"upper\"===i){for(s=e(t),n=t+a;n<=t+r;n+=a)(o=e(n))>s&&(s=o);o=e(t+r),o>s&&(s=o);}else s=\"random\"===i?e(t+r*Math.random()):\"simpson\"===i?(e(t)+4*e(t+.5*r)+e(t+r))/6:e(t);return s;},riemann:function(t,i,r,s,o){var n,a,h,l,c,d,u,p=[],f=[],m=0,g=s,b=0;if(e.isArray(t)?(c=t[0],l=t[1]):l=t,(i=Math.floor(i))<=0)return[p,f,b];for(a=(o-s)/i,n=0;n<i;n++)h=this._riemannValue(g,l,r,a),p[m]=g,f[m]=h,m+=1,g+=a,\"trapezoidal\"===r&&(h=l(g)),p[m]=g,f[m]=h,m+=1;for(n=0;n<i;n++)h=c?this._riemannValue(g,c,r,-a):0,p[m]=g,f[m]=h,m+=1,g-=a,\"trapezoidal\"===r&&c&&(h=c(g)),p[m]=g,f[m]=h,\"trapezoidal\"!==r?(d=h,u=f[2*(i-1)-2*n]):(u=.5*(l(g+a)+l(g)),d=c?.5*(c(g+a)+c(g)):0),b+=(u-d)*a,m+=1,p[m]=g,f[m]=f[2*(i-1)-2*n],m+=1;return[p,f,b];},riemannsum:function(e,i,r,s,o){return t.deprecated(\"Numerics.riemannsum()\",\"Numerics.riemann()\"),this.riemann(e,i,r,s,o)[2];},rungeKutta:function(t,i,s,o,n){var a,h,l,c,d,u,p=[],f=[],m=(s[1]-s[0])/o,g=s[0],b=i.length,v=[],y=0;for(e.isString(t)&&(t=r[t]||r.euler),u=t.s,a=0;a<b;a++)p[a]=i[a];for(h=0;h<o;h++){for(v[y]=[],a=0;a<b;a++)v[y][a]=p[a];for(y+=1,c=[],l=0;l<u;l++){for(a=0;a<b;a++)f[a]=0;for(d=0;d<l;d++)for(a=0;a<b;a++)f[a]+=t.A[l][d]*m*c[d][a];for(a=0;a<b;a++)f[a]+=p[a];c.push(n(g+t.c[l]*m,f));}for(a=0;a<b;a++)f[a]=0;for(d=0;d<u;d++)for(a=0;a<b;a++)f[a]+=t.b[d]*c[d][a];for(a=0;a<b;a++)p[a]=p[a]+m*f[a];g+=m;}return v;},maxIterationsRoot:80,maxIterationsMinimize:500,findBracket:function(t,i,r){var s,o,n,a,h,l,c,d,u,p;if(e.isArray(i))return i;for(s=i,n=t.call(r,s),o=0===s?1:s,a=[s-.1*o,s+.1*o,s-1,s+1,s-.5*o,s+.5*o,s-.6*o,s+.6*o,s-1*o,s+1*o,s-2*o,s+2*o,s-5*o,s+5*o,s-10*o,s+10*o,s-50*o,s+50*o,s-100*o,s+100*o],p=a.length,u=0;u<p&&(h=a[u],l=t.call(r,h),!(n*l<=0));u++);return h<s&&(c=s,s=h,h=c,d=n,n=l,l=d),[s,n,h,l];},fzero:function(t,r,s){var o,n,a,h,l,c,d,u,p,f,m,g,b,v,y,C=i.eps,_=this.maxIterationsRoot,P=0;if(e.isArray(r)){if(r.length<2)throw new Error(\"JXG.Math.Numerics.fzero: length of array x0 has to be at least two.\");o=r[0],h=t.call(s,o),n=r[1],l=t.call(s,n);}else d=this.findBracket(t,r,s),o=d[0],h=d[1],n=d[2],l=d[3];if(Math.abs(h)<=C)return o;if(Math.abs(l)<=C)return n;if(h*l>0)return e.isArray(r)?this.fminbr(t,[o,n],s):this.Newton(t,o,s);for(a=o,c=h;P<_;){if(u=n-o,Math.abs(c)<Math.abs(l)&&(o=n,n=a,a=o,h=l,l=c,c=h),g=2*C*Math.abs(n)+.5*C,y=.5*(a-n),Math.abs(y)<=g||Math.abs(l)<=C)return n;Math.abs(u)>=g&&Math.abs(h)>Math.abs(l)&&(f=a-n,o===a?(p=l/h,b=f*p,v=1-p):(v=h/c,p=l/c,m=l/h,b=m*(f*v*(v-p)-(n-o)*(p-1)),v=(v-1)*(p-1)*(m-1)),b>0?v=-v:b=-b,b<.75*f*v-.5*Math.abs(g*v)&&b<Math.abs(u*v*.5)&&(y=b/v)),Math.abs(y)<g&&(y=y>0?g:-g),o=n,h=l,n+=y,l=t.call(s,n),(l>0&&c>0||l<0&&c<0)&&(a=o,c=h),P++;}return n;},chandrupatla:function(t,r,s){var o,n,a,h,l,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O,w,T,N,M,A=0,R=this.maxIterationsRoot,L=1+.001*Math.random(),k=.5*L,B=i.eps;if(e.isArray(r)){if(r.length<2)throw new Error(\"JXG.Math.Numerics.fzero: length of array x0 has to be at least two.\");o=r[0],n=t.call(s,o),a=r[1],h=t.call(s,a);}else l=this.findBracket(t,r,s),o=l[0],n=l[1],a=l[2],h=l[3];if(n*h>0)return e.isArray(r)?this.fminbr(t,[o,a],s):this.Newton(t,o,s);c=o,d=a,f=n,m=h;do{if(p=c+k*(d-c),b=t.call(s,p),Math.sign(b)===Math.sign(f)?(u=c,c=p,g=f,f=b):(u=d,d=c,g=m,m=f),c=p,f=b,v=c,y=f,Math.abs(m)<Math.abs(f)&&(v=d,y=m),C=2*B*Math.abs(v)+5e-6,(_=C/Math.abs(d-c))>.5||0===y)break;P=(c-d)/(u-d),E=(f-m)/(g-m),x=1-Math.sqrt(1-P),S=Math.sqrt(P),x<E&&E<S?(O=(u-c)/(d-c),w=f/(m-f),T=g/(m-g),N=f/(g-f),M=m/(g-m),k=w*T+N*M*O):k=.5*L,k<_&&(k=_),k>1-_&&(k=1-_),A++;}while(A<=R);return v;},fminbr:function(t,r,s){var o,n,a,h,l,c,d,u,p,f,m,g,b,v,y,C,_=.5*(3-Math.sqrt(5)),P=i.eps,E=i.eps,x=this.maxIterationsMinimize,S=0;if(!e.isArray(r)||r.length<2)throw new Error(\"JXG.Math.Numerics.fminbr: length of array x0 has to be at least two.\");for(o=r[0],n=r[1],h=o+_*(n-o),d=t.call(s,h),a=h,l=h,c=d,u=d;S<x;){if(p=n-o,f=.5*(o+n),m=E*Math.abs(a)+P/3,Math.abs(a-f)+.5*p<=2*m)return a;g=_*(a<f?n-a:o-a),Math.abs(a-l)>=m&&(y=(a-l)*(c-d),v=(a-h)*(c-u),b=(a-h)*v-(a-l)*y,v=2*(v-y),v>0?b=-b:v=-v,Math.abs(b)<Math.abs(g*v)&&b>v*(o-a+2*m)&&b<v*(n-a-2*m)&&(g=b/v)),Math.abs(g)<m&&(g=g>0?m:-m),y=a+g,C=t.call(s,y),C<=c?(y<a?n=a:o=a,h=l,l=a,a=y,d=u,u=c,c=C):(y<a?o=y:n=y,C<=u||l===a?(h=l,l=y,d=u,u=C):(C<=d||h===a||h===l)&&(h=y,d=C)),S+=1;}return a;},RamerDouglasPeucker:function(t,e){var r,s,o,n=[],a=[],h=function(t,e,r){var s,o,n,a,h,l,c,d,u,p,f,m=0,g=e;if(r-e<2)return[-1,0];if(n=t[e].scrCoords,a=t[r].scrCoords,isNaN(n[1])||isNaN(n[2]))return[NaN,e];if(isNaN(a[1])||isNaN(a[2]))return[NaN,r];for(o=e+1;o<r;o++){if(h=t[o].scrCoords,isNaN(h[1])||isNaN(h[2]))return[NaN,o];l=h[1]-n[1],c=h[2]-n[2],d=a[1]-n[1],u=a[2]-n[2],l=l===1/0?1e4:l,c=c===1/0?1e4:c,d=d===1/0?1e4:d,u=u===1/0?1e4:u,l=l===-1/0?-1e4:l,c=c===-1/0?-1e4:c,d=d===-1/0?-1e4:d,u=u===-1/0?-1e4:u,p=d*d+u*u,p>=i.eps?(f=(l*d+c*u)/p,f<0?f=0:f>1&&(f=1),l-=f*d,c-=f*u,s=l*l+c*c):(f=0,s=l*l+c*c),s>m&&(m=s,g=o);}return[Math.sqrt(m),g];},l=function(t,e,i,r,s){var o=h(t,e,i),n=o[1];if(isNaN(o[0])){l(t,e,n-1,r,s),s.push(t[n]);do{++n;}while(n<=i&&isNaN(t[n].scrCoords[1]+t[n].scrCoords[2]));n<=i&&s.push(t[n]),l(t,n+1,i,r,s);}else o[0]>r?(l(t,e,n,r,s),l(t,n,i,r,s)):s.push(t[i]);};for(o=t.length,r=0;;){for(;r<o&&isNaN(t[r].scrCoords[1]+t[r].scrCoords[2]);)r+=1;for(s=r+1;s<o&&!isNaN(t[s].scrCoords[1]+t[s].scrCoords[2]);)s+=1;if(s--,r<o&&s>r&&(a=[],a[0]=t[r],l(t,r,s,e,a),n=n.concat(a)),r>=o)break;s<o-1&&n.push(t[s+1]),r=s+1;}return n;},RamerDouglasPeuker:function(e,i){return t.deprecated(\"Numerics.RamerDouglasPeuker()\",\"Numerics.RamerDouglasPeucker()\"),this.RamerDouglasPeucker(e,i);},Visvalingam:function(e,i){var r,s,o,n,a,h,l,c,d,u=[],p=[],f=[];if((s=e.length)<=2)return e;for(u[0]={used:!0,lft:null,node:null},a=0,r=1;r<s-1;r++)o=Math.abs(t.Math.Numerics.det([e[r-1].usrCoords,e[r].usrCoords,e[r+1].usrCoords])),isNaN(o)||(d={v:o,idx:r},p.push(d),u[r]={used:!0,lft:a,node:d},u[a].rt=r,a=r);for(u[s-1]={used:!0,rt:null,lft:a,node:null},u[a].rt=s-1,n=-1/0;p.length>i;)p.sort(function(t,e){return e.v-t.v;}),r=p.pop().idx,u[r].used=!1,n=u[r].node.v,a=u[r].lft,h=u[r].rt,u[a].rt=h,u[h].lft=a,l=u[a].lft,null!==l&&(o=Math.abs(t.Math.Numerics.det([e[l].usrCoords,e[a].usrCoords,e[h].usrCoords])),u[a].node.v=o>=n?o:n),null!==(c=u[h].rt)&&(o=Math.abs(t.Math.Numerics.det([e[a].usrCoords,e[h].usrCoords,e[c].usrCoords])),u[h].node.v=o>=n?o:n);r=0,f=[e[r]];do{r=u[r].rt,f.push(e[r]);}while(null!==u[r].rt);return f;}},i.Numerics;}),define(\"math/nlp\",[\"jxg\",\"math/math\",\"utils/type\"],function(t,e,i){\"use strict\";return t.Math.Nlp={arr:function(t){var e,i=new Array(t);for(e=0;e<t;e++)i[e]=0;return i;},arr2:function(t,e){for(var i=0,r=new Array(t);i<t;)r[i]=this.arr(e),i++;return r;},arraycopy:function(t,e,i,r,s){for(var o=0;o<s;)i[o+r]=t[o+e],o++;},Normal:0,MaxIterationsReached:1,DivergingRoundingErrors:2,FindMinimum:function(t,e,i,r,s,o,n,a){var h,l,c=i+2,d=this.arr(e+1),u=this;return d[0]=0,this.arraycopy(r,0,d,1,e),l=function(e,i,r,s){var o,n,a=u.arr(e);return u.arraycopy(r,1,a,0,e),o=u.arr(i),n=t(e,i,a,o),u.arraycopy(o,0,s,1,i),n;},h=this.cobylb(l,e,i,c,d,s,o,n,a),this.arraycopy(d,1,r,0,e),h;},cobylb:function(t,e,i,r,s,o,n,a,h){var l,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O,w,T,N,M,A,R,L,k,B,I,Y,D,j,X=-1,U=0,F=0,G=e+1,J=i+1,z=o,H=0,V=!1,$=!1,q=0,W=0,Z=0,Q=this.arr(1+r),K=this.arr2(1+e,1+G),tt=this.arr2(1+e,1+e),et=this.arr2(1+r,1+G),it=this.arr2(1+e,1+J),rt=this.arr(1+e),st=this.arr(1+e),ot=this.arr(1+e),nt=this.arr(1+e),at=this.arr(1+e);for(a>=2&&console.log(\"The initial value of RHO is \"+z+\" and PARMU is set to zero.\"),g=0,f=1/z,c=1;c<=e;++c)K[c][G]=s[c],K[c][c]=z,tt[c][c]=f;b=G,v=!1;t:for(;;){if(g>=h&&g>0){X=this.MaxIterationsReached;break t;}for(++g,U=t(e,i,s,Q),F=0,u=1;u<=i;++u)F=Math.max(F,-Q[u]);if(g!==a-1&&3!==a||this.PrintIterationResult(g,U,F,s,e,a),Q[J]=U,Q[r]=F,y=!0,!v){for(y=!1,c=1;c<=r;++c)et[c][b]=Q[c];if(g<=G){if(b<=e)if(et[J][G]<=U)s[b]=K[b][G];else{for(K[b][G]=s[b],u=1;u<=r;++u)et[u][b]=et[u][G],et[u][G]=Q[u];for(u=1;u<=b;++u){for(K[b][u]=-z,f=0,c=u;c<=b;++c)f-=tt[c][u];tt[b][u]=f;}}if(g<=e){b=g,s[b]+=z;continue t;}}v=!0;}e:for(;;){i:do{if(!y){for(C=et[J][G]+H*et[r][G],_=G,d=1;d<=e;++d)f=et[J][d]+H*et[r][d],f<C?(_=d,C=f):f===C&&0===H&&et[r][d]<et[r][_]&&(_=d);if(_<=e){for(c=1;c<=r;++c)f=et[c][G],et[c][G]=et[c][_],et[c][_]=f;for(c=1;c<=e;++c){for(f=K[c][_],K[c][_]=0,K[c][G]+=f,m=0,u=1;u<=e;++u)K[c][u]-=f,m-=tt[u][c];tt[_][c]=m;}}for(P=0,c=1;c<=e;++c)for(d=1;d<=e;++d)f=this.DOT_PRODUCT(this.PART(this.ROW(tt,c),1,e),this.PART(this.COL(K,d),1,e))-(c===d?1:0),P=Math.max(P,Math.abs(f));if(P>.1){X=this.DivergingRoundingErrors;break t;}for(u=1;u<=J;++u){for(Q[u]=-et[u][G],d=1;d<=e;++d)at[d]=et[u][d]+Q[u];for(c=1;c<=e;++c)it[c][u]=(u===J?-1:1)*this.DOT_PRODUCT(this.PART(at,1,e),this.PART(this.COL(tt,c),1,e));}for(V=!0,q=.25*z,E=2.1*z,d=1;d<=e;++d){for(x=0,u=1;u<=e;++u)x+=tt[d][u]*tt[d][u];for(S=0,u=1;u<=e;++u)S+=K[u][d]*K[u][d];rt[d]=1/Math.sqrt(x),st[d]=Math.sqrt(S),(rt[d]<q||st[d]>E)&&(V=!1);}if(!v&&!V){for(b=0,f=E,d=1;d<=e;++d)st[d]>f&&(b=d,f=st[d]);if(0===b)for(d=1;d<=e;++d)rt[d]<f&&(b=d,f=rt[d]);for(f=.5*z*rt[b],u=1;u<=e;++u)nt[u]=f*tt[b][u];for(O=0,w=0,l=0,u=1;u<=J;++u)l=this.DOT_PRODUCT(this.PART(this.COL(it,u),1,e),this.PART(nt,1,e)),u<J&&(f=et[u][G],O=Math.max(O,-l-f),w=Math.max(w,l-f));for(T=H*(O-w)>2*l?-1:1,f=0,c=1;c<=e;++c)nt[c]=T*nt[c],K[c][b]=nt[c],f+=tt[b][c]*nt[c];for(u=1;u<=e;++u)tt[b][u]/=f;for(d=1;d<=e;++d){if(d!==b)for(f=this.DOT_PRODUCT(this.PART(this.ROW(tt,d),1,e),this.PART(nt,1,e)),u=1;u<=e;++u)tt[d][u]-=f*tt[b][u];s[d]=K[d][G]+nt[d];}continue t;}if(!($=this.trstlp(e,i,it,Q,z,nt))){for(f=0,u=1;u<=e;++u)f+=nt[u]*nt[u];if(f<.25*z*z){v=!0;break i;}}for(l=0,N=0,Q[J]=0,u=1;u<=J;++u)l=Q[u]-this.DOT_PRODUCT(this.PART(this.COL(it,u),1,e),this.PART(nt,1,e)),u<J&&(N=Math.max(N,l));if(W=et[r][G]-N,M=W>0?l/W:0,H<1.5*M)for(H=2*M,a>=2&&console.log(\"Increase in PARMU to \"+H),A=et[J][G]+H*et[r][G],d=1;d<=e;++d)if((f=et[J][d]+H*et[r][d])<A||f===A&&0===H&&et[r][d]<et[r][G])continue e;for(Z=H*W-l,u=1;u<=e;++u)s[u]=K[u][G]+nt[u];v=!0;continue t;}for(y=!1,R=et[J][G]+H*et[r][G],L=U+H*F,k=R-L,0===H&&U===et[J][G]&&(Z=W,k=et[r][G]-F),B=k<=0?1:0,b=0,d=1;d<=e;++d)f=Math.abs(this.DOT_PRODUCT(this.PART(this.ROW(tt,d),1,e),this.PART(nt,1,e))),f>B&&(b=d,B=f),ot[d]=f*rt[d];for(I=1.1*z,p=0,d=1;d<=e;++d)if(ot[d]>=q||ot[d]>=rt[d]){if(f=st[d],k>0){for(f=0,u=1;u<=e;++u)f+=Math.pow(nt[u]-K[u][d],2);f=Math.sqrt(f);}f>I&&(p=d,I=f);}if(p>0&&(b=p),0!==b){for(f=0,c=1;c<=e;++c)K[c][b]=nt[c],f+=tt[b][c]*nt[c];for(u=1;u<=e;++u)tt[b][u]/=f;for(d=1;d<=e;++d)if(d!==b)for(f=this.DOT_PRODUCT(this.PART(this.ROW(tt,d),1,e),this.PART(nt,1,e)),u=1;u<=e;++u)tt[d][u]-=f*tt[b][u];for(u=1;u<=r;++u)et[u][b]=Q[u];if(k>0&&k>=.1*Z)continue e;}}while(!1);if(V){if(z<=n){X=this.Normal;break t;}if(Y=0,D=0,z*=.5,z<=1.5*n&&(z=n),H>0){for(j=0,u=1;u<=J;++u){for(Y=et[u][G],D=Y,c=1;c<=e;++c)Y=Math.min(Y,et[u][c]),D=Math.max(D,et[u][c]);u<=i&&Y<.5*D&&(f=Math.max(D,0)-Y,j=j<=0?f:Math.min(j,f));}0===j?H=0:D-Y<H*j&&(H=(D-Y)/j);}a>=2&&console.log(\"Reduction in RHO to \"+z+\"  and PARMU = \"+H),2===a&&this.PrintIterationResult(g,et[J][G],et[r][G],this.COL(K,G),e,a);}else v=!1;}}switch(X){case this.Normal:if(a>=1&&console.log(\"%nNormal return from subroutine COBYLA%n\"),$)return a>=1&&this.PrintIterationResult(g,U,F,s,e,a),X;break;case this.MaxIterationsReached:a>=1&&console.log(\"%nReturn from subroutine COBYLA because the MAXFUN limit has been reached.%n\");break;case this.DivergingRoundingErrors:a>=1&&console.log(\"%nReturn from subroutine COBYLA because rounding errors are becoming damaging.%n\");}for(u=1;u<=e;++u)s[u]=K[u][G];return U=et[J][G],F=et[r][G],a>=1&&this.PrintIterationResult(g,U,F,s,e,a),X;},trstlp:function(t,e,i,r,s,o){var n,a,h,l,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O,w,T,N,M,A,R,L,k,B,I,Y,D,j,X=0,U=0,F=0,G=this.arr2(1+t,1+t),J=this.arr(2+e),z=this.arr(2+e),H=this.arr(1+t),V=this.arr(1+t),$=this.arr(2+e),q=this.arr(2+e),W=e,Z=0;for(h=1;h<=t;++h)G[h][h]=1,o[h]=0;if(n=0,a=0,e>=1){for(l=1;l<=e;++l)r[l]>a&&(a=r[l],n=l);for(l=1;l<=e;++l)q[l]=l,z[l]=a-r[l];}c=!0;do{t:for(;;){(!c||c&&0===a)&&(W=e+1,n=W,q[W]=W,z[W]=0),c=!1,d=0,u=0,p=0,f=0;e:do{if(m=W===e?a:-this.DOT_PRODUCT(this.PART(o,1,t),this.PART(this.COL(i,W),1,t)),0===u||m<d?(d=m,U=Z,u=3):Z>U?(U=Z,u=3):--u,0===u)break t;if(g=0,n<=Z){if(n<Z){b=q[n],v=z[n],l=n;do{for(C=l+1,_=q[C],P=this.DOT_PRODUCT(this.PART(this.COL(G,l),1,t),this.PART(this.COL(i,_),1,t)),X=Math.sqrt(P*P+J[C]*J[C]),E=J[C]/X,x=P/X,J[C]=E*J[l],J[l]=X,h=1;h<=t;++h)X=E*G[h][C]+x*G[h][l],G[h][C]=E*G[h][l]-x*G[h][C],G[h][l]=X;q[l]=_,z[l]=z[C],l=C;}while(l<Z);q[l]=b,z[l]=v;}if(--Z,W>e)for(X=1/J[Z],l=1;l<=t;++l)H[l]=X*G[l][Z];else for(X=this.DOT_PRODUCT(this.PART(H,1,t),this.PART(this.COL(G,Z+1),1,t)),l=1;l<=t;++l)H[l]-=X*G[l][Z+1];}else{for(_=q[n],l=1;l<=t;++l)V[l]=i[l][_];for(S=0,l=t;l>Z;){for(P=0,O=0,h=1;h<=t;++h)X=G[h][l]*V[h],P+=X,O+=Math.abs(X);if(w=O+.1*Math.abs(P),T=O+.2*Math.abs(P),(O>=w||w>=T)&&(P=0),0===S)S=P;else for(C=l+1,X=Math.sqrt(P*P+S*S),E=P/X,x=S/X,S=X,h=1;h<=t;++h)X=E*G[h][l]+x*G[h][C],G[h][C]=E*G[h][C]-x*G[h][l],G[h][l]=X;--l;}if(0===S){g=-1,l=Z;do{for(N=0,M=0,h=1;h<=t;++h)X=G[h][l]*V[h],N+=X,M+=Math.abs(X);if(w=M+.1*Math.abs(N),T=M+.2*Math.abs(N),M<w&&w<T){if(X=N/J[l],X>0&&q[l]<=e&&(j=z[l]/X,(g<0||j<g)&&(g=j)),l>=2)for(A=q[l],h=1;h<=t;++h)V[h]-=X*i[h][A];$[l]=X;}else $[l]=0;}while(--l>0);if(g<0)break t;for(l=1;l<=Z;++l)z[l]=Math.max(0,z[l]-g*$[l]);if(n<Z){b=q[n],v=z[n],l=n;do{for(C=l+1,A=q[C],P=this.DOT_PRODUCT(this.PART(this.COL(G,l),1,t),this.PART(this.COL(i,A),1,t)),X=Math.sqrt(P*P+J[C]*J[C]),E=J[C]/X,x=P/X,J[C]=E*J[l],J[l]=X,h=1;h<=t;++h)X=E*G[h][C]+x*G[h][l],G[h][C]=E*G[h][l]-x*G[h][C],G[h][l]=X;q[l]=A,z[l]=z[C],l=C;}while(l<Z);q[l]=b,z[l]=v;}if(0===(X=this.DOT_PRODUCT(this.PART(this.COL(G,Z),1,t),this.PART(this.COL(i,_),1,t))))break t;J[Z]=X,z[n]=0,z[Z]=g;}else++Z,J[Z]=S,z[n]=z[Z],z[Z]=0;if(q[n]=q[Z],q[Z]=_,W>e&&_!==W){for(l=Z-1,P=this.DOT_PRODUCT(this.PART(this.COL(G,l),1,t),this.PART(this.COL(i,_),1,t)),X=Math.sqrt(P*P+J[Z]*J[Z]),E=J[Z]/X,x=P/X,J[Z]=E*J[l],J[l]=X,h=1;h<=t;++h)X=E*G[h][Z]+x*G[h][l],G[h][Z]=E*G[h][l]-x*G[h][Z],G[h][l]=X;q[Z]=q[l],q[l]=_,X=z[l],z[l]=z[Z],z[Z]=X;}if(W>e)for(X=1/J[Z],l=1;l<=t;++l)H[l]=X*G[l][Z];else for(_=q[Z],X=(this.DOT_PRODUCT(this.PART(H,1,t),this.PART(this.COL(i,_),1,t))-1)/J[Z],l=1;l<=t;++l)H[l]-=X*G[l][Z];}for(R=s*s,k=0,L=0,h=1;h<=t;++h)Math.abs(o[h])>=1e-6*s&&(R-=o[h]*o[h]),k+=o[h]*H[h],L+=H[h]*H[h];if(R<=0)break t;if(X=Math.sqrt(L*R),Math.abs(k)>=1e-6*X&&(X=Math.sqrt(L*R+k*k)),f=R/(X+k),p=f,W===e){if(w=p+.1*a,T=p+.2*a,p>=w||w>=T)break e;p=Math.min(p,a);}for(l=1;l<=t;++l)V[l]=o[l]+p*H[l];if(W===e)for(F=a,a=0,l=1;l<=Z;++l)_=q[l],X=r[_]-this.DOT_PRODUCT(this.PART(this.COL(i,_),1,t),this.PART(V,1,t)),a=Math.max(a,X);l=Z;do{for(B=0,I=0,h=1;h<=t;++h)X=G[h][l]*V[h],B+=X,I+=Math.abs(X);if(w=I+.1*Math.abs(B),T=I+.2*Math.abs(B),(I>=w||w>=T)&&(B=0),$[l]=B/J[l],l>=2)for(_=q[l],h=1;h<=t;++h)V[h]-=$[l]*i[h][_];}while(l-->=2);for(W>e&&($[Z]=Math.max(0,$[Z])),l=1;l<=t;++l)V[l]=o[l]+p*H[l];if(W>Z)for(Y=Z+1,l=Y;l<=W;++l){for(_=q[l],y=a-r[_],D=a+Math.abs(r[_]),h=1;h<=t;++h)X=i[h][_]*V[h],y+=X,D+=Math.abs(X);w=D+.1*Math.abs(y),T=D+.2*Math.abs(y),(D>=w||w>=T)&&(y=0),$[l]=y;}for(g=1,n=0,l=1;l<=W;++l)$[l]<0&&(X=z[l]/(z[l]-$[l]))<g&&(g=X,n=l);for(X=1-g,l=1;l<=t;++l)o[l]=X*o[l]+g*V[l];for(l=1;l<=W;++l)z[l]=Math.max(0,X*z[l]+g*$[l]);W===e&&(a=F+g*(a-F));}while(n>0);if(p===f)return!0;}}while(W===e);return!1;},PrintIterationResult:function(t,e,i,r,s,o){o>1&&console.log(\"NFVALS = \"+t+\"  F = \"+e+\"  MAXCV = \"+i),o>1&&console.log(\"X = \"+this.PART(r,1,s));},ROW:function(t,e){return t[e].slice();},COL:function(t,e){var i,r=t.length,s=this.arr(r);for(i=0;i<r;++i)s[i]=t[i][e];return s;},PART:function(t,e,i){return t.slice(e,i+1);},FORMAT:function(t){return t.join(\",\");},DOT_PRODUCT:function(t,e){var i,r=0,s=t.length;for(i=0;i<s;++i)r+=t[i]*e[i];return r;}},t.Math.Nlp;}),define(\"math/statistics\",[\"jxg\",\"math/math\",\"utils/type\"],function(t,e,i){\"use strict\";return e.Statistics={sum:function(t){var e,i=t.length,r=0;for(e=0;e<i;e++)r+=t[e];return r;},prod:function(t){var e,i=t.length,r=1;for(e=0;e<i;e++)r*=t[e];return r;},mean:function(t){return t.length>0?this.sum(t)/t.length:0;},median:function(t){var e,i;return t.length>0?(ArrayBuffer.isView(t)?(e=new Float64Array(t),e.sort()):(e=t.slice(0),e.sort(function(t,e){return t-e;})),i=e.length,1&i?e[parseInt(.5*i,10)]:.5*(e[.5*i-1]+e[.5*i])):0;},variance:function(t){var e,i,r,s=t.length;if(s>1){for(e=this.mean(t),i=0,r=0;r<s;r++)i+=(t[r]-e)*(t[r]-e);return i/(t.length-1);}return 0;},sd:function(t){return Math.sqrt(this.variance(t));},weightedMean:function(t,e){if(t.length!==e.length)throw new Error(\"JSXGraph error (Math.Statistics.weightedMean): Array dimension mismatch.\");return t.length>0?this.mean(this.multiply(t,e)):0;},max:function(t){return Math.max.apply(this,t);},min:function(t){return Math.min.apply(this,t);},range:function(t){return[this.min(t),this.max(t)];},abs:function(t){var e,r,s;if(i.isArray(t)){if(t.map)s=t.map(Math.abs);else for(r=t.length,s=[],e=0;e<r;e++)s[e]=Math.abs(t[e]);}else s=ArrayBuffer.isView(t)?t.map(Math.abs):Math.abs(t);return s;},add:function(t,e){var r,s,o=[];if(t=i.evalSlider(t),e=i.evalSlider(e),i.isArray(t)&&i.isNumber(e))for(s=t.length,r=0;r<s;r++)o[r]=t[r]+e;else if(i.isNumber(t)&&i.isArray(e))for(s=e.length,r=0;r<s;r++)o[r]=t+e[r];else if(i.isArray(t)&&i.isArray(e))for(s=Math.min(t.length,e.length),r=0;r<s;r++)o[r]=t[r]+e[r];else o=t+e;return o;},div:function(t,e){var r,s,o=[];if(t=i.evalSlider(t),e=i.evalSlider(e),i.isArray(t)&&i.isNumber(e))for(s=t.length,r=0;r<s;r++)o[r]=t[r]/e;else if(i.isNumber(t)&&i.isArray(e))for(s=e.length,r=0;r<s;r++)o[r]=t/e[r];else if(i.isArray(t)&&i.isArray(e))for(s=Math.min(t.length,e.length),r=0;r<s;r++)o[r]=t[r]/e[r];else o=t/e;return o;},divide:function(){t.deprecated(\"Statistics.divide()\",\"Statistics.div()\"),e.Statistics.div.apply(e.Statistics,arguments);},mod:function(t,r,s){var o,n,a=[],h=function(t,e){return t%e;};if(s=i.def(s,!1),s&&(h=e.mod),t=i.evalSlider(t),r=i.evalSlider(r),i.isArray(t)&&i.isNumber(r))for(n=t.length,o=0;o<n;o++)a[o]=h(t[o],r);else if(i.isNumber(t)&&i.isArray(r))for(n=r.length,o=0;o<n;o++)a[o]=h(t,r[o]);else if(i.isArray(t)&&i.isArray(r))for(n=Math.min(t.length,r.length),o=0;o<n;o++)a[o]=h(t[o],r[o]);else a=h(t,r);return a;},multiply:function(t,e){var r,s,o=[];if(t=i.evalSlider(t),e=i.evalSlider(e),i.isArray(t)&&i.isNumber(e))for(s=t.length,r=0;r<s;r++)o[r]=t[r]*e;else if(i.isNumber(t)&&i.isArray(e))for(s=e.length,r=0;r<s;r++)o[r]=t*e[r];else if(i.isArray(t)&&i.isArray(e))for(s=Math.min(t.length,e.length),r=0;r<s;r++)o[r]=t[r]*e[r];else o=t*e;return o;},subtract:function(t,e){var r,s,o=[];if(t=i.evalSlider(t),e=i.evalSlider(e),i.isArray(t)&&i.isNumber(e))for(s=t.length,r=0;r<s;r++)o[r]=t[r]-e;else if(i.isNumber(t)&&i.isArray(e))for(s=e.length,r=0;r<s;r++)o[r]=t-e[r];else if(i.isArray(t)&&i.isArray(e))for(s=Math.min(t.length,e.length),r=0;r<s;r++)o[r]=t[r]-e[r];else o=t-e;return o;},TheilSenRegression:function(t){var i,r,s=[],o=[],n=[];for(i=0;i<t.length;i++){for(o.length=0,r=0;r<t.length;r++)Math.abs(t[r].usrCoords[1]-t[i].usrCoords[1])>e.eps&&(o[r]=(t[r].usrCoords[2]-t[i].usrCoords[2])/(t[r].usrCoords[1]-t[i].usrCoords[1]));s[i]=this.median(o),n.push(t[i].usrCoords[2]-s[i]*t[i].usrCoords[1]);}return[this.median(n),this.median(s),-1];},generateGaussian:function(t,e){var i,r,s;if(this.hasSpare)return this.hasSpare=!1,this.spare*e+t;do{i=2*Math.random()-1,r=2*Math.random()-1,s=i*i+r*r;}while(s>=1||0===s);return s=Math.sqrt(-2*Math.log(s)/s),this.spare=r*s,this.hasSpare=!0,t+e*i*s;}},e.Statistics;}),define(\"math/geometry\",[\"jxg\",\"base/constants\",\"base/coords\",\"math/math\",\"math/numerics\",\"utils/type\",\"utils/expect\"],function(t,e,i,r,s,o,n){\"use strict\";return r.Geometry={},t.extend(r.Geometry,{angle:function(e,i,r){var s,o,n,a,h=[],l=[],c=[];return t.deprecated(\"Geometry.angle()\",\"Geometry.rad()\"),e.coords?(h[0]=e.coords.usrCoords[1],h[1]=e.coords.usrCoords[2]):(h[0]=e[0],h[1]=e[1]),i.coords?(l[0]=i.coords.usrCoords[1],l[1]=i.coords.usrCoords[2]):(l[0]=i[0],l[1]=i[1]),r.coords?(c[0]=r.coords.usrCoords[1],c[1]=r.coords.usrCoords[2]):(c[0]=r[0],c[1]=r[1]),s=h[0]-l[0],o=h[1]-l[1],n=c[0]-l[0],a=c[1]-l[1],Math.atan2(s*a-o*n,s*n+o*a);},trueAngle:function(t,e,i){return 57.29577951308232*this.rad(t,e,i);},rad:function(t,e,i){var r,s,o,n,a,h,l;return t.coords?(r=t.coords.usrCoords[1],s=t.coords.usrCoords[2]):(r=t[0],s=t[1]),e.coords?(o=e.coords.usrCoords[1],n=e.coords.usrCoords[2]):(o=e[0],n=e[1]),i.coords?(a=i.coords.usrCoords[1],h=i.coords.usrCoords[2]):(a=i[0],h=i[1]),l=Math.atan2(h-n,a-o)-Math.atan2(s-n,r-o),l<0&&(l+=6.283185307179586),l;},angleBisector:function(t,r,s,n){var a,h,l,c,d,u=t.coords.usrCoords,p=r.coords.usrCoords,f=s.coords.usrCoords;return o.exists(n)||(n=t.board),0===p[0]?new i(e.COORDS_BY_USER,[1,.5*(u[1]+f[1]),.5*(u[2]+f[2])],n):(c=u[1]-p[1],d=u[2]-p[2],a=Math.atan2(d,c),c=f[1]-p[1],d=f[2]-p[2],h=Math.atan2(d,c),l=.5*(a+h),a>h&&(l+=Math.PI),c=Math.cos(l)+p[1],d=Math.sin(l)+p[2],new i(e.COORDS_BY_USER,[1,c,d],n));},reflection:function(t,r,s){var n,a,h,l,c,d,u,p=r.coords.usrCoords,f=t.point1.coords.usrCoords,m=t.point2.coords.usrCoords;return o.exists(s)||(s=r.board),c=m[1]-f[1],d=m[2]-f[2],n=p[1]-f[1],a=p[2]-f[2],u=(c*a-d*n)/(c*c+d*d),h=p[1]+2*u*d,l=p[2]-2*u*c,new i(e.COORDS_BY_USER,[h,l],s);},rotation:function(t,r,s,n){var a,h,l,c,d,u,p=r.coords.usrCoords,f=t.coords.usrCoords;return o.exists(n)||(n=r.board),a=p[1]-f[1],h=p[2]-f[2],l=Math.cos(s),c=Math.sin(s),d=a*l-h*c+f[1],u=a*c+h*l+f[2],new i(e.COORDS_BY_USER,[d,u],n);},perpendicular:function(t,s,n){var a,h,l,c,d,u=t.point1.coords.usrCoords,p=t.point2.coords.usrCoords,f=s.coords.usrCoords;return o.exists(n)||(n=s.board),s===t.point1?(a=u[1]+p[2]-u[2],h=u[2]-p[1]+u[1],d=u[0]*p[0],Math.abs(d)<r.eps&&(a=p[2],h=-p[1]),c=[d,a,h],l=!0):s===t.point2?(a=p[1]+u[2]-p[2],h=p[2]-u[1]+p[1],d=u[0]*p[0],Math.abs(d)<r.eps&&(a=u[2],h=-u[1]),c=[d,a,h],l=!1):Math.abs(r.innerProduct(f,t.stdform,3))<r.eps?(a=f[1]+p[2]-f[2],h=f[2]-p[1]+f[1],d=p[0],Math.abs(d)<r.eps&&(a=p[2],h=-p[1]),l=!0,Math.abs(d)>r.eps&&Math.abs(a-f[1])<r.eps&&Math.abs(h-f[2])<r.eps&&(a=f[1]+u[2]-f[2],h=f[2]-u[1]+f[1],l=!1),c=[d,a,h]):(c=[0,t.stdform[1],t.stdform[2]],c=r.crossProduct(c,f),c=r.crossProduct(c,t.stdform),l=!0),[new i(e.COORDS_BY_USER,c,n),l];},circumcenterMidpoint:function(){t.deprecated(\"Geometry.circumcenterMidpoint()\",\"Geometry.circumcenter()\"),this.circumcenter.apply(this,arguments);},circumcenter:function(t,s,n,a){var h,l,c,d,u=t.coords.usrCoords,p=s.coords.usrCoords,f=n.coords.usrCoords;return o.exists(a)||(a=t.board),h=[p[0]-u[0],-p[2]+u[2],p[1]-u[1]],l=[.5*(u[0]+p[0]),.5*(u[1]+p[1]),.5*(u[2]+p[2])],c=r.crossProduct(h,l),h=[f[0]-p[0],-f[2]+p[2],f[1]-p[1]],l=[.5*(p[0]+f[0]),.5*(p[1]+f[1]),.5*(p[2]+f[2])],d=r.crossProduct(h,l),new i(e.COORDS_BY_USER,r.crossProduct(c,d),a);},distance:function(t,e,i){var r,s=0;for(i||(i=Math.min(t.length,e.length)),r=0;r<i;r++)s+=(t[r]-e[r])*(t[r]-e[r]);return Math.sqrt(s);},affineDistance:function(t,e,i){var s;return s=this.distance(t,e,i),s>r.eps&&(Math.abs(t[0])<r.eps||Math.abs(e[0])<r.eps)?1/0:s;},sortVertices:function(t){for(var e,i=n.each(t,n.coordsArray),r=i.length,s=null;i[0][0]===i[r-1][0]&&i[0][1]===i[r-1][1]&&i[0][2]===i[r-1][2];)s=i.pop(),r--;return e=i[0],i.sort(function(t,i){return(t[2]===e[2]&&t[1]===e[1]?-1/0:Math.atan2(t[2]-e[2],t[1]-e[1]))-(i[2]===e[2]&&i[1]===e[1]?-1/0:Math.atan2(i[2]-e[2],i[1]-e[1]));}),null!==s&&i.push(s),i;},signedTriangle:function(t,e,i){var r=n.coordsArray(t),s=n.coordsArray(e),o=n.coordsArray(i);return .5*((s[1]-r[1])*(o[2]-r[2])-(s[2]-r[2])*(o[1]-r[1]));},signedPolygon:function(t,e){var i,r,s=0,o=n.each(t,n.coordsArray);for(void 0===e&&(e=!0),e?o.unshift(o[o.length-1]):o=this.sortVertices(o),r=o.length,i=1;i<r;i++)s+=o[i-1][1]*o[i][2]-o[i][1]*o[i-1][2];return .5*s;},GrahamScan:function(t){var e,i=1,r=n.each(t,n.coordsArray),s=r.length;for(r=this.sortVertices(r),s=r.length,e=2;e<s;e++){for(;this.signedTriangle(r[i-1],r[i],r[e])<=0;){if(i>1)i-=1;else if(e===s-1)break;e+=1;}i+=1,r=o.swap(r,i,e);}return r.slice(0,i);},calcStraight:function(t,i,s,n){var a,h,l,c,d,u,p,f,m,g;if(o.exists(n)||(n=10),u=o.evaluate(t.visProp.straightfirst),p=o.evaluate(t.visProp.straightlast),Math.abs(i.scrCoords[0])<r.eps&&(u=!0),Math.abs(s.scrCoords[0])<r.eps&&(p=!0),(u||p)&&(f=[],f[0]=t.stdform[0]-t.stdform[1]*t.board.origin.scrCoords[1]/t.board.unitX+t.stdform[2]*t.board.origin.scrCoords[2]/t.board.unitY,f[1]=t.stdform[1]/t.board.unitX,f[2]=-t.stdform[2]/t.board.unitY,!isNaN(f[0]+f[1]+f[2]))){if(a=!1,h=!1,a=!u&&Math.abs(i.usrCoords[0])>=r.eps&&i.scrCoords[1]>=0&&i.scrCoords[1]<=t.board.canvasWidth&&i.scrCoords[2]>=0&&i.scrCoords[2]<=t.board.canvasHeight,h=!p&&Math.abs(s.usrCoords[0])>=r.eps&&s.scrCoords[1]>=0&&s.scrCoords[1]<=t.board.canvasWidth&&s.scrCoords[2]>=0&&s.scrCoords[2]<=t.board.canvasHeight,l=this.meetLineBoard(f,t.board,n),c=l[0],d=l[1],!a&&!h){if(!u&&p&&!this.isSameDirection(i,s,c)&&!this.isSameDirection(i,s,d))return;if(u&&!p&&!this.isSameDirection(s,i,c)&&!this.isSameDirection(s,i,d))return;}a?h||(g=this.isSameDir(i,s,c,d)?d:c):h?m=this.isSameDir(i,s,c,d)?c:d:this.isSameDir(i,s,c,d)?(m=c,g=d):(g=c,m=d),m&&i.setCoordinates(e.COORDS_BY_USER,m.usrCoords),g&&s.setCoordinates(e.COORDS_BY_USER,g.usrCoords);}},calcLineDelimitingPoints:function(t,i,s){var n,a,h,l,c,d,u,p,f,m,g=!1,b=!1;if(d=o.evaluate(t.visProp.straightfirst),u=o.evaluate(t.visProp.straightlast),Math.abs(i.scrCoords[0])<r.eps&&(d=!0),Math.abs(s.scrCoords[0])<r.eps&&(u=!0),p=[],p[0]=t.stdform[0]-t.stdform[1]*t.board.origin.scrCoords[1]/t.board.unitX+t.stdform[2]*t.board.origin.scrCoords[2]/t.board.unitY,p[1]=t.stdform[1]/t.board.unitX,p[2]=-t.stdform[2]/t.board.unitY,!isNaN(p[0]+p[1]+p[2])){if(g=!d,b=!u,a=t.board.getBoundingBox(),h=t.getSlope(),h>=0?(l=this.projectPointToLine({coords:{usrCoords:[1,a[2],a[1]]}},t,t.board),c=this.projectPointToLine({coords:{usrCoords:[1,a[0],a[3]]}},t,t.board)):(l=this.projectPointToLine({coords:{usrCoords:[1,a[0],a[1]]}},t,t.board),c=this.projectPointToLine({coords:{usrCoords:[1,a[2],a[3]]}},t,t.board)),!g&&!b){if(!d&&!u){if(n=i.distance(e.COORDS_BY_USER,s),Math.abs(i.distance(e.COORDS_BY_USER,l)+l.distance(e.COORDS_BY_USER,s)-n)>r.eps)return;if(Math.abs(i.distance(e.COORDS_BY_USER,c)+c.distance(e.COORDS_BY_USER,s)-n)>r.eps)return;}if(!d&&u&&!this.isSameDirection(i,s,l)&&!this.isSameDirection(i,s,c))return;if(d&&!u&&!this.isSameDirection(s,i,l)&&!this.isSameDirection(s,i,c))return;}g?b||(m=this.isSameDir(i,s,l,c)?c:l):b?f=this.isSameDir(i,s,l,c)?l:c:this.isSameDir(i,s,l,c)?(f=l,m=c):(m=l,f=c),f&&i.setCoordinates(e.COORDS_BY_USER,f.usrCoords),m&&s.setCoordinates(e.COORDS_BY_USER,m.usrCoords);}},calcLabelQuadrant:function(t){var e;return t<0&&(t+=2*Math.PI),e=Math.floor((t+Math.PI/8)/(Math.PI/4))%8,[\"rt\",\"urt\",\"top\",\"ulft\",\"lft\",\"llft\",\"lrt\"][e];},isSameDir:function(t,e,i,s){var o=e.usrCoords[1]-t.usrCoords[1],n=e.usrCoords[2]-t.usrCoords[2],a=s.usrCoords[1]-i.usrCoords[1],h=s.usrCoords[2]-i.usrCoords[2];return Math.abs(e.usrCoords[0])<r.eps&&(o=e.usrCoords[1],n=e.usrCoords[2]),Math.abs(t.usrCoords[0])<r.eps&&(o=-t.usrCoords[1],n=-t.usrCoords[2]),o*a+n*h>=0;},isSameDirection:function(t,e,i){var s,o,n,a,h=!1;return s=e.usrCoords[1]-t.usrCoords[1],o=e.usrCoords[2]-t.usrCoords[2],n=i.usrCoords[1]-t.usrCoords[1],a=i.usrCoords[2]-t.usrCoords[2],Math.abs(s)<r.eps&&(s=0),Math.abs(o)<r.eps&&(o=0),Math.abs(n)<r.eps&&(n=0),Math.abs(a)<r.eps&&(a=0),s>=0&&n>=0?h=o>=0&&a>=0||o<=0&&a<=0:s<=0&&n<=0&&(h=o>=0&&a>=0||o<=0&&a<=0),h;},intersectionFunction:function(t,r,s,n,a,h){var l=this;return r.elementClass===e.OBJECT_CLASS_CURVE&&s.elementClass===e.OBJECT_CLASS_CURVE?function(){return l.meetCurveCurve(r,s,n,a,r.board);}:r.elementClass===e.OBJECT_CLASS_CURVE&&s.elementClass===e.OBJECT_CLASS_LINE||s.elementClass===e.OBJECT_CLASS_CURVE&&r.elementClass===e.OBJECT_CLASS_LINE?function(){return l.meetCurveLine(r,s,n,r.board,h);}:r.elementClass===e.OBJECT_CLASS_LINE&&s.elementClass===e.OBJECT_CLASS_LINE?function(){var t,a,c=o.evaluate(r.visProp.straightfirst),d=o.evaluate(r.visProp.straightlast),u=o.evaluate(s.visProp.straightfirst),p=o.evaluate(s.visProp.straightlast);return o.evaluate(h)||c&&d&&u&&p?l.meet(r.stdform,s.stdform,n,r.board):(t=l.meetSegmentSegment(r.point1.coords.usrCoords,r.point2.coords.usrCoords,s.point1.coords.usrCoords,s.point2.coords.usrCoords,r.board),a=!c&&t[1]<0||!d&&t[1]>1||!u&&t[2]<0||!p&&t[2]>1?[0,NaN,NaN]:t[0],new i(e.COORDS_BY_USER,a,r.board));}:function(){return l.meet(r.stdform,s.stdform,n,r.board);};},meet:function(t,e,i,s){var o=r.eps;return Math.abs(t[3])<o&&Math.abs(e[3])<o?this.meetLineLine(t,e,i,s):Math.abs(t[3])>=o&&Math.abs(e[3])<o?this.meetLineCircle(e,t,i,s):Math.abs(t[3])<o&&Math.abs(e[3])>=o?this.meetLineCircle(t,e,i,s):this.meetCircleCircle(t,e,i,s);},meetLineBoard:function(t,s,n){var a,h,l,c,d=[];for(o.exists(n)||(n=0),d[0]=r.crossProduct(t,[n,0,1]),d[1]=r.crossProduct(t,[n,1,0]),d[2]=r.crossProduct(t,[-n-s.canvasHeight,0,1]),d[3]=r.crossProduct(t,[-n-s.canvasWidth,1,0]),l=0;l<4;l++)if(Math.abs(d[l][0])>r.eps){for(c=2;c>0;c--)d[l][c]/=d[l][0];d[l][0]=1;}return Math.abs(d[1][0])<r.eps?(a=d[0],h=d[2]):Math.abs(d[0][0])<r.eps?(a=d[1],h=d[3]):d[1][2]<0?(a=d[0],h=d[3][2]>s.canvasHeight?d[2]:d[3]):d[1][2]>s.canvasHeight?(a=d[2],h=d[3][2]<0?d[0]:d[3]):(a=d[1],h=d[3][2]<0?d[0]:d[3][2]>s.canvasHeight?d[2]:d[3]),a=new i(e.COORDS_BY_SCREEN,a.slice(1),s),h=new i(e.COORDS_BY_SCREEN,h.slice(1),s),[a,h];},meetLineLine:function(t,s,o,n){var a=isNaN(t[5]+s[5])?[0,0,0]:r.crossProduct(t,s);return new i(e.COORDS_BY_USER,a,n);},meetLineCircle:function(t,s,o,n){var a,h,l,c,d,u,p,f,m,g;return s[4]<r.eps?Math.abs(r.innerProduct([1,s[6],s[7]],t,3))<r.eps?new i(e.COORDS_BY_USER,s.slice(6,8),n):new i(e.COORDS_BY_USER,[NaN,NaN],n):(l=s[0],h=s.slice(1,3),a=s[3],c=t[0],d=t.slice(1,3),u=a,p=h[0]*d[1]-h[1]*d[0],f=a*c*c-(h[0]*d[0]+h[1]*d[1])*c+l,m=p*p-4*u*f,m>-r.eps*r.eps?(m=Math.sqrt(Math.abs(m)),g=[(-p+m)/(2*u),(-p-m)/(2*u)],0===o?new i(e.COORDS_BY_USER,[-g[0]*-d[1]-c*d[0],-g[0]*d[0]-c*d[1]],n):new i(e.COORDS_BY_USER,[-g[1]*-d[1]-c*d[0],-g[1]*d[0]-c*d[1]],n)):new i(e.COORDS_BY_USER,[0,0,0],n));},meetCircleCircle:function(t,s,o,n){var a;return t[4]<r.eps?Math.abs(this.distance(t.slice(6,2),s.slice(6,8))-s[4])<r.eps?new i(e.COORDS_BY_USER,t.slice(6,8),n):new i(e.COORDS_BY_USER,[0,0,0],n):s[4]<r.eps?Math.abs(this.distance(s.slice(6,2),t.slice(6,8))-t[4])<r.eps?new i(e.COORDS_BY_USER,s.slice(6,8),n):new i(e.COORDS_BY_USER,[0,0,0],n):(a=[s[3]*t[0]-t[3]*s[0],s[3]*t[1]-t[3]*s[1],s[3]*t[2]-t[3]*s[2],0,1,1/0,1/0,1/0],a=r.normalize(a),this.meetLineCircle(a,t,o,n));},meetCurveCurve:function(t,r,n,a,h,l){var c;return c=o.exists(l)&&\"newton\"===l?s.generalizedNewton(t,r,n,a):3===t.bezierDegree&&3===r.bezierDegree?this.meetBezierCurveRedBlueSegments(t,r,n):this.meetCurveRedBlueSegments(t,r,n),new i(e.COORDS_BY_USER,c,h);},meetCurveLine:function(t,i,r,s,n){var a,h;return o.exists(s)||(s=t.board),t.elementClass===e.OBJECT_CLASS_CURVE?(a=t,h=i):(a=i,h=t),this.meetCurveLineDiscrete(a,h,r,s,!n);},meetCurveLineContinuous:function(t,o,n,a,h){var l,c,d,u,p,f,m,g,b,v,y,C,_,P,E=r.eps,x=r.eps;for(u=this.meetCurveLineDiscrete(t,o,n,a,h),p=u.usrCoords[1],f=u.usrCoords[2],c=function(e){var i,r;return e>t.maxX()||e<t.minX()?1/0:(i=p-t.X(e),r=f-t.Y(e),i*i+r*r);},d=function(e){var i=o.stdform[0]+o.stdform[1]*t.X(e)+o.stdform[2]*t.Y(e);return i*i;},g=50,b=(t.maxX()-t.minX())/g,v=t.minX(),_=1e-4,C=NaN,y=0;y<g&&(l=s.root(c,[Math.max(v,t.minX()),Math.min(v+b,t.maxX())]),!((P=Math.abs(c(l)))<=_&&(_=P,C=l,_<E)));y++)v+=b;return l=C,l=s.root(d,[Math.max(l-b,t.minX()),Math.min(l+b,t.maxX())]),P=d(l),m=isNaN(P)||Math.abs(P)>x?0:1,new i(e.COORDS_BY_USER,[m,t.X(l),t.Y(l)],a);},meetCurveLineContinuousOld:function(o,n,a,h){var l,c,d,u,p,f,m,g,b,v,y,C,_=10*r.eps;if(t.deprecated(\"Geometry.meetCurveLineContinuousOld()\",\"Geometry.meetCurveLineContinuous()\"),u=function(t){var e=n.stdform[0]+n.stdform[1]*o.X(t)+n.stdform[2]*o.Y(t);return e*e;},this.meetCurveLineContinuous.t1memo?(b=this.meetCurveLineContinuous.t1memo,l=s.root(u,b)):(b=o.minX(),v=o.maxX(),l=s.root(u,[b,v])),this.meetCurveLineContinuous.t1memo=l,y=o.X(l),C=o.Y(l),1===a){if(this.meetCurveLineContinuous.t2memo&&(b=this.meetCurveLineContinuous.t2memo),c=s.root(u,b),!(Math.abs(c-l)>.1&&Math.abs(y-o.X(c))>.1&&Math.abs(C-o.Y(c))>.1))for(m=20,g=(o.maxX()-o.minX())/m,f=o.minX(),d=0;d<m&&(c=s.root(u,[f,f+g]),!(Math.abs(u(c))<=_&&Math.abs(c-l)>.1&&Math.abs(y-o.X(c))>.1&&Math.abs(C-o.Y(c))>.1));d++)f+=g;l=c,this.meetCurveLineContinuous.t2memo=l;}return p=Math.abs(u(l))>_?NaN:1,new i(e.COORDS_BY_USER,[p,o.X(l),o.Y(l)],h);},meetCurveLineDiscrete:function(t,s,n,a,h){var l,c,d,u,p,f,m,g=s.point1.coords.usrCoords,b=s.point2.coords.usrCoords,v=0,y=t.numberPoints,C=o.evaluate(s.visProp.straightfirst),_=o.evaluate(s.visProp.straightlast);for(f=new i(e.COORDS_BY_USER,[0,NaN,NaN],a),0===g[0]?g=[1,b[1]+s.stdform[2],b[2]-s.stdform[1]]:0===b[0]&&(b=[1,g[1]+s.stdform[2],g[2]-s.stdform[1]]),u=t.points[0].usrCoords,l=1;l<y;l++)if(d=u.slice(0),u=t.points[l].usrCoords,this.distance(d,u)>r.eps)for(3===t.bezierDegree?(m=this.meetBeziersegmentBeziersegment([t.points[l-1].usrCoords.slice(1),t.points[l].usrCoords.slice(1),t.points[l+1].usrCoords.slice(1),t.points[l+2].usrCoords.slice(1)],[g.slice(1),b.slice(1)],h),l+=2):m=[this.meetSegmentSegment(d,u,g,b)],c=0;c<m.length;c++)if(p=m[c],0<=p[1]&&p[1]<=1){if(v===n)return h&&(!C&&p[2]<0||!_&&p[2]>1)?f:f=new i(e.COORDS_BY_USER,p[0],a);v+=1;}return f;},meetCurveRedBlueSegments:function(t,e,i){var r,s,o,n,a,h,l,c,d,u=0,p=e.numberPoints,f=t.numberPoints;if(p<=1||f<=1)return[0,NaN,NaN];for(r=1;r<f;r++)for(o=t.points[r-1].usrCoords,n=t.points[r].usrCoords,c=Math.min(o[1],n[1]),d=Math.max(o[1],n[1]),h=e.points[0].usrCoords,s=1;s<p;s++)if(a=h,h=e.points[s].usrCoords,Math.min(a[1],h[1])<d&&Math.max(a[1],h[1])>c&&(l=this.meetSegmentSegment(o,n,a,h),l[1]>=0&&l[2]>=0&&(l[1]<1&&l[2]<1||r===f-1&&1===l[1]||s===p-1&&1===l[2]))){if(u===i)return l[0];u++;}return[0,NaN,NaN];},meetSegmentSegment:function(t,e,i,s){var o,n,a,h=r.crossProduct(t,e),l=r.crossProduct(i,s),c=r.crossProduct(h,l),d=c[0];return Math.abs(d)<r.eps?[c,1/0,1/0]:(a=[i[1]-t[1],i[2]-t[2]],o=(a[0]*(s[2]-i[2])-a[1]*(s[1]-i[1]))/d,n=(a[0]*(e[2]-t[2])-a[1]*(e[1]-t[1]))/d,[c,o,n]);},_bezierSplit:function(t){var e,i,r,s,o,n;return e=[.5*(t[0][0]+t[1][0]),.5*(t[0][1]+t[1][1])],i=[.5*(t[1][0]+t[2][0]),.5*(t[1][1]+t[2][1])],r=[.5*(t[2][0]+t[3][0]),.5*(t[2][1]+t[3][1])],s=[.5*(e[0]+i[0]),.5*(e[1]+i[1])],o=[.5*(i[0]+r[0]),.5*(i[1]+r[1])],n=[.5*(s[0]+o[0]),.5*(s[1]+o[1])],[[t[0],e,s,n],[n,o,r,t[3]]];},_bezierBbox:function(t){var e=[];return 4===t.length?(e[0]=Math.min(t[0][0],t[1][0],t[2][0],t[3][0]),e[1]=Math.max(t[0][1],t[1][1],t[2][1],t[3][1]),e[2]=Math.max(t[0][0],t[1][0],t[2][0],t[3][0]),e[3]=Math.min(t[0][1],t[1][1],t[2][1],t[3][1])):(e[0]=Math.min(t[0][0],t[1][0]),e[1]=Math.max(t[0][1],t[1][1]),e[2]=Math.max(t[0][0],t[1][0]),e[3]=Math.min(t[0][1],t[1][1])),e;},_bezierOverlap:function(t,e){return t[2]>=e[0]&&t[0]<=e[2]&&t[1]>=e[3]&&t[3]<=e[1];},_bezierListConcat:function(t,e,i,r){var s,n=o.exists(r),a=0,h=e.length,l=t.length;for(l>0&&h>0&&(1===t[l-1][1]&&0===e[0][1]||n&&1===t[l-1][2]&&0===e[0][2])&&(a=1),s=a;s<h;s++)n&&(e[s][2]*=.5,e[s][2]+=r),e[s][1]*=.5,e[s][1]+=i,t.push(e[s]);},_bezierMeetSubdivision:function(t,e,i){var r,s,o,n,a,h,l,c,d,u,p,f,m=[];return s=this._bezierBbox(e),r=this._bezierBbox(t),this._bezierOverlap(s,r)?i<5?(o=this._bezierSplit(t),h=o[0],l=o[1],o=this._bezierSplit(e),n=o[0],a=o[1],this._bezierListConcat(m,this._bezierMeetSubdivision(h,n,i+1),0,0),this._bezierListConcat(m,this._bezierMeetSubdivision(h,a,i+1),0,.5),this._bezierListConcat(m,this._bezierMeetSubdivision(l,n,i+1),.5,0),this._bezierListConcat(m,this._bezierMeetSubdivision(l,a,i+1),.5,.5),m):(p=[1].concat(t[0]),f=[1].concat(t[3]),d=[1].concat(e[0]),u=[1].concat(e[3]),c=this.meetSegmentSegment(p,f,d,u),c[1]>=0&&c[2]>=0&&c[1]<=1&&c[2]<=1?[c]:[]):[];},_bezierLineMeetSubdivision:function(t,e,i,r){var s,o,n,a,h,l,c,d,u,p,f=[];return s=this._bezierBbox(e),o=this._bezierBbox(t),r&&!this._bezierOverlap(o,s)?[]:i<5?(n=this._bezierSplit(t),a=n[0],h=n[1],this._bezierListConcat(f,this._bezierLineMeetSubdivision(a,e,i+1),0),this._bezierListConcat(f,this._bezierLineMeetSubdivision(h,e,i+1),.5),f):(u=[1].concat(t[0]),p=[1].concat(t[3]),c=[1].concat(e[0]),d=[1].concat(e[1]),l=this.meetSegmentSegment(u,p,c,d),l[1]>=0&&l[1]<=1&&(!r||l[2]>=0&&l[2]<=1)?[l]:[]);},meetBeziersegmentBeziersegment:function(t,e,i){var r,s,o;for(r=4===t.length&&4===e.length?this._bezierMeetSubdivision(t,e,0):this._bezierLineMeetSubdivision(t,e,0,i),r.sort(function(t,e){return 1e7*(t[1]-e[1])+(t[2]-e[2]);}),s=[],o=0;o<r.length;o++)0!==o&&r[o][1]===r[o-1][1]&&r[o][2]===r[o-1][2]||s.push(r[o]);return s;},meetBezierCurveRedBlueSegments:function(t,e,i){var r,s,o,n,a,h,l,c=e.numberPoints,d=t.numberPoints,u=[];if(c<4||d<4)return[0,NaN,NaN];for(s=0;s<d-3;s+=3)for(r=t.points,n=[[r[s].usrCoords[1],r[s].usrCoords[2]],[r[s+1].usrCoords[1],r[s+1].usrCoords[2]],[r[s+2].usrCoords[1],r[s+2].usrCoords[2]],[r[s+3].usrCoords[1],r[s+3].usrCoords[2]]],h=this._bezierBbox(n),o=0;o<c-3;o+=3)if(r=e.points,a=[[r[o].usrCoords[1],r[o].usrCoords[2]],[r[o+1].usrCoords[1],r[o+1].usrCoords[2]],[r[o+2].usrCoords[1],r[o+2].usrCoords[2]],[r[o+3].usrCoords[1],r[o+3].usrCoords[2]]],l=this._bezierBbox(a),this._bezierOverlap(h,l)&&(u=u.concat(this.meetBeziersegmentBeziersegment(n,a)),u.length>i))return u[i][0];return u.length>i?u[i][0]:[0,NaN,NaN];},bezierSegmentEval:function(t,e){var i,r,s,o=1-t;return r=0,s=0,i=o*o*o,r+=i*e[0][0],s+=i*e[0][1],i=3*t*o*o,r+=i*e[1][0],s+=i*e[1][1],i=3*t*t*o,r+=i*e[2][0],s+=i*e[2][1],i=t*t*t,r+=i*e[3][0],s+=i*e[3][1],[1,r,s];},bezierArc:function(t,e,i,s,o){var n,a,h,l,c,d,u,p,f,m,g,b,v,y,C,_,P,E=.5*Math.PI,x=e[1],S=e[2],O=e[0],w=[],T=[];for(c=this.distance(e,t),x/=O,S/=O,d=this.rad(t.slice(1),e.slice(1),i.slice(1)),-1===o&&(d=2*Math.PI-d),n=t,n[1]/=n[0],n[2]/=n[0],n[0]/=n[0],l=n.slice(0),s?(w=[x,x+.333*(n[1]-x),x+.666*(n[1]-x),n[1]],T=[S,S+.333*(n[2]-S),S+.666*(n[2]-S),n[2]]):(w=[n[1]],T=[n[2]]);d>r.eps;)d>E?(u=E,d-=E):(u=d,d=0),p=Math.cos(o*u),f=Math.sin(o*u),P=[[1,0,0],[x*(1-p)+S*f,p,-f],[S*(1-p)-x*f,f,p]],C=r.matVecMult(P,n),l=[C[0]/C[0],C[1]/C[0],C[2]/C[0]],m=n[1]-x,g=n[2]-S,b=l[1]-x,v=l[2]-S,_=Math.sqrt((m+b)*(m+b)+(g+v)*(g+v)),y=Math.abs(v-g)>r.eps?(m+b)*(c/_-.5)/(v-g)*8/3:(g+v)*(c/_-.5)/(m-b)*8/3,a=[1,n[1]-y*g,n[2]+y*m],h=[1,l[1]+y*v,l[2]-y*b],w=w.concat([a[1],h[1],l[1]]),T=T.concat([a[2],h[2],l[2]]),n=l.slice(0);return s&&(w=w.concat([l[1]+.333*(x-l[1]),l[1]+.666*(x-l[1]),x]),T=T.concat([l[2]+.333*(S-l[2]),l[2]+.666*(S-l[2]),S])),[w,T];},projectPointToCircle:function(t,s,n){var a,h,l,c,d,u=s.center.coords.usrCoords;return o.exists(n)||(n=t.board),o.isPoint(t)?(a=t.coords.distance(e.COORDS_BY_USER,s.center.coords),h=t.coords.usrCoords):(a=t.distance(e.COORDS_BY_USER,s.center.coords),h=t.usrCoords),Math.abs(a)<r.eps&&(a=r.eps),d=s.Radius()/a,l=u[1]+d*(h[1]-u[1]),c=u[2]+d*(h[2]-u[2]),new i(e.COORDS_BY_USER,[l,c],n);},projectPointToLine:function(t,s,n){var a,h=[0,s.stdform[1],s.stdform[2]];return o.exists(n)||(n=o.exists(t.coords)?t.board:s.board),a=o.exists(t.coords)?t.coords.usrCoords:t.usrCoords,h=r.crossProduct(h,a),new i(e.COORDS_BY_USER,r.crossProduct(h,s.stdform),n);},projectCoordsToSegment:function(t,e,i){var s,o,n=[i[1]-e[1],i[2]-e[2]],a=[t[1]-e[1],t[2]-e[2]];return Math.abs(n[0])<r.eps&&Math.abs(n[1])<r.eps?[e,0]:(s=r.innerProduct(a,n),o=r.innerProduct(n,n),s/=o,[[1,s*n[0]+e[1],s*n[1]+e[2]],s]);},projectCoordsToBeziersegment:function(e,i,r){var s,o=function(t){var s=[1,i.X(r+t),i.Y(r+t)];return s[1]-=e[1],s[2]-=e[2],s[1]*s[1]+s[2]*s[2];};return s=t.Math.Numerics.fminbr(o,[0,1]),[[1,i.X(s+r),i.Y(s+r)],s];},projectPointToCurve:function(t,e,i){o.exists(i)||(i=t.board);var r=t.X(),s=t.Y(),n=t.position||0,a=this.projectCoordsToCurve(r,s,n,e,i);return t.position=a[1],a[0];},projectCoordsToCurve:function(t,r,n,a,h){var l,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O,w,T,N,M=Number.POSITIVE_INFINITY;if(o.exists(h)||(h=a.board),\"plot\"===o.evaluate(a.visProp.curvetype)){if(n=0,p=M,l=0===a.numberPoints?[0,1,1]:[a.Z(0),a.X(0),a.Y(0)],a.numberPoints>1)for(g=[1,t,r],3===a.bezierDegree?u=0:y=[a.Z(0),a.X(0),a.Y(0)],d=0;d<a.numberPoints-1;d++)3===a.bezierDegree?_=this.projectCoordsToBeziersegment(g,a,u):(C=[a.Z(d+1),a.X(d+1),a.Y(d+1)],_=this.projectCoordsToSegment(g,y,C)),m=_[1],b=_[0],0<=m&&m<=1?(f=this.distance(b,g),v=d+m):m<0?(b=y,f=this.distance(y,g),v=d):m>1&&d===a.numberPoints-2&&(b=C,f=this.distance(b,g),v=a.numberPoints-1),f<p&&(p=f,n=v,l=b),3===a.bezierDegree?(u++,d+=2):y=C;c=new i(e.COORDS_BY_USER,l,h);}else{for(P=function(e){var i,s;return e<a.minX()||e>a.maxX()?NaN:(i=t-a.X(e),s=r-a.Y(e),i*i+s*s);},S=P(n),w=50,O=(a.maxX()-a.minX())/w,E=a.minX(),d=0;d<w;d++)x=P(E),(x<S||isNaN(S))&&(n=E,S=x),E+=O;n=s.fminbr(P,[n-O,n+O]),T=a.minX(),N=a.maxX(),n=n<T?T:n,n=n>N?N:n,c=new i(e.COORDS_BY_USER,[a.X(n),a.Y(n)],h);}return[a.updateTransform(c),n];},projectCoordsToPolygon:function(e,i){var r,s,o,n,a=i.vertices.length,h=1/0;for(r=0;r<a;r++)o=t.Math.Geometry.projectCoordsToSegment(e,i.vertices[r].coords.usrCoords,i.vertices[(r+1)%a].coords.usrCoords),s=t.Math.Geometry.distance(o[0],e,3),0<=o[1]&&o[1]<=1&&s<h&&(n=o[0].slice(0),h=s);return n;},projectPointToTurtle:function(t,r,s){var n,a,h,l,c,d,u,p,f=0,m=0,g=Number.POSITIVE_INFINITY,b=r.objects.length;for(o.exists(s)||(s=t.board),c=0;c<b;c++)u=r.objects[c],u.elementClass===e.OBJECT_CLASS_CURVE&&(n=this.projectPointToCurve(t,u),d=this.distance(n.usrCoords,t.coords.usrCoords),d<g&&(h=n.usrCoords[1],l=n.usrCoords[2],a=t.position,g=d,p=u,m=f),f+=u.numberPoints);return n=new i(e.COORDS_BY_USER,[h,l],s),t.position=a+m,p.updateTransform(n);},projectPointToPoint:function(t,e){return e.coords;},projectPointToBoard:function(t,e){var i,s,o,n=e||t.board,a=[[1,1,0,0,3,0,1],[-1,2,1,0,1,2,1],[-1,1,2,2,1,2,3],[1,2,3,0,3,2,3]],h=t.coords||t,l=n.getBoundingBox();for(i=0;i<4;i++)o=a[i],o[0]*h.usrCoords[o[1]]<o[0]*l[o[2]]&&(s=r.crossProduct([1,l[o[3]],l[o[4]]],[1,l[o[5]],l[o[6]]]),s[3]=0,s=r.normalize(s),h=this.projectPointToLine({coords:h},{stdform:s},n));return h;},distPointLine:function(t,e){var i,s=e[1],o=e[2],n=e[0];return Math.abs(s)+Math.abs(o)<r.eps?Number.POSITIVE_INFINITY:(i=s*t[1]+o*t[2]+n,s*=s,o*=o,Math.abs(i)/Math.sqrt(s+o));},reuleauxPolygon:function(t,e){var i,s=2*Math.PI,o=s/e,n=(e-1)/2,a=0,h=function(h,l){return function(c,d){var u=(c%s+s)%s,p=Math.floor(u/o)%e;return d||(a=t[0].Dist(t[n]),i=r.Geometry.rad([t[0].X()+1,t[0].Y()],t[0],t[n%e])),isNaN(p)?p:(u=.5*u+p*o*.5+i,t[p][h]()+a*Math[l](u));};};return[h(\"X\",\"cos\"),h(\"Y\",\"sin\"),0,s];}}),r.Geometry;}),define(\"math/plot\",[\"jxg\",\"base/constants\",\"base/coords\",\"math/math\",\"math/extrapolate\",\"math/numerics\",\"math/statistics\",\"math/geometry\",\"math/ia\",\"utils/type\"],function(t,e,i,r,s,o,n,a,h,l){\"use strict\";return r.Plot={checkReal:function(t){var e,i,s=!1,o=t.length;for(e=0;e<o;e++)if(i=t[e].usrCoords,!isNaN(i[1])&&!isNaN(i[2])&&Math.abs(i[0])>r.eps){s=!0;break;}return s;},updateParametricCurveNaive:function(t,i,r,s){var o,n,a=!1,h=(r-i)/s;for(o=0;o<s;o++)n=i+o*h,t.points[o].setCoordinates(e.COORDS_BY_USER,[t.X(n,a),t.Y(n,a)],!1),t.points[o]._t=n,a=!0;return t;},isSegmentOutside:function(t,e,i,r,s){return e<0&&r<0||e>s.canvasHeight&&r>s.canvasHeight||t<0&&i<0||t>s.canvasWidth&&i>s.canvasWidth;},isDistOK:function(t,e,i,r){return Math.abs(t)<i&&Math.abs(e)<r&&!isNaN(t+e);},isSegmentDefined:function(t,e,i,r){return!(isNaN(t+e)&&isNaN(i+r));},updateParametricCurveOld:function(s,o,n){var a,h,l,c,d,u,p,f,m,g,b,v=!1,y=new i(e.COORDS_BY_USER,[0,0],s.board,!1),C=[],_=[],P=[],E=[],x=!1,S=0;for(t.deprecated(\"Curve.updateParametricCurveOld()\"),s.board.updateQuality===s.board.BOARD_QUALITY_LOW?(m=15,g=10,b=10):(m=21,g=.7,b=.7),E[0]=n-o,a=1;a<m;a++)E[a]=.5*E[a-1];a=1,C[0]=1,_[0]=0,h=o,y.setCoordinates(e.COORDS_BY_USER,[s.X(h,v),s.Y(h,v)],!1),v=!0,d=y.scrCoords[1],u=y.scrCoords[2],h=n,y.setCoordinates(e.COORDS_BY_USER,[s.X(h,v),s.Y(h,v)],!1),l=y.scrCoords[1],c=y.scrCoords[2],P[0]=[l,c],p=1,f=0,s.points=[],s.points[S++]=new i(e.COORDS_BY_SCREEN,[d,u],s.board,!1);do{for(x=this.isDistOK(l-d,c-u,g,b)||this.isSegmentOutside(d,u,l,c,s.board);f<m&&(!x||f<6)&&(f<=7||this.isSegmentDefined(d,u,l,c));)C[p]=a,_[p]=f,P[p]=[l,c],p+=1,a=2*a-1,f++,h=o+a*E[f],y.setCoordinates(e.COORDS_BY_USER,[s.X(h,v),s.Y(h,v)],!1,!0),l=y.scrCoords[1],c=y.scrCoords[2],x=this.isDistOK(l-d,c-u,g,b)||this.isSegmentOutside(d,u,l,c,s.board);S>1&&function(t,e,i){var s,o,n=i[1]-t[1],a=i[2]-t[2],h=e[0]-t[1],l=e[1]-t[2],c=h*h+l*l;return c>=r.eps&&(s=(n*h+a*l)/c)>0&&(s<=1?(n-=s*h,a-=s*l):(n-=h,a-=l)),o=n*n+a*a,Math.sqrt(o);}(s.points[S-2].scrCoords,[l,c],s.points[S-1].scrCoords)<.015&&(S-=1),s.points[S]=new i(e.COORDS_BY_SCREEN,[l,c],s.board,!1),s.points[S]._t=h,S+=1,d=l,u=c,h,p-=1,l=P[p][0],c=P[p][1],f=_[p]+1,a=2*C[p];}while(p>0&&S<5e5);return s.numberPoints=s.points.length,s;},_insertPoint_v2:function(t,e,i){var r=!isNaN(this._lastCrds[1]+this._lastCrds[2]),s=!isNaN(e.scrCoords[1]+e.scrCoords[2]),o=t.board.canvasWidth,n=t.board.canvasHeight;(!(s=s&&e.scrCoords[1]>-500&&e.scrCoords[2]>-500&&e.scrCoords[1]<o+500&&e.scrCoords[2]<n+500)&&r||s&&(!r||Math.abs(e.scrCoords[1]-this._lastCrds[1])>.7||Math.abs(e.scrCoords[2]-this._lastCrds[2])>.7))&&(e._t=i,t.points.push(e),this._lastCrds=e.copy(\"scrCoords\"));},neighborhood_isNaN_v2:function(t,s){var o,n,a=new i(e.COORDS_BY_USER,[0,0],t.board,!1);return o=s+r.eps,a.setCoordinates(e.COORDS_BY_USER,[t.X(o,!0),t.Y(o,!0)],!1),n=a.usrCoords,!!(isNaN(n[1]+n[2])||(o=s-r.eps,a.setCoordinates(e.COORDS_BY_USER,[t.X(o,!0),t.Y(o,!0)],!1),n=a.usrCoords,isNaN(n[1]+n[2])));},_borderCase:function(t,r,s,o,n,a,h,l){var c,d,u,p,f,m,g,b,v,y,C,_=null,P=!1;if(l<=1){if(d=new i(e.COORDS_BY_USER,[0,0],t.board,!1),isNaN(r[1]+r[2])&&!isNaN(o[1]+o[2])&&!this.neighborhood_isNaN_v2(t,n))return!1;if(isNaN(s[1]+s[2])&&!isNaN(o[1]+o[2])&&!this.neighborhood_isNaN_v2(t,a))return!1;if(isNaN(o[1]+o[2])&&(!isNaN(r[1]+r[2])||!isNaN(s[1]+s[2]))&&!this.neighborhood_isNaN_v2(t,h))return!1;p=0;do{if(isNaN(r[1]+r[2])&&!isNaN(o[1]+o[2]))f=n,m=h,g=a;else if(isNaN(s[1]+s[2])&&!isNaN(o[1]+o[2]))f=a,m=h,g=n;else if(isNaN(o[1]+o[2])&&!isNaN(s[1]+s[2]))f=h,m=a,g=a+(a-h);else{if(!isNaN(o[1]+o[2])||isNaN(r[1]+r[2]))return!1;f=h,m=n,g=n-(h-n);}c=.5*(f+m),d.setCoordinates(e.COORDS_BY_USER,[t.X(c,!0),t.Y(c,!0)],!1),u=d.usrCoords,P=isNaN(u[1]+u[2]),P?f=c:(g=m,m=c),++p;}while(P&&p<30);if(p<30&&(_=u.slice(),o=u.slice(),m=c),b=t.X(m,!0),y=t.X(g,!0),(b-y)/(m-g),v=t.Y(m,!0),C=t.Y(g,!0),(v-C)/(m-g),null!==_)return this._insertPoint_v2(t,new i(e.COORDS_BY_USER,_,t.board,!1)),!0;}return!1;},_plotRecursive_v2:function(t,r,s,o,n,a,h){var l,c,d,u,p,f,m=0,g=new i(e.COORDS_BY_USER,[0,0],t.board,!1);if(!(t.numberPoints>65536))return a<this.nanLevel&&this._isUndefined(t,r,s,o,n)?this:a<this.nanLevel&&this._isOutside(r,s,o,n,t.board)?this:(l=.5*(s+n),g.setCoordinates(e.COORDS_BY_USER,[t.X(l,!0),t.Y(l,!0)],!1),c=g.scrCoords,this._borderCase(t,r,o,c,s,n,l,a)?this:(d=this._triangleDists(r,o,c),u=a<this.smoothLevel&&d[3]<h,p=a<this.jumpLevel&&(d[2]>.99*d[0]||d[1]>.99*d[0]||d[0]===1/0||d[1]===1/0||d[2]===1/0),f=a<this.smoothLevel+2&&d[0]<.5*(d[1]+d[2]),f&&(m=0,u=!1),--a,p?this._insertPoint_v2(t,new i(e.COORDS_BY_SCREEN,[NaN,NaN],t.board,!1),l):a<=m||u?this._insertPoint_v2(t,g,l):(this._plotRecursive_v2(t,r,s,c,l,a,h),isNaN(g.scrCoords[1]+g.scrCoords[2])||this._insertPoint_v2(t,g,l),this._plotRecursive_v2(t,c,l,o,n,a,h)),this));},updateParametricCurve_v2:function(t,r,s){var o,n,a,h,c,d,u,p,f,m=!1,g=new i(e.COORDS_BY_USER,[0,0],t.board,!1),b=new i(e.COORDS_BY_USER,[0,0],t.board,!1);return t.board.updateQuality===t.board.BOARD_QUALITY_LOW?(c=l.evaluate(t.visProp.recursiondepthlow)||13,d=2,this.smoothLevel=c-6,this.jumpLevel=3):(c=l.evaluate(t.visProp.recursiondepthhigh)||17,d=2,this.smoothLevel=c-9,this.jumpLevel=2),this.nanLevel=c-4,t.points=[],\"x\"===this.xterm?(p=t.board.getBoundingBox(),u=.3*(p[2]-p[0]),.3*(p[1]-p[3]),o=Math.max(r,p[0]-u),n=Math.min(s,p[2]+u)):(o=r,n=s),g.setCoordinates(e.COORDS_BY_USER,[t.X(o,m),t.Y(o,m)],!1),m=!0,b.setCoordinates(e.COORDS_BY_USER,[t.X(n,m),t.Y(n,m)],!1),f=this._findStartPoint(t,g.scrCoords,o,b.scrCoords,n),g.setCoordinates(e.COORDS_BY_SCREEN,f[0],!1),o=f[1],f=this._findStartPoint(t,b.scrCoords,n,g.scrCoords,o),b.setCoordinates(e.COORDS_BY_SCREEN,f[0],!1),n=f[1],this._visibleArea=[o,n],a=g.copy(\"scrCoords\"),h=b.copy(\"scrCoords\"),g._t=o,t.points.push(g),this._lastCrds=g.copy(\"scrCoords\"),this._plotRecursive_v2(t,a,o,h,n,c,d),b._t=n,t.points.push(b),t.numberPoints=t.points.length,t;},_insertLimesPoint:function(t,s,o,n,a){var h,l,c;Math.abs(this._lastUsrCrds[1])===1/0&&Math.abs(a.left_x)===1/0||Math.abs(this._lastUsrCrds[2])===1/0&&Math.abs(a.left_y)===1/0||(h=new i(e.COORDS_BY_USER,[a.left_x,a.left_y],t.board),h._t=o,t.points.push(h),isNaN(a.left_x)||isNaN(a.left_y)||isNaN(a.right_x)||isNaN(a.right_y)||!(Math.abs(a.left_x-a.right_x)>r.eps||Math.abs(a.left_y-a.right_y)>r.eps)||(l=new i(e.COORDS_BY_SCREEN,s,t.board),l._t=o,t.points.push(l)),c=new i(e.COORDS_BY_USER,[a.right_x,a.right_y],t.board),c._t=o,t.points.push(c),this._lastScrCrds=c.copy(\"scrCoords\"),this._lastUsrCrds=c.copy(\"usrCoords\"));},_insertPoint:function(t,r,s,o,n){var a,h=!isNaN(this._lastScrCrds[1]+this._lastScrCrds[2]),c=!isNaN(r[1]+r[2]),d=t.board.canvasWidth,u=t.board.canvasHeight;if(l.exists(n))return void this._insertLimesPoint(t,r,s,o,n);c=c&&r[1]>-500&&r[2]>-500&&r[1]<d+500&&r[2]<u+500,(h||c)&&(c&&h&&Math.abs(r[1]-this._lastScrCrds[1])<.8&&Math.abs(r[2]-this._lastScrCrds[2])<.8||Math.abs(r[1])===1/0&&Math.abs(this._lastUsrCrds[1])===1/0||Math.abs(r[2])===1/0&&Math.abs(this._lastUsrCrds[2])===1/0||(a=new i(e.COORDS_BY_SCREEN,r,t.board),a._t=s,t.points.push(a),this._lastScrCrds=a.copy(\"scrCoords\"),this._lastUsrCrds=a.copy(\"usrCoords\")));},_triangleDists:function(t,e,i){var r,s,o,n,h;return r=[t[0]*e[0],.5*(t[1]+e[1]),.5*(t[2]+e[2])],s=a.distance(t,e,3),o=a.distance(t,i,3),n=a.distance(i,e,3),h=a.distance(i,r,3),[s,o,n,h];},_isUndefined:function(t,r,s,o,n){var a,h,l;if(!isNaN(r[1]+r[2])||!isNaN(o[1]+o[2]))return!1;for(l=new i(e.COORDS_BY_USER,[0,0],t.board,!1),h=0;h<20;++h)if(a=s+Math.random()*(n-s),l.setCoordinates(e.COORDS_BY_USER,[t.X(a,!0),t.Y(a,!0)],!1),!isNaN(l.scrCoords[0]+l.scrCoords[1]+l.scrCoords[2]))return!1;return!0;},_isOutside:function(t,e,i,r,s){var o=s.canvasWidth,n=s.canvasHeight;return!!(t[1]<-500&&i[1]<-500||t[2]<-500&&i[2]<-500||t[1]>o+500&&i[1]>o+500||t[2]>n+500&&i[2]>n+500);},_isOutsidePoint:function(t,e){var i=e.canvasWidth,r=e.canvasHeight;return!!(t[1]<-500||t[2]<-500||t[1]>i+500||t[2]>r+500);},_findStartPoint:function(t,r,s,o,n){new i(e.COORDS_BY_USER,[0,0],t.board,!1),t.board.getBoundingBox();return[r,s];},_getBorderPos:function(t,s,o,n,a,h,l){var c,d,u,p,f,m,g=!1;if(d=new i(e.COORDS_BY_USER,[0,0],t.board,!1),p=0,isNaN(o[1]+o[2])&&!isNaN(a[1]+a[2]))m=s,f=n,h;else if(isNaN(l[1]+l[2])&&!isNaN(a[1]+a[2]))m=h,f=n,s;else if(isNaN(a[1]+a[2])&&!isNaN(l[1]+l[2]))m=n,f=h,h+(h-n);else{if(!isNaN(a[1]+a[2])||isNaN(o[1]+o[2]))return!1;m=n,f=s,s-(n-s);}do{c=.5*(f+m),d.setCoordinates(e.COORDS_BY_USER,[t.X(c,!0),t.Y(c,!0)],!1),u=d.usrCoords,g=isNaN(u[1]+u[2]),g?m=c:(f,f=c),++p;}while(p<30&&Math.abs(f-m)>r.eps);return c;},_getCuspPos:function(t,e,i){var r=[t.X(e,!0),t.Y(e,!0)],s=[t.X(i,!0),t.Y(i,!0)],n=function(e){var i=[t.X(e,!0),t.Y(e,!0)];return-(Math.sqrt((r[0]-i[0])*(r[0]-i[0])+(r[1]-i[1])*(r[1]-i[1]))+Math.sqrt((s[0]-i[0])*(s[0]-i[0])+(s[1]-i[1])*(s[1]-i[1])));};return o.fminbr(n,[e,i],t);},_getJumpPos:function(t,e,i){var s=function(e){var i=r.eps*r.eps,s=[t.X(e,!0),t.Y(e,!0)],o=[t.X(e+i,!0),t.Y(e+i,!0)];return-Math.abs((o[1]-s[1])/(o[0]-s[0]));};return o.fminbr(s,[e,i],t);},_getLimits:function(t,e){var i,r,o,n,a,h=2/(t.maxX()-t.minX());return i=s.limit(e,-h,t.X),r=i[0],\"infinite\"===i[1]&&(r=Math.sign(r)*(1/0)),i=s.limit(e,-h,t.Y),n=i[0],\"infinite\"===i[1]&&(n=Math.sign(n)*(1/0)),i=s.limit(e,h,t.X),o=i[0],\"infinite\"===i[1]&&(o=Math.sign(o)*(1/0)),i=s.limit(e,h,t.Y),a=i[0],\"infinite\"===i[1]&&(a=Math.sign(a)*(1/0)),{left_x:r,left_y:n,right_x:o,right_y:a,t:e};},_getLimes:function(t,e,i,r,s,o,n,a,h){var l;return\"border\"===a?l=this._getBorderPos(t,e,i,r,s,o,n):\"cusp\"===a?l=this._getCuspPos(t,e,o):\"jump\"===a&&(l=this._getJumpPos(t,e,o)),this._getLimits(t,l);},_plotNonRecursive:function(t,e,i,r,s,o){var n,a,h,l,c,d,u,p,f,m,g,b=null,v=!1,y=\"\",C=[],_=0;for(p=t.board.origin.scrCoords,C[_++]=[e,i,r,s,o,1/0];_>0;){if(g=C[--_],e=g[0],i=g[1],r=g[2],s=g[3],f=g[4],m=g[5],v=!1,y=\"\",b=null,t.points.length>65536)return;if(f<this.nanLevel){if(this._isUndefined(t,e,i,r,s))continue;if(this._isOutside(e,i,r,s,t.board))continue;}n=.5*(i+s),d=t.X(n,!0),u=t.Y(n,!0),a=[1,p[1]+d*t.board.unitX,p[2]-u*t.board.unitY],h=this._triangleDists(e,r,a),l=isNaN(e[1]+e[2]),c=isNaN(r[1]+r[2]),l&&!c||!l&&c?y=\"border\":h[0]>.66*m||h[0]<this.cusp_threshold*(h[1]+h[2])||h[1]>5*h[2]||h[2]>5*h[1]?y=\"cusp\":(h[2]>this.jump_threshold*h[0]||h[1]>this.jump_threshold*h[0]||h[0]===1/0||h[1]===1/0||h[2]===1/0)&&(y=\"jump\"),v=\"\"===y&&f<this.smoothLevel&&h[3]<this.smooth_threshold,f<this.testLevel&&!v&&(\"\"===y?v=!0:b=this._getLimes(t,i,e,n,a,s,r,y,f)),null!==b?(a=[1,NaN,NaN],this._insertPoint(t,a,n,f,b)):f<=0||v?this._insertPoint(t,a,n,f,null):(C[_++]=[a,n,r,s,f-1,h[0]],C[_++]=[e,i,a,n,f-1,h[0]]);}return this;},updateParametricCurve_v3:function(t,r,s){var o,n,a,h,c,d,u,p,f=!1,m=new i(e.COORDS_BY_USER,[0,0],t.board,!1),g=new i(e.COORDS_BY_USER,[0,0],t.board,!1);return c=t.board.updateQuality===t.board.BOARD_QUALITY_LOW?l.evaluate(t.visProp.recursiondepthlow)||14:l.evaluate(t.visProp.recursiondepthhigh)||17,this.smoothLevel=7,this.nanLevel=c-4,this.testLevel=4,this.cusp_threshold=.5,this.jump_threshold=.99,this.smooth_threshold=2,t.points=[],\"x\"===t.xterm?(u=t.board.getBoundingBox(),d=.3*(u[2]-u[0]),o=Math.max(r,u[0]-d),n=Math.min(s,u[2]+d)):(o=r,n=s),m.setCoordinates(e.COORDS_BY_USER,[t.X(o,f),t.Y(o,f)],!1),f=!0,g.setCoordinates(e.COORDS_BY_USER,[t.X(n,f),t.Y(n,f)],!1),p=this._findStartPoint(t,m.scrCoords,o,g.scrCoords,n),m.setCoordinates(e.COORDS_BY_SCREEN,p[0],!1),o=p[1],p=this._findStartPoint(t,g.scrCoords,n,m.scrCoords,o),g.setCoordinates(e.COORDS_BY_SCREEN,p[0],!1),n=p[1],this._visibleArea=[o,n],a=m.copy(\"scrCoords\"),h=g.copy(\"scrCoords\"),m._t=o,t.points.push(m),this._lastScrCrds=m.copy(\"scrCoords\"),this._lastUsrCrds=m.copy(\"usrCoords\"),this._plotNonRecursive(t,a,o,h,n,c),g._t=n,t.points.push(g),t.numberPoints=t.points.length,t;},_criticalInterval:function(t,e,i){var r,s,o,a,h,l,c,d=!1,u=-1/0,p=!1,f=!1,m=0,g=[],b=[],v=[];for(c=n.abs(t),a=n.median(c),a<1e-7?(a=1e-7,p=!0):a*=this.criticalThreshold,r=0;r<e;r++)c[r]>a?(v.push({i:r,v:t[r],group:m}),u=r,d||(d=!0)):d&&r>u+4&&(v.length>0&&g.push(v.slice(0)),v=[],d=!1,m++);for(d&&v.length>1&&g.push(v.slice(0)),p&&0===g.length&&(f=!0),s=0;s<g.length;s++)if(b[s]=\"point\",!((o=g[s].length)<64)){for(l=0,h=Math.sign(g[s][0].v),r=1;r<o;r++)Math.sign(g[s][r].v)!==h&&(l++,h=Math.sign(g[s][r].v));6*l>o&&(b[s]=\"interval\");}return{smooth:f,groups:g,types:b};},Component:function(){this.left_isNaN=!1,this.right_isNaN=!1,this.left_t=null,this.right_t=null,this.t_values=[],this.x_values=[],this.y_values=[],this.len=0;},findComponents:function(t,e,i,r){var s,o,n,a,h,l,c=[],d=0,u=0,p=0,f=!1,m=!1;for(n=(i-e)/r,c[d]=new this.Component(),l=c[d],s=0,o=e;s<=r;s++,o+=n)a=t.X(o,m),h=t.Y(o,m),isNaN(a)||isNaN(h)?++p>1&&f&&(l.right_isNaN=!0,l.right_t=o-n,l.len=u,f=!1,d++,c[d]=new this.Component(),l=c[d],p=0):(f||(f=!0,u=0,p>0&&(l.left_t=o-n,l.left_isNaN=!0)),p=0,l.t_values[u]=o,l.x_values[u]=a,l.y_values[u]=h,u++),0===s&&(m=!0);return f?l.len=u:c.pop(),c;},getPointType:function(t,e,i,r,s,o,n){var a=s[0],h=o[0],l=r.length,c={idx:e,t:i,x:a[e],y:h[e],type:\"other\"};return e<5?(c.type=\"borderleft\",c.idx=0,c.t=r[0],c.x=a[0],c.y=h[0],c):e>n-6?(c.type=\"borderright\",c.idx=l-1,c.t=r[l-1],c.x=a[l-1],c.y=h[l-1],c):c;},newtonApprox:function(t,e,i,r,s){var o,n=0;for(o=r;o>0;o--)n=(n+s[o][t])*(e-(o-1)*i)/o;return n+s[0][t];},thiele:function(t,e,i,r,s){var o,n=0;for(o=s;o>1;o--)n=(t-i[r+o])/(e[o][r+1]-e[o-2][r+1]+n);return e[0][r+1]+(t-i[r+1])/(e[1][r+1]+n);},differenceMethodExperiments:function(t,e){var i,r,s,o,n,a,h,l,c,d,u,p=t.t_values,f=t.x_values,m=t.y_values,g=[],b=[],v=[],y=[],C=[],_=[],P=[],E=[],x=0,S=[];for(n=p[1]-p[0],C.push([]),_.push([]),P.push([]),E.push([]),s=m.length,i=0;i<s;i++)C[0][i]=f[i],_[0][i]=m[i],P[0][i]=f[i],E[0][i]=m[i];for(C.push([]),_.push([]),P.push([]),E.push([]),a=n,s=m.length-1,i=0;i<s;i++)g[i]=f[i+1]-f[i],b[i]=m[i+1]-m[i],v[i]=g[i],y[i]=b[i],C[1][i]=g[i],_[1][i]=b[i],P[1][i]=a/g[i],E[1][i]=a/b[i];for(s--,o=Math.min(8,m.length-1),r=1;r<o;r++){for(C.push([]),_.push([]),P.push([]),E.push([]),a*=n,i=0;i<s;i++)g[i]=g[i+1]-g[i],b[i]=b[i+1]-b[i],C[r+1][i]=g[i],_[r+1][i]=b[i],P[r+1][i]=a/(P[r][i+1]-P[r][i])+P[r-1][i+1],E[r+1][i]=a/(E[r][i+1]-E[r][i])+E[r-1][i+1];if(!1===(u=this._criticalPoints(b,s,r))){console.log(\"Polynomial of degree\",r),u=[];break;}if(u.length>0&&++x>1&&r%2==0)break;s--;}for(i=0;i<u.length;i++){for(l=-1/0,c=0;c<u[i].length;c++)(d=Math.abs(u[i][c].v))>l&&(l=d,h=c);h=Math.floor(u[i][h].i+r/2),S.push(this.getPointType(e,h,p,f,m,v,y,s+1));}return[S,C,_,P,E];},getCenterOfCriticalInterval:function(t,e,i){var r,s,o,n,a,h=0,l=0,c=i[1]-i[0],d=[];for(r=-1/0,d=[],s=0;s<t.length;s++)n=Math.abs(t[s].v),n>r?(d=[s],r=n,o=s):r===n&&d.push(s);if(d.length>0&&(a=d.reduce(function(t,e){return t+e;},0)/d.length,o=Math.floor(a),a+=t[0].i),r<1/0){for(s=0;s<t.length;s++)h+=Math.abs(t[s].v)*t[s].i,l+=Math.abs(t[s].v);a=h/l;}return a+=e/2,[t[o].i+e/2,a,i[Math.floor(a)]+c*(a-Math.floor(a))];},differenceMethod:function(t,e){var i,r,s,o,n,a,h,l,c,d,u=t.t_values,p=t.x_values,f=t.y_values,m=[],g=[],b=0,v=-1,y=-1,C=[],_=[];for(s=f.length,m.push(new Float64Array(p)),g.push(new Float64Array(f)),s--,o=Math.min(12,s),r=0;r<o&&(m.push(new Float64Array(s)),g.push(new Float64Array(s)),m[r+1]=m[r].map(function(t,e,i){return i[e+1]-t;}),g[r+1]=g[r].map(function(t,e,i){return i[e+1]-t;}),l=this._criticalInterval(g[r+1],s,r),!0===l.smooth&&(y=r,C=[]),h=this._criticalInterval(m[r+1],s,r),-1===v&&!0===h.smooth&&(v=r),!(y>=0));r++){if(l.groups.length>0&&++b>2&&(r+1)%2==0){C=l.groups,d=l.types;break;}s--;}for(i=0;i<C.length;i++)\"interval\"!==d[i]&&(a=this.getCenterOfCriticalInterval(C[i],r+1,u),n=l[0],n=Math.floor(a[1]),c=a[2],_.push(this.getPointType(e,n,c,u,m,g,s+1)));return[_,m,g,v,y];},_insertPoint_v4:function(t,r,s,o){var n,a,h,l=null;t.points.length>0&&(l=t.points[t.points.length-1].scrCoords),n=new i(e.COORDS_BY_USER,r,t.board),null!==l&&(a=n.scrCoords[1]-l[1],h=n.scrCoords[2]-l[2],a*a+h*h<.8*.8)||(n._t=s,t.points.push(n));},getInterval:function(e,i,r){var s,o;return h.disable(),s=h.Interval(i,r),e.board.mathLib=h,e.board.mathLibJXG=h,e.X(s,!0),o=e.Y(s,!0),e.board.mathLib=Math,e.board.mathLibJXG=t.Math,o;},sign:function(t){return t<0?-1:t>0?1:0;},handleBorder:function(t,e,i,r,s){var o,n,a,h,c,d,u,p,f,m,g,b,v=i.idx;if(b=e.t_values[1]-e.t_values[0],\"borderleft\"===i.type?(o=e.left_isNaN?e.left_t:i.t-b,n=o,a=n+b):\"borderright\"===i.type?(o=e.right_isNaN?e.right_t:i.t+b,a=o,n=a-b):console.log(\"No bordercase!!!\"),m=this.findComponents(t,n,a,32),0!==m.length){for(\"borderleft\"===i.type&&(n=m[0].left_t,a=m[0].t_values[0],b=m[0].t_values[1]-m[0].t_values[0],n=null===n?a-b:n,o=n,h=this.getInterval(t,n,a),l.isObject(h)&&(u=h.lo,p=h.hi,c=t.X(o,!0),d=s[1][v]<0?p:u,this._insertPoint_v4(t,[1,c,d],o))),g=m[0].t_values.length,f=0;f<g;f++)o=m[0].t_values[f],c=m[0].x_values[f],d=m[0].y_values[f],this._insertPoint_v4(t,[1,c,d],o);\"borderright\"===i.type&&(n=m[0].t_values[g-1],a=m[0].right_t,b=m[0].t_values[1]-m[0].t_values[0],a=null===a?n+b:a,o=a,h=this.getInterval(t,n,a),l.isObject(h)&&(u=h.lo,p=h.hi,c=t.X(o,!0),d=s[1][v]>0?p:u,this._insertPoint_v4(t,[1,c,d],o)));}},_seconditeration_v4:function(t,e,i,r,s){var o,n,a,h,l,c,d,u,p,f,m,g,b;for(n=e.t_values[i.idx-2],a=e.t_values[i.idx+2],l=this.findComponents(t,n,a,64),d=0;d<l.length;d++){for(c=l[d],h=this.differenceMethod(c,t),u=h[0],f=h[1],m=h[2],g=0,p=0;p<=u.length;p++){for(b=p===u.length?c.len:u[p].idx,o=g;o<b;o++)isNaN(c.x_values[o])||isNaN(c.y_values[o])||this._insertPoint_v4(t,[1,c.x_values[o],c.y_values[o]],c.t_values[o]);p<u.length&&(this.handleSingularity(t,c,u[p],f,m),g=u[p].idx+1);}b=c.len,d<l.length-1&&this._insertPoint_v4(t,[1,NaN,NaN],c.right_t);}return this;},_recurse_v4:function(t,e,i,r,s,o,n,a){var h,l,c=.5*(e+i),d=t.X(c,!0),u=t.Y(c,!0);if(0==a)return void this._insertPoint_v4(t,[1,NaN,NaN],c);h=(d-r)*t.board.unitX,l=(u-s)*t.board.unitY,Math.sqrt(h*h+l*l)>2?this._recurse_v4(t,e,c,r,s,d,u,a-1):this._insertPoint_v4(t,[1,d,u],c),h=(d-o)*t.board.unitX,l=(u-n)*t.board.unitY,Math.sqrt(h*h+l*l)>2?this._recurse_v4(t,c,i,d,u,o,n,a-1):this._insertPoint_v4(t,[1,d,u],c);},handleSingularity:function(t,e,i,r,s){var o,n,a,h,c,d,u,p,f,m,g,b=i.idx;o=i.t,console.log(\"HandleSingularity at t =\",o),n=e.t_values[b-5],a=e.t_values[b+5],h=this.getInterval(t,n,a),l.isObject(h)?(p=h.lo,f=h.hi):s[0][b-1]<s[0][b+1]?(p=s[0][b-1],f=s[0][b+1]):(p=s[0][b+1],f=s[0][b-1]),u=t.X(o,!0),m=(s[0][b-3]-s[0][b-5])/(e.t_values[b-3]-e.t_values[b-5]),g=(s[0][b+3]-s[0][b+5])/(e.t_values[b+3]-e.t_values[b+5]),console.log(\":::\",m,g),m<-100?(this._insertPoint_v4(t,[1,u,p],o,!0),g<=100&&this._insertPoint_v4(t,[1,NaN,NaN],o)):m>100?(this._insertPoint_v4(t,[1,u,f],o),g>=-100&&this._insertPoint_v4(t,[1,NaN,NaN],o)):(p===-1/0&&(this._insertPoint_v4(t,[1,u,p],o,!0),this._insertPoint_v4(t,[1,NaN,NaN],o)),f===1/0&&(this._insertPoint_v4(t,[1,NaN,NaN],o),this._insertPoint_v4(t,[1,u,f],o,!0)),i.t<e.t_values[b]?(c=b-1,d=b):(c=b,d=b+1),n=e.t_values[c],a=e.t_values[d],this._recurse_v4(t,n,a,r[0][c],s[0][c],r[0][d],s[0][d],10)),g<-100?this._insertPoint_v4(t,[1,u,f],o):g>100&&this._insertPoint_v4(t,[1,u,p],o);},steps:1021,criticalThreshold:1e3,plot_v4:function(t,e,i,r){var s,n,a,h,c,d,u,p,f,m,g,b,v,y,C,_,P,E=(i-e)/r,x=function(e){return t.Y(e,!0);},S=function(e){return-t.Y(e,!0);},O=.5*E;for(a=this.findComponents(t,e,i,r),h=0;h<a.length;h++){for(c=a[h],f=this.differenceMethod(c,t),d=f[0],m=f[1],g=f[2],f[3],f[4],0!==d.length&&\"borderleft\"===d[0].type||d.unshift({idx:0,t:c.t_values[0],x:c.x_values[0],y:c.y_values[0],type:\"borderleft\"}),\"borderright\"!==d[d.length-1].type&&(n=c.t_values.length,d.push({idx:n-1,t:c.t_values[n-1],x:c.x_values[n-1],y:c.y_values[n-1],type:\"borderright\"})),p=0,u=0;u<=d.length;u++){for(n=u===d.length?c.len:d[u].idx-1,C=0,_=0,s=p;s<n-2;s++)this._insertPoint_v4(t,[1,c.x_values[s],c.y_values[s]],c.t_values[s]),Math.max(0,s-2),s>=p+3&&s<n-3&&g.length>3&&Math.abs(g[2][s])>.2*Math.abs(g[0][s])?(b=c.t_values[s],O=.25*E,P=this.getInterval(t,b,b+E),l.isObject(P)?g[2][s]>0?this._insertPoint_v4(t,[1,b+O,P.lo],b+O):this._insertPoint_v4(t,[1,b+E-O,P.hi],b+E-O):(v=o.fminbr(x,[b,b+E]),y=o.fminbr(S,[b,b+E]),v<y?(this._insertPoint_v4(t,[1,t.X(v,!0),t.Y(v,!0)],v),this._insertPoint_v4(t,[1,t.X(y,!0),t.Y(y,!0)],y)):(this._insertPoint_v4(t,[1,t.X(y,!0),t.Y(y,!0)],y),this._insertPoint_v4(t,[1,t.X(v,!0),t.Y(v,!0)],v))),_++):C++;u<d.length&&(s=d[u].idx,\"borderleft\"===d[u].type||\"borderright\"===d[u].type?this.handleBorder(t,c,d[u],m,g):this._seconditeration_v4(t,c,d[u],m,g),p=d[u].idx+1+1);}n=c.len,h<a.length-1&&this._insertPoint_v4(t,[1,NaN,NaN],c.right_t);}},updateParametricCurve_v4:function(t,e,i){var r,s,o,n;\"x\"===t.xterm?(n=t.board.getBoundingBox(),o=.3*(n[2]-n[0]),r=Math.max(e,n[0]-o),s=Math.min(i,n[2]+o)):(r=e,s=i),t.points=[],this.plot_v4(t,r,s,this.steps),t.numberPoints=t.points.length;},updateParametricCurve:function(t,e,i){return this.updateParametricCurve_v2(t,e,i);}},r.Plot;}),define(\"math/metapost\",[\"utils/type\",\"math/math\"],function(t,e){\"use strict\";return e.Metapost={MP_ENDPOINT:0,MP_EXPLICIT:1,MP_GIVEN:2,MP_CURL:3,MP_OPEN:4,MP_END_CYCLE:5,UNITY:1,FRACTION_ONE:1,FRACTION_THREE:3,ONE_EIGHTY_DEG:Math.PI,THREE_SIXTY_DEG:2*Math.PI,EPS_SQ:1e-5*1e-5,make_choices:function(t){var e,i,r,s,o,n,a,h,l,c,d,u,p,f,m;a=t[0];do{if(!a)break;n=a.next,a.rtype>this.MP_EXPLICIT&&(a.x-n.x)*(a.x-n.x)+(a.y-n.y)*(a.y-n.y)<this.EPS_SQ&&(a.rtype=this.MP_EXPLICIT,a.ltype===this.MP_OPEN&&(a.ltype=this.MP_CURL,a.set_left_curl(this.UNITY)),n.ltype=this.MP_EXPLICIT,n.rtype===this.MP_OPEN&&(n.rtype=this.MP_CURL,n.set_right_curl(this.UNITY)),a.rx=a.x,n.lx=a.x,a.ry=a.y,n.ly=a.y),a=n;}while(a!==t[0]);for(i=t[0];;){if(i.ltype!==this.MP_OPEN||i.rtype!==this.MP_OPEN)break;if((i=i.next)===t[0]){i.ltype=this.MP_END_CYCLE;break;}}for(a=i;;){if(!a)break;if(n=a.next,a.rtype>=this.MP_GIVEN){for(;n.ltype===this.MP_OPEN&&n.rtype===this.MP_OPEN;)n=n.next;for(r=0,h=a,o=t.length,u=[],p=[],f=[],m=[null];;)if(c=h.next,u.push(c.x-h.x),p.push(c.y-h.y),f.push(this.mp_pyth_add(u[r],p[r])),r>0&&(d=p[r-1]/f[r-1],l=u[r-1]/f[r-1],m.push(Math.atan2(p[r]*l-u[r]*d,u[r]*l+p[r]*d))),r++,h=c,h===n&&(o=r),r>=o&&h.ltype!==this.MP_END_CYCLE)break;r===o?m.push(0):m.push(m[1]),n.ltype===this.MP_OPEN&&(s=n.rx-n.x,e=n.ry-n.y,s*s+e*e<this.EPS_SQ?(n.ltype=this.MP_CURL,n.set_left_curl(this.UNITY)):(n.ltype=this.MP_GIVEN,n.set_left_given(Math.atan2(e,s)))),a.rtype===this.MP_OPEN&&a.ltype===this.MP_EXPLICIT&&(s=a.x-a.lx,e=a.y-a.ly,s*s+e*e<this.EPS_SQ?(a.rtype=this.MP_CURL,a.set_right_curl(this.UNITY)):(a.rtype=this.MP_GIVEN,a.set_right_given(Math.atan2(e,s)))),this.mp_solve_choices(a,n,o,u,p,f,m);}else a.rtype===this.MP_ENDPOINT&&(a.rx=a.x,a.ry=a.y,n.lx=n.x,n.ly=n.y);if((a=n)===i)break;}},mp_solve_choices:function(t,e,i,r,s,o,n){var a,h,l,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O,w,T,N,M,A,R;for(d=o.length+1,g=new Array(d),m=new Array(d),l=new Array(d),_=new Array(d),A=0;A<d;A++)_[A]=l[A]=m[A]=g[A]=0;for(p=0,f=t,v=0;;){if(y=f.next,0===p){if(f.rtype===this.MP_GIVEN){if(y.ltype===this.MP_GIVEN)return a=Math.atan2(s[0],r[0]),S=this.mp_n_sin_cos(t.right_given()-a),O=S[0],w=S[1],T=this.mp_n_sin_cos(e.left_given()-a),N=T[0],M=T[1],void this.mp_set_controls(t,e,r[0],s[0],w,O,-M,N);l[0]=f.right_given()-Math.atan2(s[0],r[0]),l[0]=this.reduce_angle(l[0]),g[0]=0,m[0]=0;}else if(f.rtype===this.MP_CURL){if(y.ltype===this.MP_CURL)return t.rtype=this.MP_EXPLICIT,e.ltype=this.MP_EXPLICIT,b=Math.abs(e.left_tension()),P=Math.abs(t.right_tension()),C=this.UNITY/(3*P),t.rx=t.x+r[0]*C,t.ry=t.y+s[0]*C,C=this.UNITY/(3*b),e.lx=e.x-r[0]*C,void(e.ly=e.y-s[0]*C);x=f.right_curl(),b=Math.abs(y.left_tension()),P=Math.abs(f.right_tension()),g[0]=this.mp_curl_ratio(x,P,b),l[0]=-n[1]*g[0],m[0]=0;}else f.rtype===this.MP_OPEN&&(g[0]=0,l[0]=0,m[0]=this.FRACTION_ONE);}else if(f.ltype===this.MP_END_CYCLE||f.ltype===this.MP_OPEN){if(a=this.UNITY/(3*Math.abs(v.right_tension())-this.UNITY),E=o[p]*(this.FRACTION_THREE-this.UNITY/Math.abs(v.right_tension())),c=this.UNITY/(3*Math.abs(y.left_tension())-this.UNITY),u=o[p-1]*(this.FRACTION_THREE-this.UNITY/Math.abs(y.left_tension())),x=this.FRACTION_ONE-g[p-1]*a,E*=x,b=Math.abs(f.left_tension()),P=Math.abs(f.right_tension()),b<P?E*=Math.pow(b/P,2):b>P&&(u*=Math.pow(P/b,2)),C=u/(u+E),g[p]=C*c,h=-n[p+1]*g[p],v.rtype===this.MP_CURL?(m[p]=0,l[p]=h-n[1]*(this.FRACTION_ONE-C)):(C=(this.FRACTION_ONE-C)/x,h-=n[p]*C,C*=a,l[p]=h-l[p-1]*C,m[p]=-m[p-1]*C),f.ltype===this.MP_END_CYCLE){for(a=0,c=this.FRACTION_ONE;;)if(p-=1,0===p&&(p=i),a=l[p]-a*g[p],c=m[p]-c*g[p],p===i)break;for(a/=this.FRACTION_ONE-c,_[i]=a,l[0]=a,R=1;R<i;R++)l[R]=l[R]+a*m[R];break;}}else{if(f.ltype===this.MP_CURL){x=f.left_curl(),b=Math.abs(f.left_tension()),P=Math.abs(v.right_tension()),C=this.mp_curl_ratio(x,b,P),_[i]=-l[i-1]*C/(this.FRACTION_ONE-C*g[i-1]);break;}if(f.ltype===this.MP_GIVEN){_[i]=f.left_given()-Math.atan2(s[i-1],r[i-1]),_[i]=this.reduce_angle(_[i]);break;}}v=f,f=y,p+=1;}for(p=i-1;p>-1;p--)_[p]=l[p]-_[p+1]*g[p];for(f=t,p=0;;)if(y=f.next,S=this.mp_n_sin_cos(_[p]),O=S[0],w=S[1],T=this.mp_n_sin_cos(-n[p+1]-_[p+1]),N=T[0],M=T[1],this.mp_set_controls(f,y,r[p],s[p],w,O,M,N),p++,f=y,p===i)break;},mp_n_sin_cos:function(t){return[Math.cos(t),Math.sin(t)];},mp_set_controls:function(t,e,i,r,s,o,n,a){var h,l,c,d,u;c=Math.abs(e.left_tension()),h=Math.abs(t.right_tension()),u=this.mp_velocity(s,o,n,a,h),l=this.mp_velocity(n,a,s,o,c),(t.right_tension()<0||e.left_tension()<0)&&(s>=0&&n>=0||s<=0&&n<=0)&&(d=Math.abs(s)*a+Math.abs(n)*o)>0&&(d*=1.00024414062,t.right_tension()<0&&this.mp_ab_vs_cd(Math.abs(n),this.FRACTION_ONE,u,d)<0&&(u=Math.abs(n)/d),e.left_tension()<0&&this.mp_ab_vs_cd(Math.abs(s),this.FRACTION_ONE,l,d)<0&&(l=Math.abs(s)/d)),t.rx=t.x+(i*o-r*s)*u,t.ry=t.y+(r*o+i*s)*u,e.lx=e.x-(i*a+r*n)*l,e.ly=e.y-(r*a-i*n)*l,t.rtype=this.MP_EXPLICIT,e.ltype=this.MP_EXPLICIT;},mp_pyth_add:function(t,e){return Math.sqrt(t*t+e*e);},mp_curl_ratio:function(t,e,i){var r=1/e,s=1/i;return Math.min(4,((3-r)*r*r*t+s*s*s)/(r*r*r*t+(3-s)*s*s));},mp_ab_vs_cd:function(t,e,i,r){return t*e==i*r?0:t*e>i*r?1:-1;},mp_velocity:function(t,e,i,r,s){return Math.min(4,(2+Math.sqrt(2)*(t-i/16)*(i-t/16)*(e-r))/(1.5*s*(2+(Math.sqrt(5)-1)*e+(3-Math.sqrt(5))*r)));},reduce_angle:function(t){return Math.abs(t)>this.ONE_EIGHTY_DEG&&(t>0?t-=this.THREE_SIXTY_DEG:t+=this.THREE_SIXTY_DEG),t;},makeknots:function(t,e,i){var r,s,o=[];for(e=e||1,s=t.length,r=0;r<s;r++)o.push({x:t[r][0],y:t[r][1],ltype:this.MP_OPEN,rtype:this.MP_OPEN,ly:e,ry:e,lx:e,rx:e,left_curl:function(){return this.lx||0;},right_curl:function(){return this.rx||0;},left_tension:function(){return this.ly||(this.ly=1),this.ly;},right_tension:function(){return this.ry||(this.ry=1),this.ry;},set_right_curl:function(t){this.rx=t||0;},set_left_curl:function(t){this.lx=t||0;}});for(s=o.length,r=0;r<s;r++)o[r].next=o[r+1]||o[r],o[r].set_right_given=o[r].set_right_curl,o[r].set_left_given=o[r].set_left_curl,o[r].right_given=o[r].right_curl,o[r].left_given=o[r].left_curl;return o[s-1].next=o[0],i||(o[s-1].rtype=this.MP_ENDPOINT,o[s-1].ltype=this.MP_CURL,o[0].rtype=this.MP_CURL),o;},curve:function(e,i){var r,s,o,n,a=[],h=[];i=i||{tension:1,direction:{},curl:{},isClosed:!1},r=this.makeknots(e,t.evaluate(i.tension),i.isClosed),s=r.length;for(o in i.direction)i.direction.hasOwnProperty(o)&&(n=t.evaluate(i.direction[o]),t.isArray(n)?(!1!==n[0]&&(r[o].lx=n[0]*Math.PI/180,r[o].ltype=this.MP_GIVEN),!1!==n[1]&&(r[o].rx=n[1]*Math.PI/180,r[o].rtype=this.MP_GIVEN)):(r[o].lx=n*Math.PI/180,r[o].rx=n*Math.PI/180,r[o].ltype=r[o].rtype=this.MP_GIVEN));for(o in i.curl)i.curl.hasOwnProperty(o)&&(n=t.evaluate(i.curl[o]),0===parseInt(o,10)?(r[o].rtype=this.MP_CURL,r[o].set_right_curl(n)):parseInt(o,10)===s-1&&(r[o].ltype=this.MP_CURL,r[o].set_left_curl(n)));for(this.make_choices(r),o=0;o<s-1;o++)a.push(r[o].x),a.push(r[o].rx),a.push(r[o+1].lx),h.push(r[o].y),h.push(r[o].ry),h.push(r[o+1].ly);return a.push(r[s-1].x),h.push(r[s-1].y),i.isClosed&&(a.push(r[s-1].rx),h.push(r[s-1].ry),a.push(r[0].lx),h.push(r[0].ly),a.push(r[0].x),h.push(r[0].y)),[a,h];}},e.Metapost;}),define(\"utils/zip\",[\"jxg\"],function(t){\"use strict\";var e=[0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,3,131,67,195,35,163,99,227,19,147,83,211,51,179,115,243,11,139,75,203,43,171,107,235,27,155,91,219,59,187,123,251,7,135,71,199,39,167,103,231,23,151,87,215,55,183,119,247,15,143,79,207,47,175,111,239,31,159,95,223,63,191,127,255],i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],r=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,99,99],s=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],o=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],n=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],a=256;return t.Util=t.Util||{},t.Util.Unzip=function(h){function l(){return Y+=8,B<k?h[B++]:-1;}function c(){I=1;}function d(){var t;try{return Y++,t=1&I,I>>=1,0===I&&(I=l(),t=1&I,I=I>>1|128),t;}catch(t){throw t;}}function u(t){var i=0,r=t;try{for(;r--;)i=i<<1|d();t&&(i=e[i]>>8-t);}catch(t){throw t;}return i;}function p(){R=0;}function f(t){x++,A[R++]=t,T.push(String.fromCharCode(t)),32768===R&&(R=0);}function m(){this.b0=0,this.b1=0,this.jump=null,this.jumppos=-1;}function g(){for(;;){if(G[F]>=w)return-1;if(O[G[F]]===F)return G[F]++;G[F]++;}}function b(){var t,e=U[X];if(17===F)return-1;if(X++,F++,(t=g())>=0)e.b0=t;else if(e.b0=32768,b())return-1;if((t=g())>=0)e.b1=t,e.jump=null;else if(e.b1=32768,e.jump=U[X],e.jumppos=X,b())return-1;return F--,0;}function v(t,e,i,r){var s;for(U=t,X=0,O=i,w=e,s=0;s<17;s++)G[s]=0;return F=0,b()?-1:0;}function y(t){for(var e,i,r=0,s=t[r];;)if(d()){if(!(32768&s.b1))return s.b1;for(s=s.jump,e=t.length,i=0;i<e;i++)if(t[i]===s){r=i;break;}}else{if(!(32768&s.b0))return s.b0;r++,s=t[r];}}function C(){var a,h,g,b,C,_,P,E,x,S,O,w,T,N,M,L,k;do{if(a=d(),0===(g=u(2)))for(c(),S=l(),S|=l()<<8,w=l(),w|=l()<<8,65535&(S^~w)&&t.debug(\"BlockLen checksum mismatch\\n\");S--;)h=l(),f(h);else if(1===g){for(;;)if(C=e[u(7)]>>1,C>23?(C=C<<1|d(),C>199?(C-=128,C=C<<1|d()):(C-=48)>143&&(C+=136)):C+=256,C<256)f(C);else{if(256===C)break;for(C-=257,x=u(r[C])+i[C],C=e[u(5)]>>3,o[C]>8?(O=u(8),O|=u(o[C]-8)<<8):O=u(o[C]),O+=s[C],C=0;C<x;C++)h=A[R-O&32767],f(h);}}else if(2===g){for(P=new Array(320),N=257+u(5),M=1+u(5),L=4+u(4),C=0;C<19;C++)P[C]=0;for(C=0;C<L;C++)P[n[C]]=u(3);for(x=j.length,b=0;b<x;b++)j[b]=new m();if(v(j,19,P,0))return p(),1;for(T=N+M,b=0,k=-1;b<T;)if(k++,(C=y(j))<16)P[b++]=C;else if(16===C){if(C=3+u(2),b+C>T)return p(),1;for(_=b?P[b-1]:0;C--;)P[b++]=_;}else{if(C=17===C?3+u(3):11+u(7),b+C>T)return p(),1;for(;C--;)P[b++]=0;}for(x=D.length,b=0;b<x;b++)D[b]=new m();if(v(D,N,P,0))return p(),1;for(x=D.length,b=0;b<x;b++)j[b]=new m();for(E=[],b=N;b<P.length;b++)E[b-N]=P[b];if(v(j,M,E,0))return p(),1;for(;;)if((C=y(D))>=256){if(0===(C-=256))break;for(C-=1,x=u(r[C])+i[C],C=y(j),o[C]>8?(O=u(8),O|=u(o[C]-8)<<8):O=u(o[C]),O+=s[C];x--;)h=A[R-O&32767],f(h);}else f(C);}}while(!a);return p(),c(),0;}function _(){var t,e,i,r,s,o,n,h,c=[];try{if(T=[],L=!1,c[0]=l(),c[1]=l(),120===c[0]&&218===c[1]&&(C(),M[N]=[T.join(\"\"),\"geonext.gxt\"],N++),31===c[0]&&139===c[1]&&(P(),M[N]=[T.join(\"\"),\"file\"],N++),80===c[0]&&75===c[1]){if(L=!0,c[2]=l(),c[3]=l(),3===c[2]&&4===c[3]){for(c[0]=l(),c[1]=l(),E=l(),E|=l()<<8,h=l(),h|=l()<<8,l(),l(),l(),l(),n=l(),n|=l()<<8,n|=l()<<16,n|=l()<<24,o=l(),o|=l()<<8,o|=l()<<16,o|=l()<<24,s=l(),s|=l()<<8,s|=l()<<16,s|=l()<<24,r=l(),r|=l()<<8,i=l(),i|=l()<<8,t=0,J=[];r--;)e=l(),\"/\"===e|\":\"===e?t=0:t<a-1&&(J[t++]=String.fromCharCode(e));for(S||(S=J),t=0;t<i;)e=l(),t++;if(x=0,8===h&&(C(),M[N]=new Array(2),M[N][0]=T.join(\"\"),M[N][1]=J.join(\"\"),N++),P())return!1;}return!0;}}catch(t){throw t;}return!1;}function P(){var t,e,i,r,s,o=[];if(8&E&&(o[0]=l(),o[1]=l(),o[2]=l(),o[3]=l(),80===o[0]&&75===o[1]&&7===o[2]&&8===o[3]?(t=l(),t|=l()<<8,t|=l()<<16,t|=l()<<24):t=o[0]|o[1]<<8|o[2]<<16|o[3]<<24,e=l(),e|=l()<<8,e|=l()<<16,e|=l()<<24,i=l(),i|=l()<<8,i|=l()<<16,i|=l()<<24),L&&_())return!1;if(o[0]=l(),8!==o[0])return!0;if(E=l(),l(),l(),l(),l(),l(),l(),4&E)for(o[0]=l(),o[2]=l(),F=o[0]+256*o[1],r=0;r<F;r++)l();if(8&E)for(r=0,J=[],s=l();s;)\"7\"!==s&&\":\"!==s||(r=0),r<a-1&&(J[r++]=s),s=l();if(16&E)for(s=l();s;)s=l();return 2&E&&(l(),l()),C(),t=l(),t|=l()<<8,t|=l()<<16,t|=l()<<24,i=l(),i|=l()<<8,i|=l()<<16,i|=l()<<24,L&&_(),!1;}var E,x,S,O,w,T=[],N=0,M=[],A=new Array(32768),R=0,L=!1,k=h.length,B=0,I=1,Y=0,D=new Array(288),j=new Array(32),X=0,U=null,F=(new Array(64),new Array(64),0),G=new Array(17),J=[];G[0]=0,t.Util.Unzip.prototype.unzipFile=function(t){var e;for(this.unzip(),e=0;e<M.length;e++)if(M[e][1]===t)return M[e][0];return\"\";},t.Util.Unzip.prototype.unzip=function(){return _(),M;};},t.Util;}),define(\"utils/encoding\",[\"jxg\"],function(t){\"use strict\";var e=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,11,6,6,6,5,8,8,8,8,8,8,8,8,8,8,8,0,12,24,36,60,96,84,12,12,12,48,72,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,0,12,0,12,12,12,24,12,12,12,12,12,24,12,24,12,12,12,12,12,12,12,12,12,24,12,12,12,12,12,24,12,12,12,12,12,12,12,24,12,12,12,12,12,12,12,12,12,36,12,36,12,12,12,36,12,12,12,12,12,36,12,36,12,12,12,36,12,12,12,12,12,12,12,12,12,12];return t.Util=t.Util||{},t.Util.UTF8={encode:function(t){var e,i,r=\"\",s=t.length;if(t=t.replace(/\\r\\n/g,\"\\n\"),\"function\"==typeof unescape&&\"function\"==typeof encodeURIComponent)return unescape(encodeURIComponent(t));for(e=0;e<s;e++)i=t.charCodeAt(e),i<128?r+=String.fromCharCode(i):i>127&&i<2048?(r+=String.fromCharCode(i>>6|192),r+=String.fromCharCode(63&i|128)):(r+=String.fromCharCode(i>>12|224),r+=String.fromCharCode(i>>6&63|128),r+=String.fromCharCode(63&i|128));return r;},decode:function(t){var i,r,s,o=0,n=0,a=0,h=[],l=t.length,c=[];for(i=0;i<l;i++)r=t.charCodeAt(i),s=e[r],n=0!==a?63&r|n<<6:255>>s&r,0===(a=e[256+a+s])&&(n>65535?h.push(55232+(n>>10),56320+(1023&n)):h.push(n),++o%1e4==0&&(c.push(String.fromCharCode.apply(null,h)),h=[]));return c.push(String.fromCharCode.apply(null,h)),c.join(\"\");},asciiCharCodeAt:function(t,e){var i=t.charCodeAt(e);if(i>255)switch(i){case 8364:i=128;break;case 8218:i=130;break;case 402:i=131;break;case 8222:i=132;break;case 8230:i=133;break;case 8224:i=134;break;case 8225:i=135;break;case 710:i=136;break;case 8240:i=137;break;case 352:i=138;break;case 8249:i=139;break;case 338:i=140;break;case 381:i=142;break;case 8216:i=145;break;case 8217:i=146;break;case 8220:i=147;break;case 8221:i=148;break;case 8226:i=149;break;case 8211:i=150;break;case 8212:i=151;break;case 732:i=152;break;case 8482:i=153;break;case 353:i=154;break;case 8250:i=155;break;case 339:i=156;break;case 382:i=158;break;case 376:i=159;}return i;}},t.Util.UTF8;}),define(\"utils/base64\",[\"jxg\",\"utils/encoding\"],function(t,e){\"use strict\";function i(t,e){return 255&t.charCodeAt(e);}function r(t,e){return s.indexOf(t.charAt(e));}var s=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";return t.Util=t.Util||{},t.Util.Base64={encode:function(t){var r,o,n,a,h,l=[];for(h=e.encode(t),n=h.length,a=n%3,r=0;r<n-a;r+=3)o=i(h,r)<<16|i(h,r+1)<<8|i(h,r+2),l.push(s.charAt(o>>18),s.charAt(o>>12&63),s.charAt(o>>6&63),s.charAt(63&o));switch(a){case 1:o=i(h,n-1),l.push(s.charAt(o>>2),s.charAt(o<<4&63),\"=\",\"=\");break;case 2:o=i(h,n-2)<<8|i(h,n-1),l.push(s.charAt(o>>10),s.charAt(o>>4&63),s.charAt(o<<2&63),\"=\");}return l.join(\"\");},decode:function(t,i){var s,o,n,a,h,l,c=[],d=[];if(s=t.replace(/[^A-Za-z0-9\\+\\/=]/g,\"\"),(n=s.length)%4!=0)throw new Error(\"JSXGraph/utils/base64: Can't decode string (invalid input length).\");for(\"=\"===s.charAt(n-1)&&(a=1,\"=\"===s.charAt(n-2)&&(a=2),n-=4),o=0;o<n;o+=4)h=r(s,o)<<18|r(s,o+1)<<12|r(s,o+2)<<6|r(s,o+3),d.push(h>>16,h>>8&255,255&h),o%1e4==0&&(c.push(String.fromCharCode.apply(null,d)),d=[]);switch(a){case 1:h=r(s,n)<<12|r(s,n+1)<<6|r(s,n+2),d.push(h>>10,h>>2&255);break;case 2:h=r(s,o)<<6|r(s,o+1),d.push(h>>4);}return c.push(String.fromCharCode.apply(null,d)),l=c.join(\"\"),i&&(l=e.decode(l)),l;},decodeAsArray:function(t){var e,i=this.decode(t),r=[],s=i.length;for(e=0;e<s;e++)r[e]=i.charCodeAt(e);return r;}},t.Util.Base64;}),define(\"server/server\",[\"jxg\",\"utils/zip\",\"utils/base64\",\"utils/type\"],function(t,e,i,r){\"use strict\";return t.Server={modules:{},runningCalls:{},handleError:function(e){t.debug(\"error occured, server says: \"+e.message);},callServer:function(s,o,n,a){var h,l,c,d,u,p,f;a=a||!1,d=\"\";for(f in n)n.hasOwnProperty(f)&&(d+=\"&\"+escape(f)+\"=\"+escape(n[f]));p=r.toJSON(n);do{u=s+Math.floor(4096*Math.random());}while(r.exists(this.runningCalls[u]));return this.runningCalls[u]={action:s},r.exists(n.module)&&(this.runningCalls[u].module=n.module),h=t.serverBase+\"JXGServer.py\",l=\"action=\"+escape(s)+\"&id=\"+u+\"&dataJSON=\"+escape(i.encode(p)),this.cbp=function(t){var s,n,a,h,l,c,d,u;if(s=new e.Unzip(i.decodeAsArray(t)).unzip(),r.isArray(s)&&s.length>0&&(s=s[0][0]),r.exists(s))if(n=window.JSON&&window.JSON.parse?window.JSON.parse(s):new Function(\"return \"+s)(),\"error\"===n.type)this.handleError(n);else if(\"response\"===n.type){for(c=n.id,d=0;d<n.fields.length;d++)a=n.fields[d],h=a.namespace+(\"object\"==typeof new Function(\"return \"+a.namespace)()?\".\":\".prototype.\")+a.name+\" = \"+a.value,new Function(h)();for(d=0;d<n.handler.length;d++){for(a=n.handler[d],l=[],u=0;u<a.parameters.length;u++)l[u]='\"'+a.parameters[u]+'\": '+a.parameters[u];h=\"if(typeof JXG.Server.modules.\"+this.runningCalls[c].module+' == \"undefined\")JXG.Server.modules.'+this.runningCalls[c].module+\" = {};\",h+=\"JXG.Server.modules.\"+this.runningCalls[c].module+\".\"+a.name+\"_cb = \"+a.callback+\";\",h+=\"JXG.Server.modules.\"+this.runningCalls[c].module+\".\"+a.name+\" = function (\"+a.parameters.join(\",\")+', __JXGSERVER_CB__, __JXGSERVER_SYNC) {if(typeof __JXGSERVER_CB__ == \"undefined\") __JXGSERVER_CB__ = JXG.Server.modules.'+this.runningCalls[c].module+\".\"+a.name+\"_cb;var __JXGSERVER_PAR__ = {\"+l.join(\",\")+', \"module\": \"'+this.runningCalls[c].module+'\", \"handler\": \"'+a.name+'\" };JXG.Server.callServer(\"exec\", __JXGSERVER_CB__, __JXGSERVER_PAR__, __JXGSERVER_SYNC);};',new Function(h)();}delete this.runningCalls[c],o(n.data);}},this.cb=t.bind(this.cbp,this),window.XMLHttpRequest?(c=new XMLHttpRequest(),c.overrideMimeType(\"text/plain; charset=iso-8859-1\")):c=new ActiveXObject(\"Microsoft.XMLHTTP\"),!(!c||(c.open(\"POST\",h,!a),c.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"),a||(c.onreadystatechange=function(t){return function(){return 4===c.readyState&&200===c.status&&(t(c.responseText),!0);};}(this.cb)),c.send(l),!a))&&(this.cb(c.responseText),!0);},loadModule_cb:function(e){var i;for(i=0;i<e.length;i++)t.debug(e[i].name+\": \"+e[i].value);},loadModule:function(e){return t.Server.callServer(\"load\",t.Server.loadModule_cb,{module:e},!0);}},t.Server.load=t.Server.loadModule,t.Server;}),define(\"math/symbolic\",[\"base/constants\",\"base/coords\",\"math/math\",\"math/geometry\",\"server/server\",\"utils/type\"],function(t,e,i,r,s,o){\"use strict\";return i.Symbolic={generateSymbolicCoordinatesPartial:function(t,e,i,r){var s,n,a,h=e.ancestors,l=0,c=function(t){return\"underscore\"===r?i+\"_{\"+t+\"}\":\"brace\"===r?i+\"[\"+t+\"]\":i+t;};t.listOfFreePoints=[],t.listOfDependantPoints=[];for(n in h)if(h.hasOwnProperty(n)&&(s=0,o.isPoint(h[n]))){for(a in h[n].ancestors)h[n].ancestors.hasOwnProperty(a)&&s++;0===s?(h[n].symbolic.x=h[n].coords.usrCoords[1],h[n].symbolic.y=h[n].coords.usrCoords[2],t.listOfFreePoints.push(h[n])):(l+=1,h[n].symbolic.x=c(l),l+=1,h[n].symbolic.y=c(l),t.listOfDependantPoints.push(h[n]));}return o.isPoint(e)&&(e.symbolic.x=\"x\",e.symbolic.y=\"y\"),l;},clearSymbolicCoordinates:function(t){var e=function(t){var e,i=t&&t.length||0;for(e=0;e<i;e++)o.isPoint(t[e])&&(t[e].symbolic.x=\"\",t[e].symbolic.y=\"\");};e(t.listOfFreePoints),e(t.listOfDependantPoints),delete t.listOfFreePoints,delete t.listOfDependantPoints;},generatePolynomials:function(t,e,i){var r,s,n,a,h=e.ancestors,l=[],c=[];i&&this.generateSymbolicCoordinatesPartial(t,e,\"u\",\"brace\"),h[e.id]=e;for(r in h)if(h.hasOwnProperty(r)&&(a=0,l=[],o.isPoint(h[r]))){for(s in h[r].ancestors)h[r].ancestors.hasOwnProperty(s)&&a++;if(a>0)for(l=h[r].generatePolynomial(),n=0;n<l.length;n++)c.push(l[n]);}return i&&this.clearSymbolicCoordinates(t),c;},geometricLocusByGroebnerBase:function(n,a){var h,l,c,d,u,p,f,m,g,b,v,y,C,_=n.options.locus,P={},E=this.generateSymbolicCoordinatesPartial(n,a,\"u\",\"brace\"),x=new e(t.COORDS_BY_USR,[0,0],n),S=new e(t.COORDS_BY_USR,[n.canvasWidth,n.canvasHeight],n),O=1,w=0,T=0,N=0;if(void 0===s.modules.geoloci&&s.loadModule(\"geoloci\"),void 0===s.modules.geoloci)throw new Error(\"JSXGraph: Unable to load JXG.Server module 'geoloci.py'.\");if(f=x.usrCoords[1],m=S.usrCoords[1],g=S.usrCoords[2],b=x.usrCoords[2],_.translateToOrigin&&n.listOfFreePoints.length>0){for(d=void 0!==_.toOrigin&&null!==_.toOrigin&&o.isInArray(n.listOfFreePoints,_.toOrigin.id)?_.toOrigin:n.listOfFreePoints[0],w=d.symbolic.x,T=d.symbolic.y,p=0;p<n.listOfFreePoints.length;p++)n.listOfFreePoints[p].symbolic.x-=w,n.listOfFreePoints[p].symbolic.y-=T;if(f-=w,m-=w,g-=T,b-=T,_.translateTo10&&n.listOfFreePoints.length>1){for(u=void 0!==_.to10&&null!==_.to10&&_.to10.id!==_.toOrigin.id&&o.isInArray(n.listOfFreePoints,_.to10.id)?_.to10:n.listOfFreePoints[0].id===d.id?n.listOfFreePoints[1]:n.listOfFreePoints[0],N=r.rad([1,0],[0,0],[u.symbolic.x,u.symbolic.y]),v=Math.cos(-N),y=Math.sin(-N),p=0;p<n.listOfFreePoints.length;p++)C=n.listOfFreePoints[p].symbolic.x,n.listOfFreePoints[p].symbolic.x=v*n.listOfFreePoints[p].symbolic.x-y*n.listOfFreePoints[p].symbolic.y,n.listOfFreePoints[p].symbolic.y=y*C+v*n.listOfFreePoints[p].symbolic.y;if(u.symbolic.y=0,C=f,f=v*f-y*g,g=y*C+v*g,C=m,m=v*m-y*b,b=y*C+v*b,_.stretch&&Math.abs(u.symbolic.x)>i.eps){for(O=u.symbolic.x,p=0;p<n.listOfFreePoints.length;p++)n.listOfFreePoints[p].symbolic.x/=O,n.listOfFreePoints[p].symbolic.y/=O;for(p=0;p<n.objectsList.length;p++)n.objectsList[p].elementClass===t.OBJECT_CLASS_CIRCLE&&\"pointRadius\"===n.objectsList[p].method&&(P[p]=n.objectsList[p].radius,n.objectsList[p].radius/=O);f/=O,m/=O,g/=O,b/=O,u.symbolic.x=1;}}for(p=0;p<n.listOfFreePoints.length;p++)C=n.listOfFreePoints[p].symbolic.x,Math.abs(C)<i.eps&&(n.listOfFreePoints[p].symbolic.x=0),Math.abs(C-Math.round(C))<i.eps&&(n.listOfFreePoints[p].symbolic.x=Math.round(C)),C=n.listOfFreePoints[p].symbolic.y,Math.abs(C)<i.eps&&(n.listOfFreePoints[p].symbolic.y=0),Math.abs(C-Math.round(C))<i.eps&&(n.listOfFreePoints[p].symbolic.y=Math.round(C));}h=this.generatePolynomials(n,a),l=h.join(\",\"),this.cbp=function(t){c=t;},this.cb=o.bind(this.cbp,this),s.modules.geoloci.lociCoCoA(f,m,g,b,E,l,O,N,w,T,this.cb,!0),this.clearSymbolicCoordinates(n);for(p in P)P.hasOwnProperty(p)&&(n.objects[p].radius=P[p]);return c;}},i.Symbolic;}),define(\"math/clip\",[\"jxg\",\"base/constants\",\"base/coords\",\"math/math\",\"math/geometry\",\"utils/type\"],function(t,e,i,r,s,o){\"use strict\";return r.Clip={_isSeparator:function(t){return isNaN(t.coords.usrCoords[1])&&isNaN(t.coords.usrCoords[2]);},makeDoublyLinkedList:function(t){var e,i=null,r=[],s=t.length;if(s>0)for(e=0;e<s;e++)this._isSeparator(t[e])?(t[e]._next=t[(e+1)%s],t[e]._prev=t[(s+e-1)%s]):(null===i&&(i=e,r.push(i)),this._isSeparator(t[(e+1)%s])||e==s-1?(t[e]._next=t[i],t[i]._prev=t[e],t[e]._end=!0,i=null):(t[e]._next=t[(e+1)%s],t[i]._prev=t[e]),this._isSeparator(t[(s+e-1)%s])||(t[e]._prev=t[(s+e-1)%s]));return r;},det:function(t,e,i){return(t[1]-i[1])*(e[2]-i[2])-(e[1]-i[1])*(t[2]-i[2]);},windingNumber:function(t,e){var i,s,o,n,a,h=0,l=e.length,c=t[1],d=t[2];if(0===l)return 0;if(isNaN(c)||isNaN(d))return 1;if(e[0].coords.usrCoords[1]===c&&e[0].coords.usrCoords[2]===d)return 1;for(a=0;a<l;a++)if(i=e[a].coords.usrCoords,s=e[(a+1)%l].coords.usrCoords,!(0===i[0]||0===s[0]||isNaN(i[1])||isNaN(s[1])||isNaN(i[2])||isNaN(s[2]))){if(s[2]===d){if(s[1]===c)return 1;if(i[2]===d&&s[1]>c==i[1]<c)return 0;}if(i[2]<d!=s[2]<d)if(n=2*(s[2]>i[2]?1:0)-1,i[1]>=c){if(s[1]>c)h+=n;else{if(0===(o=this.det(i,s,t)))return 0;o>0==s[2]>i[2]&&(h+=n);}}else s[1]>c&&(o=this.det(i,s,t))>0+r.eps==s[2]>i[2]&&(h+=n);}return h;},Vertex:function(t,i,r,s,o,n){this.pos=i,this.intersection=!0,this.coords=t,this.elementClass=e.OBJECT_CLASS_POINT,this.data={alpha:r,path:s,pathname:o,done:!1,type:n,revtype:n,link:null,idx:0},this.neighbour=null,this.entry_exit=!1;},_addToList:function(t,i,s){var o=t.length,n=r.eps*r.eps;o>0&&Math.abs(t[o-1].coords.usrCoords[0]-i.usrCoords[0])<n&&Math.abs(t[o-1].coords.usrCoords[1]-i.usrCoords[1])<n&&Math.abs(t[o-1].coords.usrCoords[2]-i.usrCoords[2])<n||t.push({pos:s,intersection:!1,coords:i,elementClass:e.OBJECT_CLASS_POINT});},sortIntersections:function(t){var e,i,r,s,o,n,a=[],h=t.length;for(e=0;e<h;e++)if(t[e].sort(function(t,e){return t.data.alpha>e.data.alpha?1:-1;}),t[e].length>0){for(o=t[e].length-1,r=t[e][0],s=r.data.path[r.pos],n=s._next,e===h-1&&(s._end=!1),0===r.data.alpha&&\"T\"===r.data.type?(s.intersection=!0,s.data=r.data,s.neighbour=r.neighbour,s.neighbour.neighbour=s,s.entry_exit=!1,t[e][0]=s):(r._prev=s,r._prev._next=r),i=1;i<=o;i++)r=t[e][i],r._prev=t[e][i-1],r._prev._next=r;r=t[e][o],r._next=n,r._next._prev=r,e===h-1&&(r._end=!0),a=a.concat(t[e]);}return a;},_inbetween:function(t,e,i){var s,o=r.eps*r.eps,n=i[1]-e[1],a=i[2]-e[2],h=t[1]-e[1],l=t[2]-e[2];return 0===n&&0===a&&0===h&&0===l||(s=Math.abs(h)<o&&Math.abs(n)<o?l/a:h/n,Math.abs(s)<o&&(s=0),s);},_print_array:function(t){var e,i;for(e=0;e<t.length;e++)try{i=\"\",t[e]._end&&(i=\" end\"),console.log(e,t[e].coords.usrCoords,\"prev\",t[e]._prev.coords.usrCoords,\"next\",t[e]._next.coords.usrCoords+i);}catch(i){console.log(e,t[e].coords.usrCoords);}},_print_list:function(t){for(var e,i=0;i<100&&(e=t.data?t.data.alpha:\"-\",console.log(\"\\t\",t.coords.usrCoords,\"\\n\\t\\tis:\",t.intersection,\"end:\",t._end,e,\"\\n\\t\\t-:\",t._prev.coords.usrCoords,\"\\n\\t\\t+:\",t._next.coords.usrCoords,\"\\n\\t\\tn:\",t.intersection?t.neighbour.coords.usrCoords:\"-\"),!t._end);)t=t._next,i++;},_noOverlap:function(t,e,i,s){var o,n,a,h,l,c=r.eps*r.eps,d=!1;for(o=0;o<3;o++)if(n=Math.min(t[o],e[o]),a=Math.max(t[o],e[o]),h=Math.min(i[o],s[o]),l=Math.max(i[o],s[o]),a<h-c||n>l+c){d=!0;break;}return d;},findIntersections:function(t,o,n){var a,h,l,c,d,u,p,f,m,g,b,v,y,C=[],_=r.eps,P=t.length,E=o.length,x=[],S=[],O=[],w=[],T=!1,N=!1;for(h=0;h<E;h++)w.push([]);for(a=0;a<P;a++)if(O.push([]),this._isSeparator(t[a])||this._isSeparator(t[(a+1)%P]))T=!0;else{if(T&&a===P-1)break;for(c=t[a].coords.usrCoords,d=t[(a+1)%P].coords.usrCoords,h=0;h<E;h++)if(this._isSeparator(o[h])||this._isSeparator(o[(h+1)%E]))N=!0;else{if(N&&h===E-1)break;if(u=o[h].coords.usrCoords,p=o[(h+1)%E].coords.usrCoords,!this._noOverlap(c,d,u,p)&&(C=s.meetSegmentSegment(c,d,u,p),f=s.distance(c,d,3),m=s.distance(u,p,3),C[1]*f>-_&&C[1]<1-_/f&&C[2]*m>-_&&C[2]<1-_/m||C[1]===1/0&&C[2]===1/0&&r.norm(C[0],3)<_)){if(l=new i(e.COORDS_BY_USER,C[0],n),b=\"X\",Math.abs(C[1])*f<_||Math.abs(C[2])*m<_)b=\"T\",Math.abs(C[1])*f<_&&(C[1]=0),Math.abs(C[2])*m<_&&(C[2]=0),l=0===C[1]?new i(e.COORDS_BY_USER,c,n):new i(e.COORDS_BY_USER,u,n);else if(C[1]===1/0&&C[2]===1/0&&r.norm(C[0],3)<_){g=this._inbetween(c,u,p),g>=0&&g<1&&(b=\"T\",l=new i(e.COORDS_BY_USER,c,n),C[1]=0,C[2]=g,v=new this.Vertex(l,a,C[1],t,\"S\",b),y=new this.Vertex(l,h,C[2],o,\"C\",b),v.neighbour=y,y.neighbour=v,O[a].push(v),w[h].push(y)),g=this._inbetween(u,c,d),s.distance(c,u,3)>_&&g>=0&&g<1&&(b=\"T\",l=new i(e.COORDS_BY_USER,u,n),C[1]=g,C[2]=0,v=new this.Vertex(l,a,C[1],t,\"S\",b),y=new this.Vertex(l,h,C[2],o,\"C\",b),v.neighbour=y,y.neighbour=v,O[a].push(v),w[h].push(y));continue;}v=new this.Vertex(l,a,C[1],t,\"S\",b),y=new this.Vertex(l,h,C[2],o,\"C\",b),v.neighbour=y,y.neighbour=v,O[a].push(v),w[h].push(y);}}}for(x=this.sortIntersections(O),a=0;a<x.length;a++)x[a].data.idx=a,x[a].neighbour.data.idx=a;return S=this.sortIntersections(w),[x,S];},_getPosition:function(t,e,i,r){var s=this.det(t,e,i),o=this.det(t,i,r);return this.det(e,i,r)>=0?s>0&&o>0?\"left\":\"right\":s<0&&o<0?\"right\":\"left\";},_classifyDegenerateIntersections:function(t){var e,i,n,a,h,l,c;for(c=0,t._start=0;;){if(t.intersection&&\"T\"===t.data.type&&(e=t._next.coords.usrCoords,i=t._prev.coords.usrCoords,s.distance(t.coords.usrCoords,e,3)<r.eps&&(t._next=t._next._next,e=t._next.coords.usrCoords),s.distance(t.coords.usrCoords,i,3)<r.eps&&(t._prev=t._prev._prev,i=t._prev.coords.usrCoords),h=t.neighbour,a=t.neighbour._prev.coords.usrCoords,n=t.neighbour._next.coords.usrCoords,t._next.intersection&&t._next.neighbour===h._next?t._prev.intersection&&t._prev.neighbour===h._prev?t.delayedStatus=[\"on\",\"on\"]:(l=this._getPosition(a,i,t.coords.usrCoords,e),t.delayedStatus=\"right\"===l?[\"left\",\"on\"]:[\"right\",\"on\"]):t._next.intersection&&t._next.neighbour===h._prev&&(t._prev.intersection&&t._prev.neighbour===h._next?t.delayedStatus=[\"on\",\"on\"]:(l=this._getPosition(n,i,t.coords.usrCoords,e),t.delayedStatus=\"right\"===l?[\"left\",\"on\"]:[\"right\",\"on\"])),t._prev.intersection&&t._prev.neighbour===h._prev?t._next.intersection&&t._next.neighbour===h._next||(l=this._getPosition(n,i,t.coords.usrCoords,e),t.delayedStatus=\"right\"===l?[\"on\",\"left\"]:[\"on\",\"right\"]):t._prev.intersection&&t._prev.neighbour===h._next&&(t._next.intersection&&t._next.neighbour===h._prev||(l=this._getPosition(a,i,t.coords.usrCoords,e),t.delayedStatus=\"right\"===l?[\"on\",\"left\"]:[\"on\",\"right\"])),t._next.intersection&&(t._next.neighbour===h._prev||t._next.neighbour===h._next)||t._prev.intersection&&(t._prev.neighbour===h._prev||t._prev.neighbour===h._next)||(l=this._getPosition(a,i,t.coords.usrCoords,e),l!==this._getPosition(n,i,t.coords.usrCoords,e)?(t.data.type=\"X\",t.data.revtype=\"X\"):(t.data.type=\"B\",t.data.revtype=\"B\"))),o.exists(t._start)&&t._start++,t._start>3||t._end||c>1e3){c>1e3&&console.log(\"Clipping: _classifyDegenerateIntersections exit\"),o.exists(t._start)&&delete t._start;break;}t.intersection&&c++,t=t._next;}},_handleIntersectionChains:function(t){for(var e,i=0,r=\"Null\",s=!1,o=!1;;){if(!0===t.intersection&&(\"T\"===t.data.type&&(\"on\"!==t.delayedStatus[0]&&\"on\"===t.delayedStatus[1]?(s=!0,e=t,r=t.delayedStatus[0]):\"on\"===t.delayedStatus[0]&&\"on\"===t.delayedStatus[1]?(t.data.type=\"B\",t.data.revtype=\"B\"):\"on\"===t.delayedStatus[0]&&\"on\"!==t.delayedStatus[1]&&s&&(s=!1,r===t.delayedStatus[1]?(t.data.type=\"B\",t.data.revtype=\"B\",e.data.type=\"B\",e.data.revtype=\"B\"):(t.data.type=\"X\",t.data.revtype=\"B\",e.data.type=\"B\",e.data.revtype=\"X\"),e.data.link=t,t.data.link=e)),i++),t._end&&(o=!0),o&&!s)break;if(i>1e3){console.log(\"Clipping: Intersection chain - exit\");break;}t=t._next;}},_handleFullyDegenerateCase:function(t,s,o){var n,a,h,l,c,d,u,p,f,m,g,b,v,y,C=[t,s];for(h=0;h<2;h++){for(n=C[h],g=n.length,f=0,y=!0;f<g;f++)if(!n[f].intersection){y=!1;break;}if(y)for(a=C[(h+1)%2],b=a.length,f=0;f<g;f++){for(d=n[f].coords.usrCoords,u=n[(f+1)%g].coords.usrCoords,l=[.5*(d[0]+u[0]),.5*(d[1]+u[1]),.5*(d[2]+u[2])],m=0,v=!1;m<b;m++)if(Math.abs(this.det(a[m].coords.usrCoords,a[(m+1)%b].coords.usrCoords,l))<r.eps){v=!0;break;}if(!v){c=new i(e.COORDS_BY_USER,l,o),p={pos:f,intersection:!1,coords:c,elementClass:e.OBJECT_CLASS_POINT},n[f]._next=p,p._prev=n[f],n[(f+1)%g]._prev=p,p._next=n[(f+1)%g],n[f]._end&&(n[f]._end=!1,p._end=!0);break;}}}},_getStatus:function(t,e){for(var i;t.intersection&&!t._end;)t=t._next;return i=this.windingNumber(t.coords.usrCoords,e)%2==0?\"entry\":\"exit\",[t,i];},markEntryExit:function(t,e,i){var r,s,n,a,h,l,c;for(l=i.length,h=0;h<l;h++)for(c=i[h],this._classifyDegenerateIntersections(t[c]),this._handleIntersectionChains(t[c]),a=this._getStatus(t[c],e),s=a[0],r=a[1],s._starter=!0,n=0;;){if(!0===s.intersection&&\"X\"===s.data.type&&(s.entry_exit=r,r=\"entry\"===r?\"exit\":\"entry\",null===s.data.link||s.data.link.entry_exit||(s.data.link.entry_exit=s.entry_exit)),!0===s.intersection&&\"X\"!==s.data.type&&(s.entry_exit||null===s.data.link||(s.entry_exit=s.data.link.entry_exit)),s=s._next,o.exists(s._starter)||n>1e4)break;n++;}},_isCrossing:function(t,e){return e=e||!1,t.intersection&&\"X\"===(e?t.data.revtype:t.data.type);},tracing:function(t,e,i){var r,s,o,n,a=0,h=0,l=[];for(n=\"difference\"===i||\"union\"===i;h<e.length&&a<1e4;)if(s=e[h],!s.data.done&&this._isCrossing(s,n)){l.length>0&&l.push([NaN,NaN]),o=s.data.idx,r=t;do{if(l.push(s),s.data.done=!0,\"intersection\"===i&&\"entry\"===s.entry_exit||\"union\"===i&&\"exit\"===s.entry_exit||\"difference\"===i&&r===t==(\"exit\"===s.entry_exit)){s=s._next;do{a++,this._isCrossing(s,n)||(isNaN(s.coords.usrCoords[1])||isNaN(s.coords.usrCoords[2])||l.push(s),s=s._next);}while(!this._isCrossing(s,n)&&a<1e4);}else{s=s._prev;do{a++,this._isCrossing(s,!0)||(isNaN(s.coords.usrCoords[1])||isNaN(s.coords.usrCoords[2])||l.push(s),s=s._prev);}while(!this._isCrossing(s,!0)&&a<1e4);}if(s.data.done=!0,!s.neighbour)return console.log(\"BREAK!!!!!!!!!!!!!!!!!\",a),[[0],[0]];if(s=s.neighbour,s.data.done){l.push(s);break;}r=s.data.path;}while((\"S\"!==s.data.pathname||s.data.idx!==o)&&a<1e4);h++;}else h++;return this._getCoordsArrays(l,!1);},isEmptyCase:function(t,e,i,r,s){return\"intersection\"===i&&(0===t.length||0===e.length)||\"union\"===i&&(0===t.length||0===e.length)||\"difference\"===i&&(0===t.length||0===e.length);},_getCoordsArrays:function(t,e){var i,r=[],s=[],o=t.length;for(i=0;i<o;i++)t[i].coords?(r.push(t[i].coords.usrCoords[1]),s.push(t[i].coords.usrCoords[2])):(r.push(t[i][0]),s.push(t[i][1]));return e&&o>0&&(t[0].coords?(r.push(t[0].coords.usrCoords[1]),s.push(t[0].coords.usrCoords[2])):(r.push(t[0][0]),s.push(t[0][1]))),[r,s];},handleEmptyIntersection:function(t,e,i){var r,o,n=!1,a=[];if(0===t.length)return a=\"union\"===i?e:[],this._getCoordsArrays(a,!0);if(0===e.length)return a=\"intersection\"===i?[]:t,this._getCoordsArrays(a,!0);if(\"union\"===i)return a=a.concat(t),a.push(t[0]),a.push([NaN,NaN]),a=a.concat(e),a.push(e[0]),this._getCoordsArrays(a,!1);if(t.length>0)for(r=t[0];r.intersection&&(r=r._next,!r._end););if(e.length>0)for(o=e[0];o.intersection&&(o=o._next,!o._end););return 0===this.windingNumber(r.coords.usrCoords,e)?0!==this.windingNumber(o.coords.usrCoords,t)?(\"difference\"===i&&(a=a.concat(t),a.push(t[0]),s.signedPolygon(t)*s.signedPolygon(e)>0&&a.reverse(),a.push([NaN,NaN])),a=a.concat(e),a.push(e[0]),n=!1):\"difference\"===i&&(a=a.concat(t),n=!0):\"intersection\"===i&&(a=a.concat(t),n=!0),this._getCoordsArrays(a,n);},_countCrossingIntersections:function(t){var e,i=t.length,r=0;for(e=0;e<i;e++)\"X\"===t[e].data.type&&r++;return r;},_getPath:function(t,r){var n,a,h,l,c,d,u,p=[];if(t.elementClass!==e.OBJECT_CLASS_CURVE||t.type!==e.OBJECT_TYPE_ARC&&t.type!==e.OBJECT_TYPE_SECTOR){if(t.elementClass===e.OBJECT_CLASS_CURVE&&o.exists(t.points))for(a=t.numberPoints,n=0;n<a;n++)this._addToList(p,t.points[n],n);else if(t.type===e.OBJECT_TYPE_POLYGON)for(n=0;n<t.vertices.length;n++)this._addToList(p,t.vertices[n].coords,n);else if(t.elementClass===e.OBJECT_CLASS_CIRCLE)for(u=359,h=t.Radius(),l=2*Math.PI/u,n=0;n<=u;n++)this._addToList(p,new i(e.COORDS_BY_USER,[t.center.coords.usrCoords[0],t.center.coords.usrCoords[1]+Math.cos(n*l)*h,t.center.coords.usrCoords[2]+Math.sin(n*l)*h],r),n);else if(o.isArray(t))for(a=t.length,n=0;n<a;n++)o.exists(t[n].coords)?this._addToList(p,t[n].coords,n):o.isArray(t[n])?this._addToList(p,new i(e.COORDS_BY_USER,t[n],r),n):o.exists(t[n].usrCoords)&&this._addToList(p,t[n],n);}else{for(c=s.rad(t.radiuspoint,t.center,t.anglepoint),u=Math.floor(180*c/Math.PI),h=t.Radius(),l=c/u,d=Math.atan2(t.radiuspoint.coords.usrCoords[2]-t.center.coords.usrCoords[2],t.radiuspoint.coords.usrCoords[1]-t.center.coords.usrCoords[1]),t.type===e.OBJECT_TYPE_SECTOR&&this._addToList(p,t.center.coords,0),n=0;n<=u;n++)this._addToList(p,new i(e.COORDS_BY_USER,[t.center.coords.usrCoords[0],t.center.coords.usrCoords[1]+Math.cos(n*l+d)*h,t.center.coords.usrCoords[2]+Math.sin(n*l+d)*h],r),n+1);t.type===e.OBJECT_TYPE_SECTOR&&this._addToList(p,t.center.coords,u+2);}return p;},greinerHormann:function(t,e,i,o){var n,a,h,l=[],c=[],d=[],u=[],p=[],f=[];return l=this._getPath(t,o),n=l.length,n>0&&s.distance(l[0].coords.usrCoords,l[n-1].coords.usrCoords,3)<r.eps&&l.pop(),c=this._getPath(e,o),n=c.length,n>0&&s.distance(c[0].coords.usrCoords,c[n-1].coords.usrCoords,3)<r.eps*r.eps&&c.pop(),this.isEmptyCase(l,c,i,p,f)?[p,f]:(a=this.makeDoublyLinkedList(l),h=this.makeDoublyLinkedList(c),u=this.findIntersections(l,c,o),d=u[0],this._handleFullyDegenerateCase(l,c,o),this.markEntryExit(l,c,a),this.markEntryExit(c,l,h),0===this._countCrossingIntersections(d)?this.handleEmptyIntersection(l,c,i):this.tracing(l,d,i));},union:function(t,e,i){return this.greinerHormann(t,e,\"union\",i);},intersection:function(t,e,i){return this.greinerHormann(t,e,\"intersection\",i);},difference:function(t,e,i){return this.greinerHormann(t,e,\"difference\",i);}},t.extend(r.Clip,{}),r.Clip;}),define(\"math/poly\",[\"jxg\",\"math/math\",\"utils/type\"],function(t,e,i){\"use strict\";return e.Poly={},e.Poly.Ring=function(t){this.vars=t;},t.extend(e.Poly.Ring.prototype,{}),e.Poly.Monomial=function(t,e,r){var s;if(!i.exists(t))throw new Error(\"JSXGraph error: In JXG.Math.Poly.monomial missing parameter 'ring'.\");for(i.isArray(r)||(r=[]),r=r.slice(0,t.vars.length),s=r.length;s<t.vars.length;s++)r.push(0);this.ring=t,this.coefficient=e||0,this.exponents=i.deepCopy(r);},t.extend(e.Poly.Monomial.prototype,{copy:function(){return new e.Poly.Monomial(this.ring,this.coefficient,this.exponents);},print:function(){var t,e=[];for(t=0;t<this.ring.vars.length;t++)e.push(this.ring.vars[t]+\"^\"+this.exponents[t]);return this.coefficient+\"*\"+e.join(\"*\");}}),e.Poly.Polynomial=function(t,e){var r;if(!i.exists(t))throw new Error(\"JSXGraph error: In JXG.Math.Poly.polynomial missing parameter 'ring'.\");r=i.exists(e)&&i.isString(e)?void 0:[],this.ring=t,this.monomials=r;},t.extend(e.Poly.Polynomial.prototype,{findSignature:function(t){var e;for(e=0;e<this.monomials.length;e++)if(i.cmpArrays(this.monomials[e].exponents,t))return e;return-1;},addSubMonomial:function(t,e){var i;i=this.findSignature(t.exponents),i>-1?this.monomials[i].coefficient+=e*t.coefficient:(t.coefficient*=e,this.monomials.push(t));},add:function(t){var e;if(!i.exists(t)||t.ring!==this.ring)throw new Error(\"JSXGraph error: In JXG.Math.Poly.polynomial.add either summand is undefined or rings don't match.\");if(i.isArray(t.exponents))this.addSubMonomial(t,1);else for(e=0;e<t.monomials.length;e++)this.addSubMonomial(t.monomials[e],1);},sub:function(t){var e;if(!i.exists(t)||t.ring!==this.ring)throw new Error(\"JSXGraph error: In JXG.Math.Poly.polynomial.sub either summand is undefined or rings don't match.\");if(i.isArray(t.exponents))this.addSubMonomial(t,-1);else for(e=0;e<t.monomials.length;e++)this.addSubMonomial(t.monomials[e],-1);},copy:function(){var t,i;for(i=new e.Poly.Polynomial(this.ring),t=0;t<this.monomials.length;t++)i.monomials.push(this.monomials[t].copy());return i;},print:function(){var t,e=[];for(t=0;t<this.monomials.length;t++)e.push(\"(\"+this.monomials[t].print()+\")\");return e.join(\"+\");}}),e.Poly;}),define(\"math/complex\",[\"jxg\",\"utils/type\"],function(t,e){\"use strict\";return t.Complex=function(t,e){this.isComplex=!0,t&&t.isComplex&&(e=t.imaginary,t=t.real),this.real=t||0,this.imaginary=e||0,this.absval=0,this.angle=0;},t.extend(t.Complex.prototype,{toString:function(){return this.real+\" + \"+this.imaginary+\"i\";},add:function(t){return e.isNumber(t)?this.real+=t:(this.real+=t.real,this.imaginary+=t.imaginary),this;},sub:function(t){return e.isNumber(t)?this.real-=t:(this.real-=t.real,this.imaginary-=t.imaginary),this;},mult:function(t){var i,r;return e.isNumber(t)?(this.real*=t,this.imaginary*=t):(i=this.real,r=this.imaginary,this.real=i*t.real-r*t.imaginary,this.imaginary=i*t.imaginary+r*t.real),this;},div:function(t){var i,r,s;if(e.isNumber(t)){if(Math.abs(t)<Math.eps)return this.real=1/0,this.imaginary=1/0,this;this.real/=t,this.imaginary/=t;}else{if(Math.abs(t.real)<Math.eps&&Math.abs(t.imaginary)<Math.eps)return this.real=1/0,this.imaginary=1/0,this;i=t.real*t.real+t.imaginary*t.imaginary,s=this.real,r=this.imaginary,this.real=(s*t.real+r*t.imaginary)/i,this.imaginary=(r*t.real-s*t.imaginary)/i;}return this;},conj:function(){return this.imaginary*=-1,this;}}),t.C={},t.C.add=function(e,i){var r=new t.Complex(e);return r.add(i),r;},t.C.sub=function(e,i){var r=new t.Complex(e);return r.sub(i),r;},t.C.mult=function(e,i){var r=new t.Complex(e);return r.mult(i),r;},t.C.div=function(e,i){var r=new t.Complex(e);return r.div(i),r;},t.C.conj=function(e){var i=new t.Complex(e);return i.conj(),i;},t.C.abs=function(e){var i=new t.Complex(e);return i.conj(),i.mult(e),Math.sqrt(i.real);},t.Complex.C=t.C,t.Complex;}),define(\"utils/color\",[\"jxg\",\"utils/type\",\"math/math\"],function(t,e,i){\"use strict\";var r={aliceblue:\"f0f8ff\",antiquewhite:\"faebd7\",aqua:\"00ffff\",aquamarine:\"7fffd4\",azure:\"f0ffff\",beige:\"f5f5dc\",bisque:\"ffe4c4\",black:\"000000\",blanchedalmond:\"ffebcd\",blue:\"0000ff\",blueviolet:\"8a2be2\",brown:\"a52a2a\",burlywood:\"deb887\",cadetblue:\"5f9ea0\",chartreuse:\"7fff00\",chocolate:\"d2691e\",coral:\"ff7f50\",cornflowerblue:\"6495ed\",cornsilk:\"fff8dc\",crimson:\"dc143c\",cyan:\"00ffff\",darkblue:\"00008b\",darkcyan:\"008b8b\",darkgoldenrod:\"b8860b\",darkgray:\"a9a9a9\",darkgreen:\"006400\",darkkhaki:\"bdb76b\",darkmagenta:\"8b008b\",darkolivegreen:\"556b2f\",darkorange:\"ff8c00\",darkorchid:\"9932cc\",darkred:\"8b0000\",darksalmon:\"e9967a\",darkseagreen:\"8fbc8f\",darkslateblue:\"483d8b\",darkslategray:\"2f4f4f\",darkturquoise:\"00ced1\",darkviolet:\"9400d3\",deeppink:\"ff1493\",deepskyblue:\"00bfff\",dimgray:\"696969\",dodgerblue:\"1e90ff\",feldspar:\"d19275\",firebrick:\"b22222\",floralwhite:\"fffaf0\",forestgreen:\"228b22\",fuchsia:\"ff00ff\",gainsboro:\"dcdcdc\",ghostwhite:\"f8f8ff\",gold:\"ffd700\",goldenrod:\"daa520\",gray:\"808080\",green:\"008000\",greenyellow:\"adff2f\",honeydew:\"f0fff0\",hotpink:\"ff69b4\",indianred:\"cd5c5c\",indigo:\"4b0082\",ivory:\"fffff0\",khaki:\"f0e68c\",lavender:\"e6e6fa\",lavenderblush:\"fff0f5\",lawngreen:\"7cfc00\",lemonchiffon:\"fffacd\",lightblue:\"add8e6\",lightcoral:\"f08080\",lightcyan:\"e0ffff\",lightgoldenrodyellow:\"fafad2\",lightgrey:\"d3d3d3\",lightgreen:\"90ee90\",lightpink:\"ffb6c1\",lightsalmon:\"ffa07a\",lightseagreen:\"20b2aa\",lightskyblue:\"87cefa\",lightslateblue:\"8470ff\",lightslategray:\"778899\",lightsteelblue:\"b0c4de\",lightyellow:\"ffffe0\",lime:\"00ff00\",limegreen:\"32cd32\",linen:\"faf0e6\",magenta:\"ff00ff\",maroon:\"800000\",mediumaquamarine:\"66cdaa\",mediumblue:\"0000cd\",mediumorchid:\"ba55d3\",mediumpurple:\"9370d8\",mediumseagreen:\"3cb371\",mediumslateblue:\"7b68ee\",mediumspringgreen:\"00fa9a\",mediumturquoise:\"48d1cc\",mediumvioletred:\"c71585\",midnightblue:\"191970\",mintcream:\"f5fffa\",mistyrose:\"ffe4e1\",moccasin:\"ffe4b5\",navajowhite:\"ffdead\",navy:\"000080\",oldlace:\"fdf5e6\",olive:\"808000\",olivedrab:\"6b8e23\",orange:\"ffa500\",orangered:\"ff4500\",orchid:\"da70d6\",palegoldenrod:\"eee8aa\",palegreen:\"98fb98\",paleturquoise:\"afeeee\",palevioletred:\"d87093\",papayawhip:\"ffefd5\",peachpuff:\"ffdab9\",peru:\"cd853f\",pink:\"ffc0cb\",plum:\"dda0dd\",powderblue:\"b0e0e6\",purple:\"800080\",red:\"ff0000\",rosybrown:\"bc8f8f\",royalblue:\"4169e1\",saddlebrown:\"8b4513\",salmon:\"fa8072\",sandybrown:\"f4a460\",seagreen:\"2e8b57\",seashell:\"fff5ee\",sienna:\"a0522d\",silver:\"c0c0c0\",skyblue:\"87ceeb\",slateblue:\"6a5acd\",slategray:\"708090\",snow:\"fffafa\",springgreen:\"00ff7f\",steelblue:\"4682b4\",tan:\"d2b48c\",teal:\"008080\",thistle:\"d8bfd8\",tomato:\"ff6347\",turquoise:\"40e0d0\",violet:\"ee82ee\",violetred:\"d02090\",wheat:\"f5deb3\",white:\"ffffff\",whitesmoke:\"f5f5f5\",yellow:\"ffff00\",yellowgreen:\"9acd32\"},s=[{re:/^\\s*rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*([\\d\\.]{1,3})\\s*\\)\\s*$/,example:[\"rgba(123, 234, 45, 0.5)\",\"rgba(255,234,245,1.0)\"],process:function(t){return[parseInt(t[1],10),parseInt(t[2],10),parseInt(t[3],10)];}},{re:/^\\s*rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)\\s*$/,example:[\"rgb(123, 234, 45)\",\"rgb(255,234,245)\"],process:function(t){return[parseInt(t[1],10),parseInt(t[2],10),parseInt(t[3],10)];}},{re:/^(\\w{2})(\\w{2})(\\w{2})$/,example:[\"#00ff00\",\"336699\"],process:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)];}},{re:/^(\\w{1})(\\w{1})(\\w{1})$/,example:[\"#fb0\",\"f0f\"],process:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)];}}];return t.rgbParser=function(t,i,o){var n,a,h,l,c,d,u,p,f,m,g=t;if(!e.exists(t))return[];if(e.exists(i)&&e.exists(o)&&(g=[t,i,o]),n=g,m=!1,e.isArray(n)){for(d=0;d<3;d++)m=m||/\\./.test(g[d].toString());for(d=0;d<3;d++)m=m&&g[d]>=0&&g[d]<=1;return m?[Math.ceil(255*g[0]),Math.ceil(255*g[1]),Math.ceil(255*g[2])]:g;}for(\"string\"==typeof g&&(n=g),\"#\"===n.charAt(0)&&(n=n.substr(1,6)),n=n.replace(/ /g,\"\").toLowerCase(),n=r[n]||n,d=0;d<s.length;d++)h=s[d].re,l=s[d].process,(c=h.exec(n))&&(a=l(c),u=a[0],p=a[1],f=a[2]);return isNaN(u)||isNaN(p)||isNaN(f)?[]:(u=u<0||isNaN(u)?0:u>255?255:u,p=p<0||isNaN(p)?0:p>255?255:p,f=f<0||isNaN(f)?0:f>255?255:f,[u,p,f]);},t.rgb2css=function(e,i,r){var s;return s=t.rgbParser(e,i,r),\"rgb(\"+s[0]+\", \"+s[1]+\", \"+s[2]+\")\";},t.rgb2hex=function(e,i,r){var s,o,n;return s=t.rgbParser(e,i,r),o=s[1],n=s[2],s=s[0],s=s.toString(16),o=o.toString(16),n=n.toString(16),1===s.length&&(s=\"0\"+s),1===o.length&&(o=\"0\"+o),1===n.length&&(n=\"0\"+n),\"#\"+s+o+n;},t.hex2rgb=function(e){return t.deprecated(\"JXG.hex2rgb()\",\"JXG.rgb2css()\"),t.rgb2css(e);},t.hsv2rgb=function(t,e,r){var s,o,n,a,h,l,c,d,u;if(t=(t%360+360)%360,0===e){if(!(isNaN(t)||t<i.eps))return\"#ffffff\";s=r,o=r,n=r;}else switch(l=t>=360?0:t,l/=60,h=Math.floor(l),a=l-h,c=r*(1-e),d=r*(1-e*a),u=r*(1-e*(1-a)),h){case 0:s=r,o=u,n=c;break;case 1:s=d,o=r,n=c;break;case 2:s=c,o=r,n=u;break;case 3:s=c,o=d,n=r;break;case 4:s=u,o=c,n=r;break;case 5:s=r,o=c,n=d;}return s=Math.round(255*s).toString(16),s=2===s.length?s:1===s.length?\"0\"+s:\"00\",o=Math.round(255*o).toString(16),o=2===o.length?o:1===o.length?\"0\"+o:\"00\",n=Math.round(255*n).toString(16),n=2===n.length?n:1===n.length?\"0\"+n:\"00\",[\"#\",s,o,n].join(\"\");},t.rgb2hsv=function(e,i,r){var s,o,n,a,h,l,c,d,u,p,f,m,g;return s=t.rgbParser(e,i,r),o=s[1],n=s[2],s=s[0],a=s/255,h=o/255,l=n/255,m=Math.max(s,o,n),g=Math.min(s,o,n),c=m/255,d=g/255,f=c,p=0,f>0&&(p=(f-d)/f),u=1/(c-d),p>0&&(m===s?u*=h-l:u=m===o?2+(l-a)*u:4+(a-h)*u),u*=60,u<0&&(u+=360),m===g&&(u=0),[u,p,f];},t.rgb2LMS=function(e,i,r){var s,o,n,a,h,l,c,d=[[.05059983,.08585369,.0095242],[.01893033,.08925308,.01370054],[.00292202,.00975732,.07145979]];return s=t.rgbParser(e,i,r),o=s[1],n=s[2],s=s[0],s=Math.pow(s,.476190476),o=Math.pow(o,.476190476),n=Math.pow(n,.476190476),a=s*d[0][0]+o*d[0][1]+n*d[0][2],h=s*d[1][0]+o*d[1][1]+n*d[1][2],l=s*d[2][0]+o*d[2][1]+n*d[2][2],c=[a,h,l],c.l=a,c.m=h,c.s=l,c;},t.LMS2rgb=function(t,e,i){var r,s,o,n,a=[[30.830854,-29.832659,1.610474],[-6.481468,17.715578,-2.532642],[-.37569,-1.199062,14.273846]],h=function(t){for(var e=127,i=64;i>0;){if(Math.pow(e,.476190476)>t)e-=i;else{if(Math.pow(e+1,.476190476)>t)return e;e+=i;}i/=2;}return 254===e&&13.994955247<t?255:e;};return r=t*a[0][0]+e*a[0][1]+i*a[0][2],s=t*a[1][0]+e*a[1][1]+i*a[1][2],o=t*a[2][0]+e*a[2][1]+i*a[2][2],r=h(r),s=h(s),o=h(o),n=[r,s,o],n.r=r,n.g=s,n.b=o,n;},t.rgba2rgbo=function(t){var e;return 9===t.length&&\"#\"===t.charAt(0)?(e=parseInt(t.substr(7,2).toUpperCase(),16)/255,t=t.substr(0,7)):e=1,[t,e];},t.rgbo2rgba=function(t,e){var i;return\"none\"===t?t:(i=Math.round(255*e).toString(16),1===i.length&&(i=\"0\"+i),t+i);},t.rgb2bw=function(e){var i,r,s,o=\"0123456789ABCDEF\";return\"none\"===e?e:(s=t.rgbParser(e),i=Math.floor(.3*s[0]+.59*s[1]+.11*s[2]),r=o.charAt(i>>4&15)+o.charAt(15&i),e=\"#\"+r+r+r);},t.rgb2cb=function(e,i){var r,s,o,n,a,h,l,c,d,u,p,f,m,g=\"0123456789ABCDEF\";if(\"none\"===e)return e;switch(a=t.rgb2LMS(e),s=a[0],o=a[1],n=a[2],i=i.toLowerCase()){case\"protanopia\":l=-.06150039994295001,c=.08277001656812001,d=-.013200141220000003,u=.05858939668799999,p=-.07934519995360001,f=.013289415272000003,m=.6903216543277437,h=n/o,s=h<m?-(c*o+d*n)/l:-(p*o+f*n)/u;break;case\"tritanopia\":l=-.00058973116217,c=.007690316482,d=-.01011703519052,u=.025495080838999994,p=-.0422740347,f=.017005316784,m=.8349489908460004,h=o/s,n=h<m?-(l*s+c*o)/d:-(u*s+p*o)/f;break;default:l=-.06150039994295001,c=.08277001656812001,d=-.013200141220000003,u=.05858939668799999,p=-.07934519995360001,f=.013289415272000003,m=.5763833686400911,h=n/s,o=h<m?-(l*s+d*n)/c:-(u*s+f*n)/p;}return r=t.LMS2rgb(s,o,n),h=g.charAt(r[0]>>4&15)+g.charAt(15&r[0]),e=\"#\"+h,h=g.charAt(r[1]>>4&15)+g.charAt(15&r[1]),e+=h,h=g.charAt(r[2]>>4&15)+g.charAt(15&r[2]),e+=h;},t.autoHighlight=function(e){var i=t.rgba2rgbo(e),r=i[0],s=i[1];return\"#\"===e.charAt(0)?(s*=s<.3?1.8:.4,t.rgbo2rgba(r,s)):e;},t.contrast=function(e,i,r,s){var o,n,a,h,l;return i=i||\"#000000\",r=r||\"#ffffff\",s=s||7,o=t.rgbParser(e),n=t.rgbParser(\"#000000\"),a=.2126*Math.pow(o[0]/255,2.2)+.7152*Math.pow(o[1]/255,2.2)+.0722*Math.pow(o[2]/255,2.2),h=.2126*Math.pow(n[0]/255,2.2)+.7152*Math.pow(n[1]/255,2.2)+.0722*Math.pow(n[2]/255,2.2),l=a>h?Math.floor((a+.05)/(h+.05)):Math.floor((h+.05)/(a+.05)),l-=1,l>s?i:r;},t;}),define(\"options\",[\"jxg\",\"base/constants\",\"math/math\",\"utils/color\",\"utils/type\"],function(t,e,i,r,s){\"use strict\";return t.Options={jc:{enabled:!0,compile:!0},board:{boundingBox:[-5,5,5,-5],maxBoundingBox:[-1/0,1/0,1/0,-1/0],zoomFactor:1,zoomX:1,zoomY:1,title:\"\",description:\"\",showCopyright:!0,axis:!1,defaultAxes:{x:{name:\"x\",ticks:{label:{visible:\"inherit\",anchorX:\"middle\",anchorY:\"top\",fontSize:12,offset:[0,-3]},drawZero:!1,visible:\"inherit\"}},y:{name:\"y\",ticks:{label:{visible:\"inherit\",anchorX:\"right\",anchorY:\"middle\",fontSize:12,offset:[-6,0]},tickEndings:[1,0],drawZero:!1,visible:\"inherit\"}}},showNavigation:!0,showZoom:!0,showReload:!1,showScreenshot:!1,screenshot:{scale:1,type:\"png\",symbol:\"⌘\",css:\"background-color:#eeeeee; opacity:1.0; border:2px solid black; border-radius:10px; text-align:center\",cssButton:\"padding: 4px 10px; border: solid #356AA0 1px; border-radius: 5px; position: absolute; right: 2ex; top: 2ex; background-color: rgba(255, 255, 255, 0.3);\"},showFullscreen:!1,fullscreen:{symbol:\"⛶\"},showClearTraces:!1,keepAspectRatio:!1,ignoreLabels:!0,maxNameLength:1,document:!1,takeFirst:!1,takeSizeFromFile:!1,renderer:\"auto\",animationDelay:35,maxFrameRate:40,registerEvents:!0,minimizeReflow:\"svg\",offsetX:0,offsetY:0,zoom:{enabled:!0,factorX:1.25,factorY:1.25,wheel:!0,needShift:!0,min:1e-4,max:1e4,pinchHorizontal:!0,pinchVertical:!0,pinchSensitivity:7},pan:{needShift:!0,needTwoFingers:!1,enabled:!0},drag:{enabled:!0},selection:{enabled:!1,name:\"selectionPolygon\",needShift:!1,needCtrl:!0,withLines:!1,vertices:{visible:!1},fillColor:\"#ffff00\",visible:!1},showInfobox:!0},navbar:{strokeColor:\"#333333\",fillColor:\"transparent\",highlightFillColor:\"#aaaaaa\",padding:\"2px\",position:\"absolute\",fontSize:\"14px\",cursor:\"pointer\",zIndex:\"100\",right:\"5px\",bottom:\"5px\"},elements:{strokeColor:\"#0000ff\",highlightStrokeColor:\"#C3D9FF\",fillColor:\"red\",highlightFillColor:\"none\",strokeOpacity:1,highlightStrokeOpacity:1,fillOpacity:1,highlightFillOpacity:1,gradient:null,gradientSecondColor:\"#ffffff\",gradientSecondOpacity:1,gradientStartOffset:0,gradientEndOffset:1,gradientAngle:0,gradientCX:.5,gradientCY:.5,gradientR:.5,gradientFX:.5,gradientFY:.5,gradientFR:0,transitionDuration:100,strokeWidth:2,highlightStrokeWidth:2,fixed:!1,frozen:!1,withLabel:!1,visible:!0,priv:!1,layer:0,dash:0,shadow:!1,trace:!1,traceAttributes:{},highlight:!0,needsRegularUpdate:!0,snapToGrid:!1,scalable:!0,dragToTopOfLayer:!1,precision:\"inherit\",draft:{draft:!1,strokeColor:\"#565656\",fillColor:\"#565656\",strokeOpacity:.8,fillOpacity:.8,strokeWidth:1},isLabel:!1},ticks:{generateLabelText:null,generateLabelValue:null,drawLabels:!1,label:{},beautifulScientificTickLabels:!1,useUnicodeMinus:!0,anchor:\"left\",drawZero:!1,insertTicks:!1,minTicksDistance:10,minorHeight:4,majorHeight:10,tickEndings:[1,1],minorTicks:4,scale:1,scaleSymbol:\"\",labels:[],maxLabelLength:5,precision:3,ticksDistance:1,face:\"|\",strokeOpacity:1,strokeWidth:1,strokeColor:\"black\",highlightStrokeColor:\"#888888\",fillColor:\"none\",highlightFillColor:\"none\",visible:\"inherit\",includeBoundaries:!1,type:\"linear\"},hatch:{drawLabels:!1,drawZero:!0,majorHeight:20,anchor:\"middle\",face:\"|\",strokeWidth:2,strokeColor:\"blue\",ticksDistance:.2},precision:{touch:15,touchMax:100,mouse:4,pen:4,epsilon:1e-4,hasPoint:4},layer:{numlayers:20,unused9:19,unused8:18,unused7:17,unused6:16,unused5:15,unused4:14,unused3:13,unused2:12,unused1:11,unused0:10,text:9,point:9,glider:9,arc:8,line:7,circle:6,curve:5,turtle:5,polygon:3,sector:3,angle:3,integral:3,axis:2,ticks:2,grid:1,image:0,trace:0},angle:{withLabel:!0,radius:.5,type:\"sector\",orthoType:\"square\",orthoSensitivity:1,fillColor:\"#FF7F00\",highlightFillColor:\"#FF7F00\",strokeColor:\"#FF7F00\",fillOpacity:.3,highlightFillOpacity:.3,radiuspoint:{withLabel:!1,visible:!1,name:\"\"},pointsquare:{withLabel:!1,visible:!1,name:\"\"},dot:{visible:!1,strokeColor:\"none\",fillColor:\"black\",size:2,face:\"o\",withLabel:!1,name:\"\"},label:{position:\"top\",offset:[0,0],strokeColor:\"#0000FF\"},arc:{visible:!1,fillColor:\"none\"}},arc:{selection:\"auto\",hasInnerPoints:!1,label:{anchorX:\"auto\",anchorY:\"auto\"},firstArrow:!1,lastArrow:!1,fillColor:\"none\",highlightFillColor:\"none\",strokeColor:\"#0000ff\",highlightStrokeColor:\"#C3D9FF\",useDirection:!1,center:{},radiusPoint:{},anglePoint:{}},arrow:{firstArrow:!1,lastArrow:{type:1,highlightSize:6,size:6}},axis:{name:\"\",needsRegularUpdate:!1,strokeWidth:1,lastArrow:{type:1,highlightSize:8,size:8},strokeColor:\"#666666\",highlightStrokeWidth:1,highlightStrokeColor:\"#888888\",withTicks:!0,straightFirst:!0,straightLast:!0,margin:-4,withLabel:!1,scalable:!1,ticks:{label:{offset:[4,-9],parse:!1,needsRegularUpdate:!1,display:\"internal\",visible:\"inherit\",layer:9},visible:\"inherit\",needsRegularUpdate:!1,strokeWidth:1,strokeColor:\"#666666\",highlightStrokeColor:\"#888888\",drawLabels:!0,drawZero:!1,insertTicks:!0,minTicksDistance:5,minorHeight:10,majorHeight:-1,tickEndings:[0,1],minorTicks:4,ticksDistance:1,strokeOpacity:.25},point1:{needsRegularUpdate:!1,visible:!1},point2:{needsRegularUpdate:!1,visible:!1},label:{position:\"lft\",offset:[10,10]}},bisector:{strokeColor:\"#000000\",point:{visible:!1,fixed:!1,withLabel:!1,name:\"\"}},bisectorlines:{line1:{strokeColor:\"black\"},line2:{strokeColor:\"black\"}},button:{disabled:!1,display:\"html\"},cardinalspline:{createPoints:!0,isArrayOfCoordinates:!1,points:{strokeOpacity:.05,fillOpacity:.05,highlightStrokeOpacity:1,highlightFillOpacity:1,withLabel:!1,name:\"\",fixed:!1}},chart:{chartStyle:\"line\",colors:[\"#B02B2C\",\"#3F4C6B\",\"#C79810\",\"#D15600\",\"#FFFF88\",\"#C3D9FF\",\"#4096EE\",\"#008C00\"],highlightcolors:null,fillcolor:null,highlightonsector:!1,highlightbysize:!1,fillOpacity:.6,withLines:!1,label:{}},checkbox:{disabled:!1,checked:!1,display:\"html\"},circle:{hasInnerPoints:!1,fillColor:\"none\",highlightFillColor:\"none\",strokeColor:\"#0000ff\",highlightStrokeColor:\"#C3D9FF\",center:{visible:!1,withLabel:!1,fixed:!1,name:\"\"},label:{position:\"urt\"}},circumcircle:{fillColor:\"none\",highlightFillColor:\"none\",strokeColor:\"#0000ff\",highlightStrokeColor:\"#C3D9FF\",center:{visible:!1,fixed:!1,withLabel:!1,name:\"\"}},circumcirclearc:{fillColor:\"none\",highlightFillColor:\"none\",strokeColor:\"#0000ff\",highlightStrokeColor:\"#C3D9FF\",center:{visible:!1,withLabel:!1,fixed:!1,name:\"\"}},circumcirclesector:{useDirection:!0,fillColor:\"#00FF00\",highlightFillColor:\"#00FF00\",fillOpacity:.3,highlightFillOpacity:.3,strokeColor:\"#0000ff\",highlightStrokeColor:\"#C3D9FF\",point:{visible:!1,fixed:!1,withLabel:!1,name:\"\"}},conic:{fillColor:\"none\",highlightFillColor:\"none\",strokeColor:\"#0000ff\",highlightStrokeColor:\"#C3D9FF\",foci:{fixed:!1,visible:!1,withLabel:!1,name:\"\"},center:{visible:!1,withLabel:!1,name:\"\"},point:{withLabel:!1,name:\"\"},line:{visible:!1}},curve:{strokeWidth:1,strokeColor:\"#0000ff\",fillColor:\"none\",fixed:!0,useQDT:!1,handDrawing:!1,curveType:null,RDPsmoothing:!1,numberPointsHigh:1600,numberPointsLow:400,doAdvancedPlot:!0,recursionDepthHigh:17,recursionDepthLow:15,doAdvancedPlotOld:!1,plotVersion:2,label:{position:\"lft\"},firstArrow:!1,lastArrow:!1},glider:{label:{}},grid:{needsRegularUpdate:!1,hasGrid:!1,gridX:1,gridY:1,strokeColor:\"#C0C0C0\",strokeOpacity:.5,strokeWidth:1,dash:0,snapToGrid:!1,snapSizeX:10,snapSizeY:10},group:{needsRegularUpdate:!0},htmlslider:{widthRange:100,widthOut:34,step:.01,frozen:!0,isLabel:!1,strokeColor:\"black\",display:\"html\",anchorX:\"left\",anchorY:\"middle\",withLabel:!1},image:{imageString:null,fillOpacity:1,highlightFillOpacity:.6,cssClass:\"JXGimage\",highlightCssClass:\"JXGimageHighlight\",rotate:0,snapSizeX:1,snapSizeY:1,attractors:[]},incircle:{fillColor:\"none\",highlightFillColor:\"none\",strokeColor:\"#0000ff\",highlightStrokeColor:\"#C3D9FF\",center:{visible:!1,fixed:!1,withLabel:!1,name:\"\"}},inequality:{fillColor:\"red\",fillOpacity:.2,strokeColor:\"none\",inverse:!1},infobox:{fontSize:12,isLabel:!1,strokeColor:\"#bbbbbb\",display:\"html\",anchorX:\"left\",anchorY:\"middle\",cssClass:\"JXGinfobox\",rotate:0,visible:!0,parse:!1,transitionDuration:0,needsRegularUpdate:!1},integral:{axis:\"x\",withLabel:!0,fixed:!0,strokeWidth:0,strokeOpacity:0,fillColor:\"red\",fillOpacity:.4,highlightFillColor:\"red\",highlightFillOpacity:.2,curveLeft:{visible:!0,withLabel:!1,color:\"red\",fillOpacity:.8,layer:9},baseLeft:{visible:!1,fixed:!1,withLabel:!1,name:\"\"},curveRight:{visible:!0,withLabel:!1,color:\"red\",fillOpacity:.8,layer:9},baseRight:{visible:!1,fixed:!1,withLabel:!1,name:\"\"},label:{fontSize:20}},input:{disabled:!1,maxlength:524288,display:\"html\"},intersection:{alwaysIntersect:!0},label:{visible:\"inherit\",strokeColor:\"black\",strokeOpacity:1,highlightStrokeOpacity:.666666,highlightStrokeColor:\"black\",fixed:!0,position:\"urt\",offset:[10,10],autoPosition:!1},legend:{style:\"vertical\",labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],colors:[\"#B02B2C\",\"#3F4C6B\",\"#C79810\",\"#D15600\",\"#FFFF88\",\"#C3D9FF\",\"#4096EE\",\"#008C00\"],rowHeight:20,strokeWidth:5},line:{firstArrow:!1,lastArrow:!1,margin:0,straightFirst:!0,straightLast:!0,fillColor:\"none\",highlightFillColor:\"none\",strokeColor:\"#0000ff\",highlightStrokeColor:\"#888888\",withTicks:!1,point1:{visible:!1,withLabel:!1,fixed:!1,name:\"\"},point2:{visible:!1,withLabel:!1,fixed:!1,name:\"\"},ticks:{drawLabels:!0,label:{offset:[4,-9]},drawZero:!1,insertTicks:!1,minTicksDistance:50,minorHeight:4,majorHeight:-1,minorTicks:4,defaultDistance:1,strokeOpacity:.3,visible:\"inherit\"},label:{position:\"llft\"},snapToGrid:!1,snapSizeX:1,snapSizeY:1,touchFirstPoint:!1,touchLastPoint:!1,lineCap:\"butt\"},locus:{translateToOrigin:!1,translateTo10:!1,stretch:!1,toOrigin:null,to10:null},metapostspline:{createPoints:!0,isArrayOfCoordinates:!1,points:{strokeOpacity:.05,fillOpacity:.05,highlightStrokeOpacity:1,highlightFillOpacity:1,withLabel:!1,name:\"\",fixed:!1}},mirrorelement:{fixed:!0,point:{},center:{},type:\"Euclidean\"},normal:{strokeColor:\"#000000\",point:{visible:!1,fixed:!1,withLabel:!1,name:\"\"}},orthogonalprojection:{},parallel:{strokeColor:\"#000000\",point:{visible:!1,fixed:!1,withLabel:!1,name:\"\"},label:{position:\"llft\"}},perpendicular:{strokeColor:\"#000000\",straightFirst:!0,straightLast:!0},perpendicularsegment:{strokeColor:\"#000000\",straightFirst:!1,straightLast:!1,point:{visible:!1,fixed:!0,withLabel:!1,name:\"\"}},point:{withLabel:!0,label:{},style:5,face:\"o\",size:3,sizeUnit:\"screen\",fillColor:\"#ff0000\",highlightFillColor:\"#EEEEEE\",strokeWidth:2,strokeColor:\"#ff0000\",highlightStrokeColor:\"#C3D9FF\",zoom:!1,showInfobox:\"inherit\",infoboxDigits:\"auto\",draft:!1,attractors:[],attractorUnit:\"user\",attractorDistance:0,snatchDistance:0,snapToGrid:!1,snapSizeX:1,snapSizeY:1,snapToPoints:!1,ignoredSnapToPoints:[]},polygon:{hasInnerPoints:!1,fillColor:\"#00FF00\",highlightFillColor:\"#00FF00\",fillOpacity:.3,highlightFillOpacity:.3,withLines:!0,borders:{withLabel:!1,strokeWidth:1,highlightStrokeWidth:1,layer:5,label:{position:\"top\"},visible:\"inherit\"},vertices:{layer:9,withLabel:!1,name:\"\",strokeColor:\"#ff0000\",fillColor:\"#ff0000\",fixed:!1,visible:\"inherit\"},label:{offset:[0,0]}},polygonalchain:{fillColor:\"none\",highlightFillColor:\"none\"},prescribedangle:{anglePoint:{size:2,visible:!1,withLabel:!1}},reflection:{fixed:!0,center:{},type:\"Euclidean\"},regularpolygon:{hasInnerPoints:!1,fillColor:\"#00FF00\",highlightFillColor:\"#00FF00\",fillOpacity:.3,highlightFillOpacity:.3,withLines:!0,borders:{withLabel:!1,strokeWidth:1,highlightStrokeWidth:1,layer:5,label:{position:\"top\"}},vertices:{layer:9,withLabel:!0,strokeColor:\"#ff0000\",fillColor:\"#ff0000\",fixed:!1},label:{offset:[0,0]}},riemannsum:{withLabel:!1,fillOpacity:.3,fillColor:\"#ffff00\"},sector:{fillColor:\"#00FF00\",highlightFillColor:\"#00FF00\",fillOpacity:.3,highlightFillOpacity:.3,highlightOnSector:!1,highlightStrokeWidth:0,selection:\"auto\",arc:{visible:!1,fillColor:\"none\"},radiusPoint:{visible:!1,withLabel:!1},center:{visible:!1,withLabel:!1},anglePoint:{visible:!1,withLabel:!1},label:{offset:[0,0],anchorX:\"auto\",anchorY:\"auto\"}},segment:{label:{position:\"top\"}},semicircle:{center:{visible:!1,withLabel:!1,fixed:!1,name:\"\"}},slider:{snapWidth:-1,precision:2,firstArrow:!1,lastArrow:!1,withTicks:!0,withLabel:!0,suffixLabel:null,unitLabel:null,postLabel:null,layer:9,showInfobox:!1,name:\"\",visible:!0,strokeColor:\"#000000\",highlightStrokeColor:\"#888888\",fillColor:\"#ffffff\",highlightFillColor:\"none\",size:6,point1:{needsRegularUpdate:!1,showInfobox:!1,withLabel:!1,visible:!1,fixed:!0,name:\"\"},point2:{needsRegularUpdate:!1,showInfobox:!1,withLabel:!1,visible:!1,fixed:!0,name:\"\"},baseline:{needsRegularUpdate:!1,visible:\"inherit\",fixed:!0,scalable:!1,name:\"\",strokeWidth:1,strokeColor:\"#000000\",highlightStrokeColor:\"#888888\"},ticks:{needsRegularUpdate:!1,fixed:!0,drawLabels:!1,precision:2,includeBoundaries:1,drawZero:!0,label:{offset:[-4,-14],display:\"internal\"},minTicksDistance:30,insertTicks:!0,minorHeight:4,majorHeight:5,minorTicks:0,defaultDistance:1,strokeOpacity:1,strokeWidth:1,tickEndings:[0,1],strokeColor:\"#000000\",visible:\"inherit\"},highline:{strokeWidth:3,visible:\"inherit\",fixed:!0,name:\"\",strokeColor:\"#000000\",highlightStrokeColor:\"#888888\"},label:{visible:\"inherit\",strokeColor:\"#000000\"},moveOnUp:!0},comb:{frequency:.2,width:.4,angle:Math.PI/3,reverse:!1,point1:{visible:!1,withLabel:!1,fixed:!1,name:\"\"},point2:{visible:!1,withLabel:!1,fixed:!1,name:\"\"},curve:{strokeWidth:1,strokeColor:\"#000000\",fillColor:\"none\"}},slopetriangle:{fillColor:\"red\",fillOpacity:.4,highlightFillColor:\"red\",highlightFillOpacity:.3,borders:{lastArrow:{type:1,size:6}},glider:{fixed:!0,visible:!1,withLabel:!1},baseline:{visible:!1,withLabel:!1,name:\"\"},basepoint:{visible:!1,withLabel:!1,name:\"\"},tangent:{visible:!1,withLabel:!1,name:\"\"},topPoint:{visible:!1,withLabel:!1,name:\"\"},label:{visible:!0}},stepfunction:{},tapemeasure:{strokeColor:\"#000000\",strokeWidth:2,highlightStrokeColor:\"#000000\",withTicks:!0,withLabel:!0,precision:2,point1:{visible:\"inherit\",strokeColor:\"#000000\",fillColor:\"#ffffff\",fillOpacity:0,highlightFillOpacity:.1,size:6,snapToPoints:!0,attractorUnit:\"screen\",attractorDistance:20,showInfobox:!1,withLabel:!1,name:\"\"},point2:{visible:\"inherit\",strokeColor:\"#000000\",fillColor:\"#ffffff\",fillOpacity:0,highlightFillOpacity:.1,size:6,snapToPoints:!0,attractorUnit:\"screen\",attractorDistance:20,showInfobox:!1,withLabel:!1,name:\"\"},ticks:{drawLabels:!1,drawZero:!0,insertTicks:!0,minorHeight:8,majorHeight:16,minorTicks:4,tickEndings:[0,1],defaultDistance:.1,strokeOpacity:1,strokeWidth:1,strokeColor:\"#000000\",visible:\"inherit\"},label:{position:\"top\"}},text:{fontSize:12,digits:2,parse:!0,useCaja:!1,isLabel:!1,strokeColor:\"black\",highlightStrokeColor:\"black\",highlightStrokeOpacity:.666666,cssDefaultStyle:\"font-family: Arial, Helvetica, Geneva, sans-serif;\",highlightCssDefaultStyle:\"font-family: Arial, Helvetica, Geneva, sans-serif;\",cssStyle:\"\",highlightCssStyle:\"\",useASCIIMathML:!1,useMathJax:!1,useKatex:!1,display:\"html\",anchor:null,anchorX:\"left\",anchorY:\"middle\",cssClass:\"JXGtext\",highlightCssClass:\"JXGtext\",dragArea:\"all\",withLabel:!1,rotate:0,visible:!0,snapSizeX:1,snapSizeY:1,attractors:[]},tracecurve:{strokeColor:\"#000000\",fillColor:\"none\",numberPoints:100},turtle:{strokeWidth:1,fillColor:\"none\",strokeColor:\"#000000\",arrow:{strokeWidth:2,withLabel:!1,strokeColor:\"#ff0000\",lastArrow:!0}},shortcuts:{color:[\"strokeColor\",\"fillColor\"],opacity:[\"strokeOpacity\",\"fillOpacity\"],highlightColor:[\"highlightStrokeColor\",\"highlightFillColor\"],highlightOpacity:[\"highlightStrokeOpacity\",\"highlightFillOpacity\"],strokeWidth:[\"strokeWidth\",\"highlightStrokeWidth\"]}},t.Validator=function(){var e,r=function(t){return /^[0-9]+px$/.test(t);},o=function(t){return\"html\"===t||\"internal\"===t;},n=function(t){return s.isString(t);},a=function(e){return s.exists(t.normalizePointFace(e));},h=function(t){return Math.abs(t-Math.round(t))<i.eps;},l=function(t){return h(t)&&t>=0;},c=function(t){return h(t)&&t>0;},d=function(t){return\"vml\"===t||\"svg\"===t||\"canvas\"===t||\"no\"===t;},u=function(t){return t>0;},p=function(t){return t>=0;},f={},m={attractorDistance:p,color:n,defaultDistance:s.isNumber,display:o,doAdvancedPlot:!1,draft:!1,drawLabels:!1,drawZero:!1,face:a,factor:s.isNumber,fillColor:n,fillOpacity:s.isNumber,firstArrow:!1,fontSize:h,dash:h,gridX:s.isNumber,gridY:s.isNumber,hasGrid:!1,highlightFillColor:n,highlightFillOpacity:s.isNumber,highlightStrokeColor:n,highlightStrokeOpacity:s.isNumber,insertTicks:!1,lastArrow:!1,layer:l,majorHeight:h,minorHeight:h,minorTicks:p,minTicksDistance:c,numberPointsHigh:c,numberPointsLow:c,opacity:s.isNumber,radius:s.isNumber,RDPsmoothing:!1,renderer:d,right:r,showCopyright:!1,showInfobox:!1,showNavigation:!1,size:p,snapSizeX:u,snapSizeY:u,snapWidth:s.isNumber,snapToGrid:!1,snatchDistance:p,straightFirst:!1,straightLast:!1,stretch:!1,strokeColor:n,strokeOpacity:s.isNumber,strokeWidth:p,takeFirst:!1,takeSizeFromFile:!1,to10:!1,toOrigin:!1,translateTo10:!1,translateToOrigin:!1,useASCIIMathML:!1,useDirection:!1,useMathJax:!1,withLabel:!1,withTicks:!1,zoom:!1};for(e in m)m.hasOwnProperty(e)&&(f[e.toLowerCase()]=m[e]);return f;}(),t.normalizePointFace=function(t){return{cross:\"x\",x:\"x\",circle:\"o\",o:\"o\",square:\"[]\",\"[]\":\"[]\",plus:\"+\",\"+\":\"+\",diamond:\"<>\",\"<>\":\"<>\",triangleup:\"^\",a:\"^\",\"^\":\"^\",triangledown:\"v\",v:\"v\",triangleleft:\"<\",\"<\":\"<\",triangleright:\">\",\">\":\">\"}[t];},t.useStandardOptions=function(i){var r,s,o,n,a=t.Options,h=i.hasGrid;i.options.grid.hasGrid=a.grid.hasGrid,i.options.grid.gridX=a.grid.gridX,i.options.grid.gridY=a.grid.gridY,i.options.grid.gridColor=a.grid.gridColor,i.options.grid.gridOpacity=a.grid.gridOpacity,i.options.grid.gridDash=a.grid.gridDash,i.options.grid.snapToGrid=a.grid.snapToGrid,i.options.grid.snapSizeX=a.grid.SnapSizeX,i.options.grid.snapSizeY=a.grid.SnapSizeY,i.takeSizeFromFile=a.takeSizeFromFile,n=function(t,e){t.visProp.fillcolor=e.fillColor,t.visProp.highlightfillcolor=e.highlightFillColor,t.visProp.strokecolor=e.strokeColor,t.visProp.highlightstrokecolor=e.highlightStrokeColor;};for(r in i.objects)if(i.objects.hasOwnProperty(r))if(o=i.objects[r],o.elementClass===e.OBJECT_CLASS_POINT)n(o,a.point);else if(o.elementClass===e.OBJECT_CLASS_LINE)for(n(o,a.line),s=0;s<o.ticks.length;s++)o.ticks[s].majorTicks=a.line.ticks.majorTicks,o.ticks[s].minTicksDistance=a.line.ticks.minTicksDistance,o.ticks[s].visProp.minorheight=a.line.ticks.minorHeight,o.ticks[s].visProp.majorheight=a.line.ticks.majorHeight;else o.elementClass===e.OBJECT_CLASS_CIRCLE?n(o,a.circle):o.type===e.OBJECT_TYPE_ANGLE?n(o,a.angle):o.type===e.OBJECT_TYPE_ARC?n(o,a.arc):o.type===e.OBJECT_TYPE_POLYGON?n(o,a.polygon):o.type===e.OBJECT_TYPE_CONIC?n(o,a.conic):o.type===e.OBJECT_TYPE_CURVE?n(o,a.curve):o.type===e.OBJECT_TYPE_SECTOR&&(o.arc.visProp.fillcolor=a.sector.fillColor,o.arc.visProp.highlightfillcolor=a.sector.highlightFillColor,o.arc.visProp.fillopacity=a.sector.fillOpacity,o.arc.visProp.highlightfillopacity=a.sector.highlightFillOpacity);i.fullUpdate(),h&&!i.hasGrid?i.removeGrids(i):!h&&i.hasGrid&&i.create(\"grid\",[]);},t.useBlackWhiteOptions=function(e){var i=t.Options;i.point.fillColor=r.rgb2bw(i.point.fillColor),i.point.highlightFillColor=r.rgb2bw(i.point.highlightFillColor),i.point.strokeColor=r.rgb2bw(i.point.strokeColor),i.point.highlightStrokeColor=r.rgb2bw(i.point.highlightStrokeColor),i.line.fillColor=r.rgb2bw(i.line.fillColor),i.line.highlightFillColor=r.rgb2bw(i.line.highlightFillColor),i.line.strokeColor=r.rgb2bw(i.line.strokeColor),i.line.highlightStrokeColor=r.rgb2bw(i.line.highlightStrokeColor),i.circle.fillColor=r.rgb2bw(i.circle.fillColor),i.circle.highlightFillColor=r.rgb2bw(i.circle.highlightFillColor),i.circle.strokeColor=r.rgb2bw(i.circle.strokeColor),i.circle.highlightStrokeColor=r.rgb2bw(i.circle.highlightStrokeColor),i.arc.fillColor=r.rgb2bw(i.arc.fillColor),i.arc.highlightFillColor=r.rgb2bw(i.arc.highlightFillColor),i.arc.strokeColor=r.rgb2bw(i.arc.strokeColor),i.arc.highlightStrokeColor=r.rgb2bw(i.arc.highlightStrokeColor),i.polygon.fillColor=r.rgb2bw(i.polygon.fillColor),i.polygon.highlightFillColor=r.rgb2bw(i.polygon.highlightFillColor),i.sector.fillColor=r.rgb2bw(i.sector.fillColor),i.sector.highlightFillColor=r.rgb2bw(i.sector.highlightFillColor),i.curve.strokeColor=r.rgb2bw(i.curve.strokeColor),i.grid.gridColor=r.rgb2bw(i.grid.gridColor),t.useStandardOptions(e);},t.Options.normalizePointFace=t.normalizePointFace,t.Options;}),define(\"renderer/abstract\",[\"jxg\",\"options\",\"base/coords\",\"base/constants\",\"math/math\",\"math/geometry\",\"utils/type\",\"utils/env\"],function(t,e,i,r,s,o,n,a){\"use strict\";return t.AbstractRenderer=function(){this.vOffsetText=0,this.enhancedRendering=!0,this.container=null,this.type=\"\",this.supportsForeignObject=!1;},t.extend(t.AbstractRenderer.prototype,{_updateVisual:function(t,e,i){(i||this.enhancedRendering)&&(e=e||{},this.setObjectTransition(t),n.evaluate(t.visProp.draft)?this.setDraft(t):(e.stroke||(t.highlighted?(this.setObjectStrokeColor(t,t.visProp.highlightstrokecolor,t.visProp.highlightstrokeopacity),this.setObjectStrokeWidth(t,t.visProp.highlightstrokewidth)):(this.setObjectStrokeColor(t,t.visProp.strokecolor,t.visProp.strokeopacity),this.setObjectStrokeWidth(t,t.visProp.strokewidth))),e.fill||(t.highlighted?this.setObjectFillColor(t,t.visProp.highlightfillcolor,t.visProp.highlightfillopacity):this.setObjectFillColor(t,t.visProp.fillcolor,t.visProp.fillopacity)),e.dash||this.setDashStyle(t,t.visProp),e.shadow||this.setShadow(t),e.gradient||this.setShadow(t)));},_getHighlighted:function(t){var e=!1;return n.exists(t.board)&&n.exists(t.board.highlightedObjects)||(e=!0),!e&&n.exists(t.board.highlightedObjects[t.id])?\"highlight\":\"\";},drawPoint:function(t){var i,r=e.normalizePointFace(n.evaluate(t.visProp.face));i=\"o\"===r?\"ellipse\":\"[]\"===r?\"rect\":\"path\",t.rendNode=this.appendChildPrim(this.createPrim(i,t.id),n.evaluate(t.visProp.layer)),this.appendNodesToElement(t,i),this._updateVisual(t,{dash:!0,shadow:!0},!0),this.updatePoint(t);},updatePoint:function(t){var i,r=n.evaluate(t.visProp.size),s=e.normalizePointFace(n.evaluate(t.visProp.face)),o=n.evaluate(t.visProp.sizeunit),a=n.evaluate(t.visProp.zoom);isNaN(t.coords.scrCoords[2]+t.coords.scrCoords[1])||(\"user\"===o&&(r*=Math.sqrt(t.board.unitX*t.board.unitY)),r*=t.board&&a?Math.sqrt(t.board.zoomX*t.board.zoomY):1,i=0===r?0:r+1,\"o\"===s?this.updateEllipsePrim(t.rendNode,t.coords.scrCoords[1],t.coords.scrCoords[2],i,i):\"[]\"===s?this.updateRectPrim(t.rendNode,t.coords.scrCoords[1]-r,t.coords.scrCoords[2]-r,2*r,2*r):this.updatePathPrim(t.rendNode,this.updatePathStringPoint(t,r,s),t.board),this._updateVisual(t,{dash:!1,shadow:!1}),this.setShadow(t));},changePointStyle:function(t){var e=this.getElementById(t.id);n.exists(e)&&this.remove(e),this.drawPoint(t),n.clearVisPropOld(t),t.visPropCalc.visible||this.display(t,!1),n.evaluate(t.visProp.draft)&&this.setDraft(t);},drawLine:function(t){t.rendNode=this.appendChildPrim(this.createPrim(\"line\",t.id),n.evaluate(t.visProp.layer)),this.appendNodesToElement(t,\"lines\"),this.updateLine(t);},getArrowHeadData:function(t,e,i){var r,o,a,h,l=s.eps,c=0,d=0,u=0,p=0,f=n.evaluate(t.visProp.firstarrow),m=n.evaluate(t.visProp.lastarrow);return(f||m)&&(n.exists(f.type)&&(r=n.evaluate(f.type)),n.exists(m.type)&&(o=n.evaluate(m.type)),f&&(h=6,n.exists(f.size)&&(h=n.evaluate(f.size)),\"\"!==i&&n.exists(f[i+\"size\"])&&(h=n.evaluate(f[i+\"size\"])),a=e*h,2===r?(a*=.5,l+=e*h):3===r?(a=e*h/3,l+=e):4===r||5===r||6===r?(a=e*h/1.5,l+=e*h):l+=e*h,c+=a,u=h),m&&(h=6,n.exists(m.size)&&(h=n.evaluate(m.size)),\"\"!==i&&n.exists(m[i+\"size\"])&&(h=n.evaluate(m[i+\"size\"])),a=e*h,2===o?(a*=.5,l+=e*h):3===o?(a=e*h/3,l+=e):4===o||5===o||6===o?(a=e*h/1.5,l+=e*h):l+=e*h,d+=a,p=h)),{evFirst:f,evLast:m,offFirst:c,offLast:d,sizeFirst:u,sizeLast:p,showFirst:1,showLast:1,minLen:l,strokeWidth:e};},getPositionArrowHead:function(t,e,i,s){var o,n,a,h,l;return(s.evFirst||s.evLast)&&(n=a=h=l=0,o=e.distance(r.COORDS_BY_SCREEN,i),s.evFirst&&\"vml\"!==t.board.renderer.type&&(o>=s.minLen?(n=(i.scrCoords[1]-e.scrCoords[1])*s.offFirst/o,a=(i.scrCoords[2]-e.scrCoords[2])*s.offFirst/o):s.showFirst=0),s.evLast&&\"vml\"!==t.board.renderer.type&&(o>=s.minLen?(h=(i.scrCoords[1]-e.scrCoords[1])*s.offLast/o,l=(i.scrCoords[2]-e.scrCoords[2])*s.offLast/o):s.showLast=0),e.setCoordinates(r.COORDS_BY_SCREEN,[e.scrCoords[1]+n,e.scrCoords[2]+a],!1,!0),i.setCoordinates(r.COORDS_BY_SCREEN,[i.scrCoords[1]-h,i.scrCoords[2]-l],!1,!0)),this;},handleTouchpoints:function(t,e,i,s){var o,a,h,l,c,d,u;return(s.evFirst||s.evLast)&&(h=l=c=d=u=0,o=n.evaluate(t.point1.visProp.size)+n.evaluate(t.point1.visProp.strokewidth),a=n.evaluate(t.point2.visProp.size)+n.evaluate(t.point2.visProp.strokewidth),o+a,s.evFirst&&n.evaluate(t.visProp.touchfirstpoint)&&(h=e.distance(r.COORDS_BY_SCREEN,i),l=(i.scrCoords[1]-e.scrCoords[1])*o/h,c=(i.scrCoords[2]-e.scrCoords[2])*o/h),s.evLast&&n.evaluate(t.visProp.touchlastpoint)&&(h=e.distance(r.COORDS_BY_SCREEN,i),d=(i.scrCoords[1]-e.scrCoords[1])*a/h,u=(i.scrCoords[2]-e.scrCoords[2])*a/h),e.setCoordinates(r.COORDS_BY_SCREEN,[e.scrCoords[1]+l,e.scrCoords[2]+c],!1,!0),i.setCoordinates(r.COORDS_BY_SCREEN,[i.scrCoords[1]-d,i.scrCoords[2]-u],!1,!0)),this;},updateLineEndings:function(t,e){var s,a,h=null;return s=new i(r.COORDS_BY_USER,t.point1.coords.usrCoords,t.board),a=new i(r.COORDS_BY_USER,t.point2.coords.usrCoords,t.board),h=n.evaluate(t.visProp.margin),o.calcStraight(t,s,a,h),this.handleTouchpoints(t,s,a,e),this.getPositionArrowHead(t,s,a,e),this.updateLinePrim(t.rendNode,s.scrCoords[1],s.scrCoords[2],a.scrCoords[1],a.scrCoords[2],t.board),this;},updatePathEndings:function(t,e){return n.evaluate(t.visProp.handdrawing)?this.updatePathPrim(t.rendNode,this.updatePathStringBezierPrim(t),t.board):this.updatePathPrim(t.rendNode,this.updatePathStringPrim(t),t.board),this.shortenPath(t.rendNode,e.offFirst,e.offLast),this;},setArrowSize:function(t,e){return e.evFirst&&this._setArrowWidth(t.rendNodeTriangleStart,e.showFirst*e.strokeWidth,t.rendNode,e.sizeFirst),e.evLast&&this._setArrowWidth(t.rendNodeTriangleEnd,e.showLast*e.strokeWidth,t.rendNode,e.sizeLast),this;},updatePathWithArrowHeads:function(t,e){var i,s,o=t.visProp,a=e?\"highlight\":\"\";i=e&&o.highlightstrokewidth?Math.max(n.evaluate(o.highlightstrokewidth),n.evaluate(o.strokewidth)):n.evaluate(o.strokewidth),s=this.getArrowHeadData(t,i,a),this.makeArrows(t),t.elementClass===r.OBJECT_CLASS_LINE?this.updateLineEndings(t,s):t.elementClass===r.OBJECT_CLASS_CURVE&&this.updatePathEndings(t,s),this.setArrowSize(t,s);},updateLine:function(t){this._updateVisual(t),this.updatePathWithArrowHeads(t),this.setLineCap(t);},setLineCap:function(t){},drawTicks:function(t){t.rendNode=this.appendChildPrim(this.createPrim(\"path\",t.id),n.evaluate(t.visProp.layer)),this.appendNodesToElement(t,\"path\");},updateTicks:function(t){},drawCurve:function(t){t.rendNode=this.appendChildPrim(this.createPrim(\"path\",t.id),n.evaluate(t.visProp.layer)),this.appendNodesToElement(t,\"path\"),t.numberPoints>1&&this.makeArrows(t),this._updateVisual(t,{shadow:!0},!0),this.updateCurve(t);},updateCurve:function(t){this.updatePathWithArrowHeads(t),this._updateVisual(t);},drawEllipse:function(t){t.rendNode=this.appendChildPrim(this.createPrim(\"ellipse\",t.id),n.evaluate(t.visProp.layer)),this.appendNodesToElement(t,\"ellipse\"),this.updateEllipse(t);},updateEllipse:function(t){this._updateVisual(t);var e=t.Radius();e>0&&Math.abs(t.center.coords.usrCoords[0])>s.eps&&!isNaN(e+t.center.coords.scrCoords[1]+t.center.coords.scrCoords[2])&&e*t.board.unitX<2e6&&this.updateEllipsePrim(t.rendNode,t.center.coords.scrCoords[1],t.center.coords.scrCoords[2],e*t.board.unitX,e*t.board.unitY);},drawPolygon:function(t){t.rendNode=this.appendChildPrim(this.createPrim(\"polygon\",t.id),n.evaluate(t.visProp.layer)),this.appendNodesToElement(t,\"polygon\"),this.updatePolygon(t);},updatePolygon:function(t){this._updateVisual(t,{stroke:!0,dash:!0}),this.updatePolygonPrim(t.rendNode,t);},displayCopyright:function(t,e){},drawInternalText:function(t){},updateInternalText:function(t){},drawText:function(t){var e,i,r,s;\"html\"===n.evaluate(t.visProp.display)&&a.isBrowser&&\"no\"!==this.type?(e=this.container.ownerDocument.createElement(\"div\"),e.style.position=\"absolute\",e.className=n.evaluate(t.visProp.cssclass),r=n.evaluate(t.visProp.layer),n.exists(r)||(r=0),i=\"\"===this.container.style.zIndex?0:parseInt(this.container.style.zIndex,10),e.style.zIndex=i+r,this.container.appendChild(e),e.setAttribute(\"id\",this.container.id+\"_\"+t.id)):e=this.drawInternalText(t),t.rendNode=e,t.htmlStr=\"\",t.visProp.islabel&&n.exists(t.visProp.anchor)?(s=n.evaluate(t.visProp.anchor.visProp.visible),t.prepareUpdate().updateVisibility(s)):t.prepareUpdate().updateVisibility(),this.updateText(t);},updateText:function(e){var i,r,s,o,h,l,c,d,u,p=e.plaintext;if(e.visPropCalc.visible)if(this.updateTextStyle(e,!1),\"html\"===n.evaluate(e.visProp.display)&&\"no\"!==this.type){if(isNaN(e.coords.scrCoords[1]+e.coords.scrCoords[2])||(r=e.coords.scrCoords[1],r=Math.abs(r)<1e6?r:1e6,d=e.getAnchorX(),i=\"right\"===d?Math.floor(e.board.canvasWidth-r):\"middle\"===d?Math.floor(r-.5*e.size[0]):Math.floor(r),e.visPropOld.left!==d+i&&(\"right\"===d?(e.rendNode.style.right=i+\"px\",e.rendNode.style.left=\"auto\"):(e.rendNode.style.left=i+\"px\",e.rendNode.style.right=\"auto\"),e.visPropOld.left=d+i),r=e.coords.scrCoords[2]+this.vOffsetText,r=Math.abs(r)<1e6?r:1e6,u=e.getAnchorY(),i=\"bottom\"===u?Math.floor(e.board.canvasHeight-r):\"middle\"===u?Math.floor(r-.5*e.size[1]):Math.floor(r),e.visPropOld.top!==u+i&&(\"bottom\"===u?(e.rendNode.style.top=\"auto\",e.rendNode.style.bottom=i+\"px\"):(e.rendNode.style.bottom=\"auto\",e.rendNode.style.top=i+\"px\"),e.visPropOld.top=u+i)),e.htmlStr!==p){try{e.rendNode.innerHTML=p;}catch(t){s=e.rendNode.parentNode,e.rendNode.parentNode.removeChild(e.rendNode),e.rendNode.innerHTML=p,s.appendChild(e.rendNode);}if(e.htmlStr=p,n.evaluate(e.visProp.usemathjax))try{MathJax.typeset?MathJax.typeset([e.rendNode]):MathJax.Hub.Queue([\"Typeset\",MathJax.Hub,e.rendNode]),l=e.board.container,c=\"fullscreenwrap_\"+l,document.getElementById(c)&&(o=e.board.containerObj._cssFullscreenStore.scale,h=e.board.containerObj._cssFullscreenStore.vshift,a.scaleJSXGraphDiv(\"#\"+c,\"#\"+l,o,h));}catch(e){t.debug(\"MathJax (not yet) loaded\");}else if(n.evaluate(e.visProp.usekatex))try{katex.render(p,e.rendNode,{throwOnError:!1});}catch(e){t.debug(\"KaTeX (not yet) loaded\");}else if(n.evaluate(e.visProp.useasciimathml))try{AMprocessNode(e.rendNode,!1);}catch(e){t.debug(\"AsciiMathML (not yet) loaded\");}}this.transformImage(e,e.transformations);}else this.updateInternalText(e);},_css2js:function(t){var e,i,r,s,o,a=[],h=n.trim(t).replace(/;$/,\"\").split(\";\");for(i=h.length,e=0;e<i;++e)\"\"!==n.trim(h[e])&&(o=h[e].split(\":\"),r=n.trim(o[0].replace(/-([a-z])/gi,function(t,e){return e.toUpperCase();})),s=n.trim(o[1]),a.push({key:r,val:s}));return a;},updateTextStyle:function(t,e){var i,r,s,o,h,l,c,d,u,p=t.visProp,f=a.isBrowser?p.display:\"internal\",m=[\"rendNode\",\"rendNodeTag\",\"rendNodeLabel\"],g=m.length,b=[\"cssdefaultstyle\",\"cssstyle\"],v=b.length;if(e?(s=p.highlightstrokecolor,r=p.highlightstrokeopacity,o=p.highlightcssclass):(s=p.strokecolor,r=p.strokeopacity,o=p.cssclass),\"no\"!==this.type&&(\"html\"===f||\"canvas\"!==this.type)){for(d=0;d<v;d++)if(\"\"!==(u=n.evaluate(p[(e?\"highlight\":\"\")+b[d]]))&&t.visPropOld[b[d]]!==u){for(l=this._css2js(u),h=0;h<g;h++)if(n.exists(t[m[h]]))for(c in l)l.hasOwnProperty(c)&&(t[m[h]].style[l[c].key]=l[c].val);t.visPropOld[b[d]]=u;}if(i=n.evaluate(p.fontsize),t.visPropOld.fontsize!==i){t.needsSizeUpdate=!0;try{for(h=0;h<g;h++)n.exists(t[m[h]])&&(t[m[h]].style.fontSize=i+\"px\");}catch(e){for(h=0;h<g;h++)n.exists(t[m[h]])&&(t[m[h]].style.fontSize=i);}t.visPropOld.fontsize=i;}}return this.setObjectTransition(t),\"html\"===f&&\"no\"!==this.type?(t.visPropOld.cssclass!==o&&(t.rendNode.className=o,t.visPropOld.cssclass=o,t.needsSizeUpdate=!0),this.setObjectStrokeColor(t,s,r)):this.updateInternalTextStyle(t,s,r),this;},updateInternalTextStyle:function(t,e,i){this.setObjectStrokeColor(t,e,i);},drawImage:function(t){},updateImage:function(t){this.updateRectPrim(t.rendNode,t.coords.scrCoords[1],t.coords.scrCoords[2]-t.size[1],t.size[0],t.size[1]),this.updateImageURL(t),this.transformImage(t,t.transformations),this._updateVisual(t,{stroke:!0,dash:!0},!0);},joinTransforms:function(t,e){var i,r=t.board.origin.scrCoords[1],o=t.board.origin.scrCoords[2],n=t.board.unitX,a=t.board.unitY,h=e.length,l=[[1,0,0],[-r/n,1/n,0],[o/a,0,-1/a]];for(i=0;i<h;i++)l=s.matMatMult(e[i].matrix,l);return l=s.matMatMult([[1,0,0],[r,n,0],[o,0,-a]],l);},transformImage:function(t,e){},updateImageURL:function(t){},updateImageStyle:function(t,e){t.rendNode.className=n.evaluate(e?t.visProp.highlightcssclass:t.visProp.cssclass);},appendChildPrim:function(t,e){},appendNodesToElement:function(t,e){},createPrim:function(t,e){return null;},remove:function(t){},makeArrows:function(t){},_setArrowWidth:function(t,e,i){},updateEllipsePrim:function(t,e,i,r,s){},updateLinePrim:function(t,e,i,r,s,o){},updatePathPrim:function(t,e,i){},updatePathStringPoint:function(t,e,i){},updatePathStringPrim:function(t){},updatePathStringBezierPrim:function(t){},updatePolygonPrim:function(t,e){},updateRectPrim:function(t,e,i,r,s){},setPropertyPrim:function(t,e,i){},display:function(t,e){t&&(t.visPropOld.visible=e);},show:function(t){},hide:function(t){},setBuffering:function(t,e){},setDashStyle:function(t){},setDraft:function(t){if(n.evaluate(t.visProp.draft)){var e=t.board.options.elements.draft.color,i=t.board.options.elements.draft.opacity;this.setObjectTransition(t),t.type===r.OBJECT_TYPE_POLYGON?this.setObjectFillColor(t,e,i):(t.elementClass===r.OBJECT_CLASS_POINT?this.setObjectFillColor(t,e,i):this.setObjectFillColor(t,\"none\",0),this.setObjectStrokeColor(t,e,i),this.setObjectStrokeWidth(t,t.board.options.elements.draft.strokeWidth));}},removeDraft:function(t){this.setObjectTransition(t),t.type===r.OBJECT_TYPE_POLYGON?this.setObjectFillColor(t,t.visProp.fillcolor,t.visProp.fillopacity):(t.type===r.OBJECT_CLASS_POINT&&this.setObjectFillColor(t,t.visProp.fillcolor,t.visProp.fillopacity),this.setObjectStrokeColor(t,t.visProp.strokecolor,t.visProp.strokeopacity),this.setObjectStrokeWidth(t,t.visProp.strokewidth));},setGradient:function(t){},updateGradient:function(t){},setObjectTransition:function(t,e){},setObjectFillColor:function(t,e,i){},setObjectStrokeColor:function(t,e,i){},setObjectStrokeWidth:function(t,e){},setShadow:function(t){},highlight:function(t){var e,i,s=t.visProp;if(this.setObjectTransition(t),!s.draft){if(t.type===r.OBJECT_TYPE_POLYGON)for(this.setObjectFillColor(t,s.highlightfillcolor,s.highlightfillopacity),e=0;e<t.borders.length;e++)this.setObjectStrokeColor(t.borders[e],t.borders[e].visProp.highlightstrokecolor,t.borders[e].visProp.highlightstrokeopacity);else t.elementClass===r.OBJECT_CLASS_TEXT?this.updateTextStyle(t,!0):t.type===r.OBJECT_TYPE_IMAGE?(this.updateImageStyle(t,!0),this.setObjectFillColor(t,s.highlightfillcolor,s.highlightfillopacity)):(this.setObjectStrokeColor(t,s.highlightstrokecolor,s.highlightstrokeopacity),this.setObjectFillColor(t,s.highlightfillcolor,s.highlightfillopacity));s.highlightstrokewidth&&(i=Math.max(n.evaluate(s.highlightstrokewidth),n.evaluate(s.strokewidth)),this.setObjectStrokeWidth(t,i),t.elementClass!==r.OBJECT_CLASS_LINE&&t.elementClass!==r.OBJECT_CLASS_CURVE||this.updatePathWithArrowHeads(t,!0));}return this;},noHighlight:function(t){var e,i,s=t.visProp;if(this.setObjectTransition(t),!n.evaluate(t.visProp.draft)){if(t.type===r.OBJECT_TYPE_POLYGON)for(this.setObjectFillColor(t,s.fillcolor,s.fillopacity),e=0;e<t.borders.length;e++)this.setObjectStrokeColor(t.borders[e],t.borders[e].visProp.strokecolor,t.borders[e].visProp.strokeopacity);else t.elementClass===r.OBJECT_CLASS_TEXT?this.updateTextStyle(t,!1):t.type===r.OBJECT_TYPE_IMAGE?(this.updateImageStyle(t,!1),this.setObjectFillColor(t,s.fillcolor,s.fillopacity)):(this.setObjectStrokeColor(t,s.strokecolor,s.strokeopacity),this.setObjectFillColor(t,s.fillcolor,s.fillopacity));i=n.evaluate(s.strokewidth),this.setObjectStrokeWidth(t,i),t.elementClass!==r.OBJECT_CLASS_LINE&&t.elementClass!==r.OBJECT_CLASS_CURVE||this.updatePathWithArrowHeads(t,!1);}return this;},suspendRedraw:function(){},unsuspendRedraw:function(){},drawZoomBar:function(t,e){var i,r,s=function(t){t||(t=window.event),t.stopPropagation?t.stopPropagation():t.cancelBubble=!0;},o=function(e,o){var h;h=i.createElement(\"span\"),r.appendChild(h),h.appendChild(i.createTextNode(e)),h.style.paddingLeft=\"7px\",h.style.paddingRight=\"7px\",void 0!==h.classList&&h.classList.add(\"JXG_navigation_button\"),a.addEvent(h,\"click\",function(e){return n.bind(o,t)(),!1;},t),a.addEvent(h,\"mouseup\",s,t),a.addEvent(h,\"mousedown\",s,t),a.addEvent(h,\"touchend\",s,t),a.addEvent(h,\"touchstart\",s,t);};a.isBrowser&&\"no\"!==this.type&&(i=t.containerObj.ownerDocument,r=i.createElement(\"div\"),r.setAttribute(\"id\",t.containerObj.id+\"_navigationbar\"),r.style.color=e.strokecolor,r.style.backgroundColor=e.fillcolor,r.style.padding=e.padding,r.style.position=e.position,r.style.fontSize=e.fontsize,r.style.cursor=e.cursor,r.style.zIndex=e.zindex,t.containerObj.appendChild(r),r.style.right=e.right,r.style.bottom=e.bottom,void 0!==r.classList&&r.classList.add(\"JXG_navigation\"),t.attr.showfullscreen&&o(t.attr.fullscreen.symbol,function(){t.toFullscreen();}),t.attr.showscreenshot&&o(t.attr.screenshot.symbol,function(){window.setTimeout(function(){t.renderer.screenshot(t,\"\",!1);},330);}),t.attr.showreload&&o(\"↻\",function(){t.reload();}),t.attr.showcleartraces&&o(\"⊗\",function(){t.clearTraces();}),t.attr.shownavigation&&(t.attr.showzoom&&(o(\"–\",t.zoomOut),o(\"o\",t.zoom100),o(\"+\",t.zoomIn)),o(\"←\",t.clickLeftArrow),o(\"↓\",t.clickUpArrow),o(\"↑\",t.clickDownArrow),o(\"→\",t.clickRightArrow)));},getElementById:function(t){return n.exists(this.container)?this.container.ownerDocument.getElementById(this.container.id+\"_\"+t):\"\";},removeToInsertLater:function(t){var e=t.parentNode,i=t.nextSibling;if(null!==e)return e.removeChild(t),function(){i?e.insertBefore(t,i):e.appendChild(t);};},resize:function(t,e){},createTouchpoints:function(t){},showTouchpoint:function(t){},hideTouchpoint:function(t){},updateTouchpoint:function(t,e){},dumpToDataURI:function(t){},dumpToCanvas:function(t,e,i,r){},screenshot:function(t){},shortenPath:function(t,e,i){},setLayer:function(t,e){}}),t.AbstractRenderer;}),define(\"reader/file\",[\"jxg\",\"utils/env\",\"utils/type\",\"utils/encoding\",\"utils/base64\"],function(t,e,i,r,s){\"use strict\";return t.FileReader={handleRemoteFile:function(e,o,n,a,h,l){var c=!1;try{c=new XMLHttpRequest(),\"raw\"===n.toLowerCase()?c.overrideMimeType(\"text/plain; charset=\"+h):c.overrideMimeType(\"text/xml; charset=\"+h);}catch(t){try{c=new ActiveXObject(\"Msxml2.XMLHTTP\");}catch(t){try{c=new ActiveXObject(\"Microsoft.XMLHTTP\");}catch(t){c=!1;}}}if(!c)return void t.debug(\"AJAX not activated!\");c.open(\"GET\",e,a),\"raw\"===n.toLowerCase()?this.cbp=function(){var t=c;4===t.readyState&&o(t.responseText);}:this.cbp=function(){var t=c,e=\"\";4===t.readyState&&(!i.exists(t.responseStream)||\"PK\"!==t.responseText.slice(0,2)&&31!==r.asciiCharCodeAt(t.responseText.slice(0,1),0)?(e=t.responseText,console.log(e)):e=s.decode(jxgBinFileReader(t)),this.parseString(e,o,n,l));},this.cb=i.bind(this.cbp,this),c.onreadystatechange=this.cb;try{c.send(null);}catch(t){throw new Error(\"JSXGraph: A problem occurred while trying to read remote file '\"+e+\"'.\");}},handleLocalFile:function(t,e,r,s,o,n){i.exists(s)||(s=!0),\"raw\"===r.toLowerCase()?this.cbp=function(t){e(t.target.result);}:this.cbp=function(t){var i=t.target.result;this.parseString(i,e,r,n);},this.cb=i.bind(this.cbp,this);var a=new FileReader();a.onload=this.cb,\"raw\"===r.toLowerCase()?a.readAsText(t):a.readAsText(t,o);},parseFileContent:function(t,e,r,s,o,n){i.isString(t)||void 0===FileReader?this.handleRemoteFile(t,e,r,s,o,n):this.handleLocalFile(t,e,r,s,o,n);},parseString:function(e,r,s,o){var n,a;if(s=s.toLowerCase(),n=t.readers[s],!i.exists(n))throw new Error(\"JSXGraph: There is no reader available for '\"+s+\"'.\");a=new n(r,e),a.read(),i.isFunction(o)&&o(r);}},!e.isMetroApp()&&e.isBrowser&&\"object\"==typeof navigator&&/msie/i.test(navigator.userAgent)&&!/opera/i.test(navigator.userAgent)&&document&&document.write&&document.write('<script type=\"text/vbscript\">\\nFunction Base64Encode(inData)\\n  Const Base64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\\n  Dim cOut, sOut, I\\n  For I = 1 To LenB(inData) Step 3\\n    Dim nGroup, pOut, sGroup\\n    nGroup = &H10000 * AscB(MidB(inData, I, 1)) + _\\n      &H100 * MyASC(MidB(inData, I + 1, 1)) + MyASC(MidB(inData, I + 2, 1))\\n    nGroup = Oct(nGroup)\\n    nGroup = String(8 - Len(nGroup), \"0\") & nGroup\\n    pOut = Mid(Base64, CLng(\"&o\" & Mid(nGroup, 1, 2)) + 1, 1) + _\\n      Mid(Base64, CLng(\"&o\" & Mid(nGroup, 3, 2)) + 1, 1) + _\\n      Mid(Base64, CLng(\"&o\" & Mid(nGroup, 5, 2)) + 1, 1) + _\\n      Mid(Base64, CLng(\"&o\" & Mid(nGroup, 7, 2)) + 1, 1)\\n    sOut = sOut + pOut\\n  Next\\n  Select Case LenB(inData) Mod 3\\n    Case 1: \\'8 bit final\\n      sOut = Left(sOut, Len(sOut) - 2) + \"==\"\\n    Case 2: \\'16 bit final\\n      sOut = Left(sOut, Len(sOut) - 1) + \"=\"\\n  End Select\\n  Base64Encode = sOut\\nEnd Function\\n\\nFunction MyASC(OneChar)\\n  If OneChar = \"\" Then MyASC = 0 Else MyASC = AscB(OneChar)\\nEnd Function\\n\\nFunction jxgBinFileReader(xhr)\\n    Dim byteString\\n    Dim b64String\\n    Dim i\\n    byteString = xhr.responseBody\\n    ReDim byteArray(LenB(byteString))\\n    For i = 1 To LenB(byteString)\\n        byteArray(i-1) = AscB(MidB(byteString, i, 1))\\n    Next\\n    b64String = Base64Encode(byteString)\\n    jxgBinFileReader = b64String\\nEnd Function\\n<\\/script>\\n'),t.FileReader;}),define(\"parser/geonext\",[\"jxg\",\"base/constants\",\"utils/type\"],function(t,e,i){\"use strict\";return t.GeonextParser={replacePow:function(t){var e,i,r,s,o,n,a,h,l,c,d,u;for(t=t.replace(/(\\s*)\\^(\\s*)/g,\"^\"),c=t.indexOf(\"^\"),s=-1;c>=0&&c<t.length-1;){if(s===c)throw new Error(\"JSXGraph: Error while parsing expression '\"+t+\"'\");if(s=c,l=t.slice(0,c),d=t.slice(c+1),\")\"===l.charAt(l.length-1)){for(e=1,i=l.length-2;i>=0&&e>0;)r=l.charAt(i),\")\"===r?e++:\"(\"===r&&(e-=1),i-=1;if(0!==e)throw new Error(\"JSXGraph: Missing '(' in expression\");for(o=\"\",a=l.substring(0,i+1),h=i;h>=0&&a.substr(h,1).match(/([\\w\\.]+)/);)o=RegExp.$1+o,h-=1;o+=l.substring(i+1,l.length),o=o.replace(/([\\(\\)\\+\\*\\%\\^\\-\\/\\]\\[])/g,\"\\\\$1\");}else o=\"[\\\\w\\\\.]+\";if(d.match(/^([\\w\\.]*\\()/)){for(e=1,i=RegExp.$1.length;i<d.length&&e>0;)r=d.charAt(i),\")\"===r?e-=1:\"(\"===r&&(e+=1),i+=1;if(0!==e)throw new Error(\"JSXGraph: Missing ')' in expression\");n=d.substring(0,i),n=n.replace(/([\\(\\)\\+\\*\\%\\^\\-\\/\\[\\]])/g,\"\\\\$1\");}else n=\"[\\\\w\\\\.]+\";u=new RegExp(\"(\"+o+\")\\\\^(\"+n+\")\"),t=t.replace(u,\"pow($1,$2)\"),c=t.indexOf(\"^\");}return t;},replaceIf:function(t){var e,i,r,s,o,n,a,h,l,c=\"\",d=null,u=null,p=null;if((r=t.indexOf(\"If(\"))<0)return t;for(t=t.replace(/\"\"/g,\"0\");r>=0;){for(e=t.slice(0,r),i=t.slice(r+3),o=1,s=0,n=-1,a=-1;s<i.length&&o>0;)h=i.charAt(s),\")\"===h?o-=1:\"(\"===h?o+=1:\",\"===h&&1===o&&(n<0?n=s:a=s),s+=1;if(l=i.slice(0,s-1),i=i.slice(s),n<0)return\"\";if(a<0)return\"\";d=l.slice(0,n),u=l.slice(n+1,a),p=l.slice(a+1),d=this.replaceIf(d),u=this.replaceIf(u),p=this.replaceIf(p),c+=e+\"((\"+d+\")?(\"+u+\"):(\"+p+\"))\",t=i,d=null,u=null,r=t.indexOf(\"If(\");}return c+=i;},replaceNameById:function(t,e,i){var r,s,o,n,a=0,h=[\"X\",\"Y\",\"L\",\"V\"],l=function(t){return i?\"$('\"+t+\"')\":t;};for(n=0;n<h.length;n++)for(a=t.indexOf(h[n]+\"(\");a>=0;)a>=0&&(r=t.indexOf(\")\",a+2))>=0&&(s=t.slice(a+2,r),s=s.replace(/\\\\(['\"])?/g,\"$1\"),(o=e.elementsByName[s])&&(t=t.slice(0,a+2)+(i?\"$('\":\"\")+l(o.id)+t.slice(r))),r=t.indexOf(\")\",a+2),a=t.indexOf(h[n]+\"(\",r);for(a=t.indexOf(\"Dist(\");a>=0;)a>=0&&(r=t.indexOf(\",\",a+5))>=0&&(s=t.slice(a+5,r),s=s.replace(/\\\\(['\"])?/g,\"$1\"),(o=e.elementsByName[s])&&(t=t.slice(0,a+5)+l(o.id)+t.slice(r))),r=t.indexOf(\",\",a+5),a=t.indexOf(\",\",r),r=t.indexOf(\")\",a+1),r>=0&&(s=t.slice(a+1,r),s=s.replace(/\\\\(['\"])?/g,\"$1\"),(o=e.elementsByName[s])&&(t=t.slice(0,a+1)+l(o.id)+t.slice(r))),r=t.indexOf(\")\",a+1),a=t.indexOf(\"Dist(\",r);for(h=[\"Deg\",\"Rad\"],n=0;n<h.length;n++)for(a=t.indexOf(h[n]+\"(\");a>=0;)a>=0&&(r=t.indexOf(\",\",a+4))>=0&&(s=t.slice(a+4,r),s=s.replace(/\\\\(['\"])?/g,\"$1\"),(o=e.elementsByName[s])&&(t=t.slice(0,a+4)+l(o.id)+t.slice(r))),r=t.indexOf(\",\",a+4),a=t.indexOf(\",\",r),r=t.indexOf(\",\",a+1),r>=0&&(s=t.slice(a+1,r),s=s.replace(/\\\\(['\"])?/g,\"$1\"),(o=e.elementsByName[s])&&(t=t.slice(0,a+1)+l(o.id)+t.slice(r))),r=t.indexOf(\",\",a+1),a=t.indexOf(\",\",r),r=t.indexOf(\")\",a+1),r>=0&&(s=t.slice(a+1,r),s=s.replace(/\\\\(['\"])?/g,\"$1\"),(o=e.elementsByName[s])&&(t=t.slice(0,a+1)+l(o.id)+t.slice(r))),r=t.indexOf(\")\",a+1),a=t.indexOf(h[n]+\"(\",r);return t;},replaceIdByObj:function(t){var e=/(X|Y|L)\\(([\\w_]+)\\)/g;return t=t.replace(e,\"$('$2').$1()\"),e=/(V)\\(([\\w_]+)\\)/g,t=t.replace(e,\"$('$2').Value()\"),e=/(Dist)\\(([\\w_]+),([\\w_]+)\\)/g,t=t.replace(e,\"dist($('$2'), $('$3'))\"),e=/(Deg)\\(([\\w_]+),([ \\w\\[\\w_]+),([\\w_]+)\\)/g,t=t.replace(e,\"deg($('$2'),$('$3'),$('$4'))\"),e=/Rad\\(([\\w_]+),([\\w_]+),([\\w_]+)\\)/g,t=t.replace(e,\"rad($('$1'),$('$2'),$('$3'))\"),e=/N\\((.+)\\)/g,t=t.replace(e,\"($1)\");},geonext2JS:function(t,e){var i,r,s,o=[\"Abs\",\"ACos\",\"ASin\",\"ATan\",\"Ceil\",\"Cos\",\"Exp\",\"Factorial\",\"Floor\",\"Log\",\"Max\",\"Min\",\"Random\",\"Round\",\"Sin\",\"Sqrt\",\"Tan\",\"Trunc\"],n=[\"abs\",\"acos\",\"asin\",\"atan\",\"ceil\",\"cos\",\"exp\",\"factorial\",\"floor\",\"log\",\"max\",\"min\",\"random\",\"round\",\"sin\",\"sqrt\",\"tan\",\"ceil\"];for(t=t.replace(/&lt;/g,\"<\"),t=t.replace(/&gt;/g,\">\"),t=t.replace(/&amp;/g,\"&\"),r=t,r=this.replaceNameById(r,e),r=this.replaceIf(r),r=this.replacePow(r),r=this.replaceIdByObj(r),s=0;s<o.length;s++)i=new RegExp([\"(\\\\W|^)(\",o[s],\")\"].join(\"\"),\"ig\"),r=r.replace(i,[\"$1\",n[s]].join(\"\"));return r=r.replace(/True/g,\"true\"),r=r.replace(/False/g,\"false\"),r=r.replace(/fasle/g,\"false\"),r=r.replace(/Pi/g,\"PI\"),r=r.replace(/\"/g,\"'\");},findDependencies:function(t,r,s){var o,n,a,h;i.exists(s)||(s=t.board),o=s.elementsByName;for(n in o)o.hasOwnProperty(n)&&n!==t.name&&(o[n].elementClass===e.OBJECT_CLASS_TEXT?i.evaluate(o[n].visProp.islabel)||(h=n.replace(/\\[/g,\"\\\\[\"),h=h.replace(/\\]/g,\"\\\\]\"),a=new RegExp(\"\\\\(([\\\\w\\\\[\\\\]'_ ]+,)*(\"+h+\")(,[\\\\w\\\\[\\\\]'_ ]+)*\\\\)\",\"g\"),r.search(a)>=0&&o[n].addChild(t)):(h=n.replace(/\\[/g,\"\\\\[\"),h=h.replace(/\\]/g,\"\\\\]\"),a=new RegExp(\"\\\\(([\\\\w\\\\[\\\\]'_ ]+,)*(\"+h+\")(,[\\\\w\\\\[\\\\]'_ ]+)*\\\\)\",\"g\"),r.search(a)>=0&&o[n].addChild(t)));},gxt2jc:function(t,e){var i;return t=t.replace(/&lt;/g,\"<\"),t=t.replace(/&gt;/g,\">\"),t=t.replace(/&amp;/g,\"&\"),i=t,i=this.replaceNameById(i,e,!0),i=i.replace(/True/g,\"true\"),i=i.replace(/False/g,\"false\"),i=i.replace(/fasle/g,\"false\");}},t.GeonextParser;}),define(\"base/element\",[\"jxg\",\"base/constants\",\"base/coords\",\"math/math\",\"math/statistics\",\"options\",\"parser/geonext\",\"utils/event\",\"utils/color\",\"utils/type\"],function(t,e,i,r,s,o,n,a,h,l){\"use strict\";return t.GeometryElement=function(t,i,r,s){var o,n,h;if(this.needsUpdate=!0,this.isDraggable=!1,this.isReal=!0,this.childElements={},this.hasLabel=!1,this.highlighted=!1,this.notExistingParents={},this.traces={},this.numTraces=0,this.transformations=[],this.baseElement=null,this.descendants={},this.ancestors={},this.parents=[],this.symbolic={},this.rendNode=null,this.elType=\"\",this.dump=!0,this.subs={},this.inherits=[],this._pos=-1,this.stdform=[1,0,0,0,1,1,0,0],this.methodMap={setLabel:\"setLabel\",label:\"label\",setName:\"setName\",getName:\"getName\",addTransform:\"addTransform\",setProperty:\"setAttribute\",setAttribute:\"setAttribute\",addChild:\"addChild\",animate:\"animate\",on:\"on\",off:\"off\",trigger:\"trigger\",addTicks:\"addTicks\",removeTicks:\"removeTicks\",removeAllTicks:\"removeAllTicks\"},this.quadraticform=[[1,0,0],[0,1,0],[0,0,1]],this.visProp={},this.visPropCalc={visible:!1},a.eventify(this),this.mouseover=!1,this.lastDragTime=new Date(),arguments.length>0){this.board=t,this.type=r,this._org_type=r,this.elementClass=s||e.OBJECT_CLASS_OTHER,this.id=i.id,o=i.name,l.exists(o)||(o=this.board.generateName(this)),\"\"!==o&&(this.board.elementsByName[o]=this),this.name=o,this.needsRegularUpdate=i.needsregularupdate,l.clearVisPropOld(this),h=this.resolveShortcuts(i);for(n in h)h.hasOwnProperty(n)&&this._set(n,h[n]);this.visProp.draft=h.draft&&h.draft.draft;}},t.extend(t.GeometryElement.prototype,{addChild:function(t){var e,i;this.childElements[t.id]=t,this.addDescendants(t),t.ancestors[this.id]=this;for(e in this.descendants)if(this.descendants.hasOwnProperty(e)){this.descendants[e].ancestors[this.id]=this;for(i in this.ancestors)this.ancestors.hasOwnProperty(i)&&(this.descendants[e].ancestors[this.ancestors[i].id]=this.ancestors[i]);}for(e in this.ancestors)if(this.ancestors.hasOwnProperty(e))for(i in this.descendants)this.descendants.hasOwnProperty(i)&&(this.ancestors[e].descendants[this.descendants[i].id]=this.descendants[i]);return this;},addDescendants:function(t){var e;this.descendants[t.id]=t;for(e in t.childElements)t.childElements.hasOwnProperty(e)&&this.addDescendants(t.childElements[e]);return this;},addParents:function(t){var e,i,r;for(r=l.isArray(t)?t:arguments,i=r.length,e=0;e<i;++e)l.exists(r[e])&&(l.isId(this.board,r[e])?this.parents.push(r[e]):l.exists(r[e].id)&&this.parents.push(r[e].id));this.parents=l.uniqueArray(this.parents);},setParents:function(t){this.parents=[],this.addParents(t);},removeChild:function(t){return delete this.childElements[t.id],this.removeDescendants(t),delete t.ancestors[this.id],this;},removeDescendants:function(t){var e;delete this.descendants[t.id];for(e in t.childElements)t.childElements.hasOwnProperty(e)&&this.removeDescendants(t.childElements[e]);return this;},countChildren:function(){var t,e,i=0;e=this.childElements;for(t in e)e.hasOwnProperty(t)&&t.indexOf(\"Label\")<0&&i++;return i;},getName:function(){return this.name;},addTransform:function(t){return this;},draggable:function(){return this.isDraggable&&!l.evaluate(this.visProp.fixed)&&this.type!==e.OBJECT_TYPE_GLIDER;},setPosition:function(t,i){var r,s,o,n,a=[];if(!l.exists(this.parents))return this;for(o=this.parents.length,s=0;s<o;++s)if(r=this.board.select(this.parents[s]),l.isPoint(r)){if(!r.draggable())return this;a.push(r);}for(3===i.length&&(i=i.slice(1)),n=this.board.create(\"transform\",i,{type:\"translate\"}),o=a.length,o>0?n.applyOnce(a):this.transformations.length>0&&this.transformations[this.transformations.length-1].isNumericMatrix?this.transformations[this.transformations.length-1].melt(n):this.addTransform(n),s=0;s<o;++s)a[s].type===e.OBJECT_TYPE_GLIDER&&a[s].updateGlider();return this;},setPositionDirectly:function(t,r,o){var n=new i(t,r,this.board,!1),a=new i(t,o,this.board,!1),h=s.subtract(n.usrCoords,a.usrCoords);return this.setPosition(e.COORDS_BY_USER,h),this;},generatePolynomial:function(){return[];},animate:function(t,e,i){i=i||{};var r,s,o,n=this.board.attr.animationdelay,a=Math.ceil(e/n),c=this,d=function(t,e,i,r){var s,n;if(t=parseFloat(t),e=parseFloat(e),!isNaN(t)&&!isNaN(e))for(n=(e-t)/a,c.animationData[i]=[],o=0;o<a;o++)s=t+(o+1)*n,c.animationData[i][a-o-1]=r?Math.floor(s):s;};this.animationData={};for(r in t)if(t.hasOwnProperty(r))switch(s=r.toLowerCase()){case\"strokecolor\":case\"fillcolor\":!function(t,e,i){var r,s,n,l,d;for(r=h.rgb2hsv(t),s=h.rgb2hsv(e),n=(s[0]-r[0])/a,l=(s[1]-r[1])/a,d=(s[2]-r[2])/a,c.animationData[i]=[],o=0;o<a;o++)c.animationData[i][a-o-1]=h.hsv2rgb(r[0]+(o+1)*n,r[1]+(o+1)*l,r[2]+(o+1)*d);}(this.visProp[s],t[r],s);break;case\"size\":if(!l.isPoint(this))break;d(this.visProp[s],t[r],s,!0);break;case\"strokeopacity\":case\"strokewidth\":case\"fillopacity\":d(this.visProp[s],t[r],s,!1);}return this.animationCallback=i.callback,this.board.addAnimation(this),this;},update:function(){return l.evaluate(this.visProp.trace)&&this.cloneToBackground(),this;},updateRenderer:function(){return this;},fullUpdate:function(t){return this.prepareUpdate().update().updateVisibility(t).updateRenderer();},setDisplayRendNode:function(t){var e,i,r,s,o;if(void 0===t&&(t=this.visPropCalc.visible),t===this.visPropOld.visible)return this;for(this.board.renderer.display(this,t),i=this.inherits.length,r=0;r<i;r++)if(o=this.inherits[r],l.isArray(o))for(s=o.length,e=0;e<s;e++)l.exists(o[e])&&l.exists(o[e].rendNode)&&\"inherit\"===l.evaluate(o[e].visProp.visible)&&o[e].setDisplayRendNode(t);else l.exists(o)&&l.exists(o.rendNode)&&\"inherit\"===l.evaluate(o.visProp.visible)&&o.setDisplayRendNode(t);return this.hasLabel&&l.exists(this.label)&&l.exists(this.label.rendNode)&&\"inherit\"===l.evaluate(this.label.visProp.visible)&&this.label.setDisplayRendNode(t),this;},hide:function(){return this.setAttribute({visible:!1}),this;},hideElement:function(){return this.hide(),this;},show:function(){return this.setAttribute({visible:!0}),this;},showElement:function(){return this.show(),this;},updateVisibility:function(t){var e,i,r,s,o,n;if(this.needsUpdate){for(void 0!==t?this.visPropCalc.visible=t:(n=l.evaluate(this.visProp.visible),l.exists(this.hiddenByParent)&&this.hiddenByParent&&(n=!1),\"inherit\"!==n&&(this.visPropCalc.visible=n)),i=this.inherits.length,r=0;r<i;r++)if(o=this.inherits[r],l.isArray(o))for(s=o.length,e=0;e<s;e++)l.exists(o[e])&&\"inherit\"===l.evaluate(o[e].visProp.visible)&&o[e].prepareUpdate().updateVisibility(this.visPropCalc.visible);else l.exists(o)&&\"inherit\"===l.evaluate(o.visProp.visible)&&o.prepareUpdate().updateVisibility(this.visPropCalc.visible);l.exists(this.label)&&l.exists(this.label.visProp)&&l.evaluate(this.label.visProp.visible)&&this.label.prepareUpdate().updateVisibility(this.visPropCalc.visible);}return this;},_set:function(t,e){var i;if(t=t.toLocaleLowerCase(),this.visProp.hasOwnProperty(t)&&t.indexOf(\"color\")>=0&&l.isString(e)&&9===e.length&&\"#\"===e.charAt(0))e=h.rgba2rgbo(e),this.visProp[t]=e[0],this.visProp[t.replace(\"color\",\"opacity\")]=e[1];else if(null===e||!l.isObject(e)||l.exists(e.id)||l.exists(e.name))this.visProp[t]=e;else{this.visProp[t]={};for(i in e)e.hasOwnProperty(i)&&(this.visProp[t][i.toLocaleLowerCase()]=e[i]);}},resolveShortcuts:function(t){var e,i;for(e in o.shortcuts)if(o.shortcuts.hasOwnProperty(e)&&l.exists(t[e]))for(i=0;i<o.shortcuts[e].length;i++)l.exists(t[o.shortcuts[e][i]])||(t[o.shortcuts[e][i]]=t[e]);return t;},setLabel:function(t){this.hasLabel||this.setAttribute({withlabel:!0}),this.setLabelText(t);},setLabelText:function(t){return l.exists(this.label)&&(t=t.replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\"),this.label.setText(t)),this;},setName:function(t){t=t.replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\"),\"slider\"!==this.elType&&this.setLabelText(t),this.setAttribute({name:t});},setProperty:function(){t.deprecated(\"setProperty()\",\"setAttribute()\"),this.setAttribute.apply(this,arguments);},setAttribute:function(i){var r,s,o,n,a,c,d,u,p,f={};for(r=0;r<arguments.length;r++)c=arguments[r],l.isString(c)?(u=c.split(\":\"),f[l.trim(u[0])]=l.trim(u[1])):l.isArray(c)?f[c[0]]=c[1]:t.extend(f,c);f=this.resolveShortcuts(f);for(r in f)if(f.hasOwnProperty(r)){if(n=r.replace(/\\s+/g,\"\").toLowerCase(),a=f[r],l.isObject(a)&&l.exists(this.visProp[n])){if(this.visProp[n]=l.merge(this.visProp[n],a),this.type===e.OBJECT_TYPE_TICKS&&l.exists(this.labels))for(o=this.labels.length,s=0;s<o;s++)this.labels[s].setAttribute(a);else if(l.exists(this[n]))if(l.isArray(this[n]))for(s=0;s<this[n].length;s++)this[n][s].setAttribute(a);else this[n].setAttribute(a);continue;}switch(p=this.visProp[n],n){case\"name\":p=this.name,delete this.board.elementsByName[this.name],this.name=a,this.board.elementsByName[this.name]=this;break;case\"needsregularupdate\":this.needsRegularUpdate=!(\"false\"===a||!1===a),this.board.renderer.setBuffering(this,this.needsRegularUpdate?\"auto\":\"static\");break;case\"labelcolor\":a=h.rgba2rgbo(a),d=a[1],a=a[0],0===d&&l.exists(this.label)&&this.hasLabel&&this.label.hideElement(),l.exists(this.label)&&this.hasLabel&&(this.label.visProp.strokecolor=a,this.board.renderer.setObjectStrokeColor(this.label,a,d)),this.elementClass===e.OBJECT_CLASS_TEXT&&(this.visProp.strokecolor=a,this.visProp.strokeopacity=d,this.board.renderer.setObjectStrokeColor(this,a,d));break;case\"infoboxtext\":l.isString(a)?this.infoboxText=a:this.infoboxText=!1;break;case\"visible\":this.visProp.visible=\"false\"!==a&&(\"true\"===a||a),this.setDisplayRendNode(l.evaluate(this.visProp.visible)),l.evaluate(this.visProp.visible)&&l.exists(this.updateSize)&&this.updateSize();break;case\"face\":l.isPoint(this)&&(this.visProp.face=a,this.board.renderer.changePointStyle(this));break;case\"trace\":\"false\"===a||!1===a?(this.clearTrace(),this.visProp.trace=!1):this.visProp.trace=\"pause\"!==a;break;case\"gradient\":this.visProp.gradient=a,this.board.renderer.setGradient(this);break;case\"gradientsecondcolor\":a=h.rgba2rgbo(a),this.visProp.gradientsecondcolor=a[0],this.visProp.gradientsecondopacity=a[1],this.board.renderer.updateGradient(this);break;case\"gradientsecondopacity\":this.visProp.gradientsecondopacity=a,this.board.renderer.updateGradient(this);break;case\"withlabel\":this.visProp.withlabel=a,l.evaluate(a)?(this.label||this.createLabel(),this.label.setAttribute({visible:\"inherit\"})):this.label&&this.hasLabel&&this.label.setAttribute({visible:!1}),this.hasLabel=a;break;case\"radius\":this.type!==e.OBJECT_TYPE_ANGLE&&this.type!==e.OBJECT_TYPE_SECTOR||this.setRadius(a);break;case\"rotate\":(this.elementClass===e.OBJECT_CLASS_TEXT&&\"internal\"===l.evaluate(this.visProp.display)||this.type===e.OBJECT_TYPE_IMAGE)&&this.addRotation(a);break;case\"ticksdistance\":this.type===e.OBJECT_TYPE_TICKS&&l.isNumber(a)&&(this.ticksFunction=this.makeTicksFunction(a));break;case\"generatelabelvalue\":this.type===e.OBJECT_TYPE_TICKS&&l.isFunction(a)&&(this.generateLabelValue=a);break;case\"onpolygon\":this.type===e.OBJECT_TYPE_GLIDER&&(this.onPolygon=!!a);break;case\"disabled\":l.exists(this.rendNodeTag)&&(this.rendNodeTag.disabled=!!a);break;case\"checked\":l.exists(this.rendNodeTag)&&(this.rendNodeCheckbox.checked=!!a);break;case\"maxlength\":l.exists(this.rendNodeTag)&&(this.rendNodeTag.maxlength=!!a);break;case\"layer\":this.board.renderer.setLayer(this,l.evaluate(a)),this._set(n,a);break;default:l.exists(this.visProp[n])&&(!t.Validator[n]||t.Validator[n]&&t.Validator[n](a)||t.Validator[n]&&l.isFunction(a)&&t.Validator[n](a()))&&(a=(!a.toLowerCase||\"false\"!==a.toLowerCase())&&a,this._set(n,a));}this.triggerEventHandlers([\"attribute:\"+n],[p,a,this]);}return this.triggerEventHandlers([\"attribute\"],[f,this]),l.evaluate(this.visProp.needsregularupdate)?this.board.update(this):this.board.fullUpdate(),this;},getProperty:function(){t.deprecated(\"getProperty()\",\"getAttribute()\"),this.getProperty.apply(this,arguments);},getAttribute:function(t){var e;switch(t=t.toLowerCase()){case\"needsregularupdate\":e=this.needsRegularUpdate;break;case\"labelcolor\":e=this.label.visProp.strokecolor;break;case\"infoboxtext\":e=this.infoboxText;break;case\"withlabel\":e=this.hasLabel;break;default:e=this.visProp[t];}return e;},setDash:function(t){return this.setAttribute({dash:t}),this;},prepareUpdate:function(){return this.needsUpdate=!0,this;},remove:function(){return this.board.renderer.remove(this.board.renderer.getElementById(this.id)),this.hasLabel&&this.board.renderer.remove(this.board.renderer.getElementById(this.label.id)),this;},getTextAnchor:function(){return new i(e.COORDS_BY_USER,[0,0],this.board);},getLabelAnchor:function(){return new i(e.COORDS_BY_USER,[0,0],this.board);},setArrow:function(t,i){return this.visProp.firstarrow=t,this.visProp.lastarrow=i,i&&(this.type=e.OBJECT_TYPE_VECTOR,this.elType=\"arrow\"),this.prepareUpdate().update().updateVisibility().updateRenderer(),this;},createGradient:function(){var t=l.evaluate(this.visProp.gradient);\"linear\"!==t&&\"radial\"!==t||this.board.renderer.setGradient(this);},createLabel:function(){var e,i=this;return t.elements.text?(e=l.deepCopy(this.visProp.label,null),e.id=this.id+\"Label\",e.isLabel=!0,e.anchor=this,e.priv=this.visProp.priv,this.visProp.withlabel&&(this.label=t.elements.text(this.board,[0,0,function(){return l.isFunction(i.name)?i.name():i.name;}],e),this.label.needsUpdate=!0,this.label.dump=!1,this.label.fullUpdate(),this.hasLabel=!0)):t.debug(\"JSXGraph: Can't create label: text element is not available. Make sure you include base/text\"),this;},highlight:function(t){return t=l.def(t,!1),!l.evaluate(this.visProp.highlight)||this.highlighted&&!t||(this.highlighted=!0,this.board.highlightedObjects[this.id]=this,this.board.renderer.highlight(this)),this;},noHighlight:function(){return this.highlighted&&(this.highlighted=!1,delete this.board.highlightedObjects[this.id],this.board.renderer.noHighlight(this)),this;},clearTrace:function(){var t;for(t in this.traces)this.traces.hasOwnProperty(t)&&this.board.renderer.remove(this.traces[t]);return this.numTraces=0,this;},cloneToBackground:function(){return this;},bounds:function(){return[0,0,0,0];},normalize:function(){return this.stdform=r.normalize(this.stdform),this;},toJSON:function(){var t,e,i=['{\"name\":',this.name];i.push(', \"id\":'+this.id),t=[];for(e in this.visProp)this.visProp.hasOwnProperty(e)&&l.exists(this.visProp[e])&&t.push('\"'+e+'\":'+this.visProp[e]);return i.push(', \"visProp\":{'+t.toString()+\"}\"),i.push(\"}\"),i.join(\"\");},addRotation:function(t){var i,r,s,o,n,a=this;return(this.elementClass===e.OBJECT_CLASS_TEXT&&\"internal\"===l.evaluate(this.visProp.display)||this.type===e.OBJECT_TYPE_IMAGE)&&0!==t&&(i=this.board.create(\"transform\",[function(){return-a.X();},function(){return-a.Y();}],{type:\"translate\"}),r=this.board.create(\"transform\",[function(){return a.X();},function(){return a.Y();}],{type:\"translate\"}),s=this.board.create(\"transform\",[function(){return a.board.unitX/a.board.unitY;},function(){return 1;}],{type:\"scale\"}),o=this.board.create(\"transform\",[function(){return a.board.unitY/a.board.unitX;},function(){return 1;}],{type:\"scale\"}),n=this.board.create(\"transform\",[function(){return l.evaluate(t)*Math.PI/180;}],{type:\"rotate\"}),i.bindTo(this),s.bindTo(this),n.bindTo(this),o.bindTo(this),r.bindTo(this)),this;},highlightStrokeColor:function(e){return t.deprecated(\"highlightStrokeColor()\",\"setAttribute()\"),this.setAttribute({highlightStrokeColor:e}),this;},strokeColor:function(e){return t.deprecated(\"strokeColor()\",\"setAttribute()\"),this.setAttribute({strokeColor:e}),this;},strokeWidth:function(e){return t.deprecated(\"strokeWidth()\",\"setAttribute()\"),this.setAttribute({strokeWidth:e}),this;},fillColor:function(e){return t.deprecated(\"fillColor()\",\"setAttribute()\"),this.setAttribute({fillColor:e}),this;},highlightFillColor:function(e){return t.deprecated(\"highlightFillColor()\",\"setAttribute()\"),this.setAttribute({highlightFillColor:e}),this;},labelColor:function(e){return t.deprecated(\"labelColor()\",\"setAttribute()\"),this.setAttribute({labelColor:e}),this;},dash:function(e){return t.deprecated(\"dash()\",\"setAttribute()\"),this.setAttribute({dash:e}),this;},visible:function(e){return t.deprecated(\"visible()\",\"setAttribute()\"),this.setAttribute({visible:e}),this;},shadow:function(e){return t.deprecated(\"shadow()\",\"setAttribute()\"),this.setAttribute({shadow:e}),this;},getType:function(){return this.elType;},getParents:function(){return l.isArray(this.parents)?this.parents:[];},snapToGrid:function(){return this;},snapToPoints:function(){return this;},getAttributes:function(){var t,e=l.deepCopy(this.visProp),i=[],r=i.length;for(e.id=this.id,e.name=this.name,t=0;t<r;t++)delete e[i[t]];return e;},hasPoint:function(t,e){return!1;},addTicks:function(t){return\"\"!==t.id&&l.exists(t.id)||(t.id=this.id+\"_ticks_\"+(this.ticks.length+1)),this.board.renderer.drawTicks(t),this.ticks.push(t),t.id;},removeAllTicks:function(){var t;if(l.exists(this.ticks)){for(t=this.ticks.length;t>0;t--)this.removeTicks(this.ticks[t-1]);this.ticks=[],this.board.update();}},removeTicks:function(t){var e,i;if(l.exists(this.defaultTicks)&&this.defaultTicks===t&&(this.defaultTicks=null),l.exists(this.ticks))for(e=this.ticks.length;e>0;e--)if(this.ticks[e-1]===t){if(this.board.removeObject(this.ticks[e-1]),this.ticks[e-1].ticks)for(i=0;i<this.ticks[e-1].ticks.length;i++)l.exists(this.ticks[e-1].labels[i])&&this.board.removeObject(this.ticks[e-1].labels[i]);delete this.ticks[e-1];break;}},handleSnapToGrid:function(t,i){var r,s,o,n,a=!1,h=l.evaluate(this.visProp.snapsizex),c=l.evaluate(this.visProp.snapsizey);return l.exists(this.coords)?(a=l.evaluate(this.visProp.snaptogrid)||!0===t,a&&(r=this.coords.usrCoords[1],s=this.coords.usrCoords[2],h<=0&&this.board.defaultAxes&&this.board.defaultAxes.x.defaultTicks&&(o=this.board.defaultAxes.x.defaultTicks,h=o.ticksDelta*(l.evaluate(o.visProp.minorticks)+1)),c<=0&&this.board.defaultAxes&&this.board.defaultAxes.y.defaultTicks&&(o=this.board.defaultAxes.y.defaultTicks,c=o.ticksDelta*(l.evaluate(o.visProp.minorticks)+1)),h>0&&c>0&&(n=this.board.getBoundingBox(),r=Math.round(r/h)*h,s=Math.round(s/c)*c,i||(r<n[0]?r+=h:r>n[2]&&(r-=h),s<n[3]?s+=c:s>n[1]&&(s-=c)),this.coords.setCoordinates(e.COORDS_BY_USER,[r,s]))),this):this;},getBoundingBox:function(){var t,i,r,s,o,n=[1/0,1/0,-1/0,-1/0];if(this.type===e.OBJECT_TYPE_POLYGON){if((i=this.vertices.length-1)<=0)return n;for(t=0;t<i;t++)r=this.vertices[t].X(),n[0]=r<n[0]?r:n[0],n[2]=r>n[2]?r:n[2],r=this.vertices[t].Y(),n[1]=r<n[1]?r:n[1],n[3]=r>n[3]?r:n[3];}else if(this.elementClass===e.OBJECT_CLASS_CIRCLE)s=this.center.X(),o=this.center.Y(),n=[s-this.radius,o+this.radius,s+this.radius,o-this.radius];else if(this.elementClass===e.OBJECT_CLASS_CURVE){if(0===(i=this.vertices.length))return n;for(t=0;t<i;t++)r=this.points[t].coords.usrCoords[1],n[0]=r<n[0]?r:n[0],n[2]=r>n[2]?r:n[2],r=this.points[t].coords.usrCoords[1],n[1]=r<n[1]?r:n[1],n[3]=r>n[3]?r:n[3];}return n;},addEvent:t.shortcut(t.GeometryElement.prototype,\"on\"),removeEvent:t.shortcut(t.GeometryElement.prototype,\"off\"),__evt__over:function(t){},__evt__mouseover:function(t){},__evt__out:function(t){},__evt__mouseout:function(t){},__evt__move:function(t){},__evt__mousemove:function(t){},__evt__drag:function(t){},__evt__mousedrag:function(t){},__evt__pendrag:function(t){},__evt__touchdrag:function(t){},__evt__down:function(t){},__evt__mousedown:function(t){},__evt__pendown:function(t){},__evt__touchdown:function(t){},__evt__up:function(t){},__evt__mouseup:function(t){},__evt__penup:function(t){},__evt__touchup:function(t){},__evt__attribute:function(t,e){},__evt__attribute_:function(t,e,i){},__evt:function(){}}),t.GeometryElement;}),define(\"base/transformation\",[\"jxg\",\"base/constants\",\"math/math\",\"utils/type\"],function(t,e,i,r){\"use strict\";return t.Transformation=function(t,i,r){this.elementClass=e.OBJECT_CLASS_OTHER,this.type=e.OBJECT_TYPE_TRANSFORMATION,this.matrix=[[1,0,0],[0,1,0],[0,0,1]],this.board=t,this.isNumericMatrix=!1,this.setMatrix(t,i,r),this.methodMap={apply:\"apply\",applyOnce:\"applyOnce\",bindTo:\"bindTo\",bind:\"bind\",melt:\"melt\"};},t.Transformation.prototype={},t.extend(t.Transformation.prototype,{update:function(){return this;},setMatrix:function(t,e,s){var o;for(this.isNumericMatrix=!0,o=0;o<s.length;o++)if(\"number\"!=typeof s[o]){this.isNumericMatrix=!1;break;}if(\"translate\"===e){if(2!==s.length)throw new Error(\"JSXGraph: translate transformation needs 2 parameters.\");this.evalParam=r.createEvalFunction(t,s,2),this.update=function(){this.matrix[1][0]=this.evalParam(0),this.matrix[2][0]=this.evalParam(1);};}else if(\"scale\"===e){if(2!==s.length)throw new Error(\"JSXGraph: scale transformation needs 2 parameters.\");this.evalParam=r.createEvalFunction(t,s,2),this.update=function(){this.matrix[1][1]=this.evalParam(0),this.matrix[2][2]=this.evalParam(1);};}else if(\"reflect\"===e)s.length<4&&(s[0]=t.select(s[0])),2===s.length&&(s[1]=t.select(s[1])),4===s.length&&(this.evalParam=r.createEvalFunction(t,s,4)),this.update=function(){var t,e,r,o,n,a,h,l;1===s.length?h=s[0].stdform:2===s.length?h=i.crossProduct(s[1].coords.usrCoords,s[0].coords.usrCoords):4===s.length&&(h=i.crossProduct([1,this.evalParam(2),this.evalParam(3)],[1,this.evalParam(0),this.evalParam(1)])),t=h[1],e=h[2],r=h[0],l=[-r*t,-r*e,t*t+e*e],a=l[2],o=l[0]/l[2],n=l[1]/l[2],t=-h[2],e=h[1],this.matrix[1][1]=(t*t-e*e)/a,this.matrix[1][2]=2*t*e/a,this.matrix[2][1]=this.matrix[1][2],this.matrix[2][2]=-this.matrix[1][1],this.matrix[1][0]=o*(1-this.matrix[1][1])-n*this.matrix[1][2],this.matrix[2][0]=n*(1-this.matrix[2][2])-o*this.matrix[2][1];};else if(\"rotate\"===e)3===s.length?this.evalParam=r.createEvalFunction(t,s,3):s.length>0&&s.length<=2&&(this.evalParam=r.createEvalFunction(t,s,1),2!==s.length||r.isArray(s[1])||(s[1]=t.select(s[1]))),this.update=function(){var t,e,i=this.evalParam(0),o=Math.cos(i),n=Math.sin(i);this.matrix[1][1]=o,this.matrix[1][2]=-n,this.matrix[2][1]=n,this.matrix[2][2]=o,s.length>1&&(3===s.length?(t=this.evalParam(1),e=this.evalParam(2)):r.isArray(s[1])?(t=s[1][0],e=s[1][1]):(t=s[1].X(),e=s[1].Y()),this.matrix[1][0]=t*(1-o)+e*n,this.matrix[2][0]=e*(1-o)-t*n);};else if(\"shear\"===e){if(2!==s.length)throw new Error(\"JSXGraph: shear transformation needs 2 parameters.\");this.evalParam=r.createEvalFunction(t,s,2),this.update=function(){this.matrix[1][2]=this.evalParam(0),this.matrix[2][1]=this.evalParam(1);};}else if(\"generic\"===e){if(9!==s.length)throw new Error(\"JSXGraph: generic transformation needs 9 parameters.\");this.evalParam=r.createEvalFunction(t,s,9),this.update=function(){this.matrix[0][0]=this.evalParam(0),this.matrix[0][1]=this.evalParam(1),this.matrix[0][2]=this.evalParam(2),this.matrix[1][0]=this.evalParam(3),this.matrix[1][1]=this.evalParam(4),this.matrix[1][2]=this.evalParam(5),this.matrix[2][0]=this.evalParam(6),this.matrix[2][1]=this.evalParam(7),this.matrix[2][2]=this.evalParam(8);};}},apply:function(t,e){return this.update(),r.exists(e)?i.matVecMult(this.matrix,t.initialCoords.usrCoords):i.matVecMult(this.matrix,t.coords.usrCoords);},applyOnce:function(t){var s,o,n;for(r.isArray(t)||(t=[t]),o=t.length,n=0;n<o;n++)this.update(),s=i.matVecMult(this.matrix,t[n].coords.usrCoords),t[n].coords.setCoordinates(e.COORDS_BY_USER,s);},bindTo:function(t){var e,i;if(r.isArray(t))for(i=t.length,e=0;e<i;e++)t[e].transformations.push(this);else t.transformations.push(this);},setProperty:function(e){t.deprecated(\"Transformation.setProperty()\",\"Transformation.setAttribute()\");},setAttribute:function(t){},melt:function(t){var e,i,r,s,o,n,a=[];for(i=t.matrix.length,r=this.matrix[0].length,e=0;e<i;e++)a[e]=[];for(this.update(),t.update(),e=0;e<i;e++)for(n=0;n<r;n++){for(o=0,s=0;s<i;s++)o+=t.matrix[e][s]*this.matrix[s][n];a[e][n]=o;}return this.update=function(){var t=this.matrix.length,i=this.matrix[0].length;for(e=0;e<t;e++)for(n=0;n<i;n++)this.matrix[e][n]=a[e][n];},this;},getParents:function(){var t=[[].concat.apply([],this.matrix)];return 0!==this.parents.length&&(t=this.parents),t;}}),t.createTransform=function(e,i,r){return new t.Transformation(e,r.type,i);},t.registerElement(\"transform\",t.createTransform),{Transformation:t.Transformation,createTransform:t.createTransform};}),define(\"base/coordselement\",[\"jxg\",\"options\",\"math/math\",\"math/geometry\",\"math/numerics\",\"math/statistics\",\"base/coords\",\"base/constants\",\"base/element\",\"parser/geonext\",\"utils/type\",\"base/transformation\"],function(t,e,i,r,s,o,n,a,h,l,c,d){\"use strict\";return t.CoordsElement=function(t,e){var i;for(c.exists(t)||(t=[1,0,0]),i=0;i<t.length;++i)t[i]=parseFloat(t[i]);this.coords=new n(a.COORDS_BY_USER,t,this.board),this.initialCoords=new n(a.COORDS_BY_USER,t,this.board),this.position=null,this.onPolygon=!1,this.slideObject=null,this.slideObjects=[],this.needsUpdateFromParent=!0,this.updateConstraint=function(){return this;},this.groups=[],this.Xjc=null,this.Yjc=null,this.methodMap=c.deepCopy(this.methodMap,{move:\"moveTo\",moveTo:\"moveTo\",moveAlong:\"moveAlong\",visit:\"visit\",glide:\"makeGlider\",makeGlider:\"makeGlider\",intersect:\"makeIntersection\",makeIntersection:\"makeIntersection\",X:\"X\",Y:\"Y\",free:\"free\",setPosition:\"setGliderPosition\",setGliderPosition:\"setGliderPosition\",addConstraint:\"addConstraint\",dist:\"Dist\",onPolygon:\"onPolygon\"}),c.exists(this.element)&&this.addAnchor(t,e),this.isDraggable=!0;},t.extend(t.CoordsElement.prototype,{updateCoords:function(t){return this.needsUpdate?(c.exists(t)||(t=!1),this.type===a.OBJECT_TYPE_GLIDER&&(t?this.updateGliderFromParent():this.updateGlider()),c.evaluate(this.visProp.frozen)||this.updateConstraint(),this.updateTransform(),this):this;},updateGlider:function(){var t,e,s,o,h,l,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O=2*Math.PI,w=!1,T=this.slideObject,N=[];if(this.needsUpdateFromParent=!1,T.elementClass===a.OBJECT_CLASS_CIRCLE)c.evaluate(this.visProp.isgeonext)&&(O=1),C=r.projectPointToCircle(this,T,this.board),_=r.rad([T.center.X()+1,T.center.Y()],T.center,this)/O;else if(T.elementClass===a.OBJECT_CLASS_LINE){if(this.onPolygon){if(e=T.point1.coords.usrCoords,s=T.point2.coords.usrCoords,t=1,o=s[t]-e[t],Math.abs(o)<i.eps&&(t=2,o=s[t]-e[t]),d=r.projectPointToLine(this,T,this.board),u=(d.usrCoords[t]-e[t])/o,l=T.parentPolygon,u<0){for(t=0;t<l.borders.length;t++)if(T===l.borders[t]){T=l.borders[(t-1+l.borders.length)%l.borders.length];break;}}else if(u>1)for(t=0;t<l.borders.length;t++)if(T===l.borders[t]){T=l.borders[(t+1+l.borders.length)%l.borders.length];break;}T.id!==this.slideObject.id&&(this.slideObject=T);}e=T.point1.coords,s=T.point2.coords,o=e.distance(a.COORDS_BY_USER,s),o<i.eps?(C=e,w=!0,_=0):(C=r.projectPointToLine(this,T,this.board),e=e.usrCoords.slice(0),s=s.usrCoords.slice(0),Math.abs(s[0])<i.eps?(t=1,o=s[t],Math.abs(o)<i.eps&&(t=2,o=s[t]),o=(C.usrCoords[t]-e[t])/o,p=o>=0?1:-1,o=Math.abs(o),_=p*o/(o+1)):Math.abs(e[0])<i.eps?(t=1,o=e[t],Math.abs(o)<i.eps&&(t=2,o=e[t]),o=(C.usrCoords[t]-s[t])/o,_=o<0?(1-2*o)/(1-o):1/(o+1)):(t=1,o=s[t]-e[t],Math.abs(o)<i.eps&&(t=2,o=s[t]-e[t]),_=(C.usrCoords[t]-e[t])/o)),P=c.evaluate(this.visProp.snapwidth),c.evaluate(P)>0&&Math.abs(this._smax-this._smin)>=i.eps&&(_=Math.max(Math.min(_,1),0),h=_*(this._smax-this._smin)+this._smin,h=Math.round(h/P)*P,_=(h-this._smin)/(this._smax-this._smin),this.update(!0)),e=T.point1.coords,!c.evaluate(T.visProp.straightfirst)&&Math.abs(e.usrCoords[0])>i.eps&&_<0&&(C=e,w=!0,_=0),s=T.point2.coords,!c.evaluate(T.visProp.straightlast)&&Math.abs(s.usrCoords[0])>i.eps&&_>1&&(C=s,w=!0,_=1);}else if(T.type===a.OBJECT_TYPE_TURTLE)this.updateConstraint(),C=r.projectPointToTurtle(this,T,this.board),_=this.position;else if(T.elementClass===a.OBJECT_CLASS_CURVE){if(T.type===a.OBJECT_TYPE_ARC||T.type===a.OBJECT_TYPE_SECTOR)C=r.projectPointToCircle(this,T,this.board),g=r.rad(T.radiuspoint,T.center,this),f=0,m=r.rad(T.radiuspoint,T.center,T.anglepoint),_=g,P=c.evaluate(T.visProp.selection),(\"minor\"===P&&m>Math.PI||\"major\"===P&&m<Math.PI)&&(f=m,m=2*Math.PI),(g<f||g>m)&&(_=m,(g<f&&g>.5*f||g>m&&g>.5*m+Math.PI)&&(_=f),this.needsUpdateFromParent=!0,this.updateGliderFromParent()),O=m-f,this.visProp.isgeonext&&(O=1),Math.abs(O)>i.eps&&(_/=O);else if(this.updateConstraint(),T.transformations.length>0){for(S=!1,E=T.getTransformationSource(),E[0]&&(S=E[0],N.push(T),N.push(E[1]));E[0]&&c.exists(E[1]._transformationSource);)E=E[1].getTransformationSource(),N.push(E[1]);if(x=this.coords.usrCoords,S){for(t=0;t<N.length;t++)N[t].updateTransformMatrix(),y=i.inverse(N[t].transformMat),x=i.matVecMult(y,x);for(b=new n(a.COORDS_BY_USER,x,this.board).usrCoords,v=r.projectCoordsToCurve(b[1],b[2],this.position||0,N[N.length-1],this.board),x=v[0].usrCoords,t=N.length-2;t>=0;t--)x=i.matVecMult(N[t].transformMat,x);v[0]=new n(a.COORDS_BY_USER,x,this.board);}else T.updateTransformMatrix(),y=i.inverse(T.transformMat),x=i.matVecMult(y,x),b=new n(a.COORDS_BY_USER,x,this.board).usrCoords,v=r.projectCoordsToCurve(b[1],b[2],this.position||0,T,this.board);C=v[0],_=v[1];}else C=r.projectPointToCurve(this,T,this.board),_=this.position;}else c.isPoint(T)&&(C=r.projectPointToPoint(this,T,this.board),_=this.position);this.coords.setCoordinates(a.COORDS_BY_USER,C.usrCoords,w),this.position=_;},updateGliderFromParent:function(){var t,e,s,o,h,l,d,u,p,f,m,g,b=this.slideObject,v=[],y=2*Math.PI;if(!this.needsUpdateFromParent)return void(this.needsUpdateFromParent=!0);if(b.elementClass===a.OBJECT_CLASS_CIRCLE)s=b.Radius(),c.evaluate(this.visProp.isgeonext)&&(y=1),h=[b.center.X()+s*Math.cos(this.position*y),b.center.Y()+s*Math.sin(this.position*y)];else if(b.elementClass===a.OBJECT_CLASS_LINE)t=b.point1.coords.usrCoords,e=b.point2.coords.usrCoords,0===t[0]&&0===t[1]&&0===t[2]||0===e[0]&&0===e[1]&&0===e[2]?h=[0,0,0]:Math.abs(e[0])<i.eps?(o=Math.min(Math.abs(this.position),1-i.eps),o/=1-o,this.position<0&&(o=-o),h=[t[0]+o*e[0],t[1]+o*e[1],t[2]+o*e[2]]):Math.abs(t[0])<i.eps?(o=Math.max(this.position,i.eps),o=Math.min(o,2-i.eps),o=o>1?(o-1)/(o-2):(1-o)/o,h=[e[0]+o*t[0],e[1]+o*t[1],e[2]+o*t[2]]):(o=this.position,h=[t[0]+o*(e[0]-t[0]),t[1]+o*(e[1]-t[1]),t[2]+o*(e[2]-t[2])]);else if(b.type===a.OBJECT_TYPE_TURTLE)this.coords.setCoordinates(a.COORDS_BY_USER,[b.Z(this.position),b.X(this.position),b.Y(this.position)]),this.updateConstraint(),h=r.projectPointToTurtle(this,b,this.board).usrCoords;else if(b.elementClass===a.OBJECT_CLASS_CURVE){for(u=!1,l=b.getTransformationSource(),l[0]&&(u=l[0],v.push(b),v.push(l[1]));l[0]&&c.exists(l[1]._transformationSource);)l=l[1].getTransformationSource(),v.push(l[1]);if(u?this.coords.setCoordinates(a.COORDS_BY_USER,[v[v.length-1].Z(this.position),v[v.length-1].X(this.position),v[v.length-1].Y(this.position)]):this.coords.setCoordinates(a.COORDS_BY_USER,[b.Z(this.position),b.X(this.position),b.Y(this.position)]),b.type===a.OBJECT_TYPE_ARC||b.type===a.OBJECT_TYPE_SECTOR)p=r.rad([b.center.X()+1,b.center.Y()],b.center,b.radiuspoint),f=0,g=r.rad(b.radiuspoint,b.center,b.anglepoint),(\"minor\"===b.visProp.selection&&g>Math.PI||\"major\"===b.visProp.selection&&g<Math.PI)&&(f=g,g=2*Math.PI),y=g-f,c.evaluate(this.visProp.isgeonext)&&(y=1),m=this.position*y,(m<f||m>g)&&(m=g,(m<f&&m>.5*f||m>g&&m>.5*g+Math.PI)&&(m=f),this.position=m,Math.abs(y)>i.eps&&(this.position/=y)),s=b.Radius(),h=[b.center.X()+s*Math.cos(this.position*y+p),b.center.Y()+s*Math.sin(this.position*y+p)];else if(this.updateConstraint(),u)for(h=r.projectPointToCurve(this,v[v.length-1],this.board).usrCoords,d=v.length-2;d>=0;d--)h=new n(a.COORDS_BY_USER,i.matVecMult(v[d].transformMat,h),this.board).usrCoords;else h=r.projectPointToCurve(this,b,this.board).usrCoords;}else c.isPoint(b)&&(h=r.projectPointToPoint(this,b,this.board).usrCoords);this.coords.setCoordinates(a.COORDS_BY_USER,h,!1);},updateRendererGeneric:function(t){return this.needsUpdate?(this.visPropCalc.visible&&(this.isReal=!isNaN(this.coords.usrCoords[1]+this.coords.usrCoords[2]),this.isReal=Math.abs(this.coords.usrCoords[0])>i.eps&&this.isReal,this.isReal||this.updateVisibility(!1)),this.visPropCalc.visible&&this.board.renderer[t](this),this.hasLabel&&this.visPropCalc.visible&&this.label&&this.label.visPropCalc.visible&&this.isReal&&(this.label.update(),this.board.renderer.updateText(this.label)),this.setDisplayRendNode(),this.needsUpdate=!1,this):this;},X:function(){return this.coords.usrCoords[1];},Y:function(){return this.coords.usrCoords[2];},Z:function(){return this.coords.usrCoords[0];},XEval:function(){return this.coords.usrCoords[1];},YEval:function(){return this.coords.usrCoords[2];},ZEval:function(){return this.coords.usrCoords[0];},Dist:function(t){return this.isReal&&t.isReal?this.coords.distance(a.COORDS_BY_USER,t.coords):NaN;},snapToGrid:function(t){return this.handleSnapToGrid(t);},handleSnapToPoints:function(t){var e,i,s,o,n,h,l,d,u=0,p=1/0,f=null,m=c.evaluate(this.visProp.ignoredsnaptopoints),g=!1;if(o=this.board.objectsList.length,m&&(l=m.length),c.evaluate(this.visProp.snaptopoints)||t){for(n=c.evaluate(this.visProp.attractorunit),h=c.evaluate(this.visProp.attractordistance),e=0;e<o;e++){if(i=this.board.objectsList[e],m){for(g=!1,d=0;d<l;d++)if(i===this.board.select(m[d])){g=!0;break;}if(g)continue;}c.isPoint(i)&&i!==this&&i.visPropCalc.visible&&(s=r.projectPointToPoint(this,i,this.board),(u=\"screen\"===n?s.distance(a.COORDS_BY_SCREEN,this.coords):s.distance(a.COORDS_BY_USER,this.coords))<h&&u<p&&(p=u,f=s));}null!==f&&this.coords.setCoordinates(a.COORDS_BY_USER,f.usrCoords);}return this;},snapToPoints:function(t){return this.handleSnapToPoints(t);},handleAttractors:function(){var t,e,i,s,o=0,h=c.evaluate(this.visProp.attractorunit),l=c.evaluate(this.visProp.attractordistance),d=c.evaluate(this.visProp.snatchdistance),u=c.evaluate(this.visProp.attractors),p=u.length;if(0!==l){for(t=0;t<p;t++)if(e=this.board.select(u[t]),c.exists(e)&&e!==this){if(c.isPoint(e)?i=r.projectPointToPoint(this,e,this.board):e.elementClass===a.OBJECT_CLASS_LINE?(s=r.projectCoordsToSegment(this.coords.usrCoords,e.point1.coords.usrCoords,e.point2.coords.usrCoords),i=!c.evaluate(e.visProp.straightfirst)&&s[1]<0?e.point1.coords:!c.evaluate(e.visProp.straightlast)&&s[1]>1?e.point2.coords:new n(a.COORDS_BY_USER,s[0],this.board)):e.elementClass===a.OBJECT_CLASS_CIRCLE?i=r.projectPointToCircle(this,e,this.board):e.elementClass===a.OBJECT_CLASS_CURVE?i=r.projectPointToCurve(this,e,this.board):e.type===a.OBJECT_TYPE_TURTLE&&(i=r.projectPointToTurtle(this,e,this.board)),(o=\"screen\"===h?i.distance(a.COORDS_BY_SCREEN,this.coords):i.distance(a.COORDS_BY_USER,this.coords))<l){this.type===a.OBJECT_TYPE_GLIDER&&this.slideObject===e||this.makeGlider(e);break;}e===this.slideObject&&o>=d&&this.popSlideObject();}return this;}},setPositionDirectly:function(t,e){var r,s,h,l,d=this.coords;if(this.relativeCoords)return s=new n(t,e,this.board),c.evaluate(this.visProp.islabel)?(h=o.subtract(s.scrCoords,d.scrCoords),this.relativeCoords.scrCoords[1]+=h[1],this.relativeCoords.scrCoords[2]+=h[2]):(h=o.subtract(s.usrCoords,d.usrCoords),this.relativeCoords.usrCoords[1]+=h[1],this.relativeCoords.usrCoords[2]+=h[2]),this;for(this.coords.setCoordinates(t,e),this.handleSnapToGrid(),this.handleSnapToPoints(),this.handleAttractors(),r=this.transformations.length-1;r>=0;r--)t===a.COORDS_BY_SCREEN?l=new n(t,e,this.board).usrCoords:(2===e.length&&(e=[1].concat(e)),l=e),this.initialCoords.setCoordinates(a.COORDS_BY_USER,i.matVecMult(i.inverse(this.transformations[r].matrix),l));return this.prepareUpdate().update(),this.board.isSuspendedUpdate&&this.type===a.OBJECT_TYPE_GLIDER&&this.updateGlider(),this;},setPositionByTransform:function(t,e){var i;return e=new n(t,e,this.board),i=this.board.create(\"transform\",e.usrCoords.slice(1),{type:\"translate\"}),this.transformations.length>0&&this.transformations[this.transformations.length-1].isNumericMatrix?this.transformations[this.transformations.length-1].melt(i):this.addTransform(this,i),this.prepareUpdate().update(),this;},setPosition:function(t,e){return this.setPositionDirectly(t,e);},setGliderPosition:function(t){return this.type===a.OBJECT_TYPE_GLIDER&&(this.position=t,this.board.update()),this;},makeGlider:function(e){var i,r,s,o=this.board.select(e),n=!1;if(o.type===a.OBJECT_TYPE_POLYGON){for(i=Number.MAX_VALUE,r=0;r<o.borders.length;r++)(s=t.Math.Geometry.distPointLine(this.coords.usrCoords,o.borders[r].stdform))<i&&(i=s,e=o.borders[r]);o=this.board.select(e),n=!0;}if(!c.exists(o))throw new Error(\"JSXGraph: slide object undefined.\");if(o.type===a.OBJECT_TYPE_TICKS)throw new Error(\"JSXGraph: gliders on ticks are not possible.\");return this.slideObject=this.board.select(e),this.slideObjects.push(this.slideObject),this.addParents(e),this.type=a.OBJECT_TYPE_GLIDER,this.elType=\"glider\",this.visProp.snapwidth=-1,this.slideObject.addChild(this),this.isDraggable=!0,this.onPolygon=n,this.generatePolynomial=function(){return this.slideObject.generatePolynomial(this);},this.updateGlider(),this.needsUpdateFromParent=!0,this.updateGliderFromParent(),this;},popSlideObject:function(){this.slideObjects.length>0&&(this.slideObjects.pop(),this.slideObject.removeChild(this),0===this.slideObjects.length?(this.type=this._org_type,this.type===a.OBJECT_TYPE_POINT?this.elType=\"point\":this.elementClass===a.OBJECT_CLASS_TEXT?this.elType=\"text\":this.type===a.OBJECT_TYPE_IMAGE&&(this.elType=\"image\"),this.slideObject=null):this.slideObject=this.slideObjects[this.slideObjects.length-1]);},free:function(){var t,e;if(this.type!==a.OBJECT_TYPE_GLIDER){if(this.transformations.length=0,this.updateConstraint=function(){return this;},this.isDraggable)return;this.isDraggable=!0,this.elementClass===a.OBJECT_CLASS_POINT&&(this.type=a.OBJECT_TYPE_POINT,this.elType=\"point\"),this.XEval=function(){return this.coords.usrCoords[1];},this.YEval=function(){return this.coords.usrCoords[2];},this.ZEval=function(){return this.coords.usrCoords[0];},this.Xjc=null,this.Yjc=null;}for(t in this.board.objects)this.board.objects.hasOwnProperty(t)&&(e=this.board.objects[t],e.descendants&&(delete e.descendants[this.id],delete e.childElements[this.id],this.hasLabel&&(delete e.descendants[this.label.id],delete e.childElements[this.label.id])));this.ancestors={},this.slideObject=null,this.slideObjects=[],this.elementClass===a.OBJECT_CLASS_POINT?(this.type=a.OBJECT_TYPE_POINT,this.elType=\"point\"):this.elementClass===a.OBJECT_CLASS_TEXT?(this.type=this._org_type,this.elType=\"text\"):this.elementClass===a.OBJECT_CLASS_OTHER&&(this.type=this._org_type,this.elType=\"image\");},addConstraint:function(t){var e,i,r=[],s=[\"X\",\"Y\"];for(this.elementClass===a.OBJECT_CLASS_POINT&&(this.type=a.OBJECT_TYPE_CAS),this.isDraggable=!1,e=0;e<t.length;e++)i=t[e],c.isString(i)?(r[e]=this.board.jc.snippet(i,!0,null,!0),2===t.length&&(this[s[e]+\"jc\"]=t[e])):c.isFunction(i)?r[e]=i:c.isNumber(i)?r[e]=function(t){return function(){return t;};}(i):c.isObject(i)&&c.isFunction(i.Value)&&(r[e]=function(t){return function(){return t.Value();};}(i)),r[e].origin=i;return 1===t.length?this.updateConstraint=function(){var t=r[0]();c.isArray(t)?this.coords.setCoordinates(a.COORDS_BY_USER,t):this.coords=t;}:2===t.length?(this.XEval=r[0],this.YEval=r[1],this.setParents([r[0].origin,r[1].origin]),this.updateConstraint=function(){this.coords.setCoordinates(a.COORDS_BY_USER,[this.XEval(),this.YEval()]);}):(this.ZEval=r[0],this.XEval=r[1],this.YEval=r[2],this.setParents([r[0].origin,r[1].origin,r[2].origin]),this.updateConstraint=function(){this.coords.setCoordinates(a.COORDS_BY_USER,[this.ZEval(),this.XEval(),this.YEval()]);}),this.prepareUpdate().update(),this.board.isSuspendedUpdate||(this.updateVisibility().updateRenderer(),this.hasLabel&&this.label.fullUpdate()),this;},addAnchor:function(t,e){this.relativeCoords=e?new n(a.COORDS_BY_SCREEN,t.slice(0,2),this.board):new n(a.COORDS_BY_USER,t,this.board),this.element.addChild(this),e&&this.addParents(this.element),this.XEval=function(){var t,e,i,r;return c.evaluate(this.visProp.islabel)?(r=c.evaluate(this.visProp.offset),t=parseFloat(r[0]),i=this.element.getLabelAnchor(),e=new n(a.COORDS_BY_SCREEN,[t+this.relativeCoords.scrCoords[1]+i.scrCoords[1],0],this.board),e.usrCoords[1]):(i=this.element.getTextAnchor(),this.relativeCoords.usrCoords[1]+i.usrCoords[1]);},this.YEval=function(){var t,e,i,r;return c.evaluate(this.visProp.islabel)?(r=c.evaluate(this.visProp.offset),t=-parseFloat(r[1]),i=this.element.getLabelAnchor(),e=new n(a.COORDS_BY_SCREEN,[0,t+this.relativeCoords.scrCoords[2]+i.scrCoords[2]],this.board),e.usrCoords[2]):(i=this.element.getTextAnchor(),this.relativeCoords.usrCoords[2]+i.usrCoords[2]);},this.ZEval=c.createFunction(1,this.board,\"\"),this.updateConstraint=function(){this.coords.setCoordinates(a.COORDS_BY_USER,[this.ZEval(),this.XEval(),this.YEval()]);},this.updateConstraint();},updateTransform:function(){var t;if(0===this.transformations.length)return this;for(t=0;t<this.transformations.length;t++)this.transformations[t].update();return this;},addTransform:function(t,e){var i,r=c.isArray(e)?e:[e],s=r.length;for(0===this.transformations.length&&(this.baseElement=t),i=0;i<s;i++)this.transformations.push(r[i]);return this;},startAnimation:function(t,e,i){var r=this;return i=i||250,this.type!==a.OBJECT_TYPE_GLIDER||c.exists(this.intervalCode)||(this.intervalCode=window.setInterval(function(){r._anim(t,e);},i),c.exists(this.intervalCount)||(this.intervalCount=0)),this;},stopAnimation:function(){return c.exists(this.intervalCode)&&(window.clearInterval(this.intervalCode),delete this.intervalCode),this;},moveAlong:function(t,e,i){i=i||{};var r,o,n,h,l,d=[],u=[],p=this.board.attr.animationdelay,f=e/p,m=function(e,i){return function(){return t[e][i];};};if(c.isArray(t)){for(n=t.length,r=0;r<n;r++)c.isPoint(t[r])?u[r]=t[r]:u[r]={elementClass:a.OBJECT_CLASS_POINT,X:m(r,0),Y:m(r,1)};if(0===(e=e||0))return this.setPosition(a.COORDS_BY_USER,[u[u.length-1].X(),u[u.length-1].Y()]),this.board.update(this);if(!c.exists(i.interpolate)||i.interpolate)for(o=s.Neville(u),r=0;r<f;r++)d[r]=[],d[r][0]=o[0]((f-r)/f*o[3]()),d[r][1]=o[1]((f-r)/f*o[3]());else{for(n=t.length-1,r=0;r<f;++r)h=Math.floor(r/f*n),l=r/f*n-h,d[r]=[],d[r][0]=(1-l)*u[h].X()+l*u[h+1].X(),d[r][1]=(1-l)*u[h].Y()+l*u[h+1].Y();d.push([u[n].X(),u[n].Y()]),d.reverse();}this.animationPath=d;}else c.isFunction(t)&&(this.animationPath=t,this.animationStart=new Date().getTime());return this.animationCallback=i.callback,this.board.addAnimation(this),this;},moveTo:function(t,e,r){r=r||{},t=new n(a.COORDS_BY_USER,t,this.board);var s,o=this.board.attr.animationdelay,h=Math.ceil(e/o),l=[],d=this.coords.usrCoords[1],u=this.coords.usrCoords[2],p=t.usrCoords[1]-d,f=t.usrCoords[2]-u,m=function(t){return r.effect&&\"<>\"===r.effect?Math.pow(Math.sin(t/h*Math.PI/2),2):t/h;};if(!c.exists(e)||0===e||Math.abs(t.usrCoords[0]-this.coords.usrCoords[0])>i.eps)return this.setPosition(a.COORDS_BY_USER,t.usrCoords),this.board.update(this);if(!c.exists(r.callback)&&Math.abs(p)<i.eps&&Math.abs(f)<i.eps)return this;for(s=h;s>=0;s--)l[h-s]=[t.usrCoords[0],d+p*m(s),u+f*m(s)];return this.animationPath=l,this.animationCallback=r.callback,this.board.addAnimation(this),this;},visit:function(t,e,i){t=new n(a.COORDS_BY_USER,t,this.board);var r,s,o,h=this.board.attr.animationdelay,l=[],d=this.coords.usrCoords[1],u=this.coords.usrCoords[2],p=t.usrCoords[1]-d,f=t.usrCoords[2]-u,m=function(t){var e=t<o/2?2*t/o:2*(o-t)/o;return i.effect&&\"<>\"===i.effect?Math.pow(Math.sin(e*Math.PI/2),2):e;};for(c.isNumber(i)?i={repeat:i}:(i=i||{},c.exists(i.repeat)||(i.repeat=1)),o=Math.ceil(e/(h*i.repeat)),s=0;s<i.repeat;s++)for(r=o;r>=0;r--)l[s*(o+1)+o-r]=[t.usrCoords[0],d+p*m(r),u+f*m(r)];return this.animationPath=l,this.animationCallback=i.callback,this.board.addAnimation(this),this;},_anim:function(t,e){var i,s,o,n,h,l,c,d;return this.intervalCount+=1,this.intervalCount>e&&(this.intervalCount=0),this.slideObject.elementClass===a.OBJECT_CLASS_LINE?(c=this.slideObject.point1.coords.scrCoords,d=this.slideObject.point2.coords.scrCoords,i=Math.round((d[1]-c[1])*this.intervalCount/e),s=Math.round((d[2]-c[2])*this.intervalCount/e),t>0?n=this.slideObject.point1:(n=this.slideObject.point2,i*=-1,s*=-1),this.coords.setCoordinates(a.COORDS_BY_SCREEN,[n.coords.scrCoords[1]+i,n.coords.scrCoords[2]+s])):this.slideObject.elementClass===a.OBJECT_CLASS_CURVE?(h=t>0?Math.round(this.intervalCount/e*this.board.canvasWidth):Math.round((e-this.intervalCount)/e*this.board.canvasWidth),this.coords.setCoordinates(a.COORDS_BY_SCREEN,[h,0]),this.coords=r.projectPointToCurve(this,this.slideObject,this.board)):this.slideObject.elementClass===a.OBJECT_CLASS_CIRCLE&&(o=2*Math.PI,o*=t<0?this.intervalCount/e:e-this.intervalCount,l=this.slideObject.Radius(),this.coords.setCoordinates(a.COORDS_BY_USER,[this.slideObject.center.coords.usrCoords[1]+l*Math.cos(o),this.slideObject.center.coords.usrCoords[2]+l*Math.sin(o)])),this.board.update(this),this;},getTextAnchor:function(){return this.coords;},getLabelAnchor:function(){return this.coords;},getParents:function(){var t=[this.Z(),this.X(),this.Y()];return 0!==this.parents.length&&(t=this.parents),this.type===a.OBJECT_TYPE_GLIDER&&(t=[this.X(),this.Y(),this.slideObject.id]),t;}}),t.CoordsElement.create=function(t,e,i,r,s,o){var n,a,h=!1;for(a=0;a<i.length;a++)(c.isFunction(i[a])||c.isString(i[a]))&&(h=!0);if(h)n=new t(e,[0,0],r,s,o),n.addConstraint(i);else if(c.isNumber(i[0])&&c.isNumber(i[1]))n=new t(e,i,r,s,o),c.exists(r.slideobject)?n.makeGlider(r.slideobject):n.baseElement=n,n.isDraggable=!0;else{if(!c.isObject(i[0])||!c.isTransformationOrArray(i[1]))return!1;n=new t(e,[0,0],r,s,o),n.addTransform(i[0],i[1]),n.isDraggable=!1;}return n.handleSnapToGrid(),n.handleSnapToPoints(),n.handleAttractors(),n.addParents(i),n;},t.CoordsElement;}),define(\"base/text\",[\"jxg\",\"base/constants\",\"base/element\",\"parser/geonext\",\"utils/env\",\"utils/type\",\"math/math\",\"math/geometry\",\"base/coordselement\"],function(t,e,i,r,s,o,n,a,h){\"use strict\";var l={HTMLSliderInputEventHandler:function(){this._val=parseFloat(this.rendNodeRange.value),this.rendNodeOut.value=this.rendNodeRange.value,this.board.update();}};return t.Text=function(t,i,r,s){this.constructor(t,r,e.OBJECT_TYPE_TEXT,e.OBJECT_CLASS_TEXT),this.element=this.board.select(r.anchor),this.coordsConstructor(i,o.evaluate(this.visProp.islabel)),this.content=\"\",this.plaintext=\"\",this.plaintextOld=null,this.orgText=\"\",this.needsSizeUpdate=!1,this.hiddenByParent=!1,this.size=[1,1],this.id=this.board.setId(this,\"T\"),this._setUpdateText(s),this.updateText(),this.board.renderer.drawText(this),this.board.finalizeAdding(this),o.isString(this.content)&&this.notifyParents(this.content),this.elType=\"text\",this.methodMap=o.deepCopy(this.methodMap,{setText:\"setTextJessieCode\",move:\"setCoords\"});},t.Text.prototype=new i(),o.copyPrototypeMethods(t.Text,h,\"coordsConstructor\"),t.extend(t.Text.prototype,{hasPoint:function(t,e){var i,r,s,a,h,l,c,d;return o.isObject(o.evaluate(this.visProp.precision))?(c=this.board._inputDevice,d=o.evaluate(this.visProp.precision[c])):d=this.board.options.precision.hasPoint,this.transformations.length>0&&(i=n.matVecMult(n.inverse(this.board.renderer.joinTransforms(this,this.transformations)),[1,t,e]),t=i[1],e=i[2]),h=this.getAnchorX(),i=\"right\"===h?this.coords.scrCoords[1]-this.size[0]:\"middle\"===h?this.coords.scrCoords[1]-.5*this.size[0]:this.coords.scrCoords[1],r=i+this.size[0],l=this.getAnchorY(),a=\"top\"===l?this.coords.scrCoords[2]+this.size[1]:\"middle\"===l?this.coords.scrCoords[2]+.5*this.size[1]:this.coords.scrCoords[2],s=a-this.size[1],\"all\"===o.evaluate(this.visProp.dragarea)?t>=i-d&&t<r+d&&e>=s-d&&e<=a+d:e>=s-d&&e<=a+d&&(t>=i-d&&t<=i+2*d||t>=r-2*d&&t<=r+d);},_setUpdateText:function(t){var e,i,r=o.evaluate(this.visProp.parse),s=o.evaluate(this.visProp.usemathjax),n=o.evaluate(this.visProp.usekatex);this.orgText=t,o.isFunction(t)?this.updateText=function(){i=t().toString(),this.plaintext=!r||s||n?i:this.replaceSub(this.replaceSup(this.convertGeonext2CSS(i)));}:o.isString(t)&&!r?this.updateText=function(){this.plaintext=t;}:(o.isNumber(t)?this.content=o.toFixed(t,o.evaluate(this.visProp.digits)):o.evaluate(this.visProp.useasciimathml)?this.content=\"'`\"+t+\"`'\":this.content=s||n?\"'\"+t+\"'\":this.generateTerm(t,!0,!0),e=this.board.jc.snippet(this.content,!0,\"\",!1),this.updateText=function(){this.plaintext=e();});},_setText:function(t){return this._setUpdateText(t),this.updateText(),this.fullUpdate(),this.board.infobox&&this.id===this.board.infobox.id||this.updateSize(),this;},setTextJessieCode:function(t){var e;return this.visProp.castext=t,e=o.isFunction(t)?function(){return o.sanitizeHTML(t());}:o.isNumber(t)?t:o.sanitizeHTML(t),this._setText(e);},setText:function(t){return this._setText(t);},updateSize:function(){var t,e,i,r=o.evaluate(this.visProp.display);return s.isBrowser&&\"no\"!==this.board.renderer.type?(i=this.rendNode,\"html\"===r||\"vml\"===this.board.renderer.type?o.exists(i.offsetWidth)?(e=this,window.setTimeout(function(){e.size=[i.offsetWidth,i.offsetHeight],e.needsUpdate=!0,e.updateRenderer();},0)):this.size=this.crudeSizeEstimate():\"internal\"===r&&(\"svg\"===this.board.renderer.type?(e=this,window.setTimeout(function(){try{t=i.getBBox(),e.size=[t.width,t.height],e.needsUpdate=!0,e.updateRenderer();}catch(t){}},0)):\"canvas\"===this.board.renderer.type&&(this.size=this.crudeSizeEstimate())),this):this;},crudeSizeEstimate:function(){var t=parseFloat(o.evaluate(this.visProp.fontsize));return[t*this.plaintext.length*.45,.9*t];},utf8_decode:function(t){return t.replace(/&#x(\\w+);/g,function(t,e){return String.fromCharCode(parseInt(e,16));});},replaceSub:function(t){if(!t.indexOf)return t;for(var e,i=t.indexOf(\"_{\");i>=0;)t=t.substr(0,i)+t.substr(i).replace(/_\\{/,\"<sub>\"),e=t.substr(i).indexOf(\"}\"),e>=0&&(t=t.substr(0,e)+t.substr(e).replace(/\\}/,\"</sub>\")),i=t.indexOf(\"_{\");for(i=t.indexOf(\"_\");i>=0;)t=t.substr(0,i)+t.substr(i).replace(/_(.?)/,\"<sub>$1</sub>\"),i=t.indexOf(\"_\");return t;},replaceSup:function(t){if(!t.indexOf)return t;for(var e,i=t.indexOf(\"^{\");i>=0;)t=t.substr(0,i)+t.substr(i).replace(/\\^\\{/,\"<sup>\"),e=t.substr(i).indexOf(\"}\"),e>=0&&(t=t.substr(0,e)+t.substr(e).replace(/\\}/,\"</sup>\")),i=t.indexOf(\"^{\");for(i=t.indexOf(\"^\");i>=0;)t=t.substr(0,i)+t.substr(i).replace(/\\^(.?)/,\"<sup>$1</sup>\"),i=t.indexOf(\"^\");return t;},getSize:function(){return this.size;},setCoords:function(t,i){var r,s,n;return o.isArray(t)&&t.length>1&&(i=t[1],t=t[0]),o.evaluate(this.visProp.islabel)&&o.exists(this.element)?(r=this.element.getLabelAnchor(),s=(t-r.usrCoords[1])*this.board.unitX,n=-(i-r.usrCoords[2])*this.board.unitY,this.relativeCoords.setCoordinates(e.COORDS_BY_SCREEN,[s,n])):this.coords.setCoordinates(e.COORDS_BY_USER,[t,i]),this.fullUpdate(),this;},update:function(t){return this.needsUpdate?(this.updateCoords(t),this.updateText(),\"internal\"===o.evaluate(this.visProp.display)&&o.isString(this.plaintext)&&(this.plaintext=this.utf8_decode(this.plaintext)),this.checkForSizeUpdate(),this.needsSizeUpdate&&this.updateSize(),this):this;},checkForSizeUpdate:function(){this.board.infobox&&this.id===this.board.infobox.id?this.needsSizeUpdate=!1:(this.needsSizeUpdate=this.plaintextOld!==this.plaintext,this.needsSizeUpdate&&(this.plaintextOld=this.plaintext));},updateRenderer:function(){return o.evaluate(this.visProp.autoposition)&&this.setAutoPosition().updateConstraint(),this.updateRendererGeneric(\"updateText\");},expandShortMath:function(t){var e=/([\\)0-9\\.])\\s*([\\(a-zA-Z_])/g;return t.replace(e,\"$1*$2\");},generateTerm:function(t,e,i){var s,n,a,h,l='\"\"';if(t=t||\"\",t=t.replace(/\\r/g,\"\"),t=t.replace(/\\n/g,\"\"),t=t.replace(/\"/g,\"'\"),t=t.replace(/'/g,\"\\\\'\"),t=t.replace(/&amp;arc;/g,\"&ang;\"),t=t.replace(/<arc\\s*\\/>/g,\"&ang;\"),t=t.replace(/&lt;arc\\s*\\/&gt;/g,\"&ang;\"),t=t.replace(/&lt;sqrt\\s*\\/&gt;/g,\"&radic;\"),t=t.replace(/&lt;value&gt;/g,\"<value>\"),t=t.replace(/&lt;\\/value&gt;/g,\"</value>\"),a=t.indexOf(\"<value>\"),h=t.indexOf(\"</value>\"),a>=0)for(;a>=0;)l+=' + \"'+this.replaceSub(this.replaceSup(t.slice(0,a)))+'\"',n=t.slice(a+7,h),n=n.replace(/\\s+/g,\"\"),!0===e&&(n=this.expandShortMath(n)),s=i?n:r.geonext2JS(n,this.board),s=s.replace(/\\\\\"/g,\"'\"),s=s.replace(/\\\\'/g,\"'\"),s.indexOf(\"toFixed\")<0&&o.isNumber(o.bind(this.board.jc.snippet(s,!0,\"\",!1),this)())?l+=\"+(\"+s+\").toFixed(\"+o.evaluate(this.visProp.digits)+\")\":l+=\"+(\"+s+\")\",t=t.slice(h+8),a=t.indexOf(\"<value>\"),h=t.indexOf(\"</value>\");return l+=' + \"'+this.replaceSub(this.replaceSup(t))+'\"',l=this.convertGeonext2CSS(l),l=l.replace(/&amp;/g,\"&\"),l=l.replace(/\"/g,\"'\");},convertGeonext2CSS:function(t){return o.isString(t)&&(t=t.replace(/<overline>/g,\"<span style=text-decoration:overline>\"),t=t.replace(/&lt;overline&gt;/g,\"<span style=text-decoration:overline>\"),t=t.replace(/<\\/overline>/g,\"</span>\"),t=t.replace(/&lt;\\/overline&gt;/g,\"</span>\"),t=t.replace(/<arrow>/g,\"<span style=text-decoration:overline>\"),t=t.replace(/&lt;arrow&gt;/g,\"<span style=text-decoration:overline>\"),t=t.replace(/<\\/arrow>/g,\"</span>\"),t=t.replace(/&lt;\\/arrow&gt;/g,\"</span>\")),t;},notifyParents:function(t){var e,i=null;t=t.replace(/&lt;value&gt;/g,\"<value>\"),t=t.replace(/&lt;\\/value&gt;/g,\"</value>\");do{e=/<value>([\\w\\s\\*\\/\\^\\-\\+\\(\\)\\[\\],<>=!]+)<\\/value>/,null!==(i=e.exec(t))&&(r.findDependencies(this,i[1],this.board),t=t.substr(i.index),t=t.replace(e,\"\"));}while(null!==i);return this;},getParents:function(){var t;return t=void 0!==this.relativeCoords?[this.relativeCoords.usrCoords[1],this.relativeCoords.usrCoords[2],this.orgText]:[this.Z(),this.X(),this.Y(),this.orgText],0!==this.parents.length&&(t=this.parents),t;},bounds:function(){var t=this.coords.usrCoords;return o.evaluate(this.visProp.islabel)||0===this.board.unitY||0===this.board.unitX?[0,0,0,0]:[t[1],t[2]+this.size[1]/this.board.unitY,t[1]+this.size[0]/this.board.unitX,t[2]];},getAnchorX:function(){var t=o.evaluate(this.visProp.anchorx);if(\"auto\"===t)switch(this.visProp.position){case\"top\":case\"bot\":return\"middle\";case\"rt\":case\"lrt\":case\"urt\":return\"left\";case\"lft\":case\"llft\":case\"ulft\":default:return\"right\";}return t;},getAnchorY:function(){var t=o.evaluate(this.visProp.anchory);if(\"auto\"===t)switch(this.visProp.position){case\"top\":case\"ulft\":case\"urt\":return\"bottom\";case\"bot\":case\"lrt\":case\"llft\":return\"top\";case\"rt\":case\"lft\":default:return\"middle\";}return t;},getNumberofConflicts:function(t,e,i,r){var s,o,n,a,h=0;for(a=this.board.options.precision.hasPoint,this.board.options.precision.hasPoint=.25*(i+r),s=0,n=this.board.objectsList.length;s<n;s++)o=this.board.objectsList[s],o.visPropCalc.visible&&\"axis\"!==o.elType&&\"ticks\"!==o.elType&&o!==this.board.infobox&&o!==this&&o.hasPoint(t,e)&&h++;return this.board.options.precision.hasPoint=a,h;},setAutoPosition:function(){var t,e,i,r,s,n,a,h,l,c,d,u,p,f,m,g,b,v=this.size[0],y=this.size[1],C={conflicts:1/0,angle:0,r:0},_=2*Math.PI/12;if(this===this.board.infobox||!this.visPropCalc.visible||!o.evaluate(this.visProp.islabel)||!this.element)return this;if(o.evaluate(this.visProp.anchorx),o.evaluate(this.visProp.anchory),d=o.evaluate(this.visProp.offset),s=this.element.getLabelAnchor(),i=s.scrCoords[1],r=s.scrCoords[2],f=d[0],m=d[1],0===(c=this.getNumberofConflicts(i+f,r-m,v,y)))return this;for(u=12,h=28,l=.2*u,n=Math.atan2(m,f),C.conflicts=c,C.angle=n,C.r=u;C.conflicts>0&&u<h;){for(p=1,a=n+_;p<12&&C.conflicts>0&&(g=Math.cos(a),b=Math.sin(a),t=i+u*g,e=r-u*b,c=this.getNumberofConflicts(t,e,v,y),c<C.conflicts&&(C.conflicts=c,C.angle=a,C.r=u),0!==C.conflicts);p++)a+=_;u+=l;}return u=C.r,g=Math.cos(C.angle),b=Math.sin(C.angle),this.visProp.offset=[u*g,u*b],this.visProp.anchorx=g<-.2?\"right\":g>.2?\"left\":\"middle\",this;}}),t.createText=function(e,i,r){var s,n=o.copyAttributes(r,e.options,\"text\"),a=i.slice(0,-1),l=i[i.length-1];if(n.anchor=n.parent||n.anchor,!(s=h.create(t.Text,e,a,n,l)))throw new Error(\"JSXGraph: Can't create text with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [x,y], [z,x,y], [element,transformation]\");return 0!==n.rotate&&\"internal\"===n.display&&s.addRotation(n.rotate),s;},t.registerElement(\"text\",t.createText),t.createHTMLSlider=function(e,i,r){var n,a,h=o.copyAttributes(r,e.options,\"htmlslider\");if(2!==i.length||2!==i[0].length||3!==i[1].length)throw new Error(\"JSXGraph: Can't create htmlslider with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parents are: [[x,y], [min, start, max]]\");h.anchor=h.parent||h.anchor,h.fixed=h.fixed||!0,a=[i[0][0],i[0][1],'<form style=\"display:inline\"><input type=\"range\" /><span></span><input type=\"text\" /></form>'],n=t.createText(e,a,h),n.type=o.OBJECT_TYPE_HTMLSLIDER,n.rendNodeForm=n.rendNode.childNodes[0],n.rendNodeRange=n.rendNodeForm.childNodes[0],n.rendNodeRange.min=i[1][0],n.rendNodeRange.max=i[1][2],n.rendNodeRange.step=h.step,n.rendNodeRange.value=i[1][1],n.rendNodeLabel=n.rendNodeForm.childNodes[1],n.rendNodeLabel.id=n.rendNode.id+\"_label\",h.withlabel&&(n.rendNodeLabel.innerHTML=n.name+\"=\"),n.rendNodeOut=n.rendNodeForm.childNodes[2],n.rendNodeOut.value=i[1][1];try{n.rendNodeForm.id=n.rendNode.id+\"_form\",n.rendNodeRange.id=n.rendNode.id+\"_range\",n.rendNodeOut.id=n.rendNode.id+\"_out\";}catch(e){t.debug(e);}return n.rendNodeRange.style.width=h.widthrange+\"px\",n.rendNodeRange.style.verticalAlign=\"middle\",n.rendNodeOut.style.width=h.widthout+\"px\",n._val=i[1][1],t.supportsVML()?s.addEvent(n.rendNodeForm,\"change\",l.HTMLSliderInputEventHandler,n):s.addEvent(n.rendNodeForm,\"input\",l.HTMLSliderInputEventHandler,n),n.Value=function(){return this._val;},n;},t.registerElement(\"htmlslider\",t.createHTMLSlider),{Text:t.Text,createText:t.createText,createHTMLSlider:t.createHTMLSlider};}),define(\"utils/uuid\",[\"jxg\"],function(t){\"use strict\";var e=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",i=e.split(\"\");return t.Util=t.Util||{},t.Util.genUUID=function(t){var e,r,s=[],o=0;for(t=t||\"\",\"\"!==t&&\"-\"!==t.substr(t.length-1)&&(t+=\"-\"),r=0;r<36;r++)8===r||13===r||18===r||23===r?s[r]=\"-\":14===r?s[r]=\"4\":(o<=2&&(o=33554432+16777216*Math.random()|0),e=15&o,o>>=4,s[r]=i[19===r?3&e|8:e]);return t+s.join(\"\");},t.Util;}),define(\"parser/jessiecode\",[\"jxg\",\"base/constants\",\"base/text\",\"math/math\",\"math/ia\",\"math/geometry\",\"math/statistics\",\"utils/type\",\"utils/uuid\",\"utils/env\"],function(JXG,Const,Text,Mat,Interval,Geometry,Statistics,Type,UUID,Env){Object.create||(Object.create=function(t,e){function i(){}if(\"object\"!=typeof t&&\"function\"!=typeof t)throw new TypeError(\"Object prototype may only be an Object: \"+t);if(null===t)throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\");if(void 0!==e)throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");return i.prototype=t,new i();});var priv={modules:{math:Mat,\"math/geometry\":Geometry,\"math/statistics\":Statistics,\"math/numerics\":Mat.Numerics}};JXG.JessieCode=function(t,e){this.scope={id:0,hasChild:!0,args:[],locals:{},context:null,previous:null},this.scopes=[],this.scopes.push(this.scope),this.dpstack=[[]],this.pscope=0,this.propstack=[{}],this.propscope=0,this.lhs=[],this.isLHS=!1,this.warnLog=\"jcwarn\",this.$log=[],this.builtIn=this.defineBuiltIn(),this.board=null,this.lineToElement={},this.parCurLine=1,this.parCurColumn=0,this.line=1,this.col=1,JXG.CA&&(this.CA=new JXG.CA(this.node,this.createNode,this)),this.code=\"\",\"string\"==typeof t&&this.parse(t,e);},JXG.extend(JXG.JessieCode.prototype,{node:function(t,e,i){return{type:t,value:e,children:i};},createNode:function(t,e,i){var r,s=this.node(t,e,[]);for(r=2;r<arguments.length;r++)s.children.push(arguments[r]);return\"node_const\"==s.type&&Type.isNumber(s.value)&&(s.isMath=!0),s.line=this.parCurLine,s.col=this.parCurColumn,s;},pushScope:function(t){var e={args:t,locals:{},context:null,previous:this.scope};return this.scope.hasChild=!0,this.scope=e,e.id=this.scopes.push(e)-1,e;},popScope:function(){var t=this.scope.previous;return this.scope=null!==t?t:this.scope,this.scope;},getElementById:function(t){return this.board.objects[t];},log:function(){this.$log.push(arguments),\"object\"==typeof console&&console.log&&console.log.apply(console,arguments);},creator:function(){var t,e={};return t=function(t){var i;return\"function\"==typeof e[this.board.id+t]?i=e[this.board.id+t]:(i=function(e){return function(i,r){var s;return s=Type.exists(r)?r:{name:0!==e.lhs[e.scope]?e.lhs[e.scope]:\"\"},e.board.create(t,i,s);};}(this),i.creator=!0,e[this.board.id+t]=i),i;},t.clearCache=function(){e={};},t;}(),letvar:function(t,e){this.builtIn[t]&&this._warn('\"'+t+'\" is a predefined value.'),this.scope.locals[t]=e;},isLocalVariable:function(t){for(var e=this.scope;null!==e;){if(Type.exists(e.locals[t]))return e;e=e.previous;}return null;},isParameter:function(t){for(var e=this.scope;null!==e;){if(Type.indexOf(e.args,t)>-1)return e;e=e.previous;}return null;},isCreator:function(t){return!!JXG.elements[t];},isMathMethod:function(t){return\"E\"!==t&&!!Math[t];},isBuiltIn:function(t){return!!this.builtIn[t];},getvar:function(t,e){var i;return e=Type.def(e,!1),i=this.isLocalVariable(t),null!==i?i.locals[t]:this.isCreator(t)?this.creator(t):this.isBuiltIn(t)?this.builtIn[t]:this.isMathMethod(t)?Math[t]:e||(i=this.board.select(t))===t?void 0:i;},resolve:function(t){for(var e=this.scope;null!==e;){if(Type.exists(e.locals[t]))return e.locals[t];e=e.previous;}},getvarJS:function(t,e,i){var r,s=\"\";return e=Type.def(e,!1),i=Type.def(i,!1),null!==this.isParameter(t)?t:null===this.isLocalVariable(t)||i?this.isCreator(t)?\"(function () { var a = Array.prototype.slice.call(arguments, 0), props = \"+(i?\"a.pop()\":\"{}\")+\"; return $jc$.board.create.apply($jc$.board, ['\"+t+\"'].concat([a, props])); })\":(i&&this._error(\"Syntax error (attribute values are allowed with element creators only)\"),this.isBuiltIn(t)?(s=this.builtIn[t].src||this.builtIn[t],Type.isNumber(s)?s:s.match(/board\\.select/)?s:(t=s.split(\".\").pop(),Type.exists(this.board.mathLib)&&(r=new RegExp(\"^Math.\"+t),null!==r.exec(s))?s.replace(r,\"$jc$.board.mathLib.\"+t):Type.exists(this.board.mathLibJXG)?(r=new RegExp(\"^JXG.Math.\"),null!==r.exec(s)?s.replace(r,\"$jc$.board.mathLibJXG.\"):s):s)):this.isMathMethod(t)?\"$jc$.board.mathLib.\"+t:e?\"\":(Type.isId(this.board,t)?(s=\"$jc$.board.objects['\"+t+\"']\",\"slider\"===this.board.objects[t].elType&&(s+=\".Value()\")):Type.isName(this.board,t)?(s=\"$jc$.board.elementsByName['\"+t+\"']\",\"slider\"===this.board.elementsByName[t].elType&&(s+=\".Value()\")):Type.isGroup(this.board,t)&&(s=\"$jc$.board.groups['\"+t+\"']\"),s)):\"$jc$.resolve('\"+t+\"')\";},makeMap:function(t){return t.isMap=!0,t;},functionCodeJS:function(t){var e=t.children[0].join(\", \"),i=\"\",r=\"\";return\"op_map\"===t.value&&(i=\"{ return  \",r=\" }\"),\"function (\"+e+\") {\\nvar $oldscope$ = $jc$.scope;\\n$jc$.scope = $jc$.scopes[\"+this.scope.id+\"];\\nvar r = (function () \"+i+this.compile(t.children[1],!0)+r+\")();\\n$jc$.scope = $oldscope$;\\nreturn r;\\n}\";},defineFunction:function(node){var fun,i,list=node.children[0],scope=this.pushScope(list);if(this.board.options.jc.compile){for(this.isLHS=!1,i=0;i<list.length;i++)scope.locals[list[i]]=list[i];this.replaceNames(node.children[1]),fun=function($jc$){var fun,str=\"var f = \"+$jc$.functionCodeJS(node)+\"; f;\";try{return fun=eval(str);}catch(t){return $jc$._warn(\"error compiling function\\n\\n\"+str+\"\\n\\n\"+t.toString()),function(){};}}(this),this.popScope();}else fun=function(t,e,i){return function(){var r,s;for(s=e.scope,e.scope=e.scopes[i],r=0;r<t.length;r++)e.scope.locals[t[r]]=arguments[r];return r=e.execute(node.children[1]),e.scope=s,r;};}(list,this,scope.id);return fun.node=node,fun.scope=scope,fun.toJS=fun.toString,fun.toString=function(t){return function(){return t.compile(t.replaceIDs(Type.deepCopy(node)));};}(this),fun.deps={},this.collectDependencies(node.children[1],fun.deps),fun;},mergeAttributes:function(t){var e,i={};for(e=0;e<arguments.length;e++)i=Type.deepCopy(i,arguments[e],!0);return i;},setProp:function(t,e,i){var r,s,o={};t.elementClass!==Const.OBJECT_CLASS_POINT||\"X\"!==e&&\"Y\"!==e?t.elementClass!==Const.OBJECT_CLASS_TEXT||\"X\"!==e&&\"Y\"!==e?t.type&&t.elementClass&&t.visProp?Type.exists(t[t.methodMap[e]])&&\"function\"!=typeof t[t.methodMap[e]]?t[t.methodMap[e]]=i:(o[e]=i,t.setAttribute(o)):t[e]=i:(\"number\"==typeof i?t[e]=function(){return i;}:\"function\"==typeof i?(t.isDraggable=!1,t[e]=i):\"string\"==typeof i&&(t.isDraggable=!1,t[e]=Type.createFunction(i,this.board,null,!0),t[e+\"jc\"]=i),t[e].origin=i,this.board.update()):(e=e.toLowerCase(),t.isDraggable&&\"number\"==typeof i?(r=\"x\"===e?i:t.X(),s=\"y\"===e?i:t.Y(),t.setPosition(Const.COORDS_BY_USER,[r,s])):!t.isDraggable||\"function\"!=typeof i&&\"string\"!=typeof i?t.isDraggable||(r=\"x\"===e?i:t.XEval.origin,s=\"y\"===e?i:t.YEval.origin,t.addConstraint([r,s])):(r=\"x\"===e?i:t.coords.usrCoords[1],s=\"y\"===e?i:t.coords.usrCoords[2],t.addConstraint([r,s])),this.board.update());},_genericParse:function(t,e,i,r){var s,o,n,a,h=t.replace(/\\r\\n/g,\"\\n\").split(\"\\n\"),l=[];r||(this.code+=t+\"\\n\"),Text&&(o=Text.Text.prototype.setText,Text.Text.prototype.setText=Text.Text.prototype.setTextJessieCode);try{for(Type.exists(i)||(i=!1),s=0;s<h.length;s++)i&&(h[s]=JXG.GeonextParser.geonext2JS(h[s],this.board)),l.push(h[s]);switch(t=l.join(\"\\n\"),n=parser.parse(t),this.CA&&(n=this.CA.expandDerivatives(n,null,n),n=this.CA.removeTrivialNodes(n)),e){case\"parse\":a=this.execute(n);break;case\"manipulate\":a=this.compile(n);break;case\"getAst\":a=n;break;default:a=!1;}}catch(t){throw t;}finally{Text&&(Text.Text.prototype.setText=o);}return a;},parse:function(t,e,i){return this._genericParse(t,\"parse\",e,i);},manipulate:function(t,e,i){return this._genericParse(t,\"manipulate\",e,i);},getAST:function(t,e,i){return this._genericParse(t,\"getAst\",e,i);},snippet:function(t,e,i,r){var s;return e=Type.def(e,!0),i=Type.def(i,\"\"),r=Type.def(r,!1),s=(e?\" function (\"+i+\") { return \":\"\")+t+(e?\"; }\":\"\")+\";\",this.parse(s,r,!0);},replaceIDs:function(t){var e,i;if(t.replaced&&(i=this.board.objects[t.children[1][0].value],Type.exists(i)&&\"\"!==i.name&&(t.type=\"node_var\",t.value=i.name,t.children.length=0,delete t.replaced)),t.children)for(e=t.children.length;e>0;e--)Type.exists(t.children[e-1])&&(t.children[e-1]=this.replaceIDs(t.children[e-1]));return t;},replaceNames:function(t){var e,i;if(i=t.value,\"node_op\"===t.type&&\"op_lhs\"===i&&1===t.children.length?this.isLHS=!0:\"node_var\"===t.type&&(this.isLHS?this.letvar(i,!0):!Type.exists(this.getvar(i,!0))&&Type.exists(this.board.elementsByName[i])&&(t=this.createReplacementNode(t))),t.children)for(e=t.children.length;e>0;e--)Type.exists(t.children[e-1])&&(t.children[e-1]=this.replaceNames(t.children[e-1]));return\"node_op\"===t.type&&\"op_lhs\"===t.value&&1===t.children.length&&(this.isLHS=!1),t;},createReplacementNode:function(t){var e=t.value,i=this.board.elementsByName[e];return t=this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"$\"),[this.createNode(\"node_str\",i.id)]),t.replaced=!0,t;},collectDependencies:function(t,e){var i,r,s,o;if(Type.isArray(t))for(o=t.length,i=0;i<o;i++)this.collectDependencies(t[i],e);else if(r=t.value,\"node_var\"===t.type&&(s=this.getvar(r))&&s.visProp&&s.type&&s.elementClass&&s.id&&(e[s.id]=s),\"node_op\"===t.type&&\"op_execfun\"===t.value&&t.children.length>1&&\"$\"===t.children[0].value&&t.children[1].length>0&&(s=t.children[1][0].value,e[s]=this.board.objects[s]),t.children)for(i=t.children.length;i>0;i--)Type.exists(t.children[i-1])&&this.collectDependencies(t.children[i-1],e);},resolveProperty:function(t,e,i){return i=Type.def(i,!1),t&&t.methodMap&&(Type.exists(t.subs)&&Type.exists(t.subs[e])?t=t.subs:Type.exists(t.methodMap[e])?e=t.methodMap[e]:(t=t.visProp,e=e.toLowerCase())),Type.isFunction(t)&&this._error(\"Accessing function properties is not allowed.\"),Type.exists(t)||this._error(t+\" is not an object\"),Type.exists(t[e])||this._error(\"unknown property \"+e),i&&\"function\"==typeof t[e]?function(){return t[e].apply(t,arguments);}:t[e];},getLHS:function(t){var e;if(\"node_var\"===t.type)e={o:this.scope.locals,what:t.value};else if(\"node_op\"===t.type&&\"op_property\"===t.value)e={o:this.execute(t.children[0]),what:t.children[1]};else{if(\"node_op\"!==t.type||\"op_extvalue\"!==t.value)throw new Error(\"Syntax error: Invalid left-hand side of assignment.\");e={o:this.execute(t.children[0]),what:this.execute(t.children[1])};}return e;},getLHSCompiler:function(t,e){var i;if(\"node_var\"===t.type)i=t.value;else if(\"node_op\"===t.type&&\"op_property\"===t.value)i=[this.compile(t.children[0],e),\"'\"+t.children[1]+\"'\"];else{if(\"node_op\"!==t.type||\"op_extvalue\"!==t.value)throw new Error(\"Syntax error: Invalid left-hand side of assignment.\");i=[this.compile(t.children[0],e),\"node_const\"===t.children[1].type?t.children[1].value:this.compile(t.children[1],e)];}return i;},execute:function(t){var e,i,r,s,o,n,a,h,l,c,d=[];if(e=0,!t)return e;switch(this.line=t.line,this.col=t.col,t.type){case\"node_op\":switch(t.value){case\"op_none\":t.children[0]&&this.execute(t.children[0]),t.children[1]&&(e=this.execute(t.children[1]));break;case\"op_assign\":i=this.getLHS(t.children[0]),this.lhs[this.scope.id]=i[1],i.o.type&&i.o.elementClass&&i.o.methodMap&&\"label\"===i.what&&this._error(\"Left-hand side of assignment is read-only.\"),e=this.execute(t.children[1]),i.o!==this.scope.locals||Type.isArray(i.o)&&\"number\"==typeof i.what?this.setProp(i.o,i.what,e):this.letvar(i.what,e),this.lhs[this.scope.id]=0;break;case\"op_if\":this.execute(t.children[0])&&(e=this.execute(t.children[1]));break;case\"op_conditional\":case\"op_if_else\":e=this.execute(t.children[0])?this.execute(t.children[1]):this.execute(t.children[2]);break;case\"op_while\":for(;this.execute(t.children[0]);)this.execute(t.children[1]);break;case\"op_do\":do{this.execute(t.children[0]);}while(this.execute(t.children[1]));break;case\"op_for\":for(this.execute(t.children[0]);this.execute(t.children[1]);this.execute(t.children[2]))this.execute(t.children[3]);break;case\"op_proplst\":t.children[0]&&this.execute(t.children[0]),t.children[1]&&this.execute(t.children[1]);break;case\"op_emptyobject\":e={};break;case\"op_proplst_val\":this.propstack.push({}),this.propscope++,this.execute(t.children[0]),e=this.propstack[this.propscope],this.propstack.pop(),this.propscope--;break;case\"op_prop\":this.propstack[this.propscope][t.children[0]]=this.execute(t.children[1]);break;case\"op_array\":for(e=[],o=t.children[0].length,r=0;r<o;r++)e.push(this.execute(t.children[0][r]));break;case\"op_extvalue\":e=this.execute(t.children[0]),r=this.execute(t.children[1]),e=\"number\"==typeof r&&Math.abs(Math.round(r)-r)<Mat.eps?e[r]:void 0;break;case\"op_return\":if(0!==this.scope)return this.execute(t.children[0]);this._error(\"Unexpected return.\");break;case\"op_map\":t.children[1].isMath||\"node_var\"===t.children[1].type||this._error(\"execute: In a map only function calls and mathematical expressions are allowed.\"),h=this.defineFunction(t),h.isMap=!0,e=h;break;case\"op_function\":h=this.defineFunction(t),h.isMap=!1,e=h;break;case\"op_execfun\":if(this.dpstack.push([]),this.pscope++,n=t.children[1],Type.exists(t.children[2]))if(t.children[3])for(a=t.children[2],l={},r=0;r<a.length;r++)l=Type.deepCopy(l,this.execute(a[r]),!0);else l=this.execute(t.children[2]);for(h=this.execute(t.children[0]),c=h&&h.sc?h.sc:this,!h.creator&&Type.exists(t.children[2])&&this._error(\"Unexpected value. Only element creators are allowed to have a value after the function call.\"),r=0;r<n.length;r++)d[r]=this.execute(n[r]),this.dpstack[this.pscope].push({line:t.children[1][r].line,col:t.children[1][r].ecol});if(\"function\"!=typeof h||h.creator){if(\"function\"==typeof h&&h.creator){s=this.line;try{for(e=h(d,l),e.jcLineStart=s,e.jcLineEnd=t.eline,r=s;r<=t.line;r++)this.lineToElement[r]=e;e.debugParents=this.dpstack[this.pscope];}catch(t){this._error(t.toString());}}else this._error(\"Function '\"+h+\"' is undefined.\");}else e=h.apply(c,d);this.dpstack.pop(),this.pscope--;break;case\"op_property\":s=this.execute(t.children[0]),i=t.children[1],e=this.resolveProperty(s,i,!1),Type.exists(e)&&(e.sc=s);break;case\"op_use\":this._warn(\"Use of the 'use' operator is deprecated.\"),this.use(t.children[0].toString());break;case\"op_delete\":this._warn(\"Use of the 'delete' operator is deprecated. Please use the remove() function.\"),i=this.getvar(t.children[0]),e=this.del(i);break;case\"op_equ\":e=this.execute(t.children[0])==this.execute(t.children[1]);break;case\"op_neq\":e=this.execute(t.children[0])!=this.execute(t.children[1]);break;case\"op_approx\":e=Math.abs(this.execute(t.children[0])-this.execute(t.children[1]))<Mat.eps;break;case\"op_grt\":e=this.execute(t.children[0])>this.execute(t.children[1]);break;case\"op_lot\":e=this.execute(t.children[0])<this.execute(t.children[1]);break;case\"op_gre\":e=this.execute(t.children[0])>=this.execute(t.children[1]);break;case\"op_loe\":e=this.execute(t.children[0])<=this.execute(t.children[1]);break;case\"op_or\":e=this.execute(t.children[0])||this.execute(t.children[1]);break;case\"op_and\":e=this.execute(t.children[0])&&this.execute(t.children[1]);break;case\"op_not\":e=!this.execute(t.children[0]);break;case\"op_add\":e=this.add(this.execute(t.children[0]),this.execute(t.children[1]));break;case\"op_sub\":e=this.sub(this.execute(t.children[0]),this.execute(t.children[1]));break;case\"op_div\":e=this.div(this.execute(t.children[0]),this.execute(t.children[1]));break;case\"op_mod\":e=this.mod(this.execute(t.children[0]),this.execute(t.children[1]),!0);break;case\"op_mul\":e=this.mul(this.execute(t.children[0]),this.execute(t.children[1]));break;case\"op_exp\":e=this.pow(this.execute(t.children[0]),this.execute(t.children[1]));break;case\"op_neg\":e=this.neg(this.execute(t.children[0]));}break;case\"node_var\":e=this.getvar(t.value);break;case\"node_const\":e=Number(t.value);break;case\"node_const_bool\":e=t.value;break;case\"node_str\":e=t.value.replace(/\\\\(.)/,\"$1\");}return e;},compile:function(t,e){var i,r,s,o=\"\";if(Type.exists(e)||(e=!1),!t)return o;switch(t.type){case\"node_op\":switch(t.value){case\"op_none\":t.children[0]&&(o=this.compile(t.children[0],e)),t.children[1]&&(o+=this.compile(t.children[1],e));break;case\"op_assign\":e?(i=this.getLHSCompiler(t.children[0],e),Type.isArray(i)?o=\"$jc$.setProp(\"+i[0]+\", \"+i[1]+\", \"+this.compile(t.children[1],e)+\");\\n\":(this.isLocalVariable(i)!==this.scope&&(this.scope.locals[i]=!0),o=\"$jc$.scopes[\"+this.scope.id+\"].locals['\"+i+\"'] = \"+this.compile(t.children[1],e)+\";\\n\")):(i=this.compile(t.children[0]),o=i+\" = \"+this.compile(t.children[1],e)+\";\\n\");break;case\"op_if\":o=\" if (\"+this.compile(t.children[0],e)+\") \"+this.compile(t.children[1],e);break;case\"op_if_else\":o=\" if (\"+this.compile(t.children[0],e)+\")\"+this.compile(t.children[1],e),o+=\" else \"+this.compile(t.children[2],e);break;case\"op_conditional\":o=\"((\"+this.compile(t.children[0],e)+\")?(\"+this.compile(t.children[1],e),o+=\"):(\"+this.compile(t.children[2],e)+\"))\";break;case\"op_while\":o=\" while (\"+this.compile(t.children[0],e)+\") {\\n\"+this.compile(t.children[1],e)+\"}\\n\";break;case\"op_do\":o=\" do {\\n\"+this.compile(t.children[0],e)+\"} while (\"+this.compile(t.children[1],e)+\");\\n\";break;case\"op_for\":o=\" for (\"+this.compile(t.children[0],e)+this.compile(t.children[1],e)+\"; \"+this.compile(t.children[2],e).slice(0,-2)+\") {\\n\"+this.compile(t.children[3],e)+\"\\n}\\n\";break;case\"op_proplst\":t.children[0]&&(o=this.compile(t.children[0],e)+\", \"),o+=this.compile(t.children[1],e);break;case\"op_prop\":o=t.children[0]+\": \"+this.compile(t.children[1],e);break;case\"op_emptyobject\":o=e?\"{}\":\"<< >>\";break;case\"op_proplst_val\":o=this.compile(t.children[0],e);break;case\"op_array\":for(s=[],r=0;r<t.children[0].length;r++)s.push(this.compile(t.children[0][r],e));o=\"[\"+s.join(\", \")+\"]\";break;case\"op_extvalue\":o=this.compile(t.children[0],e)+\"[\"+this.compile(t.children[1],e)+\"]\";break;case\"op_return\":o=\" return \"+this.compile(t.children[0],e)+\";\\n\";break;case\"op_map\":t.children[1].isMath||\"node_var\"===t.children[1].type||this._error(\"compile: In a map only function calls and mathematical expressions are allowed.\"),s=t.children[0],o=e?\" $jc$.makeMap(function (\"+s.join(\", \")+\") { return \"+this.compile(t.children[1],e)+\"; })\":\"map (\"+s.join(\", \")+\") -> \"+this.compile(t.children[1],e);break;case\"op_function\":s=t.children[0],this.pushScope(s),o=e?this.functionCodeJS(t):\" function (\"+s.join(\", \")+\") \"+this.compile(t.children[1],e),this.popScope();break;case\"op_execfunmath\":console.log(\"TODO\"),o=\"-1\";break;case\"op_execfun\":if(t.children[2]){for(s=[],r=0;r<t.children[2].length;r++)s.push(this.compile(t.children[2][r],e));e&&(i=\"$jc$.mergeAttributes(\"+s.join(\", \")+\")\");}for(t.children[0].withProps=!!t.children[2],s=[],r=0;r<t.children[1].length;r++)s.push(this.compile(t.children[1][r],e));o=this.compile(t.children[0],e)+\"(\"+s.join(\", \")+(t.children[2]&&e?\", \"+i:\"\")+\")\"+(t.children[2]&&!e?i:\"\"),e&&(o+=\"\\n\"),e&&\"$\"===t.children[0].value&&(o=\"$jc$.board.objects[\"+this.compile(t.children[1][0],e)+\"]\");break;case\"op_property\":o=e&&\"X\"!==t.children[1]&&\"Y\"!==t.children[1]?\"$jc$.resolveProperty(\"+this.compile(t.children[0],e)+\", '\"+t.children[1]+\"', true)\":this.compile(t.children[0],e)+\".\"+t.children[1];break;case\"op_use\":this._warn(\"Use of the 'use' operator is deprecated.\"),o=e?\"$jc$.use('\":\"use('\",o+=t.children[0].toString()+\"');\";break;case\"op_delete\":this._warn(\"Use of the 'delete' operator is deprecated. Please use the remove() function.\"),o=e?\"$jc$.del(\":\"remove(\",o+=this.compile(t.children[0],e)+\")\";break;case\"op_equ\":o=\"(\"+this.compile(t.children[0],e)+\" == \"+this.compile(t.children[1],e)+\")\";break;case\"op_neq\":o=\"(\"+this.compile(t.children[0],e)+\" != \"+this.compile(t.children[1],e)+\")\";break;case\"op_approx\":o=\"(\"+this.compile(t.children[0],e)+\" ~= \"+this.compile(t.children[1],e)+\")\";break;case\"op_grt\":o=e?\"$jc$.gt(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\" > \"+this.compile(t.children[1],e)+\")\";break;case\"op_lot\":o=e?\"$jc$.lt(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\" < \"+this.compile(t.children[1],e)+\")\";break;case\"op_gre\":o=e?\"$jc$.geq(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\" >= \"+this.compile(t.children[1],e)+\")\";break;case\"op_loe\":o=e?\"$jc$.leq(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\" <= \"+this.compile(t.children[1],e)+\")\";break;case\"op_or\":o=\"(\"+this.compile(t.children[0],e)+\" || \"+this.compile(t.children[1],e)+\")\";break;case\"op_and\":o=\"(\"+this.compile(t.children[0],e)+\" && \"+this.compile(t.children[1],e)+\")\";break;case\"op_not\":o=\"!(\"+this.compile(t.children[0],e)+\")\";break;case\"op_add\":o=e?\"$jc$.add(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\" + \"+this.compile(t.children[1],e)+\")\";break;case\"op_sub\":o=e?\"$jc$.sub(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\" - \"+this.compile(t.children[1],e)+\")\";break;case\"op_div\":o=e?\"$jc$.div(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\" / \"+this.compile(t.children[1],e)+\")\";break;case\"op_mod\":o=e?\"$jc$.mod(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\", true)\":\"(\"+this.compile(t.children[0],e)+\" % \"+this.compile(t.children[1],e)+\")\";break;case\"op_mul\":o=e?\"$jc$.mul(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\" * \"+this.compile(t.children[1],e)+\")\";break;case\"op_exp\":o=e?\"$jc$.pow(\"+this.compile(t.children[0],e)+\", \"+this.compile(t.children[1],e)+\")\":\"(\"+this.compile(t.children[0],e)+\"^\"+this.compile(t.children[1],e)+\")\";break;case\"op_neg\":o=e?\"$jc$.neg(\"+this.compile(t.children[0],e)+\")\":\"(-\"+this.compile(t.children[0],e)+\")\";}break;case\"node_var\":o=e?this.getvarJS(t.value,!1,t.withProps):t.value;break;case\"node_const\":case\"node_const_bool\":o=t.value;break;case\"node_str\":o=\"'\"+t.value+\"'\";}return t.needsBrackets&&(o=\"{\\n\"+o+\"}\\n\"),o;},X:function(t){return t.X();},Y:function(t){return t.Y();},V:function(t){return t.Value();},L:function(t){return t.L();},dist:function(t,e){return Type.exists(t)&&Type.exists(t.Dist)||this._error(\"Error: Can't calculate distance.\"),t.Dist(e);},add:function(t,e){var i,r,s;if(t=Type.evalSlider(t),e=Type.evalSlider(e),Interval.isInterval(t)||Interval.isInterval(e))s=Interval.add(t,e);else if(Type.isArray(t)&&Type.isArray(e))for(r=Math.min(t.length,e.length),s=[],i=0;i<r;i++)s[i]=t[i]+e[i];else Type.isNumber(t)&&Type.isNumber(e)?s=t+e:Type.isString(t)||Type.isString(e)?s=t.toString()+e.toString():this._error(\"Operation + not defined on operands \"+typeof t+\" and \"+typeof e);return s;},sub:function(t,e){var i,r,s;if(t=Type.evalSlider(t),e=Type.evalSlider(e),Interval.isInterval(t)||Interval.isInterval(e))s=Interval.sub(t,e);else if(Type.isArray(t)&&Type.isArray(e))for(r=Math.min(t.length,e.length),s=[],i=0;i<r;i++)s[i]=t[i]-e[i];else Type.isNumber(t)&&Type.isNumber(e)?s=t-e:this._error(\"Operation - not defined on operands \"+typeof t+\" and \"+typeof e);return s;},neg:function(t){var e,i,r;if(t=Type.evalSlider(t),Interval.isInterval(t))r=Interval.negative(t);else if(Type.isArray(t))for(i=t.length,r=[],e=0;e<i;e++)r[e]=-t[e];else Type.isNumber(t)?r=-t:this._error(\"Unary operation - not defined on operand \"+typeof t);return r;},mul:function(t,e){var i,r,s;if(t=Type.evalSlider(t),e=Type.evalSlider(e),Type.isArray(t)&&Type.isNumber(e)&&(i=t,t=e,e=t),Interval.isInterval(t)||Interval.isInterval(e))s=Interval.mul(t,e);else if(Type.isArray(t)&&Type.isArray(e))r=Math.min(t.length,e.length),s=Mat.innerProduct(t,e,r);else if(Type.isNumber(t)&&Type.isArray(e))for(r=e.length,s=[],i=0;i<r;i++)s[i]=t*e[i];else Type.isNumber(t)&&Type.isNumber(e)?s=t*e:this._error(\"Operation * not defined on operands \"+typeof t+\" and \"+typeof e);return s;},div:function(t,e){var i,r,s;if(t=Type.evalSlider(t),e=Type.evalSlider(e),Interval.isInterval(t)||Interval.isInterval(e))s=Interval.div(t,e);else if(Type.isArray(t)&&Type.isNumber(e))for(r=t.length,s=[],i=0;i<r;i++)s[i]=t[i]/e;else Type.isNumber(t)&&Type.isNumber(e)?s=t/e:this._error(\"Operation * not defined on operands \"+typeof t+\" and \"+typeof e);return s;},mod:function(t,e){var i,r,s;if(t=Type.evalSlider(t),e=Type.evalSlider(e),Interval.isInterval(t)||Interval.isInterval(e))return Interval.fmod(t,e);if(Type.isArray(t)&&Type.isNumber(e))for(r=t.length,s=[],i=0;i<r;i++)s[i]=Mat.mod(t[i],e,!0);else Type.isNumber(t)&&Type.isNumber(e)?s=Mat.mod(t,e,!0):this._error(\"Operation * not defined on operands \"+typeof t+\" and \"+typeof e);return s;},pow:function(t,e){return t=Type.evalSlider(t),e=Type.evalSlider(e),Interval.isInterval(t)||Interval.isInterval(e)?Interval.pow(t,e):Mat.pow(t,e);},lt:function(t,e){return Interval.isInterval(t)||Interval.isInterval(e)?Interval.lt(t,e):t<e;},leq:function(t,e){return Interval.isInterval(t)||Interval.isInterval(e)?Interval.leq(t,e):t<=e;},gt:function(t,e){return Interval.isInterval(t)||Interval.isInterval(e)?Interval.gt(t,e):t>e;},geq:function(t,e){return Interval.isInterval(t)||Interval.isInterval(e)?Intervalt.geq(t,e):t>=e;},DDD:function(t){console.log(\"Dummy derivative function. This should never appear!\");},ifthen:function(t,e,i){return t?e:i;},del:function(t){\"object\"==typeof t&&JXG.exists(t.type)&&JXG.exists(t.elementClass)&&this.board.removeObject(t);},use:function(t){var e,i,r=!1;if(\"string\"==typeof t){for(e in JXG.boards)if(JXG.boards.hasOwnProperty(e)&&JXG.boards[e].container===t){i=JXG.boards[e],r=!0;break;}}else i=t,r=!0;r?(this.board=i,this.builtIn.$board=i,this.builtIn.$board.src=\"$jc$.board\"):this._error(\"Board '\"+t+\"' not found!\");},findSymbol:function(t,e){var i,r;for(e=Type.def(e,-1),r=-1===e?this.scope:this.scopes[e];null!==r;){for(i in r.locals)if(r.locals.hasOwnProperty(i)&&r.locals[i]===t)return[i,r];r=r.previous;}return[];},importModule:function(t){return priv.modules[t.toLowerCase()];},defineBuiltIn:function(){var t=this,e={PI:Math.PI,EULER:Math.E,X:t.X,Y:t.Y,V:t.V,L:t.L,dist:t.dist,rad:Geometry.rad,deg:Geometry.trueAngle,factorial:Mat.factorial,trunc:Type.trunc,log:Mat.log,ln:Math.log,log10:Mat.log10,lg:Mat.log10,log2:Mat.log2,lb:Mat.log2,ld:Mat.log2,cosh:Mat.cosh,sinh:Mat.sinh,cot:Mat.cot,acot:Mat.acot,nthroot:Mat.nthroot,cbrt:Mat.cbrt,pow:Mat.pow,ratpow:Mat.ratpow,gcd:Mat.gcd,lcm:Mat.lcm,binomial:Mat.binomial,IfThen:t.ifthen,import:t.importModule,use:t.use,remove:t.del,$:t.getElementById,$board:t.board,$log:t.log,D:t.DDD};return e.rad.sc=Geometry,e.deg.sc=Geometry,e.factorial.sc=Mat,e.X.src=\"$jc$.X\",e.Y.src=\"$jc$.Y\",e.V.src=\"$jc$.V\",e.L.src=\"$jc$.L\",e.dist.src=\"$jc$.dist\",e.rad.src=\"JXG.Math.Geometry.rad\",e.deg.src=\"JXG.Math.Geometry.trueAngle\",e.factorial.src=\"JXG.Math.factorial\",e.trunc.src=\"JXG.trunc\",e.log.src=\"JXG.Math.log\",e.ln.src=\"Math.log\",e.log10.src=\"JXG.Math.log10\",e.lg.src=\"JXG.Math.log10\",e.log2.src=\"JXG.Math.log2\",e.lb.src=\"JXG.Math.log2\",e.ld.src=\"JXG.Math.log2\",e.cosh.src=\"JXG.Math.cosh\",e.sinh.src=\"JXG.Math.sinh\",e.cot.src=\"JXG.Math.cot\",e.acot.src=\"JXG.Math.acot\",e.nthroot.src=\"JXG.Math.nthroot\",e.cbrt.src=\"JXG.Math.cbrt\",e.pow.src=\"JXG.Math.pow\",e.ratpow.src=\"JXG.Math.ratpow\",e.gcd.src=\"JXG.Math.gcd\",e.lcm.src=\"JXG.Math.lcm\",e.binomial.src=\"JXG.Math.binomial\",e.import.src=\"$jc$.importModule\",e.use.src=\"$jc$.use\",e.remove.src=\"$jc$.del\",e.IfThen.src=\"$jc$.ifthen\",e.$.src=\"(function (n) { return $jc$.board.select(n); })\",e.$board&&(e.$board.src=\"$jc$.board\"),e.$log.src=\"$jc$.log\",e;},_debug:function(t){\"object\"==typeof console?console.log(t):Env.isBrowser&&document&&null!==document.getElementById(\"debug\")&&(document.getElementById(\"debug\").innerHTML+=t+\"<br />\");},_error:function(t){var e=new Error(\"Error(\"+this.line+\"): \"+t);throw e.line=this.line,e;},_warn:function(t){\"object\"==typeof console?console.log(\"Warning(\"+this.line+\"): \"+t):Env.isBrowser&&document&&null!==document.getElementById(this.warnLog)&&(document.getElementById(this.warnLog).innerHTML+=\"Warning(\"+this.line+\"): \"+t+\"<br />\");},_log:function(t){\"object\"!=typeof window&&\"object\"==typeof self&&self.postMessage?self.postMessage({type:\"log\",msg:\"Log: \"+t.toString()}):console.log(\"Log: \",arguments);}});var parser=function(){function t(){this.yy={};}var e=function(t,e,i,r){for(i=i||{},r=t.length;r--;i[t[r]]=e);return i;},i=[2,14],r=[1,13],s=[1,37],o=[1,14],n=[1,15],a=[1,21],h=[1,16],l=[1,17],c=[1,33],d=[1,18],u=[1,19],p=[1,12],f=[1,59],m=[1,60],g=[1,58],b=[1,46],v=[1,48],y=[1,49],C=[1,50],_=[1,51],P=[1,52],E=[1,53],x=[1,54],S=[1,45],O=[1,38],w=[1,39],T=[5,7,8,14,15,16,17,19,20,21,23,26,27,50,51,58,65,74,75,76,77,78,79,80,82,91,93],N=[5,7,8,12,14,15,16,17,19,20,21,23,26,27,50,51,58,65,74,75,76,77,78,79,80,82,91,93],M=[8,10,16,32,34,35,37,39,41,42,43,45,46,47,48,50,51,53,54,55,57,64,65,66,83,86],A=[2,48],R=[1,72],L=[10,16,32,34,35,37,39,41,42,43,45,46,47,48,50,51,53,54,55,57,66,83,86],k=[1,78],B=[8,10,16,32,34,35,37,41,42,43,45,46,47,48,50,51,53,54,55,57,64,65,66,83,86],I=[1,82],Y=[8,10,16,32,34,35,37,39,45,46,47,48,50,51,53,54,55,57,64,65,66,83,86],D=[1,83],j=[1,84],X=[1,85],U=[8,10,16,32,34,35,37,39,41,42,43,50,51,53,54,55,57,64,65,66,83,86],F=[1,89],G=[1,90],J=[1,91],z=[1,92],H=[1,97],V=[8,10,16,32,34,35,37,39,41,42,43,45,46,47,48,53,54,55,57,64,65,66,83,86],$=[1,103],q=[1,104],W=[8,10,16,32,34,35,37,39,41,42,43,45,46,47,48,50,51,57,64,65,66,83,86],Z=[1,105],Q=[1,106],K=[1,107],tt=[1,126],et=[1,139],it=[83,86],rt=[1,149],st=[10,66,86],ot=[8,10,16,20,32,34,35,37,39,41,42,43,45,46,47,48,50,51,53,54,55,57,64,65,66,82,83,86],nt=[1,166],at=[10,86],ht={trace:function(){},yy:{},symbols_:{error:2,Program:3,StatementList:4,EOF:5,IfStatement:6,IF:7,\"(\":8,Expression:9,\")\":10,Statement:11,ELSE:12,LoopStatement:13,WHILE:14,FOR:15,\";\":16,DO:17,UnaryStatement:18,USE:19,IDENTIFIER:20,DELETE:21,ReturnStatement:22,RETURN:23,EmptyStatement:24,StatementBlock:25,\"{\":26,\"}\":27,ExpressionStatement:28,AssignmentExpression:29,ConditionalExpression:30,LeftHandSideExpression:31,\"=\":32,LogicalORExpression:33,\"?\":34,\":\":35,LogicalANDExpression:36,\"||\":37,EqualityExpression:38,\"&&\":39,RelationalExpression:40,\"==\":41,\"!=\":42,\"~=\":43,AdditiveExpression:44,\"<\":45,\">\":46,\"<=\":47,\">=\":48,MultiplicativeExpression:49,\"+\":50,\"-\":51,UnaryExpression:52,\"*\":53,\"/\":54,\"%\":55,ExponentExpression:56,\"^\":57,\"!\":58,MemberExpression:59,CallExpression:60,PrimaryExpression:61,FunctionExpression:62,MapExpression:63,\".\":64,\"[\":65,\"]\":66,BasicLiteral:67,ObjectLiteral:68,ArrayLiteral:69,NullLiteral:70,BooleanLiteral:71,StringLiteral:72,NumberLiteral:73,NULL:74,TRUE:75,FALSE:76,STRING:77,NUMBER:78,NAN:79,INFINITY:80,ElementList:81,\"<<\":82,\">>\":83,PropertyList:84,Property:85,\",\":86,PropertyName:87,Arguments:88,AttributeList:89,Attribute:90,FUNCTION:91,ParameterDefinitionList:92,MAP:93,\"->\":94,$accept:0,$end:1},terminals_:{2:\"error\",5:\"EOF\",7:\"IF\",8:\"(\",10:\")\",12:\"ELSE\",14:\"WHILE\",15:\"FOR\",16:\";\",17:\"DO\",19:\"USE\",20:\"IDENTIFIER\",21:\"DELETE\",23:\"RETURN\",26:\"{\",27:\"}\",32:\"=\",34:\"?\",35:\":\",37:\"||\",39:\"&&\",41:\"==\",42:\"!=\",43:\"~=\",45:\"<\",46:\">\",47:\"<=\",48:\">=\",50:\"+\",51:\"-\",53:\"*\",54:\"/\",55:\"%\",57:\"^\",58:\"!\",64:\".\",65:\"[\",66:\"]\",74:\"NULL\",75:\"TRUE\",76:\"FALSE\",77:\"STRING\",78:\"NUMBER\",79:\"NAN\",80:\"INFINITY\",82:\"<<\",83:\">>\",86:\",\",91:\"FUNCTION\",93:\"MAP\",94:\"->\"},productions_:[0,[3,2],[6,5],[6,7],[13,5],[13,9],[13,7],[18,2],[18,2],[22,2],[22,3],[24,1],[25,3],[4,2],[4,0],[11,1],[11,1],[11,1],[11,1],[11,1],[11,1],[11,1],[28,2],[9,1],[29,1],[29,3],[30,1],[30,5],[33,1],[33,3],[36,1],[36,3],[38,1],[38,3],[38,3],[38,3],[40,1],[40,3],[40,3],[40,3],[40,3],[44,1],[44,3],[44,3],[49,1],[49,3],[49,3],[49,3],[56,1],[56,3],[52,1],[52,2],[52,2],[52,2],[31,1],[31,1],[59,1],[59,1],[59,1],[59,3],[59,4],[61,1],[61,1],[61,1],[61,1],[61,3],[67,1],[67,1],[67,1],[67,1],[70,1],[71,1],[71,1],[72,1],[73,1],[73,1],[73,1],[69,2],[69,3],[68,2],[68,3],[84,1],[84,3],[85,3],[87,1],[87,1],[87,1],[60,2],[60,3],[60,2],[60,4],[60,3],[88,2],[88,3],[89,1],[89,3],[90,1],[90,1],[81,1],[81,3],[62,4],[62,5],[63,6],[92,1],[92,3]],performAction:function(t,e,i,r,s,o,n){var a=o.length-1;switch(s){case 1:return o[a-1];case 2:this.$=lt.createNode(ct(n[a-4]),\"node_op\",\"op_if\",o[a-2],o[a]);break;case 3:this.$=lt.createNode(ct(n[a-6]),\"node_op\",\"op_if_else\",o[a-4],o[a-2],o[a]);break;case 4:this.$=lt.createNode(ct(n[a-4]),\"node_op\",\"op_while\",o[a-2],o[a]);break;case 5:this.$=lt.createNode(ct(n[a-8]),\"node_op\",\"op_for\",o[a-6],o[a-4],o[a-2],o[a]);break;case 6:this.$=lt.createNode(ct(n[a-6]),\"node_op\",\"op_do\",o[a-5],o[a-2]);break;case 7:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_use\",o[a]);break;case 8:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_delete\",o[a]);break;case 9:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_return\",void 0);break;case 10:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_return\",o[a-1]);break;case 11:case 14:this.$=lt.createNode(ct(n[a]),\"node_op\",\"op_none\");break;case 12:this.$=o[a-1],this.$.needsBrackets=!0;break;case 13:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_none\",o[a-1],o[a]);break;case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 23:case 24:case 26:case 28:case 30:case 32:case 36:case 41:case 44:case 48:case 50:case 52:case 54:case 55:case 56:case 58:case 62:case 81:case 84:case 85:case 86:this.$=o[a];break;case 22:case 65:case 93:this.$=o[a-1];break;case 25:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_assign\",o[a-2],o[a]),this.$.isMath=!1;break;case 27:this.$=lt.createNode(ct(n[a-4]),\"node_op\",\"op_conditional\",o[a-4],o[a-2],o[a]),this.$.isMath=!1;break;case 29:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_or\",o[a-2],o[a]),this.$.isMath=!1;break;case 31:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_and\",o[a-2],o[a]),this.$.isMath=!1;break;case 33:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_equ\",o[a-2],o[a]),this.$.isMath=!1;break;case 34:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_neq\",o[a-2],o[a]),this.$.isMath=!1;break;case 35:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_approx\",o[a-2],o[a]),this.$.isMath=!1;break;case 37:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_lot\",o[a-2],o[a]),this.$.isMath=!1;break;case 38:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_grt\",o[a-2],o[a]),this.$.isMath=!1;break;case 39:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_loe\",o[a-2],o[a]),this.$.isMath=!1;break;case 40:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_gre\",o[a-2],o[a]),this.$.isMath=!1;break;case 42:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_add\",o[a-2],o[a]),this.$.isMath=!0;break;case 43:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_sub\",o[a-2],o[a]),this.$.isMath=!0;break;case 45:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_mul\",o[a-2],o[a]),this.$.isMath=!0;break;case 46:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_div\",o[a-2],o[a]),this.$.isMath=!0;break;case 47:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_mod\",o[a-2],o[a]),this.$.isMath=!0;break;case 49:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_exp\",o[a-2],o[a]),this.$.isMath=!0;break;case 51:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_not\",o[a]),this.$.isMath=!1;break;case 53:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_neg\",o[a]),this.$.isMath=!0;break;case 57:case 63:case 64:case 66:case 67:case 68:case 97:this.$=o[a],this.$.isMath=!1;break;case 59:case 91:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_property\",o[a-2],o[a]),this.$.isMath=!0;break;case 60:case 90:this.$=lt.createNode(ct(n[a-3]),\"node_op\",\"op_extvalue\",o[a-3],o[a-1]),this.$.isMath=!0;break;case 61:this.$=lt.createNode(ct(n[a]),\"node_var\",o[a]);break;case 69:this.$=o[a],this.$.isMath=!0;break;case 70:this.$=lt.createNode(ct(n[a]),\"node_const\",null);break;case 71:this.$=lt.createNode(ct(n[a]),\"node_const_bool\",!0);break;case 72:this.$=lt.createNode(ct(n[a]),\"node_const_bool\",!1);break;case 73:this.$=lt.createNode(ct(n[a]),\"node_str\",o[a].substring(1,o[a].length-1));break;case 74:this.$=lt.createNode(ct(n[a]),\"node_const\",parseFloat(o[a]));break;case 75:this.$=lt.createNode(ct(n[a]),\"node_const\",NaN);break;case 76:this.$=lt.createNode(ct(n[a]),\"node_const\",1/0);break;case 77:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_array\",[]);break;case 78:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_array\",o[a-1]);break;case 79:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_emptyobject\",{});break;case 80:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_proplst_val\",o[a-1]);break;case 82:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_proplst\",o[a-2],o[a]);break;case 83:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_prop\",o[a-2],o[a]);break;case 87:case 89:this.$=lt.createNode(ct(n[a-1]),\"node_op\",\"op_execfun\",o[a-1],o[a]),this.$.isMath=!0;break;case 88:this.$=lt.createNode(ct(n[a-2]),\"node_op\",\"op_execfun\",o[a-2],o[a-1],o[a],!0),this.$.isMath=!1;break;case 92:this.$=[];break;case 94:case 98:case 103:this.$=[o[a]];break;case 95:case 99:case 104:this.$=o[a-2].concat(o[a]);break;case 96:this.$=lt.createNode(ct(n[a]),\"node_var\",o[a]),this.$.isMath=!0;break;case 100:this.$=lt.createNode(ct(n[a-3]),\"node_op\",\"op_function\",[],o[a]),this.$.isMath=!1;break;case 101:this.$=lt.createNode(ct(n[a-4]),\"node_op\",\"op_function\",o[a-2],o[a]),this.$.isMath=!1;break;case 102:this.$=lt.createNode(ct(n[a-5]),\"node_op\",\"op_map\",o[a-3],o[a]);}},table:[e([5,7,8,14,15,16,17,19,20,21,23,26,50,51,58,65,74,75,76,77,78,79,80,82,91,93],i,{3:1,4:2}),{1:[3]},{5:[1,3],6:6,7:r,8:s,9:20,11:4,13:7,14:o,15:n,16:a,17:h,18:8,19:l,20:c,21:d,22:9,23:u,24:11,25:5,26:p,28:10,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{1:[2,1]},e(T,[2,13]),e(N,[2,15]),e(N,[2,16]),e(N,[2,17]),e(N,[2,18]),e(N,[2,19]),e(N,[2,20]),e(N,[2,21]),e([7,8,14,15,16,17,19,20,21,23,26,27,50,51,58,65,74,75,76,77,78,79,80,82,91,93],i,{4:61}),{8:[1,62]},{8:[1,63]},{8:[1,64]},{6:6,7:r,8:s,9:20,11:65,13:7,14:o,15:n,16:a,17:h,18:8,19:l,20:c,21:d,22:9,23:u,24:11,25:5,26:p,28:10,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{20:[1,66]},{20:[1,67]},{8:s,9:69,16:[1,68],20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{16:[1,70]},e(N,[2,11]),e(M,[2,23]),e(M,[2,24]),e([8,10,16,34,35,37,39,41,42,43,45,46,47,48,50,51,53,54,55,64,65,66,83,86],A,{32:[1,71],57:R}),e([8,10,16,32,35,39,41,42,43,45,46,47,48,50,51,53,54,55,57,64,65,66,83,86],[2,26],{34:[1,73],37:[1,74]}),e(L,[2,54],{88:77,8:k,64:[1,75],65:[1,76]}),e(L,[2,55],{88:79,8:k,64:[1,81],65:[1,80]}),e(B,[2,28],{39:I}),e(M,[2,56]),e(M,[2,57]),e(M,[2,58]),e(Y,[2,30],{41:D,42:j,43:X}),e(M,[2,61]),e(M,[2,62]),e(M,[2,63]),e(M,[2,64]),{8:s,9:86,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:[1,87]},{8:[1,88]},e(U,[2,32],{45:F,46:G,47:J,48:z}),e(M,[2,66]),e(M,[2,67]),e(M,[2,68]),e(M,[2,69]),{20:H,72:98,73:99,77:_,78:P,79:E,80:x,83:[1,93],84:94,85:95,87:96},{8:s,20:c,29:102,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,66:[1,100],67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,81:101,82:S,91:O,93:w},e(V,[2,36],{50:$,51:q}),e(M,[2,70]),e(M,[2,71]),e(M,[2,72]),e(M,[2,73]),e(M,[2,74]),e(M,[2,75]),e(M,[2,76]),e(W,[2,41],{53:Z,54:Q,55:K}),e(M,[2,44]),e(M,[2,50]),{8:s,20:c,31:109,50:f,51:m,52:108,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,50:f,51:m,52:110,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,50:f,51:m,52:111,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{6:6,7:r,8:s,9:20,11:4,13:7,14:o,15:n,16:a,17:h,18:8,19:l,20:c,21:d,22:9,23:u,24:11,25:5,26:p,27:[1,112],28:10,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,9:113,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,9:114,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,9:115,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{14:[1,116]},e(N,[2,7]),e(N,[2,8]),e(N,[2,9]),{16:[1,117]},e(N,[2,22]),{8:s,20:c,29:118,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,50:f,51:m,52:119,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,29:120,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,36:121,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{20:[1,122]},{8:s,9:123,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},e(M,[2,87],{89:124,90:125,68:127,20:tt,82:S}),{8:s,10:[1,128],20:c,29:102,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,81:129,82:S,91:O,93:w},e(M,[2,89]),{8:s,9:130,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{20:[1,131]},{8:s,20:c,31:109,38:132,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,40:133,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,40:134,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,40:135,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{10:[1,136]},{10:[1,137],20:et,92:138},{20:et,92:140},{8:s,20:c,31:109,44:141,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,44:142,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,44:143,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,44:144,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},e(M,[2,79]),{83:[1,145],86:[1,146]},e(it,[2,81]),{35:[1,147]},{35:[2,84]},{35:[2,85]},{35:[2,86]},e(M,[2,77]),{66:[1,148],86:rt},e(st,[2,98]),{8:s,20:c,31:109,49:150,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,49:151,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,50:f,51:m,52:152,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,50:f,51:m,52:153,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,31:109,50:f,51:m,52:154,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},e(M,[2,51]),e([8,10,16,32,34,35,37,39,41,42,43,45,46,47,48,50,51,53,54,55,64,65,66,83,86],A,{57:R}),e(M,[2,52]),e(M,[2,53]),e([5,7,8,10,12,14,15,16,17,19,20,21,23,26,27,32,34,35,37,39,41,42,43,45,46,47,48,50,51,53,54,55,57,58,64,65,66,74,75,76,77,78,79,80,82,83,86,91,93],[2,12]),{10:[1,155]},{10:[1,156]},{16:[1,157]},{8:[1,158]},e(N,[2,10]),e(M,[2,25]),e(M,[2,49]),{35:[1,159]},e(B,[2,29],{39:I}),e(M,[2,59]),{66:[1,160]},e([8,10,16,32,34,35,37,39,41,42,43,45,46,47,48,50,51,53,54,55,57,64,65,66,83],[2,88],{86:[1,161]}),e(M,[2,94]),e(M,[2,96]),e(M,[2,97]),e(ot,[2,92]),{10:[1,162],86:rt},{66:[1,163]},e(M,[2,91]),e(Y,[2,31],{41:D,42:j,43:X}),e(U,[2,33],{45:F,46:G,47:J,48:z}),e(U,[2,34],{45:F,46:G,47:J,48:z}),e(U,[2,35],{45:F,46:G,47:J,48:z}),e(M,[2,65]),{25:164,26:p},{10:[1,165],86:nt},e(at,[2,103]),{10:[1,167],86:nt},e(V,[2,37],{50:$,51:q}),e(V,[2,38],{50:$,51:q}),e(V,[2,39],{50:$,51:q}),e(V,[2,40],{50:$,51:q}),e(M,[2,80]),{20:H,72:98,73:99,77:_,78:P,79:E,80:x,85:168,87:96},{8:s,20:c,29:169,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},e(M,[2,78]),{8:s,20:c,29:170,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},e(W,[2,42],{53:Z,54:Q,55:K}),e(W,[2,43],{53:Z,54:Q,55:K}),e(M,[2,45]),e(M,[2,46]),e(M,[2,47]),{6:6,7:r,8:s,9:20,11:171,13:7,14:o,15:n,16:a,17:h,18:8,19:l,20:c,21:d,22:9,23:u,24:11,25:5,26:p,28:10,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{6:6,7:r,8:s,9:20,11:172,13:7,14:o,15:n,16:a,17:h,18:8,19:l,20:c,21:d,22:9,23:u,24:11,25:5,26:p,28:10,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,9:173,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,9:174,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,20:c,29:175,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},e(M,[2,60]),{20:tt,68:127,82:S,90:176},e(ot,[2,93]),e(M,[2,90]),e(M,[2,100]),{25:177,26:p},{20:[1,178]},{94:[1,179]},e(it,[2,82]),e(it,[2,83]),e(st,[2,99]),e(T,[2,2],{12:[1,180]}),e(N,[2,4]),{16:[1,181]},{10:[1,182]},e(M,[2,27]),e(M,[2,95]),e(M,[2,101]),e(at,[2,104]),{8:s,9:183,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{6:6,7:r,8:s,9:20,11:184,13:7,14:o,15:n,16:a,17:h,18:8,19:l,20:c,21:d,22:9,23:u,24:11,25:5,26:p,28:10,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{8:s,9:185,20:c,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},{16:[1,186]},e(M,[2,102]),e(N,[2,3]),{10:[1,187]},e(N,[2,6]),{6:6,7:r,8:s,9:20,11:188,13:7,14:o,15:n,16:a,17:h,18:8,19:l,20:c,21:d,22:9,23:u,24:11,25:5,26:p,28:10,29:22,30:23,31:24,33:25,36:28,38:32,40:40,44:47,49:55,50:f,51:m,52:56,56:57,58:g,59:26,60:27,61:29,62:30,63:31,65:b,67:34,68:35,69:36,70:41,71:42,72:43,73:44,74:v,75:y,76:C,77:_,78:P,79:E,80:x,82:S,91:O,93:w},e(N,[2,5])],defaultActions:{3:[2,1],97:[2,84],98:[2,85],99:[2,86]},parseError:function(t,e){if(!e.recoverable){var i=new Error(t);throw i.hash=e,i;}this.trace(t);},parse:function(t){var e=this,i=[0],r=[null],s=[],o=this.table,n=\"\",a=0,h=0,l=0,c=s.slice.call(arguments,1),d=Object.create(this.lexer),u={yy:{}};for(var p in this.yy)Object.prototype.hasOwnProperty.call(this.yy,p)&&(u.yy[p]=this.yy[p]);d.setInput(t,u.yy),u.yy.lexer=d,u.yy.parser=this,void 0===d.yylloc&&(d.yylloc={});var f=d.yylloc;s.push(f);var m=d.options&&d.options.ranges;\"function\"==typeof u.yy.parseError?this.parseError=u.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;for(var g,b,v,y,C,_,P,E,x,S=function(){var t;return t=d.lex()||1,\"number\"!=typeof t&&(t=e.symbols_[t]||t),t;},O={};;){if(v=i[i.length-1],this.defaultActions[v]?y=this.defaultActions[v]:(null!==g&&void 0!==g||(g=S()),y=o[v]&&o[v][g]),void 0===y||!y.length||!y[0]){var w=\"\";x=[];for(_ in o[v])this.terminals_[_]&&_>2&&x.push(\"'\"+this.terminals_[_]+\"'\");w=d.showPosition?\"Parse error on line \"+(a+1)+\":\\n\"+d.showPosition()+\"\\nExpecting \"+x.join(\", \")+\", got '\"+(this.terminals_[g]||g)+\"'\":\"Parse error on line \"+(a+1)+\": Unexpected \"+(1==g?\"end of input\":\"'\"+(this.terminals_[g]||g)+\"'\"),this.parseError(w,{text:d.match,token:this.terminals_[g]||g,line:d.yylineno,loc:f,expected:x});}if(y[0]instanceof Array&&y.length>1)throw new Error(\"Parse Error: multiple actions possible at state: \"+v+\", token: \"+g);switch(y[0]){case 1:i.push(g),r.push(d.yytext),s.push(d.yylloc),i.push(y[1]),g=null,b?(g=b,b=null):(h=d.yyleng,n=d.yytext,a=d.yylineno,f=d.yylloc,l>0&&l--);break;case 2:if(P=this.productions_[y[1]][1],O.$=r[r.length-P],O._$={first_line:s[s.length-(P||1)].first_line,last_line:s[s.length-1].last_line,first_column:s[s.length-(P||1)].first_column,last_column:s[s.length-1].last_column},m&&(O._$.range=[s[s.length-(P||1)].range[0],s[s.length-1].range[1]]),void 0!==(C=this.performAction.apply(O,[n,h,a,u.yy,y[1],r,s].concat(c))))return C;P&&(i=i.slice(0,-1*P*2),r=r.slice(0,-1*P),s=s.slice(0,-1*P)),i.push(this.productions_[y[1]][0]),r.push(O.$),s.push(O._$),E=o[i[i.length-2]][i[i.length-1]],i.push(E);break;case 3:return!0;}}return!0;}},lt={node:function(t,e,i){return{type:t,value:e,children:i};},createNode:function(t,e,i,r){var s,o=this.node(e,i,[]);for(s=3;s<arguments.length;s++)o.children.push(arguments[s]);return o.line=t[0],o.col=t[1],o.eline=t[2],o.ecol=t[3],o;}},ct=function(t){return[t.first_line,t.first_column,t.last_line,t.last_column];},dt=function(){return{EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e);},setInput:function(t,e){return this.yy=e||this.yy||{},this._input=t,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match=\"\",this.conditionStack=[\"INITIAL\"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this;},input:function(){var t=this._input[0];return this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t,t.match(/(?:\\r\\n?|\\n).*/g)?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t;},unput:function(t){var e=t.length,i=t.split(/(?:\\r\\n?|\\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e),this.offset-=e;var r=this.match.split(/(?:\\r\\n?|\\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),i.length-1&&(this.yylineno-=i.length-1);var s=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:i?(i.length===r.length?this.yylloc.first_column:0)+r[r.length-i.length].length-i[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[s[0],s[0]+this.yyleng-e]),this.yyleng=this.yytext.length,this;},more:function(){return this._more=!0,this;},reject:function(){return this.options.backtrack_lexer?(this._backtrack=!0,this):this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno});},less:function(t){this.unput(this.match.slice(t));},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?\"...\":\"\")+t.substr(-20).replace(/\\n/g,\"\");},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?\"...\":\"\")).replace(/\\n/g,\"\");},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join(\"-\");return t+this.upcomingInput()+\"\\n\"+e+\"^\";},test_match:function(t,e){var i,r,s;if(this.options.backtrack_lexer&&(s={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(s.yylloc.range=this.yylloc.range.slice(0))),r=t[0].match(/(?:\\r\\n?|\\n).*/g),r&&(this.yylineno+=r.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:r?r[r.length-1].length-r[r.length-1].match(/\\r?\\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],i=this.performAction.call(this,this.yy,this,e,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),i)return i;if(this._backtrack){for(var o in s)this[o]=s[o];return!1;}return!1;},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var t,e,i,r;this._more||(this.yytext=\"\",this.match=\"\");for(var s=this._currentRules(),o=0;o<s.length;o++)if((i=this._input.match(this.rules[s[o]]))&&(!e||i[0].length>e[0].length)){if(e=i,r=o,this.options.backtrack_lexer){if(!1!==(t=this.test_match(i,s[o])))return t;if(this._backtrack){e=!1;continue;}return!1;}if(!this.options.flex)break;}return e?!1!==(t=this.test_match(e,s[r]))&&t:\"\"===this._input?this.EOF:this.parseError(\"Lexical error on line \"+(this.yylineno+1)+\". Unrecognized text.\\n\"+this.showPosition(),{text:\"\",token:null,line:this.yylineno});},lex:function(){var t=this.next();return t||this.lex();},begin:function(t){this.conditionStack.push(t);},popState:function(){return this.conditionStack.length-1>0?this.conditionStack.pop():this.conditionStack[0];},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules;},topState:function(t){return t=this.conditionStack.length-1-Math.abs(t||0),t>=0?this.conditionStack[t]:\"INITIAL\";},pushState:function(t){this.begin(t);},stateStackSize:function(){return this.conditionStack.length;},options:{},performAction:function(t,e,i,r){switch(i){case 0:break;case 1:case 2:return 78;case 3:case 4:return 77;case 5:case 6:break;case 7:return 7;case 8:return 12;case 9:return 14;case 10:return 17;case 11:return 15;case 12:return 91;case 13:return 93;case 14:return 19;case 15:return 23;case 16:return 21;case 17:return 75;case 18:return 76;case 19:return 74;case 20:return 80;case 21:return 94;case 22:return 82;case 23:return 83;case 24:return 26;case 25:return 27;case 26:return 16;case 27:return\"#\";case 28:return 34;case 29:return 35;case 30:return 79;case 31:return 64;case 32:return 65;case 33:return 66;case 34:return 8;case 35:return 10;case 36:return 58;case 37:return 57;case 38:return 53;case 39:return 54;case 40:return 55;case 41:return 50;case 42:return 51;case 43:return 47;case 44:return 45;case 45:return 48;case 46:return 46;case 47:return 41;case 48:return 43;case 49:return 42;case 50:return 39;case 51:return 37;case 52:return 32;case 53:return 86;case 54:return 5;case 55:return 20;case 56:return\"INVALID\";}},rules:[/^(?:\\s+)/,/^(?:[0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+\\b)/,/^(?:[0-9]+)/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:\\/\\/.*)/,/^(?:\\/\\*(.|\\n|\\r)*?\\*\\/)/,/^(?:if\\b)/,/^(?:else\\b)/,/^(?:while\\b)/,/^(?:do\\b)/,/^(?:for\\b)/,/^(?:function\\b)/,/^(?:map\\b)/,/^(?:use\\b)/,/^(?:return\\b)/,/^(?:delete\\b)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:Infinity\\b)/,/^(?:->)/,/^(?:<<)/,/^(?:>>)/,/^(?:\\{)/,/^(?:\\})/,/^(?:;)/,/^(?:#)/,/^(?:\\?)/,/^(?::)/,/^(?:NaN\\b)/,/^(?:\\.)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\()/,/^(?:\\))/,/^(?:!)/,/^(?:\\^)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:%)/,/^(?:\\+)/,/^(?:-)/,/^(?:<=)/,/^(?:<)/,/^(?:>=)/,/^(?:>)/,/^(?:==)/,/^(?:~=)/,/^(?:!=)/,/^(?:&&)/,/^(?:\\|\\|)/,/^(?:=)/,/^(?:,)/,/^(?:$)/,/^(?:[A-Za-z_\\$][A-Za-z0-9_]*)/,/^(?:.)/],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],inclusive:!0}}};}();return ht.lexer=dt,t.prototype=ht,ht.Parser=t,new t();}();return void 0!==require&&\"undefined\"!=typeof exports&&(exports.parser=parser,exports.Parser=parser.Parser,exports.parse=function(){return parser.parse.apply(parser,arguments);},exports.main=function(t){t[1]||(console.log(\"Usage: \"+t[0]+\" FILE\"),process.exit(1));var e=require(\"fs\").readFileSync(require(\"path\").normalize(t[1]),\"utf8\");return exports.parser.parse(e);}, true&&require.main===module&&exports.main(process.argv.slice(1))),parser.yy.parseError=parser.parseError,JXG.JessieCode;}),define(\"base/point\",[\"jxg\",\"options\",\"math/math\",\"math/geometry\",\"math/numerics\",\"base/coords\",\"base/constants\",\"base/element\",\"parser/geonext\",\"utils/type\",\"base/transformation\",\"base/coordselement\"],function(t,e,i,r,s,o,n,a,h,l,c,d){\"use strict\";return t.Point=function(t,e,i){this.constructor(t,i,n.OBJECT_TYPE_POINT,n.OBJECT_CLASS_POINT),this.element=this.board.select(i.anchor),this.coordsConstructor(e),this.elType=\"point\",this.id=this.board.setId(this,\"P\"),this.board.renderer.drawPoint(this),this.board.finalizeAdding(this),this.createLabel();},t.Point.prototype=new a(),l.copyPrototypeMethods(t.Point,d,\"coordsConstructor\"),t.extend(t.Point.prototype,{hasPoint:function(t,e){var i,r,s,o=this.coords.scrCoords,n=l.evaluate(this.visProp.sizeunit);return l.isObject(l.evaluate(this.visProp.precision))?(s=this.board._inputDevice,r=l.evaluate(this.visProp.precision[s])):r=this.board.options.precision.hasPoint,i=parseFloat(l.evaluate(this.visProp.size)),\"user\"===n&&(i*=Math.sqrt(this.board.unitX*this.board.unitY)),i+=.5*parseFloat(l.evaluate(this.visProp.strokewidth)),i<r&&(i=r),Math.abs(o[1]-t)<i+2&&Math.abs(o[2]-e)<i+2;},update:function(t){return this.needsUpdate?(this.updateCoords(t),l.evaluate(this.visProp.trace)&&this.cloneToBackground(!0),this):this;},updateTransform:function(){var t,e;if(0===this.transformations.length||null===this.baseElement)return this;for(t=this===this.baseElement?this.transformations[0].apply(this.baseElement,\"self\"):this.transformations[0].apply(this.baseElement),this.coords.setCoordinates(n.COORDS_BY_USER,t),e=1;e<this.transformations.length;e++)this.coords.setCoordinates(n.COORDS_BY_USER,this.transformations[e].apply(this));return this;},updateRenderer:function(){return this.updateRendererGeneric(\"updatePoint\"),this;},bounds:function(){return this.coords.usrCoords.slice(1).concat(this.coords.usrCoords.slice(1));},makeIntersection:function(t,e,i,s){var o;t=this.board.select(t),e=this.board.select(e),o=r.intersectionFunction(this.board,t,e,i,s,l.evaluate(this.visProp.alwaysintersect)),this.addConstraint([o]);try{t.addChild(this),e.addChild(this);}catch(i){throw new Error(\"JSXGraph: Can't create 'intersection' with parent types '\"+typeof t+\"' and '\"+typeof e+\"'.\");}this.type=n.OBJECT_TYPE_INTERSECTION,this.elType=\"intersection\",this.parents=[t.id,e.id,i,s],this.generatePolynomial=function(){var i=t.generatePolynomial(this),r=e.generatePolynomial(this);return 0===i.length||0===r.length?[]:[i[0],r[0]];},this.prepareUpdate().update();},setStyle:function(t){var e=[\"cross\",\"cross\",\"cross\",\"circle\",\"circle\",\"circle\",\"circle\",\"square\",\"square\",\"square\",\"plus\",\"plus\",\"plus\"],i=[2,3,4,1,2,3,4,2,3,4,2,3,4];return this.visProp.face=e[t],this.visProp.size=i[t],this.board.renderer.changePointStyle(this),this;},normalizeFace:function(i){return t.deprecated(\"Point.normalizeFace()\",\"JXG.normalizePointFace()\"),e.normalizePointFace(i);},face:function(e){t.deprecated(\"Point.face()\",\"Point.setAttribute()\"),this.setAttribute({face:e});},size:function(e){t.deprecated(\"Point.size()\",\"Point.setAttribute()\"),this.setAttribute({size:e});},cloneToBackground:function(){var t={};return t.id=this.id+\"T\"+this.numTraces,this.numTraces+=1,t.coords=this.coords,t.visProp=l.deepCopy(this.visProp,this.visProp.traceattributes,!0),t.visProp.layer=this.board.options.layer.trace,t.elementClass=n.OBJECT_CLASS_POINT,t.board=this.board,l.clearVisPropOld(t),t.visPropCalc={visible:l.evaluate(t.visProp.visible)},this.board.renderer.drawPoint(t),this.traces[t.id]=t.rendNode,this;}}),t.createPoint=function(e,i,r){var s,o;if(o=l.copyAttributes(r,e.options,\"point\"),!(s=d.create(t.Point,e,i,o)))throw new Error(\"JSXGraph: Can't create point with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [x,y], [z,x,y], [element,transformation]\");return s;},t.createGlider=function(t,e,i){var r,s,o=l.copyAttributes(i,t.options,\"glider\");return s=1===e.length?[0,0]:e.slice(0,2),r=t.create(\"point\",s,o),r.makeGlider(e[e.length-1]),r;},t.createIntersectionPoint=function(t,e,i){var s,o,a,h,c,d,u=l.copyAttributes(i,t.options,\"intersection\");e.push(0,0),o=t.select(e[0]),a=t.select(e[1]),c=e[2]||0,d=e[3]||0,s=t.create(\"point\",[0,0,0],u),h=r.intersectionFunction(t,o,a,c,d,s.visProp.alwaysintersect),s.addConstraint([h]);try{o.addChild(s),a.addChild(s);}catch(t){throw new Error(\"JSXGraph: Can't create 'intersection' with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\");}return s.type=n.OBJECT_TYPE_INTERSECTION,s.elType=\"intersection\",s.setParents([o.id,a.id]),s.intersectionNumbers=[c,d],s.getParents=function(){return this.parents.concat(this.intersectionNumbers);},s.generatePolynomial=function(){var t=o.generatePolynomial(s),e=a.generatePolynomial(s);return 0===t.length||0===e.length?[]:[t[0],e[0]];},s;},t.createOtherIntersectionPoint=function(t,e,s){var o,a,h,c;if(3!==e.length||!l.isPoint(e[2])||e[0].elementClass!==n.OBJECT_CLASS_LINE&&e[0].elementClass!==n.OBJECT_CLASS_CIRCLE||e[1].elementClass!==n.OBJECT_CLASS_LINE&&e[1].elementClass!==n.OBJECT_CLASS_CIRCLE)throw new Error(\"JSXGraph: Can't create 'other intersection point' with parent types '\"+typeof e[0]+\"',  '\"+typeof e[1]+\"'and  '\"+typeof e[2]+\"'.\\nPossible parent types: [circle|line,circle|line,point]\");return a=t.select(e[0]),h=t.select(e[1]),c=t.select(e[2]),o=t.create(\"point\",[function(){var t=r.meet(a.stdform,h.stdform,0,a.board);return Math.abs(c.X()-t.usrCoords[1])>i.eps||Math.abs(c.Y()-t.usrCoords[2])>i.eps||Math.abs(c.Z()-t.usrCoords[0])>i.eps?t:r.meet(a.stdform,h.stdform,1,a.board);}],s),o.type=n.OBJECT_TYPE_INTERSECTION,o.elType=\"otherintersection\",o.setParents([a.id,h.id,c]),a.addChild(o),h.addChild(o),o.generatePolynomial=function(){var t=a.generatePolynomial(o),e=h.generatePolynomial(o);return 0===t.length||0===e.length?[]:[t[0],e[0]];},o;},t.createPolePoint=function(e,i,r){var s,o,a,h,l,c,d;if(i.length>1&&(h=i[0].type===n.OBJECT_TYPE_CONIC||i[0].elementClass===n.OBJECT_CLASS_CIRCLE,l=i[1].type===n.OBJECT_TYPE_CONIC||i[1].elementClass===n.OBJECT_CLASS_CIRCLE,c=i[0].elementClass===n.OBJECT_CLASS_LINE,d=i[1].elementClass===n.OBJECT_CLASS_LINE),2!==i.length||!(h&&d||c&&l))throw new Error(\"JSXGraph: Can't create 'pole point' with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent type: [conic|circle,line], [line,conic|circle]\");return d?(o=e.select(i[0]),a=e.select(i[1])):(o=e.select(i[1]),a=e.select(i[0])),s=e.create(\"point\",[function(){var e=o.quadraticform,i=a.stdform.slice(0,3);return[t.Math.Numerics.det([i,e[1],e[2]]),t.Math.Numerics.det([e[0],i,e[2]]),t.Math.Numerics.det([e[0],e[1],i])];}],r),s.elType=\"polepoint\",s.setParents([o.id,a.id]),o.addChild(s),a.addChild(s),s;},t.registerElement(\"point\",t.createPoint),t.registerElement(\"glider\",t.createGlider),t.registerElement(\"intersection\",t.createIntersectionPoint),t.registerElement(\"otherintersection\",t.createOtherIntersectionPoint),t.registerElement(\"polepoint\",t.createPolePoint),{Point:t.Point,createPoint:t.createPoint,createGlider:t.createGlider,createIntersection:t.createIntersectionPoint,createOtherIntersection:t.createOtherIntersectionPoint,createPolePoint:t.createPolePoint};}),define(\"base/line\",[\"jxg\",\"math/math\",\"math/geometry\",\"math/numerics\",\"math/statistics\",\"base/constants\",\"base/coords\",\"base/element\",\"utils/type\",\"base/point\"],function(t,e,i,r,s,o,n,a,h,l){\"use strict\";return t.Line=function(e,i,r,s){this.constructor(e,s,o.OBJECT_TYPE_LINE,o.OBJECT_CLASS_LINE),this.point1=this.board.select(i),this.point2=this.board.select(r),this.ticks=[],this.defaultTicks=null,this.parentPolygon=null,this.id=this.board.setId(this,\"L\"),this.board.renderer.drawLine(this),this.board.finalizeAdding(this),this.elType=\"line\",this.point1.addChild(this),this.point2.addChild(this),this.inherits.push(this.point1,this.point2),this.updateStdform(),this.createLabel(),this.methodMap=t.deepCopy(this.methodMap,{point1:\"point1\",point2:\"point2\",getSlope:\"getSlope\",getRise:\"getRise\",getYIntersect:\"getRise\",getAngle:\"getAngle\",L:\"L\",length:\"L\"});},t.Line.prototype=new a(),t.extend(t.Line.prototype,{hasPoint:function(t,r){var s,a,l,c,d,u,p,f,m,g=[],b=[1,t,r],v=h.evaluate(this.visProp.strokewidth);return h.isObject(h.evaluate(this.visProp.precision))?(m=this.board._inputDevice,f=h.evaluate(this.visProp.precision[m])):f=this.board.options.precision.hasPoint,f+=.5*v,g[0]=this.stdform[0]-this.stdform[1]*this.board.origin.scrCoords[1]/this.board.unitX+this.stdform[2]*this.board.origin.scrCoords[2]/this.board.unitY,g[1]=this.stdform[1]/this.board.unitX,g[2]=this.stdform[2]/-this.board.unitY,s=i.distPointLine(b,g),!(isNaN(s)||s>f)&&(!(!h.evaluate(this.visProp.straightfirst)||!h.evaluate(this.visProp.straightlast))||(l=this.point1.coords,c=this.point2.coords,a=[0,g[1],g[2]],a=e.crossProduct(a,b),a=e.crossProduct(a,g),a[1]/=a[0],a[2]/=a[0],a[0]=1,a=new n(o.COORDS_BY_SCREEN,a.slice(1),this.board).usrCoords,d=l.distance(o.COORDS_BY_USER,c),l=l.usrCoords.slice(0),c=c.usrCoords.slice(0),d<e.eps?u=0:(d===Number.POSITIVE_INFINITY&&(d=1/e.eps,Math.abs(c[0])<e.eps?(d/=i.distance([0,0,0],c),c=[1,l[1]+c[1]*d,l[2]+c[2]*d]):(d/=i.distance([0,0,0],l),l=[1,c[1]+l[1]*d,c[2]+l[2]*d])),p=1,d=c[p]-l[p],Math.abs(d)<e.eps&&(p=2,d=c[p]-l[p]),u=(a[p]-l[p])/d),!(!h.evaluate(this.visProp.straightfirst)&&u<0)&&!(!h.evaluate(this.visProp.straightlast)&&u>1)));},update:function(){var t;return this.needsUpdate?(this.constrained&&(h.isFunction(this.funps)?(t=this.funps())&&t.length&&2===t.length&&(this.point1=t[0],this.point2=t[1]):(h.isFunction(this.funp1)&&(t=this.funp1(),h.isPoint(t)?this.point1=t:t&&t.length&&2===t.length&&this.point1.setPositionDirectly(o.COORDS_BY_USER,t)),h.isFunction(this.funp2)&&(t=this.funp2(),h.isPoint(t)?this.point2=t:t&&t.length&&2===t.length&&this.point2.setPositionDirectly(o.COORDS_BY_USER,t)))),this.updateSegmentFixedLength(),this.updateStdform(),h.evaluate(this.visProp.trace)&&this.cloneToBackground(!0),this):this;},updateSegmentFixedLength:function(){var t,i,r,s,n,a,l,c;return this.hasFixedLength?(t=this.point1.Dist(this.point2),i=this.fixedLength(),r=this.fixedLengthOldCoords[0].distance(o.COORDS_BY_USER,this.point1.coords),s=this.fixedLengthOldCoords[1].distance(o.COORDS_BY_USER,this.point2.coords),(r>e.eps||s>e.eps||t!==i)&&(n=this.point1.isDraggable&&this.point1.type!==o.OBJECT_TYPE_GLIDER&&!h.evaluate(this.point1.visProp.fixed),a=this.point2.isDraggable&&this.point2.type!==o.OBJECT_TYPE_GLIDER&&!h.evaluate(this.point2.visProp.fixed),t>e.eps?r>s&&a||r<=s&&a&&!n?(this.point2.setPositionDirectly(o.COORDS_BY_USER,[this.point1.X()+(this.point2.X()-this.point1.X())*i/t,this.point1.Y()+(this.point2.Y()-this.point1.Y())*i/t]),this.point2.fullUpdate()):(r<=s&&n||r>s&&n&&!a)&&(this.point1.setPositionDirectly(o.COORDS_BY_USER,[this.point2.X()+(this.point1.X()-this.point2.X())*i/t,this.point2.Y()+(this.point1.Y()-this.point2.Y())*i/t]),this.point1.fullUpdate()):(l=Math.random()-.5,c=Math.random()-.5,t=Math.sqrt(l*l+c*c),a?(this.point2.setPositionDirectly(o.COORDS_BY_USER,[this.point1.X()+l*i/t,this.point1.Y()+c*i/t]),this.point2.fullUpdate()):n&&(this.point1.setPositionDirectly(o.COORDS_BY_USER,[this.point2.X()+l*i/t,this.point2.Y()+c*i/t]),this.point1.fullUpdate())),this.fixedLengthOldCoords[0].setCoordinates(o.COORDS_BY_USER,this.point1.coords.usrCoords),this.fixedLengthOldCoords[1].setCoordinates(o.COORDS_BY_USER,this.point2.coords.usrCoords)),this):this;},updateStdform:function(){var t=e.crossProduct(this.point1.coords.usrCoords,this.point2.coords.usrCoords);this.stdform[0]=t[0],this.stdform[1]=t[1],this.stdform[2]=t[2],this.stdform[3]=0,this.normalize();},updateRenderer:function(){return this.needsUpdate?(this.visPropCalc.visible&&(this.isReal=!isNaN(this.point1.coords.usrCoords[1]+this.point1.coords.usrCoords[2]+this.point2.coords.usrCoords[1]+this.point2.coords.usrCoords[2])&&e.innerProduct(this.stdform,this.stdform,3)>=e.eps*e.eps,this.isReal||this.updateVisibility(!1)),this.visPropCalc.visible&&this.board.renderer.updateLine(this),this.hasLabel&&this.visPropCalc.visible&&this.label&&this.label.visPropCalc.visible&&this.isReal&&(this.label.update(),this.board.renderer.updateText(this.label)),this.setDisplayRendNode(),this.needsUpdate=!1,this):this;},generatePolynomial:function(t){var e=this.point1.symbolic.x,i=this.point1.symbolic.y,r=this.point2.symbolic.x,s=this.point2.symbolic.y,o=t.symbolic.x,n=t.symbolic.y;return[[\"(\",i,\")*(\",o,\")-(\",i,\")*(\",r,\")+(\",n,\")*(\",r,\")-(\",e,\")*(\",n,\")+(\",e,\")*(\",s,\")-(\",o,\")*(\",s,\")\"].join(\"\")];},getRise:function(){return Math.abs(this.stdform[2])>=e.eps?-this.stdform[0]/this.stdform[2]:1/0;},getSlope:function(){return Math.abs(this.stdform[2])>=e.eps?-this.stdform[1]/this.stdform[2]:1/0;},getAngle:function(){return Math.atan2(-this.stdform[1],this.stdform[2]);},setStraight:function(t,e){return this.visProp.straightfirst=t,this.visProp.straightlast=e,this.board.renderer.updateLine(this),this;},getTextAnchor:function(){return new n(o.COORDS_BY_USER,[.5*(this.point2.X()+this.point1.X()),.5*(this.point2.Y()+this.point1.Y())],this.board);},setLabelRelativeCoords:function(t){h.exists(this.label)&&(this.label.relativeCoords=new n(o.COORDS_BY_SCREEN,[t[0],-t[1]],this.board));},getLabelAnchor:function(){var t,r,s=0,a=new n(o.COORDS_BY_USER,this.point1.coords.usrCoords,this.board),l=new n(o.COORDS_BY_USER,this.point2.coords.usrCoords,this.board),c=h.evaluate(this.visProp.straightfirst),d=h.evaluate(this.visProp.straightlast);if((c||d)&&i.calcStraight(this,a,l,0),a=a.scrCoords,l=l.scrCoords,!h.exists(this.label))return new n(o.COORDS_BY_SCREEN,[NaN,NaN],this.board);switch(h.evaluate(this.label.visProp.position)){case\"lft\":case\"llft\":case\"ulft\":a[1]<=l[1]?(t=a[1],r=a[2]):(t=l[1],r=l[2]);break;case\"rt\":case\"lrt\":case\"urt\":a[1]>l[1]?(t=a[1],r=a[2]):(t=l[1],r=l[2]);break;default:t=.5*(a[1]+l[1]),r=.5*(a[2]+l[2]);}return(c||d)&&(h.exists(this.label)&&(s=h.evaluate(this.label.visProp.fontsize)),Math.abs(t)<e.eps?t=s:this.board.canvasWidth+e.eps>t&&t>this.board.canvasWidth-s-e.eps&&(t=this.board.canvasWidth-s),e.eps+s>r&&r>-e.eps?r=s:this.board.canvasHeight+e.eps>r&&r>this.board.canvasHeight-s-e.eps&&(r=this.board.canvasHeight-s)),new n(o.COORDS_BY_SCREEN,[t,r],this.board);},cloneToBackground:function(){var t,e,i,r={};return r.id=this.id+\"T\"+this.numTraces,r.elementClass=o.OBJECT_CLASS_LINE,this.numTraces++,r.point1=this.point1,r.point2=this.point2,r.stdform=this.stdform,r.board=this.board,r.visProp=h.deepCopy(this.visProp,this.visProp.traceattributes,!0),r.visProp.layer=this.board.options.layer.trace,h.clearVisPropOld(r),r.visPropCalc={visible:h.evaluate(r.visProp.visible)},e=this.getSlope(),t=this.getRise(),r.getSlope=function(){return e;},r.getRise=function(){return t;},i=this.board.renderer.enhancedRendering,this.board.renderer.enhancedRendering=!0,this.board.renderer.drawLine(r),this.board.renderer.enhancedRendering=i,this.traces[r.id]=r.rendNode,this;},addTransform:function(t){var e,i=h.isArray(t)?t:[t],r=i.length;for(e=0;e<r;e++)this.point1.transformations.push(i[e]),this.point2.transformations.push(i[e]);return this;},snapToGrid:function(t){var e,r,a,l,c,d,u,p,f;return h.evaluate(this.visProp.snaptogrid)?this.parents.length<3?(this.point1.handleSnapToGrid(!0,!0),this.point2.handleSnapToGrid(!0,!0)):h.exists(t)&&(p=h.evaluate(this.visProp.snapsizex),f=h.evaluate(this.visProp.snapsizey),e=new n(o.COORDS_BY_SCREEN,[t.Xprev,t.Yprev],this.board),d=e.usrCoords[1],u=e.usrCoords[2],p<=0&&this.board.defaultAxes&&this.board.defaultAxes.x.defaultTicks&&(c=this.board.defaultAxes.x.defaultTicks,p=c.ticksDelta*(h.evaluate(c.visProp.minorticks)+1)),f<=0&&this.board.defaultAxes&&this.board.defaultAxes.y.defaultTicks&&(c=this.board.defaultAxes.y.defaultTicks,f=c.ticksDelta*(h.evaluate(c.visProp.minorticks)+1)),p>0&&f>0&&(r=i.projectPointToLine({coords:e},this,this.board),a=s.subtract([1,Math.round(d/p)*p,Math.round(u/f)*f],r.usrCoords),l=this.board.create(\"transform\",a.slice(1),{type:\"translate\"}),l.applyOnce([this.point1,this.point2]))):(this.point1.handleSnapToGrid(!1,!0),this.point2.handleSnapToGrid(!1,!0)),this;},snapToPoints:function(){var t=h.evaluate(this.visProp.snaptopoints);return this.parents.length<3&&(this.point1.handleSnapToPoints(t),this.point2.handleSnapToPoints(t)),this;},X:function(t){var i,r=this.stdform[2];return i=Math.abs(this.point1.coords.usrCoords[0])>e.eps?this.point1.coords.usrCoords[1]:this.point2.coords.usrCoords[1],t=2*(t-.5),(1-Math.abs(t))*i-t*r;},Y:function(t){var i,r=this.stdform[1];return i=Math.abs(this.point1.coords.usrCoords[0])>e.eps?this.point1.coords.usrCoords[2]:this.point2.coords.usrCoords[2],t=2*(t-.5),(1-Math.abs(t))*i+t*r;},Z:function(t){var i=Math.abs(this.point1.coords.usrCoords[0])>e.eps?this.point1.coords.usrCoords[0]:this.point2.coords.usrCoords[0];return t=2*(t-.5),(1-Math.abs(t))*i;},L:function(){return this.point1.Dist(this.point2);},minX:function(){return 0;},maxX:function(){return 1;},bounds:function(){var t=this.point1.coords.usrCoords,e=this.point2.coords.usrCoords;return[Math.min(t[1],e[1]),Math.max(t[2],e[2]),Math.max(t[1],e[1]),Math.min(t[2],e[2])];},remove:function(){this.removeAllTicks(),a.prototype.remove.call(this);}}),t.createLine=function(e,i,r){var s,o,n,a,c,d,u,p=[],f=!1,m=!1;if(2===i.length){if(h.isArray(i[0])&&i[0].length>1)d=h.copyAttributes(r,e.options,\"line\",\"point1\"),n=e.create(\"point\",i[0],d);else if(h.isString(i[0])||h.isPoint(i[0]))n=e.select(i[0]);else if(h.isFunction(i[0])&&h.isPoint(i[0]()))n=i[0](),m=!0;else if(h.isFunction(i[0])&&i[0]().length&&i[0]().length>=2)d=h.copyAttributes(r,e.options,\"line\",\"point1\"),n=l.createPoint(e,i[0](),d),m=!0;else{if(!h.isObject(i[0])||!h.isTransformationOrArray(i[1]))throw new Error(\"JSXGraph: Can't create line with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,point], [[x1,y1],[x2,y2]], [a,b,c]\");f=!0,d=h.copyAttributes(r,e.options,\"line\",\"point1\"),n=e.create(\"point\",[i[0].point1,i[1]],d);}if(f)d=h.copyAttributes(r,e.options,\"line\",\"point2\"),a=e.create(\"point\",[i[0].point2,i[1]],d);else if(h.isArray(i[1])&&i[1].length>1)d=h.copyAttributes(r,e.options,\"line\",\"point2\"),a=e.create(\"point\",i[1],d);else if(h.isString(i[1])||h.isPoint(i[1]))a=e.select(i[1]);else if(h.isFunction(i[1])&&h.isPoint(i[1]()))a=i[1](),m=!0;else{if(!(h.isFunction(i[1])&&i[1]().length&&i[1]().length>=2))throw new Error(\"JSXGraph: Can't create line with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,point], [[x1,y1],[x2,y2]], [a,b,c]\");d=h.copyAttributes(r,e.options,\"line\",\"point2\"),a=l.createPoint(e,i[1](),d),m=!0;}d=h.copyAttributes(r,e.options,\"line\"),o=new t.Line(e,n,a,d),m?(o.constrained=!0,o.funp1=i[0],o.funp2=i[1]):f||(o.isDraggable=!0),o.setParents([n.id,a.id]);}else if(3===i.length){for(u=!0,c=0;c<3;c++)if(h.isNumber(i[c]))p[c]=h.createFunction(i[c]);else{if(!h.isFunction(i[c]))throw new Error(\"JSXGraph: Can't create line with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"' and '\"+typeof i[2]+\"'.\\nPossible parent types: [point,point], [[x1,y1],[x2,y2]], [a,b,c]\");p[c]=i[c],u=!1;}d=h.copyAttributes(r,e.options,\"line\",\"point1\"),n=u?e.create(\"point\",[p[2]()*p[2]()+p[1]()*p[1](),p[2]()-p[1]()*p[0]()+p[2](),-p[1]()-p[2]()*p[0]()-p[1]()],d):e.create(\"point\",[function(){return .5*(p[2]()*p[2]()+p[1]()*p[1]());},function(){return .5*(p[2]()-p[1]()*p[0]()+p[2]());},function(){return .5*(-p[1]()-p[2]()*p[0]()-p[1]());}],d),d=h.copyAttributes(r,e.options,\"line\",\"point2\"),a=u?e.create(\"point\",[p[2]()*p[2]()+p[1]()*p[1](),-p[1]()*p[0]()+p[2](),-p[2]()*p[0]()-p[1]()],d):e.create(\"point\",[function(){return p[2]()*p[2]()+p[1]()*p[1]();},function(){return-p[1]()*p[0]()+p[2]();},function(){return-p[2]()*p[0]()-p[1]();}],d),n.prepareUpdate().update(),a.prepareUpdate().update(),d=h.copyAttributes(r,e.options,\"line\"),o=new t.Line(e,n,a,d),o.isDraggable=u,o.setParents([n,a]);}else if(1===i.length&&h.isFunction(i[0])&&2===i[0]().length&&h.isPoint(i[0]()[0])&&h.isPoint(i[0]()[1]))s=i[0](),d=h.copyAttributes(r,e.options,\"line\"),o=new t.Line(e,s[0],s[1],d),o.constrained=!0,o.funps=i[0],o.setParents(s);else{if(!(1===i.length&&h.isFunction(i[0])&&3===i[0]().length&&h.isNumber(i[0]()[0])&&h.isNumber(i[0]()[1])&&h.isNumber(i[0]()[2])))throw new Error(\"JSXGraph: Can't create line with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,point], [[x1,y1],[x2,y2]], [a,b,c]\");s=i[0],d=h.copyAttributes(r,e.options,\"line\",\"point1\"),n=e.create(\"point\",[function(){var t=s();return[.5*(t[2]*t[2]+t[1]*t[1]),.5*(t[2]-t[1]*t[0]+t[2]),.5*(-t[1]-t[2]*t[0]-t[1])];}],d),d=h.copyAttributes(r,e.options,\"line\",\"point2\"),a=e.create(\"point\",[function(){var t=s();return[t[2]*t[2]+t[1]*t[1],-t[1]*t[0]+t[2],-t[2]*t[0]-t[1]];}],d),d=h.copyAttributes(r,e.options,\"line\"),o=new t.Line(e,n,a,d),o.constrained=!0,o.funps=i[0],o.setParents([n,a]);}return o;},t.registerElement(\"line\",t.createLine),t.createSegment=function(t,e,i){var r,s;if(i.straightFirst=!1,i.straightLast=!1,s=h.copyAttributes(i,t.options,\"segment\"),r=t.create(\"line\",e.slice(0,2),s),3===e.length){if(r.hasFixedLength=!0,h.isNumber(e[2]))r.fixedLength=function(){return e[2];};else{if(!h.isFunction(e[2]))throw new Error(\"JSXGraph: Can't create segment with third parent type '\"+typeof e[2]+\"'.\\nPossible third parent types: number or function\");r.fixedLength=e[2];}r.getParents=function(){return this.parents.concat(this.fixedLength());},r.fixedLengthOldCoords=[],r.fixedLengthOldCoords[0]=new n(o.COORDS_BY_USER,r.point1.coords.usrCoords.slice(1,3),t),r.fixedLengthOldCoords[1]=new n(o.COORDS_BY_USER,r.point2.coords.usrCoords.slice(1,3),t);}return r.elType=\"segment\",r;},t.registerElement(\"segment\",t.createSegment),t.createArrow=function(t,e,i){var r,s;return i.straightFirst=!1,i.straightLast=!1,s=h.copyAttributes(i,t.options,\"arrow\"),r=t.create(\"line\",e,s),r.type=o.OBJECT_TYPE_VECTOR,r.elType=\"arrow\",r;},t.registerElement(\"arrow\",t.createArrow),t.createAxis=function(t,e,i){var r,s,n,a,l;if(!h.isArray(e[0])&&!h.isPoint(e[0])||!h.isArray(e[1])&&!h.isPoint(e[1]))throw new Error(\"JSXGraph: Can't create axis with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [point,point], [[x1,y1],[x2,y2]]\");r=h.copyAttributes(i,t.options,\"axis\"),n=t.create(\"line\",e,r),n.type=o.OBJECT_TYPE_AXIS,n.isDraggable=!1,n.point1.isDraggable=!1,n.point2.isDraggable=!1;for(a in n.ancestors)n.ancestors.hasOwnProperty(a)&&(n.ancestors[a].type=o.OBJECT_TYPE_AXISPOINT);return s=h.copyAttributes(i,t.options,\"axis\",\"ticks\"),l=h.exists(s.ticksdistance)?s.ticksdistance:h.isArray(s.ticks)?s.ticks:1,n.defaultTicks=t.create(\"ticks\",[n,l],s),n.defaultTicks.dump=!1,n.elType=\"axis\",n.subs={ticks:n.defaultTicks},n.inherits.push(n.defaultTicks),n;},t.registerElement(\"axis\",t.createAxis),t.createTangent=function(t,i,s){var n,a,l,c,d;if(1===i.length)n=i[0],a=n.slideObject;else{if(2!==i.length)throw new Error(\"JSXGraph: Can't create tangent with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [glider], [point,line|curve|circle|conic]\");if(h.isPoint(i[0]))n=i[0],a=i[1];else{if(!h.isPoint(i[1]))throw new Error(\"JSXGraph: Can't create tangent with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [glider], [point,line|curve|circle|conic]\");a=i[0],n=i[1];}}if(a.elementClass===o.OBJECT_CLASS_LINE?(d=t.create(\"line\",[a.point1,a.point2],s),d.glider=n):a.elementClass===o.OBJECT_CLASS_CURVE&&a.type!==o.OBJECT_TYPE_CONIC?\"plot\"!==h.evaluate(a.visProp.curvetype)?(d=t.create(\"line\",[function(){var t=a.X,e=a.Y;return-n.X()*r.D(e)(n.position)+n.Y()*r.D(t)(n.position);},function(){return r.D(a.Y)(n.position);},function(){return-r.D(a.X)(n.position);}],s),n.addChild(d),d.glider=n):(d=t.create(\"line\",[function(){var t,e,i=Math.floor(n.position);return i===a.numberPoints-1&&i--,i<0?1:(t=a.points[i].usrCoords,e=a.points[i+1].usrCoords,t[2]*e[1]-t[1]*e[2]);},function(){var t,e,i=Math.floor(n.position);return i===a.numberPoints-1&&i--,i<0?0:(t=a.points[i].usrCoords,e=a.points[i+1].usrCoords,e[2]-t[2]);},function(){var t,e,i=Math.floor(n.position);return i===a.numberPoints-1&&i--,i<0?0:(t=a.points[i].usrCoords,e=a.points[i+1].usrCoords,t[1]-e[1]);}],s),n.addChild(d),d.glider=n):a.type===o.OBJECT_TYPE_TURTLE?(d=t.create(\"line\",[function(){var t=Math.floor(n.position);for(l=0;l<a.objects.length;l++)if(c=a.objects[l],c.type===o.OBJECT_TYPE_CURVE){if(t<c.numberPoints)break;t-=c.numberPoints;}return t===c.numberPoints-1&&t--,t<0?1:c.Y(t)*c.X(t+1)-c.X(t)*c.Y(t+1);},function(){var t=Math.floor(n.position);for(l=0;l<a.objects.length;l++)if(c=a.objects[l],c.type===o.OBJECT_TYPE_CURVE){if(t<c.numberPoints)break;t-=c.numberPoints;}return t===c.numberPoints-1&&t--,t<0?0:c.Y(t+1)-c.Y(t);},function(){var t=Math.floor(n.position);for(l=0;l<a.objects.length;l++)if(c=a.objects[l],c.type===o.OBJECT_TYPE_CURVE){if(t<c.numberPoints)break;t-=c.numberPoints;}return t===c.numberPoints-1&&t--,t<0?0:c.X(t)-c.X(t+1);}],s),n.addChild(d),d.glider=n):a.elementClass!==o.OBJECT_CLASS_CIRCLE&&a.type!==o.OBJECT_TYPE_CONIC||(d=t.create(\"line\",[function(){return e.matVecMult(a.quadraticform,n.coords.usrCoords)[0];},function(){return e.matVecMult(a.quadraticform,n.coords.usrCoords)[1];},function(){return e.matVecMult(a.quadraticform,n.coords.usrCoords)[2];}],s),n.addChild(d),d.glider=n),!h.exists(d))throw new Error(\"JSXGraph: Couldn't create tangent with the given parents.\");return d.elType=\"tangent\",d.type=o.OBJECT_TYPE_TANGENT,d.setParents(i),d;},t.createRadicalAxis=function(t,i,r){var s,n,a;if(2!==i.length||i[0].elementClass!==o.OBJECT_CLASS_CIRCLE||i[1].elementClass!==o.OBJECT_CLASS_CIRCLE)throw new Error(\"JSXGraph: Can't create 'radical axis' with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent type: [circle,circle]\");return n=t.select(i[0]),a=t.select(i[1]),s=t.create(\"line\",[function(){var t=n.stdform,i=a.stdform;return e.matVecMult(e.transpose([t.slice(0,3),i.slice(0,3)]),[i[3],-t[3]]);}],r),s.elType=\"radicalaxis\",s.setParents([n.id,a.id]),n.addChild(s),a.addChild(s),s;},t.createPolarLine=function(t,e,i){var r,s,n,a,l,c,d;if(e.length>1&&(a=e[0].type===o.OBJECT_TYPE_CONIC||e[0].elementClass===o.OBJECT_CLASS_CIRCLE,l=e[1].type===o.OBJECT_TYPE_CONIC||e[1].elementClass===o.OBJECT_CLASS_CIRCLE,c=h.isPoint(e[0]),d=h.isPoint(e[1])),2!==e.length||!(a&&d||c&&l))throw new Error(\"JSXGraph: Can't create 'polar line' with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent type: [conic|circle,point], [point,conic|circle]\");return d?(s=t.select(e[0]),n=t.select(e[1])):(s=t.select(e[1]),n=t.select(e[0])),r=t.create(\"tangent\",[s,n],i),r.elType=\"polarline\",r;},t.registerElement(\"tangent\",t.createTangent),t.registerElement(\"polar\",t.createTangent),t.registerElement(\"radicalaxis\",t.createRadicalAxis),t.registerElement(\"polarline\",t.createPolarLine),{Line:t.Line,createLine:t.createLine,createTangent:t.createTangent,createPolar:t.createTangent,createSegment:t.createSegment,createAxis:t.createAxis,createArrow:t.createArrow,createRadicalAxis:t.createRadicalAxis,createPolarLine:t.createPolarLine};}),define(\"base/curve\",[\"jxg\",\"base/constants\",\"base/coords\",\"base/element\",\"math/math\",\"math/numerics\",\"math/plot\",\"math/geometry\",\"parser/geonext\",\"utils/type\",\"math/qdt\"],function(t,e,i,r,s,o,n,a,h,l,c){\"use strict\";return t.Curve=function(t,i,r){this.constructor(t,r,e.OBJECT_TYPE_CURVE,e.OBJECT_CLASS_CURVE),this.points=[],this.numberPoints=l.evaluate(this.visProp.numberpointshigh),this.bezierDegree=1,this.dataX=null,this.dataY=null,this.ticks=[],this.qdt=null,l.exists(i[0])?this.varname=i[0]:this.varname=\"x\",this.xterm=i[1],this.yterm=i[2],this.generateTerm(this.varname,this.xterm,this.yterm,i[3],i[4]),this.updateCurve(),this.id=this.board.setId(this,\"G\"),this.board.renderer.drawCurve(this),this.board.finalizeAdding(this),this.createGradient(),this.elType=\"curve\",this.createLabel(),l.isString(this.xterm)&&this.notifyParents(this.xterm),l.isString(this.yterm)&&this.notifyParents(this.yterm),this.methodMap=l.deepCopy(this.methodMap,{generateTerm:\"generateTerm\",setTerm:\"generateTerm\",move:\"moveTo\",moveTo:\"moveTo\"});},t.Curve.prototype=new r(),t.extend(t.Curve.prototype,{minX:function(){var t;return\"polar\"===l.evaluate(this.visProp.curvetype)?0:(t=new i(e.COORDS_BY_SCREEN,[.1*-this.board.canvasWidth,0],this.board,!1),t.usrCoords[1]);},maxX:function(){var t;return\"polar\"===l.evaluate(this.visProp.curvetype)?2*Math.PI:(t=new i(e.COORDS_BY_SCREEN,[1.1*this.board.canvasWidth,0],this.board,!1),t.usrCoords[1]);},X:function(t){return NaN;},Y:function(t){return NaN;},Z:function(t){return 1;},hasPoint:function(t,r,o){var n,h,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S=[],O=l.evaluate(this.visProp.numberpointslow),w=(this.maxX()-this.minX())/O,T=1/0;if(l.isObject(l.evaluate(this.visProp.precision))?(y=this.board._inputDevice,v=l.evaluate(this.visProp.precision[y])):v=this.board.options.precision.hasPoint,h=new i(e.COORDS_BY_SCREEN,[t,r],this.board,!1),t=h.usrCoords[1],r=h.usrCoords[2],v+=.5*l.evaluate(this.visProp.strokewidth),v*=v,C=this.board.unitX*this.board.unitX,_=this.board.unitY*this.board.unitY,E=this.minX(),x=this.maxX(),l.exists(this._visibleArea)&&(E=this._visibleArea[0],x=this._visibleArea[1],w=(x-E)/O),\"parameter\"===(P=l.evaluate(this.visProp.curvetype))||\"polar\"===P)for(this.transformations.length>0&&(this.updateTransformMatrix(),d=s.inverse(this.transformMat),u=s.matVecMult(d,[1,t,r]),t=u[1],r=u[2]),p=0,n=E;p<O;p++){if(f=this.X(n,!0),m=this.Y(n,!0),(T=(t-f)*(t-f)*C+(r-m)*(r-m)*_)<=v)return!0;n+=w;}else if(\"plot\"===P||\"functiongraph\"===P){for((!l.exists(o)||o<0)&&(o=0),l.exists(this.qdt)&&l.evaluate(this.visProp.useqdt)&&3!==this.bezierDegree?(b=this.qdt.query(new i(e.COORDS_BY_USER,[t,r],this.board)),g=b.points,c=g.length):(g=this.points,c=this.numberPoints-1),p=o;p<c;p++)if(3===this.bezierDegree?S.push(a.projectCoordsToBeziersegment([1,t,r],this,p)):b?(g[p].prev&&(S=a.projectCoordsToSegment([1,t,r],g[p].prev.usrCoords,g[p].usrCoords)),g[p].next&&g[p+1]!==g[p].next&&(S=a.projectCoordsToSegment([1,t,r],g[p].usrCoords,g[p].next.usrCoords))):S=a.projectCoordsToSegment([1,t,r],g[p].usrCoords,g[p+1].usrCoords),S[1]>=0&&S[1]<=1&&(t-S[0][1])*(t-S[0][1])*C+(r-S[0][2])*(r-S[0][2])*_<=v)return!0;return!1;}return T<v;},allocatePoints:function(){var t,r;if(r=this.numberPoints,this.points.length<this.numberPoints)for(t=this.points.length;t<r;t++)this.points[t]=new i(e.COORDS_BY_USER,[0,0],this.board,!1);},update:function(){return this.needsUpdate&&(l.evaluate(this.visProp.trace)&&this.cloneToBackground(!0),this.updateCurve()),this;},updateRenderer:function(){return this.needsUpdate?(this.visPropCalc.visible&&(this.isReal=n.checkReal(this.points),this.isReal||this.updateVisibility(!1)),this.visPropCalc.visible&&this.board.renderer.updateCurve(this),this.hasLabel&&this.visPropCalc.visible&&this.label&&this.label.visPropCalc.visible&&this.isReal&&(this.label.update(),this.board.renderer.updateText(this.label)),this.setDisplayRendNode(),this.needsUpdate=!1,this):this;},updateDataArray:function(){},updateCurve:function(){var t,i,r,s,a,h,d=this.visProp.plotversion,u=!1;if(this.updateTransformMatrix(),this.updateDataArray(),i=this.minX(),r=this.maxX(),l.exists(this.dataX))for(this.numberPoints=this.dataX.length,t=this.numberPoints,this.allocatePoints(),h=0;h<t;h++)s=h,l.exists(this.dataY)?(a=h,this.points[h].setCoordinates(e.COORDS_BY_USER,[this.dataX[h],this.dataY[h]],!1)):(a=this.X(s),this.points[h].setCoordinates(e.COORDS_BY_USER,[this.dataX[h],this.Y(a,u)],!1)),this.points[h]._t=h,u=!0;else if(l.evaluate(this.visProp.doadvancedplot)?1===d||l.evaluate(this.visProp.doadvancedplotold)?n.updateParametricCurveOld(this,i,r):2===d?n.updateParametricCurve_v2(this,i,r):3===d?n.updateParametricCurve_v3(this,i,r):4===d?n.updateParametricCurve_v4(this,i,r):n.updateParametricCurve_v2(this,i,r):(this.board.updateQuality===this.board.BOARD_QUALITY_HIGH?this.numberPoints=l.evaluate(this.visProp.numberpointshigh):this.numberPoints=l.evaluate(this.visProp.numberpointslow),this.allocatePoints(),n.updateParametricCurveNaive(this,i,r,this.numberPoints)),t=this.numberPoints,l.evaluate(this.visProp.useqdt)&&this.board.updateQuality===this.board.BOARD_QUALITY_HIGH)for(this.qdt=new c(this.board.getBoundingBox()),h=0;h<this.points.length;h++)this.qdt.insert(this.points[h]),h>0&&(this.points[h].prev=this.points[h-1]),h<t-1&&(this.points[h].next=this.points[h+1]);for(\"plot\"!==l.evaluate(this.visProp.curvetype)&&l.evaluate(this.visProp.rdpsmoothing)&&(this.points=o.RamerDouglasPeucker(this.points,.2),this.numberPoints=this.points.length),t=this.numberPoints,h=0;h<t;h++)this.updateTransform(this.points[h]);return this;},updateTransformMatrix:function(){var t,e,i=this.transformations.length;for(this.transformMat=[[1,0,0],[0,1,0],[0,0,1]],e=0;e<i;e++)t=this.transformations[e],t.update(),this.transformMat=s.matMatMult(t.matrix,this.transformMat);return this;},updateTransform:function(t){var i;return this.transformations.length>0&&(i=s.matVecMult(this.transformMat,t.usrCoords),t.setCoordinates(e.COORDS_BY_USER,i,!1,!0)),t;},addTransform:function(t){var e,i=l.isArray(t)?t:[t],r=i.length;for(e=0;e<r;e++)this.transformations.push(i[e]);return this;},interpolationFunctionFromArray:function(t){var e=\"data\"+t,i=this;return function(t,r){var s,o,n,a,h,c=i[e],d=c.length,u=[];if(isNaN(t))return NaN;if(t<0)return l.isFunction(c[0])?c[0]():c[0];if(3===i.bezierDegree){if(h=(d-1)/3,t>=h)return l.isFunction(c[c.length-1])?c[c.length-1]():c[c.length-1];for(s=3*Math.floor(t),n=t%1,a=1-n,o=0;o<4;o++)l.isFunction(c[s+o])?u[o]=c[s+o]():u[o]=c[s+o];return a*a*(a*u[0]+3*n*u[1])+(3*a*u[2]+n*u[3])*n*n;}if((s=t>d-2?d-2:parseInt(Math.floor(t),10))===t)return l.isFunction(c[s])?c[s]():c[s];for(o=0;o<2;o++)l.isFunction(c[s+o])?u[o]=c[s+o]():u[o]=c[s+o];return u[0]+(u[1]-u[0])*(t-s);};},generateTerm:function(t,e,i,r,s){var o,n;l.isArray(e)?(this.dataX=e,this.numberPoints=this.dataX.length,this.X=this.interpolationFunctionFromArray.apply(this,[\"X\"]),this.visProp.curvetype=\"plot\",this.isDraggable=!0):(this.X=l.createFunction(e,this.board,t),l.isString(e)?this.visProp.curvetype=\"functiongraph\":(l.isFunction(e)||l.isNumber(e))&&(this.visProp.curvetype=\"parameter\"),this.isDraggable=!0),l.isArray(i)?(this.dataY=i,this.Y=this.interpolationFunctionFromArray.apply(this,[\"Y\"])):this.Y=l.createFunction(i,this.board,t),l.isFunction(e)&&l.isArray(i)&&(o=l.createFunction(i[0],this.board,\"\"),n=l.createFunction(i[1],this.board,\"\"),this.X=function(t){return e(t)*Math.cos(t)+o();},this.Y=function(t){return e(t)*Math.sin(t)+n();},this.visProp.curvetype=\"polar\"),l.exists(r)&&(this.minX=l.createFunction(r,this.board,\"\")),l.exists(s)&&(this.maxX=l.createFunction(s,this.board,\"\"));},notifyParents:function(t){var e,i,r,s=!1;r={xterm:1,yterm:1};for(e in r)if(r.hasOwnProperty(e)&&this.hasOwnProperty(e)&&this[e].origin){s=!0;for(i in this[e].origin.deps)this[e].origin.deps.hasOwnProperty(i)&&this[e].origin.deps[i].addChild(this);}s||h.findDependencies(this,t,this.board);},getLabelAnchor:function(){var t,r,s,o=.05*this.board.canvasWidth,n=.05*this.board.canvasHeight,h=.95*this.board.canvasWidth,c=.95*this.board.canvasHeight;switch(l.evaluate(this.visProp.label.position)){case\"ulft\":r=o,s=n;break;case\"llft\":r=o,s=c;break;case\"rt\":r=h,s=.5*c;break;case\"lrt\":r=h,s=c;break;case\"urt\":r=h,s=n;break;case\"top\":r=.5*h,s=n;break;case\"bot\":r=.5*h,s=c;break;default:r=o,s=.5*c;}return t=new i(e.COORDS_BY_SCREEN,[r,s],this.board,!1),a.projectCoordsToCurve(t.usrCoords[1],t.usrCoords[2],0,this,this.board)[0];},cloneToBackground:function(){var t,i={id:this.id+\"T\"+this.numTraces,elementClass:e.OBJECT_CLASS_CURVE,points:this.points.slice(0),bezierDegree:this.bezierDegree,numberPoints:this.numberPoints,board:this.board,visProp:l.deepCopy(this.visProp,this.visProp.traceattributes,!0)};return i.visProp.layer=this.board.options.layer.trace,i.visProp.curvetype=this.visProp.curvetype,this.numTraces++,l.clearVisPropOld(i),i.visPropCalc={visible:l.evaluate(i.visProp.visible)},t=this.board.renderer.enhancedRendering,this.board.renderer.enhancedRendering=!0,this.board.renderer.drawCurve(i),this.board.renderer.enhancedRendering=t,this.traces[i.id]=i.rendNode,this;},bounds:function(){var t,e,i,r=1/0,s=-1/0,n=1/0,a=-1/0,h=this.points.length;if(3===this.bezierDegree){for(t=0;t<h;t++)this.points[t].X=l.bind(function(){return this.usrCoords[1];},this.points[t]),this.points[t].Y=l.bind(function(){return this.usrCoords[2];},this.points[t]);return e=o.bezier(this.points),i=e[3](),r=o.fminbr(function(t){return e[0](t);},[0,i]),s=o.fminbr(function(t){return-e[0](t);},[0,i]),n=o.fminbr(function(t){return e[1](t);},[0,i]),a=o.fminbr(function(t){return-e[1](t);},[0,i]),r=e[0](r),s=e[0](s),n=e[1](n),a=e[1](a),[r,a,s,n];}for(t=0;t<h;t++)r>this.points[t].usrCoords[1]&&(r=this.points[t].usrCoords[1]),s<this.points[t].usrCoords[1]&&(s=this.points[t].usrCoords[1]),n>this.points[t].usrCoords[2]&&(n=this.points[t].usrCoords[2]),a<this.points[t].usrCoords[2]&&(a=this.points[t].usrCoords[2]);return[r,a,s,n];},getParents:function(){var t=[this.xterm,this.yterm,this.minX(),this.maxX()];return 0!==this.parents.length&&(t=this.parents),t;},moveTo:function(t){var i,r=[];return this.points.length>0&&!l.evaluate(this.visProp.fixed)&&(i=this.points[0],r=3===t.length?[t[0]-i.usrCoords[0],t[1]-i.usrCoords[1],t[2]-i.usrCoords[2]]:[t[0]-i.usrCoords[1],t[1]-i.usrCoords[2]],this.setPosition(e.COORDS_BY_USER,r)),this;},getTransformationSource:function(){var t,i;return l.exists(this._transformationSource)&&(i=this._transformationSource,i.elementClass===e.OBJECT_CLASS_CURVE&&(t=!0)),[t,i];}}),t.createCurve=function(i,r,s){var o,n,a=l.copyAttributes(s,i.options,\"curve\");return o=i.select(r[0],!0),l.isObject(o)&&(o.type===e.OBJECT_TYPE_CURVE||o.type===e.OBJECT_TYPE_ANGLE||o.type===e.OBJECT_TYPE_ARC||o.type===e.OBJECT_TYPE_CONIC||o.type===e.OBJECT_TYPE_SECTOR)&&l.isTransformationOrArray(r[1])?(o.type===e.OBJECT_TYPE_SECTOR?a=l.copyAttributes(s,i.options,\"sector\"):o.type===e.OBJECT_TYPE_ARC?a=l.copyAttributes(s,i.options,\"arc\"):o.type===e.OBJECT_TYPE_ANGLE?(l.exists(s.withLabel)||(s.withLabel=!1),a=l.copyAttributes(s,i.options,\"angle\")):a=l.copyAttributes(s,i.options,\"curve\"),a=l.copyAttributes(a,i.options,\"curve\"),n=new t.Curve(i,[\"x\",[],[]],a),n.updateDataArray=function(){var t,e=o.numberPoints;for(this.bezierDegree=o.bezierDegree,this.dataX=[],this.dataY=[],t=0;t<e;t++)this.dataX.push(o.points[t].usrCoords[1]),this.dataY.push(o.points[t].usrCoords[2]);return this;},n.addTransform(r[1]),o.addChild(n),n.setParents([o]),n._transformationSource=o,n):(a=l.copyAttributes(s,i.options,\"curve\"),new t.Curve(i,[\"x\"].concat(r),a));},t.registerElement(\"curve\",t.createCurve),t.createFunctiongraph=function(e,i,r){var s,o=[\"x\",\"x\"].concat(i);return s=l.copyAttributes(r,e.options,\"curve\"),s.curvetype=\"functiongraph\",new t.Curve(e,o,s);},t.registerElement(\"functiongraph\",t.createFunctiongraph),t.registerElement(\"plot\",t.createFunctiongraph),t.createSpline=function(e,i,r){var s,n,a;return n=function(){var t,e=[],r=[];return[function(s,n){var a,h,c;if(!n){if(e=[],r=[],2===i.length&&l.isArray(i[0])&&l.isArray(i[1])&&i[0].length===i[1].length)for(a=0;a<i[0].length;a++)l.isFunction(i[0][a])?e.push(i[0][a]()):e.push(i[0][a]),l.isFunction(i[1][a])?r.push(i[1][a]()):r.push(i[1][a]);else for(a=0;a<i.length;a++)if(l.isPoint(i[a]))e.push(i[a].X()),r.push(i[a].Y());else if(l.isArray(i[a])&&2===i[a].length)for(h=0;h<i.length;h++)l.isFunction(i[h][0])?e.push(i[h][0]()):e.push(i[h][0]),l.isFunction(i[h][1])?r.push(i[h][1]()):r.push(i[h][1]);else l.isFunction(i[a])&&2===i[a]().length&&(c=i[a](),e.push(c[0]),r.push(c[1]));t=o.splineDef(e,r);}return o.splineEval(s,e,r,t);},function(){return e[0];},function(){return e[e.length-1];}];},r=l.copyAttributes(r,e.options,\"curve\"),r.curvetype=\"functiongraph\",a=n(),s=new t.Curve(e,[\"x\",\"x\",a[0],a[1],a[2]],r),s.setParents(i),s.elType=\"spline\",s;},t.registerElement(\"spline\",t.createSpline),t.createCardinalSpline=function(e,i,r){var s,n,a,h,c,d,u,p,f,m=\"\\nPossible parent types: [points:array, tau:number|function, type:string]\";if(!l.exists(i[0])||!l.isArray(i[0]))throw new Error(\"JSXGraph: JXG.createCardinalSpline: argument 1 'points' has to be array of points or coordinate pairs\"+m);if(!l.exists(i[1])||!l.isNumber(i[1])&&!l.isFunction(i[1]))throw new Error(\"JSXGraph: JXG.createCardinalSpline: argument 2 'tau' has to be number between [0,1] or function'\"+m);if(!l.exists(i[2])||!l.isString(i[2]))throw new Error(\"JSXGraph: JXG.createCardinalSpline: argument 3 'type' has to be string 'uniform' or 'centripetal'\"+m);if(r=l.copyAttributes(r,e.options,\"curve\"),r=l.copyAttributes(r,e.options,\"cardinalspline\"),r.curvetype=\"parameter\",c=i[0],d=[],!r.isarrayofcoordinates&&2===c.length&&l.isArray(c[0])&&l.isArray(c[1])&&c[0].length===c[1].length)for(u=0;u<c[0].length;u++)d[u]=[],l.isFunction(c[0][u])?d[u].push(c[0][u]()):d[u].push(c[0][u]),l.isFunction(c[1][u])?d[u].push(c[1][u]()):d[u].push(c[1][u]);else for(u=0;u<c.length;u++)l.isString(c[u])?d.push(e.select(c[u])):l.isPoint(c[u])?d.push(c[u]):l.isArray(c[u])&&2===c[u].length?(d[u]=[],l.isFunction(c[u][0])?d[u].push(c[u][0]()):d[u].push(c[u][0]),l.isFunction(c[u][1])?d[u].push(c[u][1]()):d[u].push(c[u][1])):l.isFunction(c[u])&&2===c[u]().length&&d.push(i[u]());if(!0===r.createpoints)n=l.providePoints(e,d,r,\"cardinalspline\",[\"points\"]);else for(n=[],u=0;u<d.length;u++)l.isPoint(d[u])?n.push(d[u]):n.push(function(t){return{X:function(){return d[t][0];},Y:function(){return d[t][1];},Dist:function(t){var e=this.X()-t.X(),i=this.Y()-t.Y();return Math.sqrt(e*e+i*i);}};}(u));for(a=i[1],h=i[2],f=[\"x\"].concat(o.CardinalSpline(n,a,h)),s=new t.Curve(e,f,r),p=n.length,s.setParents(n),u=0;u<p;u++)l.isPoint(n[u])&&n[u].addChild(s);return s.elType=\"cardinalspline\",s;},t.registerElement(\"cardinalspline\",t.createCardinalSpline),t.createMetapostSpline=function(e,i,r){var s,o,n,a,h,c,d,u=\"\\nPossible parent types: [points:array, controls:object\";if(!l.exists(i[0])||!l.isArray(i[0]))throw new Error(\"JSXGraph: JXG.createMetapostSpline: argument 1 'points' has to be array of points or coordinate pairs\"+u);if(!l.exists(i[1])||!l.isObject(i[1]))throw new Error(\"JSXGraph: JXG.createMetapostSpline: argument 2 'controls' has to be a JavaScript object'\"+u);if(r=l.copyAttributes(r,e.options,\"curve\"),r=l.copyAttributes(r,e.options,\"metapostspline\"),r.curvetype=\"parameter\",a=i[0],h=[],!r.isarrayofcoordinates&&2===a.length&&l.isArray(a[0])&&l.isArray(a[1])&&a[0].length===a[1].length)for(c=0;c<a[0].length;c++)h[c]=[],l.isFunction(a[0][c])?h[c].push(a[0][c]()):h[c].push(a[0][c]),l.isFunction(a[1][c])?h[c].push(a[1][c]()):h[c].push(a[1][c]);else for(c=0;c<a.length;c++)l.isString(a[c])?h.push(e.select(a[c])):l.isPoint(a[c])?h.push(a[c]):l.isArray(a[c])&&2===a[c].length?(h[c]=[],l.isFunction(a[c][0])?h[c].push(a[c][0]()):h[c].push(a[c][0]),l.isFunction(a[c][1])?h[c].push(a[c][1]()):h[c].push(a[c][1])):l.isFunction(a[c])&&2===a[c]().length&&h.push(i[c]());if(!0===r.createpoints)o=l.providePoints(e,h,r,\"metapostspline\",[\"points\"]);else for(o=[],c=0;c<h.length;c++)l.isPoint(h[c])?o.push(h[c]):o.push(function(t){return{X:function(){return h[t][0];},Y:function(){return h[t][1];}};}(c));for(n=i[1],s=new t.Curve(e,[\"t\",[],[],0,a.length-1],r),s.updateDataArray=function(){var e,i,r=o.length,s=[];for(i=0;i<r;i++)s.push([o[i].X(),o[i].Y()]);e=t.Math.Metapost.curve(s,n),this.dataX=e[0],this.dataY=e[1];},s.bezierDegree=3,d=o.length,s.setParents(o),c=0;c<d;c++)l.isPoint(o[c])&&o[c].addChild(s);return s.elType=\"metapostspline\",s;},t.registerElement(\"metapostspline\",t.createMetapostSpline),t.createRiemannsum=function(t,e,i){var r,s,n,a,h,c;if(c=l.copyAttributes(i,t.options,\"riemannsum\"),c.curvetype=\"plot\",n=e[0],r=l.createFunction(e[1],t,\"\"),!l.exists(r))throw new Error(\"JSXGraph: JXG.createRiemannsum: argument '2' n has to be number or function.\\nPossible parent types: [function,n:number|function,type,start:number|function,end:number|function]\");if(s=l.createFunction(e[2],t,\"\",!1),!l.exists(s))throw new Error(\"JSXGraph: JXG.createRiemannsum: argument 3 'type' has to be string or function.\\nPossible parent types: [function,n:number|function,type,start:number|function,end:number|function]\");return a=[[0],[0]].concat(e.slice(3)),h=t.create(\"curve\",a,c),h.sum=0,h.Value=function(){return this.sum;},h.updateDataArray=function(){var t=o.riemann(n,r(),s(),this.minX(),this.maxX());this.dataX=t[0],this.dataY=t[1],this.sum=t[2];},h;},t.registerElement(\"riemannsum\",t.createRiemannsum),t.createTracecurve=function(t,i,r){var s,o,n,a;if(2!==i.length)throw new Error(\"JSXGraph: Can't create trace curve with given parent'\\nPossible parent types: [glider, point]\");if(o=t.select(i[0]),n=t.select(i[1]),o.type!==e.OBJECT_TYPE_GLIDER||!l.isPoint(n))throw new Error(\"JSXGraph: Can't create trace curve with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [glider, point]\");return a=l.copyAttributes(r,t.options,\"tracecurve\"),a.curvetype=\"plot\",s=t.create(\"curve\",[[0],[0]],a),s.updateDataArray=function(){var t,i,r,s,h,l,c,d,u,p=a.numberpoints,f=o.position,m=o.slideObject,g=m.minX(),b=m.maxX();for(i=(b-g)/p,this.dataX=[],this.dataY=[],m.elementClass!==e.OBJECT_CLASS_CURVE&&p++,t=0;t<p;t++){r=g+t*i,l=m.X(r)/m.Z(r),c=m.Y(r)/m.Z(r),o.setPositionDirectly(e.COORDS_BY_USER,[l,c]),d=!1;for(s in this.board.objects)if(this.board.objects.hasOwnProperty(s)&&(h=this.board.objects[s],h===o&&(d=!0),d&&h.needsRegularUpdate&&(u=h.visProp.trace,h.visProp.trace=!1,h.needsUpdate=!0,h.update(!0),h.visProp.trace=u,h===n)))break;this.dataX[t]=n.X(),this.dataY[t]=n.Y();}o.position=f,d=!1;for(s in this.board.objects)if(this.board.objects.hasOwnProperty(s)&&(h=this.board.objects[s],h===o&&(d=!0),d&&h.needsRegularUpdate&&(u=h.visProp.trace,h.visProp.trace=!1,h.needsUpdate=!0,h.update(!0),h.visProp.trace=u,h===n)))break;},s;},t.registerElement(\"tracecurve\",t.createTracecurve),t.createStepfunction=function(t,e,i){var r,s;if(2!==e.length)throw new Error(\"JSXGraph: Can't create step function with given parent'\\nPossible parent types: [array, array|function]\");return s=l.copyAttributes(i,t.options,\"stepfunction\"),r=t.create(\"curve\",e,s),r.updateDataArray=function(){var t,e=0,i=this.xterm.length;if(this.dataX=[],this.dataY=[],0!==i)for(this.dataX[e]=this.xterm[0],this.dataY[e]=this.yterm[0],++e,t=1;t<i;++t)this.dataX[e]=this.xterm[t],this.dataY[e]=this.dataY[e-1],++e,this.dataX[e]=this.xterm[t],this.dataY[e]=this.yterm[t],++e;},r;},t.registerElement(\"stepfunction\",t.createStepfunction),t.createDerivative=function(t,i,r){var s,n,a,h,c;if(1!==i.length&&i[0].class!==e.OBJECT_CLASS_CURVE)throw new Error(\"JSXGraph: Can't create derivative curve with given parent'\\nPossible parent types: [curve]\");return c=l.copyAttributes(r,t.options,\"curve\"),n=i[0],a=o.D(n.X),h=o.D(n.Y),s=t.create(\"curve\",[function(t){return n.X(t);},function(t){return h(t)/a(t);},n.minX(),n.maxX()],c),s.setParents(n),s;},t.registerElement(\"derivative\",t.createDerivative),{Curve:t.Curve,createCurve:t.createCurve,createFunctiongraph:t.createFunctiongraph,createPlot:t.createPlot,createSpline:t.createSpline,createRiemannsum:t.createRiemannsum,createTracecurve:t.createTracecurve,createStepfunction:t.createStepfunction};}),define(\"element/conic\",[\"jxg\",\"base/constants\",\"base/coords\",\"math/math\",\"math/numerics\",\"math/geometry\",\"utils/type\",\"base/point\",\"base/curve\"],function(t,e,i,r,s,o,n,a,h){\"use strict\";return t.createEllipse=function(t,r,s){var o,a,h,l,c,d,u,p=[],f=n.copyAttributes(s,t.options,\"conic\",\"foci\"),m=n.copyAttributes(s,t.options,\"conic\",\"center\"),g=n.copyAttributes(s,t.options,\"conic\");for(d=0;d<2;d++)if(r[d].length>1)p[d]=t.create(\"point\",r[d],f);else if(n.isPoint(r[d]))p[d]=t.select(r[d]);else if(n.isFunction(r[d])&&n.isPoint(r[d]()))p[d]=r[d]();else{if(!n.isString(r[d]))throw new Error(\"JSXGraph: Can't create Ellipse with parent types '\"+typeof r[0]+\"' and '\"+typeof r[1]+\"'.\\nPossible parent types: [point,point,point], [point,point,number|function]\");p[d]=t.select(r[d]);}if(n.isNumber(r[2]))c=n.createFunction(r[2],t);else if(n.isFunction(r[2])&&n.isNumber(r[2]()))c=r[2];else{if(n.isPoint(r[2]))l=t.select(r[2]);else if(r[2].length>1)l=t.create(\"point\",r[2],f);else if(n.isFunction(r[2])&&n.isPoint(r[2]()))l=r[2]();else{if(!n.isString(r[2]))throw new Error(\"JSXGraph: Can't create Ellipse with parent types '\"+typeof r[0]+\"' and '\"+typeof r[1]+\"' and '\"+typeof r[2]+\"'.\\nPossible parent types: [point,point,point], [point,point,number|function]\");l=t.select(r[2]);}c=function(){return l.Dist(p[0])+l.Dist(p[1]);};}for(n.exists(r[4])||(r[4]=2*Math.PI),n.exists(r[3])||(r[3]=0),h=t.create(\"point\",[function(){return .5*(p[0].X()+p[1].X());},function(){return .5*(p[0].Y()+p[1].Y());}],m),a=t.create(\"curve\",[function(t){return 0;},function(t){return 0;},r[3],r[4]],g),a.majorAxis=c,u=a.hasPoint,o=function(t,e){var i,r,s,o,n,h,l,d,u;e||(i=c(),r=i*i,s=p[0].X(),o=p[0].Y(),n=p[1].X(),h=p[1].Y(),l=s-n,d=o-h,u=(r-s*s-o*o+n*n+h*h)/(2*i),a.quadraticform=[[u*u-n*n-h*h,u*l/i+n,u*d/i+h],[u*l/i+n,l*l/r-1,l*d/r],[u*d/i+h,l*d/r,d*d/r-1]]);},a.X=function(t,e){var i=c(),r=p[1].Dist(p[0]),s=.5*(r*r-i*i)/(r*Math.cos(t)-i),n=Math.atan2(p[1].Y()-p[0].Y(),p[1].X()-p[0].X());return e||o(t,e),p[0].X()+Math.cos(n+t)*s;},a.Y=function(t,e){var i=c(),r=p[1].Dist(p[0]),s=.5*(r*r-i*i)/(r*Math.cos(t)-i),o=Math.atan2(p[1].Y()-p[0].Y(),p[1].X()-p[0].X());return p[0].Y()+Math.sin(o+t)*s;},a.midpoint=a.center=h,a.type=e.OBJECT_TYPE_CONIC,a.subs={center:a.center},a.inherits.push(a.center,p[0],p[1]),n.isPoint(l)&&a.inherits.push(l),a.hasPoint=function(t,r){var s,o,a,h;return n.evaluate(this.visProp.hasinnerpoints)?(s=p[0].coords,o=p[1].coords,a=this.majorAxis(),h=new i(e.COORDS_BY_SCREEN,[t,r],this.board),h.distance(e.COORDS_BY_USER,s)+h.distance(e.COORDS_BY_USER,o)<=a):u.apply(this,arguments);},h.addChild(a),d=0;d<2;d++)n.isPoint(p[d])&&p[d].addChild(a);return n.isPoint(l)&&l.addChild(a),a.setParents(r),a;},t.createHyperbola=function(t,i,r){var s,o,a,h,l,c,d=[],u=n.copyAttributes(r,t.options,\"conic\",\"foci\"),p=n.copyAttributes(r,t.options,\"conic\",\"center\"),f=n.copyAttributes(r,t.options,\"conic\");for(c=0;c<2;c++)if(i[c].length>1)d[c]=t.create(\"point\",i[c],u);else if(n.isPoint(i[c]))d[c]=t.select(i[c]);else if(n.isFunction(i[c])&&n.isPoint(i[c]()))d[c]=i[c]();else{if(!n.isString(i[c]))throw new Error(\"JSXGraph: Can't create Hyperbola with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,point,point], [point,point,number|function]\");d[c]=t.select(i[c]);}if(n.isNumber(i[2]))l=n.createFunction(i[2],t);else if(n.isFunction(i[2])&&n.isNumber(i[2]()))l=i[2];else{if(n.isPoint(i[2]))h=t.select(i[2]);else if(i[2].length>1)h=t.create(\"point\",i[2],u);else if(n.isFunction(i[2])&&n.isPoint(i[2]()))h=i[2]();else{if(!n.isString(i[2]))throw new Error(\"JSXGraph: Can't create Hyperbola with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"' and '\"+typeof i[2]+\"'.\\nPossible parent types: [point,point,point], [point,point,number|function]\");h=t.select(i[2]);}l=function(){return h.Dist(d[0])-h.Dist(d[1]);};}for(n.exists(i[4])||(i[4]=1.0001*Math.PI),n.exists(i[3])||(i[3]=-1.0001*Math.PI),a=t.create(\"point\",[function(){return .5*(d[0].X()+d[1].X());},function(){return .5*(d[0].Y()+d[1].Y());}],p),o=t.create(\"curve\",[function(t){return 0;},function(t){return 0;},i[3],i[4]],f),o.majorAxis=l,s=function(t,e){var i,r,s,n,a,h,c,u,p;e||(i=l(),r=i*i,s=d[0].X(),n=d[0].Y(),a=d[1].X(),h=d[1].Y(),c=s-a,u=n-h,p=(r-s*s-n*n+a*a+h*h)/(2*i),o.quadraticform=[[p*p-a*a-h*h,p*c/i+a,p*u/i+h],[p*c/i+a,c*c/r-1,c*u/r],[p*u/i+h,c*u/r,u*u/r-1]]);},o.X=function(t,e){var i=l(),r=d[1].Dist(d[0]),o=.5*(r*r-i*i)/(r*Math.cos(t)+i),n=Math.atan2(d[1].Y()-d[0].Y(),d[1].X()-d[0].X());return e||s(t,e),d[0].X()+Math.cos(n+t)*o;},o.Y=function(t,e){var i=l(),r=d[1].Dist(d[0]),s=.5*(r*r-i*i)/(r*Math.cos(t)+i),o=Math.atan2(d[1].Y()-d[0].Y(),d[1].X()-d[0].X());return d[0].Y()+Math.sin(o+t)*s;},o.midpoint=o.center=a,o.subs={center:o.center},o.inherits.push(o.center,d[0],d[1]),n.isPoint(h)&&o.inherits.push(h),o.type=e.OBJECT_TYPE_CONIC,a.addChild(o),c=0;c<2;c++)n.isPoint(d[c])&&d[c].addChild(o);return n.isPoint(h)&&h.addChild(o),o.setParents(i),o;},t.createParabola=function(t,i,r){var s,a,h,l,c=i[0],d=i[1],u=n.copyAttributes(r,t.options,\"conic\",\"foci\"),p=n.copyAttributes(r,t.options,\"conic\",\"center\"),f=n.copyAttributes(r,t.options,\"conic\");if(i[0].length>1)c=t.create(\"point\",i[0],u);else if(n.isPoint(i[0]))c=t.select(i[0]);else if(n.isFunction(i[0])&&n.isPoint(i[0]()))c=i[0]();else{if(!n.isString(i[0]))throw new Error(\"JSXGraph: Can't create Parabola with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,line]\");c=t.select(i[0]);}return n.isArray(d)&&2==d.length&&(l=n.copyAttributes(r,t.options,\"conic\",\"line\"),d=t.create(\"line\",d,l)),n.exists(i[3])||(i[3]=2*Math.PI),n.exists(i[2])||(i[2]=0),h=t.create(\"point\",[function(){return o.projectPointToLine(c,d,t).usrCoords;}],p),a=t.create(\"curve\",[function(t){return 0;},function(t){return 0;},i[2],i[3]],f),a.midpoint=a.center=h,a.subs={center:a.center},a.inherits.push(a.center),s=function(t,e){var i,r,s,o,n,h;e||(i=d.stdform[1],r=d.stdform[2],s=d.stdform[0],o=i*i+r*r,n=c.X(),h=c.Y(),a.quadraticform=[[s*s-o*(n*n+h*h),s*i+o*n,s*r+o*h],[s*i+o*n,-r*r,i*r],[s*r+o*h,i*r,-i*i]]);},a.X=function(t,e){var i,r,n=d.getAngle(),a=o.distPointLine(c.coords.usrCoords,d.stdform),h=d.point1.coords.usrCoords,l=d.point2.coords.usrCoords,u=c.coords.usrCoords;return 0===h[0]?h=[1,l[1]+d.stdform[2],l[2]-d.stdform[1]]:0===l[0]&&(l=[1,h[1]+d.stdform[2],h[2]-d.stdform[1]]),r=(l[1]-h[1])*(u[2]-h[2])-(l[2]-h[2])*(u[1]-h[1])>=0?1:-1,i=r*a/(1-Math.sin(t)),e||s(t,e),c.X()+Math.cos(t+n)*i;},a.Y=function(t,e){var i,r,s=d.getAngle(),n=o.distPointLine(c.coords.usrCoords,d.stdform),a=d.point1.coords.usrCoords,h=d.point2.coords.usrCoords,l=c.coords.usrCoords;return 0===a[0]?a=[1,h[1]+d.stdform[2],h[2]-d.stdform[1]]:0===h[0]&&(h=[1,a[1]+d.stdform[2],a[2]-d.stdform[1]]),r=(h[1]-a[1])*(l[2]-a[2])-(h[2]-a[2])*(l[1]-a[1])>=0?1:-1,i=r*n/(1-Math.sin(t)),c.Y()+Math.sin(t+s)*i;},a.type=e.OBJECT_TYPE_CONIC,h.addChild(a),n.isPoint(c)&&(c.addChild(a),a.inherits.push(c)),d.addChild(a),a.setParents(i),a;},t.createConic=function(t,i,o){var a,h,l,c,d,u,p,f,m,g,b,v,y,C,_=[[1,0,0],[0,1,0],[0,0,1]],P=[[1,0,0],[0,1,0],[0,0,1]],E=[],x=[],S=n.copyAttributes(o,t.options,\"conic\",\"point\"),O=n.copyAttributes(o,t.options,\"conic\",\"center\"),w=n.copyAttributes(o,t.options,\"conic\");if(5===i.length)C=!0;else{if(6!==i.length)throw new Error(\"JSXGraph: Can't create generic Conic with \"+i.length+\" parameters.\");C=!1;}if(C){for(v=0;v<5;v++)if(i[v].length>1)E[v]=t.create(\"point\",i[v],S);else if(n.isPoint(i[v]))E[v]=t.select(i[v]);else if(n.isFunction(i[v])&&n.isPoint(i[v]()))E[v]=i[v]();else{if(!n.isString(i[v]))throw new Error(\"JSXGraph: Can't create Conic section with parent types '\"+typeof i[v]+\"'.\\nPossible parent types: [point,point,point,point,point], [a00,a11,a22,a01,a02,a12]\");E[v]=t.select(i[v]);}}else y=[[0,0,0],[0,0,0],[0,0,0]],y[0][0]=n.isFunction(i[2])?function(){return i[2]();}:function(){return i[2];},y[0][1]=n.isFunction(i[4])?function(){return i[4]();}:function(){return i[4];},y[0][2]=n.isFunction(i[5])?function(){return i[5]();}:function(){return i[5];},y[1][1]=n.isFunction(i[0])?function(){return i[0]();}:function(){return i[0];},y[1][2]=n.isFunction(i[3])?function(){return i[3]();}:function(){return i[3];},y[2][2]=n.isFunction(i[1])?function(){return i[1]();}:function(){return i[1];};if(d=function(t){var e,i;for(e=0;e<3;e++)for(i=e;i<3;i++)t[e][i]+=t[i][e];for(e=0;e<3;e++)for(i=0;i<e;i++)t[e][i]=t[i][e];return t;},c=function(t,e){var i,r,s=[[0,0,0],[0,0,0],[0,0,0]];for(i=0;i<3;i++)for(r=0;r<3;r++)s[i][r]=t[i]*e[r];return d(s);},l=function(t,e,i){var s,o,n,a,h,l=[[0,0,0],[0,0,0],[0,0,0]];for(h=r.matVecMult(e,i),n=r.innerProduct(i,h),h=r.matVecMult(t,i),a=r.innerProduct(i,h),s=0;s<3;s++)for(o=0;o<3;o++)l[s][o]=n*t[s][o]-a*e[s][o];return l;},h=t.create(\"curve\",[function(t){return 0;},function(t){return 0;},0,2*Math.PI],w),a=function(t,e){var i,o,a,d;if(!e){if(C){for(i=0;i<5;i++)x[i]=E[i].coords.usrCoords;g=c(r.crossProduct(x[0],x[1]),r.crossProduct(x[2],x[3])),b=c(r.crossProduct(x[0],x[2]),r.crossProduct(x[1],x[3])),P=l(g,b,x[4]);}else for(i=0;i<3;i++)for(o=i;o<3;o++)P[i][o]=y[i][o](),o>i&&(P[o][i]=P[i][o]);for(h.quadraticform=P,u=s.Jacobi(P),u[0][0][0]<0&&(u[0][0][0]*=-1,u[0][1][1]*=-1,u[0][2][2]*=-1),i=0;i<3;i++){for(a=0,o=0;o<3;o++)a+=u[1][o][i]*u[1][o][i];a=Math.sqrt(a);}_=u[1],m=Math.sqrt(Math.abs(u[0][0][0])),p=Math.sqrt(Math.abs(u[0][1][1])),f=Math.sqrt(Math.abs(u[0][2][2]));}return u[0][1][1]<=0&&u[0][2][2]<=0?d=r.matVecMult(_,[1/m,Math.cos(t)/p,Math.sin(t)/f]):u[0][1][1]<=0&&u[0][2][2]>0?d=r.matVecMult(_,[Math.cos(t)/m,1/p,Math.sin(t)/f]):u[0][2][2]<0&&(d=r.matVecMult(_,[Math.sin(t)/m,Math.cos(t)/p,1/f])),n.exists(d)?(d[1]/=d[0],d[2]/=d[0],d[0]=1):d=[1,NaN,NaN],d;},h.X=function(t,e){return a(t,e)[1];},h.Y=function(t,e){return a(t,e)[2];},h.midpoint=t.create(\"point\",[function(){var t=h.quadraticform;return[t[1][1]*t[2][2]-t[1][2]*t[1][2],t[1][2]*t[0][2]-t[2][2]*t[0][1],t[0][1]*t[1][2]-t[1][1]*t[0][2]];}],O),h.type=e.OBJECT_TYPE_CONIC,h.center=h.midpoint,h.subs={center:h.center},h.inherits.push(h.center),h.inherits=h.inherits.concat(E),C){for(v=0;v<5;v++)n.isPoint(E[v])&&E[v].addChild(h);h.setParents(i);}return h.addChild(h.center),h;},t.registerElement(\"ellipse\",t.createEllipse),t.registerElement(\"hyperbola\",t.createHyperbola),t.registerElement(\"parabola\",t.createParabola),t.registerElement(\"conic\",t.createConic),{createEllipse:t.createEllipse,createHyperbola:t.createHyperbola,createParabola:t.createParabola,createConic:t.createConic};}),define(\"base/circle\",[\"jxg\",\"base/element\",\"base/coords\",\"base/constants\",\"element/conic\",\"parser/geonext\",\"utils/type\"],function(t,e,i,r,s,o,n){\"use strict\";return t.Circle=function(t,e,i,s,o){this.constructor(t,o,r.OBJECT_TYPE_CIRCLE,r.OBJECT_CLASS_CIRCLE),this.method=e,this.midpoint=this.board.select(i),this.center=this.board.select(i),this.point2=null,this.radius=0,this.line=null,this.circle=null,\"twoPoints\"===e?(this.point2=t.select(s),this.radius=this.Radius()):\"pointRadius\"===e?(this.gxtterm=s,this.updateRadius=n.createFunction(s,this.board,null,!0),this.updateRadius()):\"pointLine\"===e?(this.line=t.select(s),this.radius=this.line.point1.coords.distance(r.COORDS_BY_USER,this.line.point2.coords)):\"pointCircle\"===e&&(this.circle=t.select(s),this.radius=this.circle.Radius()),this.id=this.board.setId(this,\"C\"),this.board.renderer.drawEllipse(this),this.board.finalizeAdding(this),this.createGradient(),this.elType=\"circle\",this.createLabel(),this.center.addChild(this),\"pointRadius\"===e?this.notifyParents(s):\"pointLine\"===e?this.line.addChild(this):\"pointCircle\"===e?this.circle.addChild(this):\"twoPoints\"===e&&this.point2.addChild(this),this.methodMap=n.deepCopy(this.methodMap,{setRadius:\"setRadius\",getRadius:\"getRadius\",Area:\"Area\",area:\"Area\",radius:\"Radius\",center:\"center\",line:\"line\",point2:\"point2\"});},t.Circle.prototype=new e(),t.extend(t.Circle.prototype,{hasPoint:function(t,e){var s,o,a,h,l,c=this.center.coords.usrCoords,d=new i(r.COORDS_BY_SCREEN,[t,e],this.board),u=this.Radius();return n.isObject(n.evaluate(this.visProp.precision))?(o=this.board._inputDevice,s=n.evaluate(this.visProp.precision[o])):s=this.board.options.precision.hasPoint,a=c[1]-d.usrCoords[1],h=c[2]-d.usrCoords[2],l=Math.sqrt(a*a+h*h),s+=.5*n.evaluate(this.visProp.strokewidth),s/=Math.sqrt(this.board.unitX*this.board.unitY),n.evaluate(this.visProp.hasinnerpoints)?l<u+s:Math.abs(l-u)<s;},generatePolynomial:function(t){var e=this.center.symbolic.x,i=this.center.symbolic.y,r=t.symbolic.x,s=t.symbolic.y,o=this.generateRadiusSquared();return\"\"===o?[]:[\"((\"+r+\")-(\"+e+\"))^2 + ((\"+s+\")-(\"+i+\"))^2 - (\"+o+\")\"];},generateRadiusSquared:function(){var t,e,i,r,s,o,a=\"\";return\"twoPoints\"===this.method?(t=this.center.symbolic.x,e=this.center.symbolic.y,i=this.point2.symbolic.x,r=this.point2.symbolic.y,a=\"((\"+i+\")-(\"+t+\"))^2 + ((\"+r+\")-(\"+e+\"))^2\"):\"pointRadius\"===this.method?n.isNumber(this.radius)&&(a=(this.radius*this.radius).toString()):\"pointLine\"===this.method?(i=this.line.point1.symbolic.x,r=this.line.point1.symbolic.y,s=this.line.point2.symbolic.x,o=this.line.point2.symbolic.y,a=\"((\"+i+\")-(\"+s+\"))^2 + ((\"+r+\")-(\"+o+\"))^2\"):\"pointCircle\"===this.method&&(a=this.circle.Radius()),a;},update:function(){return this.needsUpdate&&(n.evaluate(this.visProp.trace)&&this.cloneToBackground(!0),\"pointLine\"===this.method?this.radius=this.line.point1.coords.distance(r.COORDS_BY_USER,this.line.point2.coords):\"pointCircle\"===this.method?this.radius=this.circle.Radius():\"pointRadius\"===this.method&&(this.radius=this.updateRadius()),this.updateStdform(),this.updateQuadraticform()),this;},updateQuadraticform:function(){var t=this.center,e=t.X(),i=t.Y(),r=this.Radius();this.quadraticform=[[e*e+i*i-r*r,-e,-i],[-e,1,0],[-i,0,1]];},updateStdform:function(){this.stdform[3]=.5,this.stdform[4]=this.Radius(),this.stdform[1]=-this.center.coords.usrCoords[1],this.stdform[2]=-this.center.coords.usrCoords[2],isFinite(this.stdform[4])||(this.stdform[0]=n.exists(this.point2)?-(this.stdform[1]*this.point2.coords.usrCoords[1]+this.stdform[2]*this.point2.coords.usrCoords[2]):0),this.normalize();},updateRenderer:function(){return this.needsUpdate?(this.visPropCalc.visible&&(this.isReal=!isNaN(this.center.coords.usrCoords[1]+this.center.coords.usrCoords[2]+this.Radius())&&this.center.isReal,this.isReal||this.updateVisibility(!1)),this.visPropCalc.visible&&this.board.renderer.updateEllipse(this),this.hasLabel&&this.visPropCalc.visible&&this.label&&this.label.visPropCalc.visible&&this.isReal&&(this.label.update(),this.board.renderer.updateText(this.label)),this.setDisplayRendNode(),this.needsUpdate=!1,this):this;},notifyParents:function(t){n.isString(t)&&o.findDependencies(this,t,this.board);},setRadius:function(t){return this.updateRadius=n.createFunction(t,this.board,null,!0),this.board.update(),this;},Radius:function(t){return n.exists(t)?(this.setRadius(t),this.Radius()):\"twoPoints\"===this.method?n.cmpArrays(this.point2.coords.usrCoords,[0,0,0])||n.cmpArrays(this.center.coords.usrCoords,[0,0,0])?NaN:this.center.Dist(this.point2):\"pointLine\"===this.method||\"pointCircle\"===this.method?this.radius:\"pointRadius\"===this.method?this.updateRadius():NaN;},getRadius:function(){return t.deprecated(\"Circle.getRadius()\",\"Circle.Radius()\"),this.Radius();},getTextAnchor:function(){return this.center.coords;},getLabelAnchor:function(){var t,e,s=this.Radius(),o=this.center.coords.usrCoords;switch(n.evaluate(this.visProp.label.position)){case\"lft\":t=o[1]-s,e=o[2];break;case\"llft\":t=o[1]-Math.sqrt(.5)*s,e=o[2]-Math.sqrt(.5)*s;break;case\"rt\":t=o[1]+s,e=o[2];break;case\"lrt\":t=o[1]+Math.sqrt(.5)*s,e=o[2]-Math.sqrt(.5)*s;break;case\"urt\":t=o[1]+Math.sqrt(.5)*s,e=o[2]+Math.sqrt(.5)*s;break;case\"top\":t=o[1],e=o[2]+s;break;case\"bot\":t=o[1],e=o[2]-s;break;default:t=o[1]-Math.sqrt(.5)*s,e=o[2]+Math.sqrt(.5)*s;}return new i(r.COORDS_BY_USER,[t,e],this.board);},cloneToBackground:function(){var t,e=this.Radius(),i={id:this.id+\"T\"+this.numTraces,elementClass:r.OBJECT_CLASS_CIRCLE,center:{coords:this.center.coords},Radius:function(){return e;},getRadius:function(){return e;},board:this.board,visProp:n.deepCopy(this.visProp,this.visProp.traceattributes,!0)};return i.visProp.layer=this.board.options.layer.trace,this.numTraces++,n.clearVisPropOld(i),i.visPropCalc={visible:n.evaluate(i.visProp.visible)},t=this.board.renderer.enhancedRendering,this.board.renderer.enhancedRendering=!0,this.board.renderer.drawEllipse(i),this.board.renderer.enhancedRendering=t,this.traces[i.id]=i.rendNode,this;},addTransform:function(t){var e,i=n.isArray(t)?t:[t],r=i.length;for(e=0;e<r;e++)this.center.transformations.push(i[e]),\"twoPoints\"===this.method&&this.point2.transformations.push(i[e]);return this;},snapToGrid:function(){var t=n.evaluate(this.visProp.snaptogrid);return this.center.handleSnapToGrid(t,!0),\"twoPoints\"===this.method&&this.point2.handleSnapToGrid(t,!0),this;},snapToPoints:function(){var t=n.evaluate(this.visProp.snaptopoints);return this.center.handleSnapToPoints(t),\"twoPoints\"===this.method&&this.point2.handleSnapToPoints(t),this;},X:function(t){return this.Radius()*Math.cos(2*t*Math.PI)+this.center.coords.usrCoords[1];},Y:function(t){return this.Radius()*Math.sin(2*t*Math.PI)+this.center.coords.usrCoords[2];},Z:function(t){return 1;},minX:function(){return 0;},maxX:function(){return 1;},Area:function(){var t=this.Radius();return t*t*Math.PI;},bounds:function(){var t=this.center.coords.usrCoords,e=this.Radius();return[t[1]-e,t[2]+e,t[1]+e,t[2]-e];},getParents:function(){return 1===this.parents.length?this.parents.concat(this.radius):this.parents;}}),t.createCircle=function(e,i,o){var a,h,l,c,d;if(h=[],d=e.select(i[0]),n.isObject(d)&&d.elementClass===r.OBJECT_CLASS_CIRCLE&&n.isTransformationOrArray(i[1]))return c=n.copyAttributes(o,e.options,\"circle\"),a=s.createEllipse(e,[d.center,d.center,function(){return 2*d.Radius();}],c),a.addTransform(i[1]),a;for(l=0;l<i.length;l++)if(n.isPointType(e,i[l])){if(h=h.concat(n.providePoints(e,[i[l]],o,\"circle\",[\"center\"])),!1===h[h.length-1])throw new Error(\"JSXGraph: Can't create circle from this type. Please provide a point type.\");}else h.push(i[l]);if(c=n.copyAttributes(o,e.options,\"circle\"),2===h.length&&n.isPoint(h[0])&&n.isPoint(h[1]))a=new t.Circle(e,\"twoPoints\",h[0],h[1],c);else if((n.isNumber(h[0])||n.isFunction(h[0])||n.isString(h[0]))&&n.isPoint(h[1]))a=new t.Circle(e,\"pointRadius\",h[1],h[0],c);else if((n.isNumber(h[1])||n.isFunction(h[1])||n.isString(h[1]))&&n.isPoint(h[0]))a=new t.Circle(e,\"pointRadius\",h[0],h[1],c);else if(h[0].elementClass===r.OBJECT_CLASS_CIRCLE&&n.isPoint(h[1]))a=new t.Circle(e,\"pointCircle\",h[1],h[0],c);else if(h[1].elementClass===r.OBJECT_CLASS_CIRCLE&&n.isPoint(h[0]))a=new t.Circle(e,\"pointCircle\",h[0],h[1],c);else if(h[0].elementClass===r.OBJECT_CLASS_LINE&&n.isPoint(h[1]))a=new t.Circle(e,\"pointLine\",h[1],h[0],c);else if(h[1].elementClass===r.OBJECT_CLASS_LINE&&n.isPoint(h[0]))a=new t.Circle(e,\"pointLine\",h[0],h[1],c);else{if(!(3===i.length&&n.isPoint(h[0])&&n.isPoint(h[1])&&n.isPoint(h[2])))throw new Error(\"JSXGraph: Can't create circle with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,point], [point,number], [point,function], [point,circle], [point,point,point], [circle,transformation]\");if(!t.elements.circumcircle)throw new Error(\"JSXGraph: Can't create circle with three points. Please include the circumcircle element (element/composition).\");a=t.elements.circumcircle(e,h,c);}for(a.isDraggable=!0,a.setParents(h),a.elType=\"circle\",l=0;l<h.length;l++)n.isPoint(h[l])&&a.inherits.push(h[l]);return a;},t.registerElement(\"circle\",t.createCircle),{Circle:t.Circle,createCircle:t.createCircle};}),define(\"base/composition\",[\"jxg\",\"utils/type\"],function(t,e){\"use strict\";return t.Composition=function(t){var i,r=this,s=[\"setAttribute\",\"setParents\",\"prepareUpdate\",\"updateRenderer\",\"update\",\"fullUpdate\",\"highlight\",\"noHighlight\"];for(i=0;i<s.length;i++)this[s[i]]=function(t){return function(){var i;for(i in r.elements)r.elements.hasOwnProperty(i)&&e.exists(r.elements[i][t])&&r.elements[i][t].apply(r.elements[i],arguments);return r;};}(s[i]);this.elements={},this.objects=this.elements,this.elementsByName={},this.objectsList=[],this.groups={},this.methodMap={setAttribute:\"setAttribute\",setProperty:\"setAttribute\",setParents:\"setParents\",add:\"add\",remove:\"remove\",select:\"select\"};for(i in t)t.hasOwnProperty(i)&&this.add(i,t[i]);this.dump=!0,this.subs={};},t.extend(t.Composition.prototype,{add:function(t,i){return!(e.exists(this[t])||!e.exists(i))&&(e.exists(i.id)?this.elements[i.id]=i:this.elements[t]=i,e.exists(i.name)&&(this.elementsByName[i.name]=i),i.on(\"attribute:name\",this.nameListener,this),this.objectsList.push(i),this[t]=i,this.methodMap[t]=i,!0);},remove:function(t){var e,i=!1;for(e in this.elements)if(this.elements.hasOwnProperty(e)&&this.elements[e].id===this[t].id){i=!0;break;}return i&&(delete this.elements[this[t].id],delete this[t]),i;},nameListener:function(t,e,i){delete this.elementsByName[t],this.elementsByName[e]=i;},select:function(i){return e.exists(t.Board)?t.Board.prototype.select.call(this,i):new t.Composition();},getParents:function(){return this.parents;},getType:function(){return this.elType;},getAttributes:function(){var t,e={};for(t in this.subs)this.subs.hasOwnProperty(t)&&(e[t]=this.subs[t].visProp);return this.attr;}}),t.Composition;}),define(\"base/polygon\",[\"jxg\",\"base/constants\",\"base/coords\",\"math/statistics\",\"math/geometry\",\"utils/type\",\"base/element\",\"base/line\",\"base/transformation\"],function(t,e,i,r,s,o,n,a,h){\"use strict\";return t.Polygon=function(i,r,s){this.constructor(i,s,e.OBJECT_TYPE_POLYGON,e.OBJECT_CLASS_AREA);var n,a,h,l,c,d=o.copyAttributes(s,i.options,\"polygon\",\"borders\");for(this.withLines=s.withlines,this.attr_line=d,this.vertices=[],n=0;n<r.length;n++)this.vertices[n]=this.board.select(r[n]);if(this.vertices.length>0&&this.vertices[this.vertices.length-1].id!==this.vertices[0].id&&this.vertices.push(this.vertices[0]),this.borders=[],this.withLines)for(h=this.vertices.length-1,l=0;l<h;l++)n=(l+1)%h,d.id=d.ids&&d.ids[n],d.name=d.names&&d.names[n],d.strokecolor=o.isArray(d.colors)&&d.colors[n%d.colors.length]||d.strokecolor,d.visible=o.exists(s.borders.visible)?s.borders.visible:s.visible,!1===d.strokecolor&&(d.strokecolor=\"none\"),a=i.create(\"segment\",[this.vertices[n],this.vertices[n+1]],d),a.dump=!1,this.borders[n]=a,a.parentPolygon=this;for(this.inherits.push(this.vertices,this.borders),this.id=this.board.setId(this,\"Py\"),n=0;n<this.vertices.length-1;n++)c=this.board.select(this.vertices[n]),o.exists(c._is_new)?(this.addChild(c),delete c._is_new):c.addChild(this);this.board.renderer.drawPolygon(this),this.board.finalizeAdding(this),this.createGradient(),this.elType=\"polygon\",this.createLabel(),this.methodMap=t.deepCopy(this.methodMap,{borders:\"borders\",vertices:\"vertices\",A:\"Area\",Area:\"Area\",Perimeter:\"Perimeter\",L:\"Perimeter\",Length:\"Perimeter\",boundingBox:\"boundingBox\",bounds:\"bounds\",addPoints:\"addPoints\",insertPoints:\"insertPoints\",removePoints:\"removePoints\"});},t.Polygon.prototype=new n(),t.extend(t.Polygon.prototype,{hasPoint:function(t,e){var i,r,s,n=!1;if(o.evaluate(this.visProp.hasinnerpoints)){for(s=this.vertices.length,i=0,r=s-2;i<s-1;r=i++)this.vertices[i].coords.scrCoords[2]>e!=this.vertices[r].coords.scrCoords[2]>e&&t<(this.vertices[r].coords.scrCoords[1]-this.vertices[i].coords.scrCoords[1])*(e-this.vertices[i].coords.scrCoords[2])/(this.vertices[r].coords.scrCoords[2]-this.vertices[i].coords.scrCoords[2])+this.vertices[i].coords.scrCoords[1]&&(n=!n);if(n)return!0;}for(s=this.borders.length,i=0;i<s;i++)if(this.borders[i].hasPoint(t,e)){n=!0;break;}return n;},updateRenderer:function(){var t,e;if(!this.needsUpdate)return this;if(this.visPropCalc.visible){for(e=this.vertices.length,this.isReal=!0,t=0;t<e;++t)if(!this.vertices[t].isReal){this.isReal=!1;break;}this.isReal||this.updateVisibility(!1);}return this.visPropCalc.visible&&this.board.renderer.updatePolygon(this),this.hasLabel&&this.visPropCalc.visible&&this.label&&this.label.visPropCalc.visible&&this.isReal&&(this.label.update(),this.board.renderer.updateText(this.label)),this.setDisplayRendNode(),this.needsUpdate=!1,this;},getTextAnchor:function(){var t,r,s,o,n;if(0===this.vertices.length)return new i(e.COORDS_BY_USER,[1,0,0],this.board);for(t=this.vertices[0].X(),r=this.vertices[0].Y(),s=t,o=r,n=0;n<this.vertices.length;n++)this.vertices[n].X()<t&&(t=this.vertices[n].X()),this.vertices[n].X()>s&&(s=this.vertices[n].X()),this.vertices[n].Y()>r&&(r=this.vertices[n].Y()),this.vertices[n].Y()<o&&(o=this.vertices[n].Y());return new i(e.COORDS_BY_USER,[.5*(t+s),.5*(r+o)],this.board);},getLabelAnchor:t.shortcut(t.Polygon.prototype,\"getTextAnchor\"),cloneToBackground:function(){var t,e={};return e.id=this.id+\"T\"+this.numTraces,this.numTraces++,e.vertices=this.vertices,e.visProp=o.deepCopy(this.visProp,this.visProp.traceattributes,!0),e.visProp.layer=this.board.options.layer.trace,e.board=this.board,o.clearVisPropOld(e),e.visPropCalc={visible:o.evaluate(e.visProp.visible)},t=this.board.renderer.enhancedRendering,this.board.renderer.enhancedRendering=!0,this.board.renderer.drawPolygon(e),this.board.renderer.enhancedRendering=t,this.traces[e.id]=e.rendNode,this;},hideElement:function(e){var i;if(t.deprecated(\"Element.hideElement()\",\"Element.setDisplayRendNode()\"),this.visPropCalc.visible=!1,this.board.renderer.display(this,!1),!e)for(i=0;i<this.borders.length;i++)this.borders[i].hideElement();this.hasLabel&&o.exists(this.label)&&(this.label.hiddenByParent=!0,this.label.visPropCalc.visible&&this.label.hideElement());},showElement:function(e){var i;if(t.deprecated(\"Element.showElement()\",\"Element.setDisplayRendNode()\"),this.visPropCalc.visible=!0,this.board.renderer.display(this,!0),!e)for(i=0;i<this.borders.length;i++)this.borders[i].showElement().updateRenderer();return o.exists(this.label)&&this.hasLabel&&this.label.hiddenByParent&&(this.label.hiddenByParent=!1,this.label.visPropCalc.visible||this.label.showElement().updateRenderer()),this;},Area:function(){return Math.abs(s.signedPolygon(this.vertices,!0));},Perimeter:function(){var t,e=this.vertices.length,i=0;for(t=1;t<e;++t)i+=this.vertices[t].Dist(this.vertices[t-1]);return i;},boundingBox:function(){var t,e,i=[0,0,0,0],r=this.vertices.length-1;if(0===r)return i;for(i[0]=this.vertices[0].X(),i[2]=i[0],i[1]=this.vertices[0].Y(),i[3]=i[1],t=1;t<r;++t)e=this.vertices[t].X(),e<i[0]?i[0]=e:e>i[2]&&(i[2]=e),e=this.vertices[t].Y(),e>i[1]?i[1]=e:e<i[3]&&(i[3]=e);return i;},bounds:function(){return this.boundingBox();},remove:function(){var t;for(t=0;t<this.borders.length;t++)this.board.removeObject(this.borders[t]);n.prototype.remove.call(this);},findPoint:function(t){var e;if(!o.isPoint(t))return-1;for(e=0;e<this.vertices.length;e++)if(this.vertices[e].id===t.id)return e;return-1;},addPoints:function(t){var e=Array.prototype.slice.call(arguments);return this.insertPoints.apply(this,[this.vertices.length-2].concat(e));},insertPoints:function(t,e){var i,r,s=[];if(0===arguments.length)return this;if(t<0||t>this.vertices.length-2)return this;for(i=1;i<arguments.length;i++)o.isPoint(arguments[i])&&s.push(arguments[i]);if(r=this.vertices.slice(0,t+1).concat(s),this.vertices=r.concat(this.vertices.slice(t+1)),this.withLines){for(r=this.borders.slice(0,t),this.board.removeObject(this.borders[t]),i=0;i<s.length;i++)r.push(this.board.create(\"segment\",[this.vertices[t+i],this.vertices[t+i+1]],this.attr_line));r.push(this.board.create(\"segment\",[this.vertices[t+s.length],this.vertices[t+s.length+1]],this.attr_line)),this.borders=r.concat(this.borders.slice(t+1));}return this.board.update(),this;},removePoints:function(t){var e,i,r,s=[],n=[],a=[],h=[];for(this.vertices=this.vertices.slice(0,this.vertices.length-1),e=0;e<arguments.length;e++)r=arguments[e],o.isPoint(r)&&(r=this.findPoint(r)),o.isNumber(r)&&r>-1&&r<this.vertices.length&&-1===o.indexOf(a,r)&&a.push(r);for(e=0;e<a.length;e++)this.vertices[a[e]].removeChild(this);for(a=a.sort(),s=this.vertices.slice(),n=this.borders.slice(),this.withLines&&h.push([a[a.length-1]]),e=a.length-1;e>-1;e--)s[a[e]]=-1,this.withLines&&a[e]-1>a[e-1]&&(h[h.length-1][1]=a[e],h.push([a[e-1]]));for(this.withLines&&(h[h.length-1][1]=a[0]),this.vertices=[],e=0;e<s.length;e++)o.isPoint(s[e])&&this.vertices.push(s[e]);if(this.vertices[this.vertices.length-1].id!==this.vertices[0].id&&this.vertices.push(this.vertices[0]),this.withLines){for(e=0;e<h.length;e++){for(i=h[e][1]-1;i<h[e][0]+1;i++)i<0?(i=0,this.board.removeObject(this.borders[n.length-1]),n[n.length-1]=-1):i>n.length-1&&(i=n.length-1),this.board.removeObject(this.borders[i]),n[i]=-1;0!==h[e][1]&&h[e][0]!==s.length-1&&(n[h[e][0]-1]=this.board.create(\"segment\",[s[Math.max(h[e][1]-1,0)],s[Math.min(h[e][0]+1,this.vertices.length-1)]],this.attr_line));}for(this.borders=[],e=0;e<n.length;e++)-1!==n[e]&&this.borders.push(n[e]);h[0][1]!==this.vertices.length-1&&0!==h[h.length-1][1]||this.borders.push(this.board.create(\"segment\",[this.vertices[0],this.vertices[this.vertices.length-2]],this.attr_line));}return this.board.update(),this;},getParents:function(){return this.setParents(this.vertices),this.parents;},getAttributes:function(){var t,e=n.prototype.getAttributes.call(this);if(this.withLines)for(e.lines=e.lines||{},e.lines.ids=[],e.lines.colors=[],t=0;t<this.borders.length;t++)e.lines.ids.push(this.borders[t].id),e.lines.colors.push(this.borders[t].visProp.strokecolor);return e;},snapToGrid:function(){var t,e;for(e=!!o.evaluate(this.visProp.snaptogrid),t=0;t<this.vertices.length;t++)this.vertices[t].handleSnapToGrid(e,!0);},setPositionDirectly:function(t,e,s){var o,n,a,h,l=new i(t,e,this.board),c=new i(t,s,this.board);for(h=this.vertices.length-1,a=0;a<h;a++)if(!this.vertices[a].draggable())return this;return o=r.subtract(l.usrCoords,c.usrCoords),n=this.board.create(\"transform\",o.slice(1),{type:\"translate\"}),n.applyOnce(this.vertices.slice(0,-1)),this;},sutherlandHodgman:function(e){var i,r,s,o,n,a,h,l=t.Math.Geometry.sortVertices(this.vertices),c=t.Math.Geometry.sortVertices(e.vertices),d=l.length-1,u=c.length-1,p=[],f=function(t,e,i){return(e[1]-t[1])*(i[2]-t[2])-(e[2]-t[2])*(i[1]-t[1])>=0;};for(s=0;s<u;s++)p.push(c[s]);for(s=0;s<d;s++)for(r=p.slice(0),i=r.length,p=[],n=r[i-1],o=0;o<i;o++)a=r[o],f(l[s],l[s+1],a)?(f(l[s],l[s+1],n)||(h=t.Math.Geometry.meetSegmentSegment(n,a,l[s],l[s+1]),h[0][1]/=h[0][0],h[0][2]/=h[0][0],h[0][0]=1,p.push(h[0])),p.push(a)):f(l[s],l[s+1],n)&&(h=t.Math.Geometry.meetSegmentSegment(n,a,l[s],l[s+1]),h[0][1]/=h[0][0],h[0][2]/=h[0][0],h[0][0]=1,p.push(h[0])),n=a;return p;},intersect:function(t){return this.sutherlandHodgman(t);}}),t.createPolygon=function(i,r,s){var n,a,h,l,c,d,u=[],p=!1;if(c=o.copyAttributes(s,i.options,\"polygon\"),l=i.select(r[0]),null===l&&(l=r[0]),o.isObject(l)&&l.type===e.OBJECT_TYPE_POLYGON&&o.isTransformationOrArray(r[1]))for(p=!0,h=l.vertices.length-1,d=o.copyAttributes(s,i.options,\"polygon\",\"vertices\"),a=0;a<h;a++)d.withlabel&&(d.name=\"\"===l.vertices[a].name?\"\":l.vertices[a].name+\"'\"),u.push(i.create(\"point\",[l.vertices[a],r[1]],d));else if(!1===(u=o.providePoints(i,r,s,\"polygon\",[\"vertices\"])))throw new Error(\"JSXGraph: Can't create polygon / polygonalchain with parent types other than 'point' and 'coordinate arrays' or a function returning an array of coordinates. Alternatively, a polygon and a transformation can be supplied\");if(c=o.copyAttributes(s,i.options,\"polygon\"),n=new t.Polygon(i,u,c),n.isDraggable=!0,p)for(n.prepareUpdate().update().updateVisibility().updateRenderer(),h=l.vertices.length-1,a=0;a<h;a++)u[a].prepareUpdate().update().updateVisibility().updateRenderer();return n;},t.createRegularPolygon=function(t,i,r){var s,n,a,h,l,c,d,u=[];if(l=i.length,a=i[l-1],o.isNumber(a)&&(3!==i.length||a<3))throw new Error(\"JSXGraph: A regular polygon needs two point types and a number > 2 as input.\");if(o.isNumber(t.select(a))?(l--,c=!1):(a=l,c=!0),!1===(u=o.providePoints(t,i.slice(0,l),r,\"regularpolygon\",[\"vertices\"])))throw new Error(\"JSXGraph: Can't create regular polygon with parent types other than 'point' and 'coordinate arrays' or a function returning an array of coordinates\");for(d=o.copyAttributes(r,t.options,\"regularpolygon\",\"vertices\"),n=2;n<a;n++)h=t.create(\"transform\",[Math.PI*(2-(a-2)/a),u[n-1]],{type:\"rotate\"}),c?(u[n].addTransform(u[n-2],h),u[n].fullUpdate()):(o.isArray(d.ids)&&d.ids.length>=a-2&&(d.id=d.ids[n-2]),u[n]=t.create(\"point\",[u[n-2],h],d),u[n].type=e.OBJECT_TYPE_CAS,u[n].isDraggable=!0,u[n].visProp.fixed=!1);return d=o.copyAttributes(r,t.options,\"regularpolygon\"),s=t.create(\"polygon\",u,d),s.elType=\"regularpolygon\",s;},t.createPolygonalChain=function(t,e,i){var r,s;return r=o.copyAttributes(i,t.options,\"polygonalchain\"),s=t.create(\"polygon\",e,r),s.elType=\"polygonalchain\",s.vertices.pop(),t.removeObject(s.borders[s.borders.length-1]),s.borders.pop(),s;},t.registerElement(\"polygon\",t.createPolygon),t.registerElement(\"regularpolygon\",t.createRegularPolygon),t.registerElement(\"polygonalchain\",t.createPolygonalChain),{Polygon:t.Polygon,createPolygon:t.createPolygon,createRegularPolygon:t.createRegularPolygon};}),define(\"element/composition\",[\"jxg\",\"math/math\",\"math/geometry\",\"math/numerics\",\"base/coords\",\"utils/type\",\"base/constants\",\"base/point\",\"base/line\",\"base/circle\",\"base/transformation\",\"base/composition\",\"base/curve\",\"base/polygon\"],function(t,e,i,r,s,o,n,a,h,l,c,d,u,p){\"use strict\";return t.createOrthogonalProjection=function(t,e,r){var s,a,h,l;if(e[0]=t.select(e[0]),e[1]=t.select(e[1]),o.isPointType(t,e[0])&&e[1].elementClass===n.OBJECT_CLASS_LINE)a=o.providePoints(t,[e[0]],r,\"point\")[0],s=e[1];else{if(!o.isPointType(t,e[1])||e[0].elementClass!==n.OBJECT_CLASS_LINE)throw new Error(\"JSXGraph: Can't create perpendicular point with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [point,line]\");a=o.providePoints(t,[e[1]],r,\"point\")[0],s=e[0];}return l=o.copyAttributes(r,t.options,\"orthogonalprojection\"),h=t.create(\"point\",[function(){return i.projectPointToLine(a,s,t);}],l),a.addChild(h),s.addChild(h),h.elType=\"orthogonalprojection\",h.setParents([a.id,h.id]),h.update(),h.generatePolynomial=function(){var t=s.point1.symbolic.x,e=s.point1.symbolic.y,i=s.point2.symbolic.x,r=s.point2.symbolic.y,o=a.symbolic.x,n=a.symbolic.y,l=h.symbolic.x,c=h.symbolic.y;return[\"(\"+e+\")*(\"+l+\")-(\"+e+\")*(\"+i+\")+(\"+c+\")*(\"+i+\")-(\"+t+\")*(\"+c+\")+(\"+t+\")*(\"+r+\")-(\"+l+\")*(\"+r+\")\",\"(\"+n+\")*(\"+e+\")-(\"+n+\")*(\"+r+\")-(\"+c+\")*(\"+e+\")+(\"+c+\")*(\"+r+\")+(\"+o+\")*(\"+t+\")-(\"+o+\")*(\"+i+\")-(\"+l+\")*(\"+t+\")+(\"+l+\")*(\"+i+\")\"];},h;},t.createPerpendicular=function(t,e,i){var r,s,a,l;if(e[0]=t.select(e[0]),e[1]=t.select(e[1]),o.isPointType(t,e[0])&&e[1].elementClass===n.OBJECT_CLASS_LINE)s=e[1],r=o.providePoints(t,[e[0]],i,\"point\")[0];else{if(!o.isPointType(t,e[1])||e[0].elementClass!==n.OBJECT_CLASS_LINE)throw new Error(\"JSXGraph: Can't create perpendicular with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [line,point]\");s=e[0],r=o.providePoints(t,[e[1]],i,\"point\")[0];}return l=o.copyAttributes(i,t.options,\"perpendicular\"),a=h.createLine(t,[function(){return s.stdform[2]*r.X()-s.stdform[1]*r.Y();},function(){return-s.stdform[2]*r.Z();},function(){return s.stdform[1]*r.Z();}],l),a.elType=\"perpendicular\",a.setParents([s.id,r.id]),a;},t.createPerpendicularPoint=function(t,e,r){var s,a,h;if(e[0]=t.select(e[0]),e[1]=t.select(e[1]),o.isPointType(t,e[0])&&e[1].elementClass===n.OBJECT_CLASS_LINE)a=o.providePoints(t,[e[0]],r,\"point\")[0],s=e[1];else{if(!o.isPointType(t,e[1])||e[0].elementClass!==n.OBJECT_CLASS_LINE)throw new Error(\"JSXGraph: Can't create perpendicular point with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [point,line]\");a=o.providePoints(t,[e[1]],r,\"point\")[0],s=e[0];}return h=t.create(\"point\",[function(){return i.perpendicular(s,a,t)[0];}],r),a.addChild(h),s.addChild(h),h.elType=\"perpendicularpoint\",h.setParents([a.id,s.id]),h.update(),h.generatePolynomial=function(){var t=s.point1.symbolic.x,e=s.point1.symbolic.y,i=s.point2.symbolic.x,r=s.point2.symbolic.y,o=a.symbolic.x,n=a.symbolic.y,l=h.symbolic.x,c=h.symbolic.y;return[\"(\"+e+\")*(\"+l+\")-(\"+e+\")*(\"+i+\")+(\"+c+\")*(\"+i+\")-(\"+t+\")*(\"+c+\")+(\"+t+\")*(\"+r+\")-(\"+l+\")*(\"+r+\")\",\"(\"+n+\")*(\"+e+\")-(\"+n+\")*(\"+r+\")-(\"+c+\")*(\"+e+\")+(\"+c+\")*(\"+r+\")+(\"+o+\")*(\"+t+\")-(\"+o+\")*(\"+i+\")-(\"+l+\")*(\"+t+\")+(\"+l+\")*(\"+i+\")\"];},h;},t.createPerpendicularSegment=function(e,r,s){var a,l,c,d,u;if(r[0]=e.select(r[0]),r[1]=e.select(r[1]),o.isPointType(e,r[0])&&r[1].elementClass===n.OBJECT_CLASS_LINE)l=r[1],a=o.providePoints(e,[r[0]],s,\"point\")[0];else{if(!o.isPointType(e,r[1])||r[0].elementClass!==n.OBJECT_CLASS_LINE)throw new Error(\"JSXGraph: Can't create perpendicular with parent types '\"+typeof r[0]+\"' and '\"+typeof r[1]+\"'.\\nPossible parent types: [line,point]\");l=r[0],a=o.providePoints(e,[r[1]],s,\"point\")[0];}return u=o.copyAttributes(s,e.options,\"perpendicularsegment\",\"point\"),d=t.createPerpendicularPoint(e,[l,a],u),d.dump=!1,o.exists(s.layer)||(s.layer=e.options.layer.line),u=o.copyAttributes(s,e.options,\"perpendicularsegment\"),c=h.createLine(e,[function(){return i.perpendicular(l,a,e)[1]?[d,a]:[a,d];}],u),c.point=d,c.elType=\"perpendicularsegment\",c.setParents([a.id,l.id]),c.subs={point:d},c.inherits.push(d),c;},t.createMidpoint=function(t,i,r){var s,a,h,l,c;for(l=0;l<i.length;++l)i[l]=t.select(i[l]);if(2===i.length&&o.isPointType(t,i[0])&&o.isPointType(t,i[1]))i=o.providePoints(t,i,r,\"point\"),s=i[0],a=i[1];else{if(1!==i.length||i[0].elementClass!==n.OBJECT_CLASS_LINE)throw new Error(\"JSXGraph: Can't create midpoint.\\nPossible parent types: [point,point], [line]\");s=i[0].point1,a=i[0].point2;}return c=o.copyAttributes(r,t.options,\"midpoint\"),h=t.create(\"point\",[function(){var t=s.coords.usrCoords[1]+a.coords.usrCoords[1];return isNaN(t)||Math.abs(s.coords.usrCoords[0])<e.eps||Math.abs(a.coords.usrCoords[0])<e.eps?NaN:.5*t;},function(){var t=s.coords.usrCoords[2]+a.coords.usrCoords[2];return isNaN(t)||Math.abs(s.coords.usrCoords[0])<e.eps||Math.abs(a.coords.usrCoords[0])<e.eps?NaN:.5*t;}],c),s.addChild(h),a.addChild(h),h.elType=\"midpoint\",h.setParents([s.id,a.id]),h.prepareUpdate().update(),h.generatePolynomial=function(){var t=s.symbolic.x,e=s.symbolic.y,i=a.symbolic.x,r=a.symbolic.y,o=h.symbolic.x,n=h.symbolic.y;return[\"(\"+e+\")*(\"+o+\")-(\"+e+\")*(\"+i+\")+(\"+n+\")*(\"+i+\")-(\"+t+\")*(\"+n+\")+(\"+t+\")*(\"+r+\")-(\"+o+\")*(\"+r+\")\",\"(\"+t+\")^2 - 2*(\"+t+\")*(\"+o+\")+(\"+e+\")^2-2*(\"+e+\")*(\"+n+\")-(\"+i+\")^2+2*(\"+i+\")*(\"+o+\")-(\"+r+\")^2+2*(\"+r+\")*(\"+n+\")\"];},h;},t.createParallelPoint=function(t,e,i){var r,s,a,h,l;for(l=0;l<e.length;++l)e[l]=t.select(e[l]);if(3===e.length&&o.isPointType(t,e[0])&&o.isPointType(t,e[1])&&o.isPointType(t,e[2]))e=o.providePoints(t,e,i,\"point\"),r=e[0],s=e[1],a=e[2];else if(o.isPointType(t,e[0])&&e[1].elementClass===n.OBJECT_CLASS_LINE)a=o.providePoints(t,[e[0]],i,\"point\")[0],r=e[1].point1,s=e[1].point2;else{if(!o.isPointType(t,e[1])||e[0].elementClass!==n.OBJECT_CLASS_LINE)throw new Error(\"JSXGraph: Can't create parallel point with parent types '\"+typeof e[0]+\"', '\"+typeof e[1]+\"' and '\"+typeof e[2]+\"'.\\nPossible parent types: [line,point], [point,point,point]\");a=o.providePoints(t,[e[1]],i,\"point\")[0],r=e[0].point1,s=e[0].point2;}return h=t.create(\"point\",[function(){return a.coords.usrCoords[1]+s.coords.usrCoords[1]-r.coords.usrCoords[1];},function(){return a.coords.usrCoords[2]+s.coords.usrCoords[2]-r.coords.usrCoords[2];}],i),r.addChild(h),s.addChild(h),a.addChild(h),h.elType=\"parallelpoint\",h.setParents([r.id,s.id,a.id]),h.prepareUpdate().update(),h.generatePolynomial=function(){var t=r.symbolic.x,e=r.symbolic.y,i=s.symbolic.x,o=s.symbolic.y,n=a.symbolic.x,l=a.symbolic.y,c=h.symbolic.x,d=h.symbolic.y;return[\"(\"+o+\")*(\"+c+\")-(\"+o+\")*(\"+n+\")-(\"+e+\")*(\"+c+\")+(\"+e+\")*(\"+n+\")-(\"+d+\")*(\"+i+\")+(\"+d+\")*(\"+t+\")+(\"+l+\")*(\"+i+\")-(\"+l+\")*(\"+t+\")\",\"(\"+d+\")*(\"+t+\")-(\"+d+\")*(\"+n+\")-(\"+o+\")*(\"+t+\")+(\"+o+\")*(\"+n+\")-(\"+c+\")*(\"+e+\")+(\"+c+\")*(\"+l+\")+(\"+i+\")*(\"+e+\")-(\"+i+\")*(\"+l+\")\"];},h;},t.createParallel=function(t,i,r){var s,n,a,h,l,c;for(l=0;l<i.length;++l)i[l]=t.select(i[l]);return s=null,3===i.length?(i=o.providePoints(t,i,r,\"point\"),s=i[2],h=function(){return e.crossProduct(i[0].coords.usrCoords,i[1].coords.usrCoords);}):o.isPointType(t,i[0])?(s=o.providePoints(t,[i[0]],r,\"point\")[0],h=function(){return i[1].stdform;}):o.isPointType(t,i[1])&&(s=o.providePoints(t,[i[1]],r,\"point\")[0],h=function(){return i[0].stdform;}),o.exists(r.layer)||(r.layer=t.options.layer.line),c=o.copyAttributes(r,t.options,\"parallel\",\"point\"),n=t.create(\"point\",[function(){return e.crossProduct([1,0,0],h());}],c),n.isDraggable=!0,c=o.copyAttributes(r,t.options,\"parallel\"),a=t.create(\"line\",[s,n],c),a.elType=\"parallel\",a.subs={point:n},a.inherits.push(n),a.setParents([i[0].id,i[1].id]),3===i.length&&a.addParents(i[2].id),a.point=n,a;},t.createArrowParallel=function(e,i,r){var s;try{return r.firstArrow=!1,r.lastArrow=!0,s=t.createParallel(e,i,r).setAttribute({straightFirst:!1,straightLast:!1}),s.elType=\"arrowparallel\",s;}catch(t){throw new Error(\"JSXGraph: Can't create arrowparallel with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [line,point], [point,point,point]\");}},t.createNormal=function(t,i,s){var a,h,l,c,d,u,p,f,m;for(c=0;c<i.length;++c)i[c]=t.select(i[c]);if(1===i.length)a=i[0],h=a.slideObject;else{if(2!==i.length)throw new Error(\"JSXGraph: Can't create normal with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,line], [point,circle], [glider]\");if(o.isPointType(t,i[0]))a=o.providePoints(t,[i[0]],s,\"point\")[0],h=i[1];else{if(!o.isPointType(t,i[1]))throw new Error(\"JSXGraph: Can't create normal with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,line], [point,circle], [glider]\");h=i[0],a=o.providePoints(t,[i[1]],s,\"point\")[0];}}if(p=o.copyAttributes(s,t.options,\"normal\"),h.elementClass===n.OBJECT_CLASS_LINE)m=o.copyAttributes(s,t.options,\"normal\",\"point\"),f=t.create(\"point\",[function(){var t=e.crossProduct([1,0,0],h.stdform);return[t[0],-t[2],t[1]];}],m),f.isDraggable=!0,l=t.create(\"line\",[a,f],p),l.point=f,l.subs={point:f},l.inherits.push(f);else if(h.elementClass===n.OBJECT_CLASS_CIRCLE)l=t.create(\"line\",[h.midpoint,a],p);else if(h.elementClass===n.OBJECT_CLASS_CURVE)\"plot\"!==o.evaluate(h.visProp.curvetype)?(d=h.X,u=h.Y,l=t.create(\"line\",[function(){return-a.X()*r.D(d)(a.position)-a.Y()*r.D(u)(a.position);},function(){return r.D(d)(a.position);},function(){return r.D(u)(a.position);}],p)):l=t.create(\"line\",[function(){var t=Math.floor(a.position),e=a.position-t;return t===h.numberPoints-1&&(t-=1,e=1),t<0?1:(h.Y(t)+e*(h.Y(t+1)-h.Y(t)))*(h.Y(t)-h.Y(t+1))-(h.X(t)+e*(h.X(t+1)-h.X(t)))*(h.X(t+1)-h.X(t));},function(){var t=Math.floor(a.position);return t===h.numberPoints-1&&(t-=1),t<0?0:h.X(t+1)-h.X(t);},function(){var t=Math.floor(a.position);return t===h.numberPoints-1&&(t-=1),t<0?0:h.Y(t+1)-h.Y(t);}],p);else{if(h.type!==n.OBJECT_TYPE_TURTLE)throw new Error(\"JSXGraph: Can't create normal with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [point,line], [point,circle], [glider]\");l=t.create(\"line\",[function(){var t,e,i=Math.floor(a.position),r=a.position-i;for(e=0;e<h.objects.length;e++)if(t=h.objects[e],t.type===n.OBJECT_TYPE_CURVE){if(i<t.numberPoints)break;i-=t.numberPoints;}return i===t.numberPoints-1&&(i-=1,r=1),i<0?1:(t.Y(i)+r*(t.Y(i+1)-t.Y(i)))*(t.Y(i)-t.Y(i+1))-(t.X(i)+r*(t.X(i+1)-t.X(i)))*(t.X(i+1)-t.X(i));},function(){var t,e,i=Math.floor(a.position);for(e=0;e<h.objects.length;e++)if(t=h.objects[e],t.type===n.OBJECT_TYPE_CURVE){if(i<t.numberPoints)break;i-=t.numberPoints;}return i===t.numberPoints-1&&(i-=1),i<0?0:t.X(i+1)-t.X(i);},function(){var t,e,i=Math.floor(a.position);for(e=0;e<h.objects.length;e++)if(t=h.objects[e],t.type===n.OBJECT_TYPE_CURVE){if(i<t.numberPoints)break;i-=t.numberPoints;}return i===t.numberPoints-1&&(i-=1),i<0?0:t.Y(i+1)-t.Y(i);}],p);}return l.elType=\"normal\",l.setParents(i),l;},t.createBisector=function(t,e,r){var s,n,a,l;if(e=o.providePoints(t,e,r,\"point\"),o.isPoint(e[0])&&o.isPoint(e[1])&&o.isPoint(e[2])){for(l=o.copyAttributes(r,t.options,\"bisector\",\"point\"),l.snapToGrid=!1,s=t.create(\"point\",[function(){return i.angleBisector(e[0],e[1],e[2],t);}],l),s.dump=!1,a=0;a<3;a++)e[a].addChild(s);return o.exists(r.layer)||(r.layer=t.options.layer.line),l=o.copyAttributes(r,t.options,\"bisector\"),n=h.createLine(t,[e[1],s],l),n.point=s,n.elType=\"bisector\",n.setParents(e),n.subs={point:s},n.inherits.push(s),n;}throw new Error(\"JSXGraph: Can't create angle bisector with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [point,point,point]\");},t.createAngularBisectorsOfTwoLines=function(t,e,i){var r,s,a,h,l=t.select(e[0]),c=t.select(e[1]);if(l.elementClass!==n.OBJECT_CLASS_LINE||c.elementClass!==n.OBJECT_CLASS_LINE)throw new Error(\"JSXGraph: Can't create angle bisectors of two lines with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [line,line]\");return o.exists(i.layer)||(i.layer=t.options.layer.line),a=o.copyAttributes(i,t.options,\"bisectorlines\",\"line1\"),r=t.create(\"line\",[function(){var t=Math.sqrt(l.stdform[1]*l.stdform[1]+l.stdform[2]*l.stdform[2]),e=Math.sqrt(c.stdform[1]*c.stdform[1]+c.stdform[2]*c.stdform[2]);return l.stdform[0]/t-c.stdform[0]/e;},function(){var t=Math.sqrt(l.stdform[1]*l.stdform[1]+l.stdform[2]*l.stdform[2]),e=Math.sqrt(c.stdform[1]*c.stdform[1]+c.stdform[2]*c.stdform[2]);return l.stdform[1]/t-c.stdform[1]/e;},function(){var t=Math.sqrt(l.stdform[1]*l.stdform[1]+l.stdform[2]*l.stdform[2]),e=Math.sqrt(c.stdform[1]*c.stdform[1]+c.stdform[2]*c.stdform[2]);return l.stdform[2]/t-c.stdform[2]/e;}],a),o.exists(i.layer)||(i.layer=t.options.layer.line),a=o.copyAttributes(i,t.options,\"bisectorlines\",\"line2\"),s=t.create(\"line\",[function(){var t=Math.sqrt(l.stdform[1]*l.stdform[1]+l.stdform[2]*l.stdform[2]),e=Math.sqrt(c.stdform[1]*c.stdform[1]+c.stdform[2]*c.stdform[2]);return l.stdform[0]/t+c.stdform[0]/e;},function(){var t=Math.sqrt(l.stdform[1]*l.stdform[1]+l.stdform[2]*l.stdform[2]),e=Math.sqrt(c.stdform[1]*c.stdform[1]+c.stdform[2]*c.stdform[2]);return l.stdform[1]/t+c.stdform[1]/e;},function(){var t=Math.sqrt(l.stdform[1]*l.stdform[1]+l.stdform[2]*l.stdform[2]),e=Math.sqrt(c.stdform[1]*c.stdform[1]+c.stdform[2]*c.stdform[2]);return l.stdform[2]/t+c.stdform[2]/e;}],a),h=new d({line1:r,line2:s}),r.dump=!1,s.dump=!1,h.elType=\"bisectorlines\",h.setParents([l.id,c.id]),h.subs={line1:r,line2:s},h;},t.createCircumcenter=function(t,e,r){var s,n,h,l,c;if(e=o.providePoints(t,e,r,\"point\"),o.isPoint(e[0])&&o.isPoint(e[1])&&o.isPoint(e[2])){for(h=e[0],l=e[1],c=e[2],s=a.createPoint(t,[function(){return i.circumcenter(h,l,c,t);}],r),n=0;n<3;n++)e[n].addChild(s);return s.elType=\"circumcenter\",s.setParents(e),s.generatePolynomial=function(){var t=h.symbolic.x,e=h.symbolic.y,i=l.symbolic.x,r=l.symbolic.y,o=c.symbolic.x,n=c.symbolic.y,a=s.symbolic.x,d=s.symbolic.y;return[[\"((\",a,\")-(\",t,\"))^2+((\",d,\")-(\",e,\"))^2-((\",a,\")-(\",i,\"))^2-((\",d,\")-(\",r,\"))^2\"].join(\"\"),[\"((\",a,\")-(\",t,\"))^2+((\",d,\")-(\",e,\"))^2-((\",a,\")-(\",o,\"))^2-((\",d,\")-(\",n,\"))^2\"].join(\"\")];},s;}throw new Error(\"JSXGraph: Can't create circumcircle midpoint with parent types '\"+typeof e[0]+\"', '\"+typeof e[1]+\"' and '\"+typeof e[2]+\"'.\\nPossible parent types: [point,point,point]\");},t.createIncenter=function(t,e,i){var r,a,h,l;if(e=o.providePoints(t,e,i,\"point\"),!(e.length>=3&&o.isPoint(e[0])&&o.isPoint(e[1])&&o.isPoint(e[2])))throw new Error(\"JSXGraph: Can't create incenter with parent types '\"+typeof e[0]+\"', '\"+typeof e[1]+\"' and '\"+typeof e[2]+\"'.\\nPossible parent types: [point,point,point]\");return a=e[0],h=e[1],l=e[2],r=t.create(\"point\",[function(){var e,i,r;return e=Math.sqrt((h.X()-l.X())*(h.X()-l.X())+(h.Y()-l.Y())*(h.Y()-l.Y())),i=Math.sqrt((a.X()-l.X())*(a.X()-l.X())+(a.Y()-l.Y())*(a.Y()-l.Y())),r=Math.sqrt((h.X()-a.X())*(h.X()-a.X())+(h.Y()-a.Y())*(h.Y()-a.Y())),new s(n.COORDS_BY_USER,[(e*a.X()+i*h.X()+r*l.X())/(e+i+r),(e*a.Y()+i*h.Y()+r*l.Y())/(e+i+r)],t);}],i),r.elType=\"incenter\",r.setParents(e),r;},t.createCircumcircle=function(e,i,r){var s,n,a;if(!1===(i=o.providePoints(e,i,r,\"point\")))throw new Error(\"JSXGraph: Can't create circumcircle with parent types '\"+typeof i[0]+\"', '\"+typeof i[1]+\"' and '\"+typeof i[2]+\"'.\\nPossible parent types: [point,point,point]\");try{a=o.copyAttributes(r,e.options,\"circumcircle\",\"center\"),s=t.createCircumcenter(e,i,a),s.dump=!1,o.exists(r.layer)||(r.layer=e.options.layer.circle),a=o.copyAttributes(r,e.options,\"circumcircle\"),n=l.createCircle(e,[s,i[0]],a),n.elType=\"circumcircle\",n.setParents(i),n.subs={center:s},n.inherits.push(n);}catch(t){throw new Error(\"JSXGraph: Can't create circumcircle with parent types '\"+typeof i[0]+\"', '\"+typeof i[1]+\"' and '\"+typeof i[2]+\"'.\\nPossible parent types: [point,point,point]\");}return n;},t.createIncircle=function(e,i,r){var s,n,a;if(!1===(i=o.providePoints(e,i,r,\"point\")))throw new Error(\"JSXGraph: Can't create circumcircle with parent types '\"+typeof i[0]+\"', '\"+typeof i[1]+\"' and '\"+typeof i[2]+\"'.\\nPossible parent types: [point,point,point]\");try{a=o.copyAttributes(r,e.options,\"incircle\",\"center\"),s=t.createIncenter(e,i,a),s.dump=!1,o.exists(r.layer)||(r.layer=e.options.layer.circle),a=o.copyAttributes(r,e.options,\"incircle\"),n=l.createCircle(e,[s,function(){var t=Math.sqrt((i[1].X()-i[2].X())*(i[1].X()-i[2].X())+(i[1].Y()-i[2].Y())*(i[1].Y()-i[2].Y())),e=Math.sqrt((i[0].X()-i[2].X())*(i[0].X()-i[2].X())+(i[0].Y()-i[2].Y())*(i[0].Y()-i[2].Y())),r=Math.sqrt((i[1].X()-i[0].X())*(i[1].X()-i[0].X())+(i[1].Y()-i[0].Y())*(i[1].Y()-i[0].Y())),s=(t+e+r)/2;return Math.sqrt((s-t)*(s-e)*(s-r)/s);}],a),n.elType=\"incircle\",n.setParents(i),n.center=s,n.subs={center:n.center},n.inherits.push(s);}catch(t){throw new Error(\"JSXGraph: Can't create circumcircle with parent types '\"+typeof i[0]+\"', '\"+typeof i[1]+\"' and '\"+typeof i[2]+\"'.\\nPossible parent types: [point,point,point]\");}return n;},t.createReflection=function(t,e,i){var r,s,d,f,m,g,b,v,y=\"\\nPossible parent types: [point|line|curve|polygon|circle|arc|sector, line]\";for(g=0;g<e.length;++g)e[g]=t.select(e[g]);if(b=o.copyAttributes(i,t.options,\"reflection\"),o.isPoint(e[0]))s=o.providePoints(t,[e[0]],v)[0];else{if(e[0].elementClass!==n.OBJECT_CLASS_CURVE&&e[0].elementClass!==n.OBJECT_CLASS_LINE&&e[0].type!==n.OBJECT_TYPE_POLYGON&&e[0].elementClass!==n.OBJECT_CLASS_CIRCLE)throw new Error(\"JSXGraph: Can't create reflection element with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\"+y);s=e[0];}if(e[1].elementClass!==n.OBJECT_CLASS_LINE)throw new Error(\"JSXGraph: Can't create reflected element with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\"+y);if(r=e[1],m=c.createTransform(t,[r],{type:\"reflect\"}),o.isPoint(s))d=a.createPoint(t,[s,m],b);else if(s.elementClass===n.OBJECT_CLASS_CURVE)d=u.createCurve(t,[s,m],b);else if(s.elementClass===n.OBJECT_CLASS_LINE)d=h.createLine(t,[s,m],b);else if(s.type===n.OBJECT_TYPE_POLYGON)d=p.createPolygon(t,[s,m],b);else{if(s.elementClass!==n.OBJECT_CLASS_CIRCLE)throw new Error(\"JSXGraph: Can't create reflected element with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\"+y);\"euclidean\"===b.type.toLowerCase()?(v=o.copyAttributes(i,t.options,\"reflection\",\"center\"),f=a.createPoint(t,[s.center,m],v),f.prepareUpdate().update().updateVisibility(o.evaluate(f.visProp.visible)).updateRenderer(),d=l.createCircle(t,[f,function(){return s.Radius();}],b)):d=l.createCircle(t,[s,m],b);}return r.addChild(d),d.elType=\"reflection\",d.addParents(r),d.prepareUpdate().update(),o.isPoint(d)&&(d.generatePolynomial=function(){var t=r.point1.symbolic.x,e=r.point1.symbolic.y,i=r.point2.symbolic.x,o=r.point2.symbolic.y,n=s.symbolic.x,a=s.symbolic.y,h=d.symbolic.x,l=d.symbolic.y;return[[\"((\",l,\")-(\",a,\"))*((\",e,\")-(\",o,\"))+((\",t,\")-(\",i,\"))*((\",h,\")-(\",n,\"))\"].join(\"\"),[\"((\",h,\")-(\",t,\"))^2+((\",l,\")-(\",e,\"))^2-((\",n,\")-(\",t,\"))^2-((\",a,\")-(\",e,\"))^2\"].join(\"\")];}),d;},t.createMirrorElement=function(t,e,i){var r,s,d,f,m,g,b,v,y=\"\\nPossible parent types: [point|line|curve|polygon|circle|arc|sector, point]\";for(s=0;s<e.length;++s)e[s]=t.select(e[s]);if(b=o.copyAttributes(i,t.options,\"mirrorelement\"),o.isPoint(e[0]))r=o.providePoints(t,[e[0]],b)[0];else{if(e[0].elementClass!==n.OBJECT_CLASS_CURVE&&e[0].elementClass!==n.OBJECT_CLASS_LINE&&e[0].type!==n.OBJECT_TYPE_POLYGON&&e[0].elementClass!==n.OBJECT_CLASS_CIRCLE)throw new Error(\"JSXGraph: Can't create mirror element with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\"+y);r=e[0];}if(!o.isPoint(e[1]))throw new Error(\"JSXGraph: Can't create mirror element with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\"+y);if(v=o.copyAttributes(i,t.options,\"mirrorelement\",\"point\"),d=o.providePoints(t,[e[1]],v)[0],g=c.createTransform(t,[Math.PI,d],{type:\"rotate\"}),o.isPoint(r))f=a.createPoint(t,[r,g],b);else if(r.elementClass===n.OBJECT_CLASS_CURVE)f=u.createCurve(t,[r,g],b);else if(r.elementClass===n.OBJECT_CLASS_LINE)f=h.createLine(t,[r,g],b);else if(r.type===n.OBJECT_TYPE_POLYGON)f=p.createPolygon(t,[r,g],b);else{if(r.elementClass!==n.OBJECT_CLASS_CIRCLE)throw new Error(\"JSXGraph: Can't create mirror element with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\"+y);\"euclidean\"===b.type.toLowerCase()?(v=o.copyAttributes(i,t.options,\"mirrorelement\",\"center\"),m=a.createPoint(t,[r.center,g],v),m.prepareUpdate().update().updateVisibility(o.evaluate(m.visProp.visible)).updateRenderer(),f=l.createCircle(t,[m,function(){return r.Radius();}],b)):f=l.createCircle(t,[r,g],b);}return d.addChild(f),f.elType=\"mirrorelement\",f.addParents(d),f.prepareUpdate().update(),f;},t.createMirrorPoint=function(e,i,r){var s=t.createMirrorElement(e,i,r);return s.elType=\"mirrorpoint\",s;},t.createIntegral=function(e,i,a){var h,l,c,d,u,p,f,m,g,b,v,y,C,_,P=null;if(o.isArray(i[0])&&i[1].elementClass===n.OBJECT_CLASS_CURVE)h=i[0],l=i[1];else{if(!o.isArray(i[1])||i[0].elementClass!==n.OBJECT_CLASS_CURVE)throw new Error(\"JSXGraph: Can't create integral with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [[number|function,number|function],curve]\");h=i[1],l=i[0];}return c=o.copyAttributes(a,e.options,\"integral\"),c.withLabel=!1,_=e.create(\"curve\",[[0],[0]],c),d=h[0],u=h[1],o.isFunction(d)?(p=d,f=function(){return l.Y(p());},d=p()):(p=d,f=l.Y(d)),o.isFunction(u)?(m=u,g=function(){return l.Y(m());},u=m()):(m=u,g=l.Y(u)),c=o.copyAttributes(a,e.options,\"integral\",\"curveLeft\"),b=e.create(\"glider\",[p,f,l],c),o.isFunction(p)&&b.hideElement(),c=o.copyAttributes(a,e.options,\"integral\",\"baseLeft\"),v=e.create(\"point\",[function(){return\"y\"===o.evaluate(_.visProp.axis)?0:b.X();},function(){return\"y\"===o.evaluate(_.visProp.axis)?b.Y():0;}],c),c=o.copyAttributes(a,e.options,\"integral\",\"curveRight\"),y=e.create(\"glider\",[m,g,l],c),o.isFunction(m)&&y.hideElement(),c=o.copyAttributes(a,e.options,\"integral\",\"baseRight\"),C=e.create(\"point\",[function(){return\"y\"===o.evaluate(_.visProp.axis)?0:y.X();},function(){return\"y\"===o.evaluate(_.visProp.axis)?y.Y():0;}],c),c=o.copyAttributes(a,e.options,\"integral\"),!1!==c.withlabel&&\"y\"!==c.axis&&(c=o.copyAttributes(a,e.options,\"integral\",\"label\"),c=o.copyAttributes(c,e.options,\"label\"),P=e.create(\"text\",[function(){var t=new s(n.COORDS_BY_SCREEN,[o.evaluate(this.visProp.offset[0])+this.board.origin.scrCoords[1],0],this.board,!1),e=this.board.getBoundingBox(),i=.1*(e[2]-e[0]),r=y.X();return r<e[0]?r=e[0]+i:r>e[2]&&(r=e[2]-i),r+t.usrCoords[1];},function(){var t=new s(n.COORDS_BY_SCREEN,[0,o.evaluate(this.visProp.offset[1])+this.board.origin.scrCoords[2]],this.board,!1),e=this.board.getBoundingBox(),i=.1*(e[1]-e[3]),r=y.Y();return r>e[1]?r=e[1]-i:r<e[3]&&(r=e[3]+i),r+t.usrCoords[2];},function(){var t=r.NewtonCotes([v.X(),C.X()],l.Y);return\"&int; = \"+o.toFixed(t,4);}],c),P.dump=!1,b.addChild(P),y.addChild(P)),b.dump=!1,v.dump=!1,y.dump=!1,C.dump=!1,_.elType=\"integral\",_.setParents([l.id,h]),_.subs={curveLeft:b,baseLeft:v,curveRight:y,baseRight:C},_.inherits.push(b,v,y,C),c.withLabel&&(_.subs.label=P,_.inherits.push(P)),_.Value=function(){return r.I([v.X(),C.X()],l.Y);},_.updateDataArray=function(){var t,e,i,r,s,n,a,h,c;if(\"y\"===o.evaluate(this.visProp.axis)){for(b.Y()<y.Y()?(n=b.X(),h=b.Y(),a=y.X(),c=y.Y()):(n=y.X(),h=y.Y(),a=b.X(),c=b.Y()),r=Math.min(n,a),s=Math.max(n,a),t=[0,n],e=[h,h],i=0;i<l.numberPoints;i++)h<=l.points[i].usrCoords[2]&&r<=l.points[i].usrCoords[1]&&l.points[i].usrCoords[2]<=c&&l.points[i].usrCoords[1]<=s&&(t.push(l.points[i].usrCoords[1]),e.push(l.points[i].usrCoords[2]));t.push(a),e.push(c),t.push(0),e.push(c),t.push(0),e.push(h);}else{for(v.X()<C.X()?(r=v.X(),s=C.X()):(r=C.X(),s=v.X()),t=[r,r],e=[0,l.Y(r)],i=0;i<l.numberPoints;i++)r<=l.points[i].usrCoords[1]&&l.points[i].usrCoords[1]<=s&&(t.push(l.points[i].usrCoords[1]),e.push(l.points[i].usrCoords[2]));t.push(s),e.push(l.Y(s)),t.push(s),e.push(0),t.push(r),e.push(0);}this.dataX=t,this.dataY=e;},b.addChild(_),y.addChild(_),v.addChild(_),C.addChild(_),_.baseLeft=v,_.baseRight=C,_.curveLeft=b,_.curveRight=y,_.methodMap=t.deepCopy(_.methodMap,{curveLeft:\"curveLeft\",baseLeft:\"baseLeft\",curveRight:\"curveRight\",baseRight:\"baseRight\",Value:\"Value\"}),_.label=P,_;},t.createGrid=function(t,e,i){var r,a;return a=o.copyAttributes(i,t.options,\"grid\"),r=t.create(\"curve\",[[null],[null]],a),r.elType=\"grid\",r.type=n.OBJECT_TYPE_GRID,r.updateDataArray=function(){var e,i,a,h,l,c=o.evaluate(this.visProp.gridx),d=o.evaluate(this.visProp.gridy);for(h=o.isArray(this.visProp.topleft)?new s(o.evaluate(this.visProp.tltype)||n.COORDS_BY_USER,this.visProp.topleft,t):new s(n.COORDS_BY_SCREEN,[0,0],t),l=o.isArray(this.visProp.bottomright)?new s(o.evaluate(this.visProp.brtype)||n.COORDS_BY_USER,this.visProp.bottomright,t):new s(n.COORDS_BY_SCREEN,[t.canvasWidth,t.canvasHeight],t),t.options.grid.hasGrid=!0,r.dataX=[],r.dataY=[],e=Math.floor(h.usrCoords[2]/d)*d,i=Math.ceil(l.usrCoords[2]/d)*d,h.usrCoords[2]<l.usrCoords[2]&&(e=Math.ceil(l.usrCoords[2]/d)*d,i=Math.floor(h.usrCoords[2]/d)*d),a=e;a>i-d;a-=d)r.dataX.push(h.usrCoords[1],l.usrCoords[1],NaN),r.dataY.push(a,a,NaN);for(e=Math.ceil(h.usrCoords[1]/c)*c,i=Math.floor(l.usrCoords[1]/c)*c,h.usrCoords[1]>l.usrCoords[1]&&(e=Math.floor(l.usrCoords[1]/c)*c,i=Math.ceil(h.usrCoords[1]/c)*c),a=e;a<i+c;a+=c)r.dataX.push(a,a,NaN),r.dataY.push(h.usrCoords[2],l.usrCoords[2],NaN);},r.hasPoint=function(){return!1;},t.grids.push(r),r;},t.createInequality=function(t,r,s){var a,h,l;if(l=o.copyAttributes(s,t.options,\"inequality\"),r[0].elementClass===n.OBJECT_CLASS_LINE)h=t.create(\"curve\",[[],[]],l),h.hasPoint=function(){return!1;},h.updateDataArray=function(){var s,o,a,h=t.getBoundingBox(),c=l.inverse?-1:1,d=1.5*Math.max(h[2]-h[0],h[1]-h[3]),u={coords:{usrCoords:[1,(h[0]+h[2])/2,l.inverse?h[1]:h[3]]}},p=r[0].stdform.slice(1),f=p;a=1.5*Math.max(i.perpendicular(r[0],u,t)[0].distance(n.COORDS_BY_USER,u.coords),d),a*=c,u={coords:{usrCoords:[1,(h[0]+h[2])/2,(h[1]+h[3])/2]}},u=Math.abs(e.innerProduct(u.coords.usrCoords,r[0].stdform,3))>=e.eps?i.perpendicular(r[0],u,t)[0].usrCoords:u.coords.usrCoords,s=[1,u[1]+p[1]*d,u[2]-p[0]*d],o=[1,u[1]-f[1]*d,u[2]+f[0]*d],this.dataX=[s[1],s[1]+p[0]*a,o[1]+f[0]*a,o[1],s[1]],this.dataY=[s[2],s[2]+p[1]*a,o[2]+f[1]*a,o[2],s[2]];};else if(r[0].elementClass===n.OBJECT_CLASS_CURVE&&\"functiongraph\"===r[0].visProp.curvetype)h=t.create(\"curve\",[[],[]],l),h.updateDataArray=function(){var t,e,i,s,n,a,h,l,c,d=this.board.getBoundingBox(),u=[],p=r[0].minX(),f=r[0].maxX(),m=.3*(d[1]-d[3]);if(t=o.evaluate(this.visProp.inverse)?1:3,this.dataX=[],this.dataY=[],0!=(s=r[0].points.length))for(d[1]+=m,d[3]-=m,i=-1;i<s-1;){for(n=i+1,e=s;n<s;n++)if(r[0].points[n].isReal()){e=n;break;}if(e>=s)break;for(n=e,i=s-1;n<s-1;n++)if(!r[0].points[n+1].isReal()){i=n;break;}for(l=r[0].points[e].usrCoords[1],c=r[0].points[i].usrCoords[1],a=d[0]<p?p:d[0],h=d[2]>f?f:d[2],a=0===e?a:Math.max(a,l),h=i===s-1?h:Math.min(h,c),a=0===e?p:l,h=i===s-1?f:c,u=[],u.push([1,a,d[t]]),u.push([1,a,r[0].points[e].usrCoords[2]]),n=e;n<=i;n++)u.push(r[0].points[n].usrCoords);for(u.push([1,h,r[0].points[i].usrCoords[2]]),u.push([1,h,d[t]]),u.push(u[0]),n=0;n<u.length;n++)this.dataX.push(u[n][1]),this.dataY.push(u[n][2]);i<s-1&&(this.dataX.push(NaN),this.dataY.push(NaN));}},h.hasPoint=function(){return!1;};else if(a=o.createFunction(r[0]),!o.exists(a))throw new Error(\"JSXGraph: Can't create area with the given parents.\\nPossible parent types: [line], [function]\");return h.addParents(r[0]),h;},t.registerElement(\"arrowparallel\",t.createArrowParallel),t.registerElement(\"bisector\",t.createBisector),t.registerElement(\"bisectorlines\",t.createAngularBisectorsOfTwoLines),t.registerElement(\"msector\",t.createMsector),t.registerElement(\"circumcircle\",t.createCircumcircle),t.registerElement(\"circumcirclemidpoint\",t.createCircumcenter),t.registerElement(\"circumcenter\",t.createCircumcenter),t.registerElement(\"incenter\",t.createIncenter),t.registerElement(\"incircle\",t.createIncircle),t.registerElement(\"integral\",t.createIntegral),t.registerElement(\"midpoint\",t.createMidpoint),t.registerElement(\"mirrorelement\",t.createMirrorElement),t.registerElement(\"mirrorpoint\",t.createMirrorPoint),t.registerElement(\"normal\",t.createNormal),t.registerElement(\"orthogonalprojection\",t.createOrthogonalProjection),t.registerElement(\"parallel\",t.createParallel),t.registerElement(\"parallelpoint\",t.createParallelPoint),t.registerElement(\"perpendicular\",t.createPerpendicular),t.registerElement(\"perpendicularpoint\",t.createPerpendicularPoint),t.registerElement(\"perpendicularsegment\",t.createPerpendicularSegment),t.registerElement(\"reflection\",t.createReflection),t.registerElement(\"grid\",t.createGrid),t.registerElement(\"inequality\",t.createInequality),{createArrowParallel:t.createArrowParallel,createBisector:t.createBisector,createAngularBisectorOfTwoLines:t.createAngularBisectorsOfTwoLines,createCircumcircle:t.createCircumcircle,createCircumcenter:t.createCircumcenter,createIncenter:t.createIncenter,createIncircle:t.createIncircle,createIntegral:t.createIntegral,createMidpoint:t.createMidpoint,createMirrorElement:t.createMirrorElement,createMirrorPoint:t.createMirrorPoint,createNormal:t.createNormal,createOrthogonalProjection:t.createOrthogonalProjection,createParallel:t.createParallel,createParallelPoint:t.createParallelPoint,createPerpendicular:t.createPerpendicular,createPerpendicularPoint:t.createPerpendicularPoint,createPerpendicularSegmen:t.createPerpendicularSegment,createReflection:t.createReflection,createGrid:t.createGrid,createInequality:t.createInequality};}),define(\"base/board\",[\"jxg\",\"base/constants\",\"base/coords\",\"options\",\"math/numerics\",\"math/math\",\"math/geometry\",\"math/complex\",\"math/statistics\",\"parser/jessiecode\",\"parser/geonext\",\"utils/color\",\"utils/type\",\"utils/event\",\"utils/env\",\"base/transformation\",\"base/point\",\"base/line\",\"base/text\",\"element/composition\",\"base/composition\"],function(t,e,i,r,s,o,n,a,h,l,c,d,u,p,f,m,g,b,v,y,C){\"use strict\";return t.Board=function(i,s,o,n,a,h,c,d,m,g,b){if(this.BOARD_MODE_NONE=0,this.BOARD_MODE_DRAG=1,this.BOARD_MODE_MOVE_ORIGIN=2,this.BOARD_QUALITY_LOW=1,this.BOARD_QUALITY_HIGH=2,this.BOARD_MODE_ZOOM=17,u.exists(b.document)&&!1!==b.document?this.document=b.document:void 0!==document&&u.isObject(document)&&(this.document=document),this.container=i,this.containerObj=f.isBrowser?this.document.getElementById(this.container):null,f.isBrowser&&\"no\"!==s.type&&null===this.containerObj)throw new Error(\"\\nJSXGraph: HTML container element '\"+i+\"' not found.\");this.renderer=s,this.grids=[],this.options=u.deepCopy(r),this.attr=b,this.dimension=2,this.jc=new l(),this.jc.use(this),this.origin={},this.origin.usrCoords=[1,0,0],this.origin.scrCoords=[1,n[0],n[1]],this.zoomX=a,this.zoomY=h,this.unitX=c*this.zoomX,this.unitY=d*this.zoomY,this.keepaspectratio=!1,this.canvasWidth=m,this.canvasHeight=g,u.exists(o)&&\"\"!==o&&f.isBrowser&&!u.exists(this.document.getElementById(o))?this.id=o:this.id=this.generateId(),p.eventify(this),this.hooks=[],this.dependentBoards=[],this.inUpdate=!1,this.objects={},this.objectsList=[],this.groups={},this.animationObjects={},this.highlightedObjects={},this.numObjects=0,this.elementsByName={},this.mode=this.BOARD_MODE_NONE,this.updateQuality=this.BOARD_QUALITY_HIGH,this.isSuspendedRedraw=!1,this.calculateSnapSizes(),this.drag_dx=0,this.drag_dy=0,this.drag_position=[0,0],this.mouse={},this.touches=[],this.xmlString=\"\",this.cPos=[],this.touchMoveLast=0,this.positionAccessLast=0,this.downObjects=[],this.attr.showcopyright&&this.renderer.displayCopyright(e.licenseText,parseInt(this.options.text.fontSize,10)),this.needsFullUpdate=!1,this.reducedUpdate=!1,this.currentCBDef=\"none\",this.geonextCompatibilityMode=!1,this.options.text.useASCIIMathML&&translateASCIIMath?init():this.options.text.useASCIIMathML=!1,this.hasMouseHandlers=!1,this.hasTouchHandlers=!1,this.hasPointerHandlers=!1,this.hasMouseUp=!1,this.hasTouchEnd=!1,this.hasPointerUp=!1,this._drag_offset=[0,0],this._inputDevice=\"mouse\",this._board_touches=[],this.selectingMode=!1,this.isSelecting=!1,this.selectingBox=[[0,0],[0,0]],this.mathLib=Math,this.mathLibJXG=t.Math,this.attr.registerevents&&this.addEventHandlers(),this.methodMap={update:\"update\",fullUpdate:\"fullUpdate\",on:\"on\",off:\"off\",trigger:\"trigger\",setView:\"setBoundingBox\",setBoundingBox:\"setBoundingBox\",migratePoint:\"migratePoint\",colorblind:\"emulateColorblindness\",suspendUpdate:\"suspendUpdate\",unsuspendUpdate:\"unsuspendUpdate\",clearTraces:\"clearTraces\",left:\"clickLeftArrow\",right:\"clickRightArrow\",up:\"clickUpArrow\",down:\"clickDownArrow\",zoomIn:\"zoomIn\",zoomOut:\"zoomOut\",zoom100:\"zoom100\",zoomElements:\"zoomElements\",remove:\"removeObject\",removeObject:\"removeObject\"};},t.extend(t.Board.prototype,{generateName:function(t){var i,r,s=this.attr.maxnamelength,o=\"\",n=\"\",a=[],h=\"\";if(t.type===e.OBJECT_TYPE_TICKS)return\"\";for(i=u.isPoint(t)?[\"\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\"]:t.type===e.OBJECT_TYPE_ANGLE?[\"\",\"&alpha;\",\"&beta;\",\"&gamma;\",\"&delta;\",\"&epsilon;\",\"&zeta;\",\"&eta;\",\"&theta;\",\"&iota;\",\"&kappa;\",\"&lambda;\",\"&mu;\",\"&nu;\",\"&xi;\",\"&omicron;\",\"&pi;\",\"&rho;\",\"&sigma;\",\"&tau;\",\"&upsilon;\",\"&phi;\",\"&chi;\",\"&psi;\",\"&omega;\"]:[\"\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],u.isPoint(t)||t.elementClass===e.OBJECT_CLASS_LINE||t.type===e.OBJECT_TYPE_ANGLE||(o=t.type===e.OBJECT_TYPE_POLYGON?\"P_{\":t.elementClass===e.OBJECT_CLASS_CIRCLE?\"k_{\":t.elementClass===e.OBJECT_CLASS_TEXT?\"t_{\":\"s_{\",n=\"}\"),r=0;r<s;r++)a[r]=0;for(;a[s-1]<i.length;){for(a[0]=1;a[0]<i.length;a[0]++){for(h=o,r=s;r>0;r--)h+=i[a[r-1]];if(!u.exists(this.elementsByName[h+n]))return h+n;}for(a[0]=i.length,r=1;r<s;r++)a[r-1]===i.length&&(a[r-1]=1,a[r]+=1);}return\"\";},generateId:function(){for(var e=1;u.exists(t.boards[\"jxgBoard\"+e]);)e=Math.round(65535*Math.random());return\"jxgBoard\"+e;},setId:function(t,e){var i,r=this.numObjects,s=t.id;if(this.numObjects+=1,\"\"===s||!u.exists(s))for(s=this.id+e+r;u.exists(this.objects[s]);)i=Math.round(65535*Math.random()),s=this.id+e+r+\"-\"+i;return t.id=s,this.objects[s]=t,t._pos=this.objectsList.length,this.objectsList[this.objectsList.length]=t,s;},finalizeAdding:function(t){!1===u.evaluate(t.visProp.visible)&&this.renderer.display(t,!1);},finalizeLabel:function(t){t.hasLabel&&!u.evaluate(t.label.visProp.islabel)&&!1===u.evaluate(t.label.visProp.visible)&&this.renderer.display(t.label,!1);},checkFrameRate:function(t){var e=new Date().getTime();return!((e-this.touchMoveLast)*this.attr.maxframerate<1e3)&&(this.touchMoveLast=e,!0);},getCoordsTopLeftCorner:function(){var t,e,i,r,s,o=this.document.documentElement||this.document.body.parentNode,n=this.document.body,a=this.containerObj;if(this.cPos.length>0&&(this.mode===this.BOARD_MODE_DRAG||this.mode===this.BOARD_MODE_MOVE_ORIGIN||new Date().getTime()-this.positionAccessLast<1e3))return this.cPos;if(this.positionAccessLast=new Date().getTime(),a.getBoundingClientRect){for(i=a.getBoundingClientRect(),r=1,s=a;s&&u.exists(s.parentNode);)u.exists(s.style)&&u.exists(s.style.zoom)&&\"\"!==s.style.zoom&&(r*=parseFloat(s.style.zoom)),s=s.parentNode;return t=[i.left*r,i.top*r],t[0]+=f.getProp(a,\"border-left-width\"),t[1]+=f.getProp(a,\"border-top-width\"),\"vml\"!==this.renderer.type&&(t[0]+=f.getProp(a,\"padding-left\"),t[1]+=f.getProp(a,\"padding-top\")),this.cPos=t.slice(),this.cPos;}return t=f.getOffset(a),e=this.document.documentElement.ownerDocument,!this.containerObj.currentStyle&&e.defaultView&&(t[0]+=f.getProp(o,\"margin-left\"),t[1]+=f.getProp(o,\"margin-top\"),t[0]+=f.getProp(o,\"border-left-width\"),t[1]+=f.getProp(o,\"border-top-width\"),t[0]+=f.getProp(o,\"padding-left\"),t[1]+=f.getProp(o,\"padding-top\")),n&&(t[0]+=f.getProp(n,\"left\"),t[1]+=f.getProp(n,\"top\")),\"object\"==typeof google&&google.translate&&(t[0]+=10,t[1]+=25),t[0]+=f.getProp(a,\"border-left-width\"),t[1]+=f.getProp(a,\"border-top-width\"),\"vml\"!==this.renderer.type&&(t[0]+=f.getProp(a,\"padding-left\"),t[1]+=f.getProp(a,\"padding-top\")),t[0]+=this.attr.offsetx,t[1]+=this.attr.offsety,this.cPos=t.slice(),this.cPos;},getMousePosition:function(t,e){var i,r,s=this.getCoordsTopLeftCorner();return i=f.getPosition(t,e,this.document),u.exists(this.cssTransMat)||this.updateCSSTransforms(),r=[1,i[0]-s[0],i[1]-s[1]],r=o.matVecMult(this.cssTransMat,r),r[1]/=r[0],r[2]/=r[0],[r[1],r[2]];},initMoveOrigin:function(t,e){this.drag_dx=t-this.origin.scrCoords[1],this.drag_dy=e-this.origin.scrCoords[2],this.mode=this.BOARD_MODE_MOVE_ORIGIN,this.updateQuality=this.BOARD_QUALITY_LOW;},initMoveObject:function(t,i,r,s){var o,n,a,l=[],c=[],d=this.objectsList.length,p={visProp:{layer:-1e4}};for(n=0;n<d;n++)o=this.objectsList[n],a=o.hasPoint&&o.hasPoint(t,i),o.visPropCalc.visible&&a&&(o.triggerEventHandlers([s+\"down\",\"down\"],[r]),this.downObjects.push(o)),a&&o.isDraggable&&o.visPropCalc.visible&&(this.geonextCompatibilityMode&&(u.isPoint(o)||o.elementClass===e.OBJECT_CLASS_TEXT)||!this.geonextCompatibilityMode)&&!u.evaluate(o.visProp.fixed)&&(o.visProp.layer>p.visProp.layer||o.visProp.layer===p.visProp.layer&&o.lastDragTime.getTime()>=p.lastDragTime.getTime())&&(this.attr.ignorelabels&&u.exists(p.label)&&o===p.label||(p=o,l.push(p),u.exists(p.coords)?c.push(h.subtract(p.coords.scrCoords.slice(1),[t,i])):c.push([0,0])));return this.attr.drag.enabled&&l.length>0&&(this.mode=this.BOARD_MODE_DRAG),this.attr.takefirst?(l.length=1,this._drag_offset=c[0]):(l=l.slice(-1),this._drag_offset=c[c.length-1]),this._drag_offset||(this._drag_offset=[0,0]),\"svg\"===this.renderer.type&&u.exists(l[0])&&u.evaluate(l[0].visProp.dragtotopoflayer)&&1===l.length&&u.exists(l[0].rendNode)&&l[0].rendNode.parentNode.appendChild(l[0].rendNode),this.previousRotation=0,this.previousScale=1,l.length>=1&&(l[0].highlight(!0),this.triggerEventHandlers([\"mousehit\",\"hit\"],[r,l[0]])),l;},moveObject:function(t,r,s,o,n){var a,l,c,d=new i(e.COORDS_BY_SCREEN,this.getScrCoordsOfMouse(t,r),this);s&&s.obj&&(a=s.obj,a.coords&&(l=a.coords.scrCoords.slice()),this.drag_position=[d.scrCoords[1],d.scrCoords[2]],this.drag_position=h.add(this.drag_position,this._drag_offset),u.exists(a.coords)?a.setPositionDirectly(e.COORDS_BY_SCREEN,this.drag_position):(this.displayInfobox(!1),isNaN(s.targets[0].Xprev+s.targets[0].Yprev)||a.setPositionDirectly(e.COORDS_BY_SCREEN,[d.scrCoords[1],d.scrCoords[2]],[s.targets[0].Xprev,s.targets[0].Yprev]),s.targets[0].Xprev=d.scrCoords[1],s.targets[0].Yprev=d.scrCoords[2]),u.exists(a.coords)&&(a.prepareUpdate().update(!1).updateRenderer(),this.updateInfobox(a),a.prepareUpdate().update(!0).updateRenderer()),a.coords&&(c=a.coords.scrCoords),a.coords&&l[1]===c[1]&&l[2]===c[2]||(a.triggerEventHandlers([n+\"drag\",\"drag\"],[o]),this.update()),a.highlight(!0),this.triggerEventHandlers([\"mousehit\",\"hit\"],[o,a]),a.lastDragTime=new Date());},twoFingerMove:function(t,r,s,o){var n,a,h;u.exists(s)&&u.exists(s.obj)&&(h=s.obj,n=new i(e.COORDS_BY_SCREEN,this.getScrCoordsOfMouse(t[0],t[1]),this),a=new i(e.COORDS_BY_SCREEN,this.getScrCoordsOfMouse(r[0],r[1]),this),h.elementClass===e.OBJECT_CLASS_LINE||h.type===e.OBJECT_TYPE_POLYGON?this.twoFingerTouchObject(n,a,s,h,o):h.elementClass===e.OBJECT_CLASS_CIRCLE&&this.twoFingerTouchCircle(n,a,s,h),h.triggerEventHandlers([\"touchdrag\",\"drag\"],[o]),s.targets[0].Xprev=n.scrCoords[1],s.targets[0].Yprev=n.scrCoords[2],s.targets[1].Xprev=a.scrCoords[1],s.targets[1].Yprev=a.scrCoords[2]);},twoFingerTouchObject:function(t,r,s,a,h){var l,c,d,p,f,m,g,b,v,y,C,_,P,E,x,S,O,w,T;if(u.exists(s.targets[0])&&u.exists(s.targets[1])&&!isNaN(s.targets[0].Xprev+s.targets[0].Yprev+s.targets[1].Xprev+s.targets[1].Yprev)){if(l=t.usrCoords,c=r.usrCoords,d=new i(e.COORDS_BY_SCREEN,[s.targets[0].Xprev,s.targets[0].Yprev],this).usrCoords,p=new i(e.COORDS_BY_SCREEN,[s.targets[1].Xprev,s.targets[1].Yprev],this).usrCoords,m=[1,.5*(d[1]+p[1]),.5*(d[2]+p[2])],f=[1,.5*(l[1]+c[1]),.5*(l[2]+c[2])],b=o.crossProduct(d,p),g=o.crossProduct(l,c),C=o.crossProduct(b,g),Math.abs(C[0])<o.eps)return;if(C[1]/=C[0],C[2]/=C[0],u.exists(h.rotation)&&\"pointermove\"!==h.type?(y=h.rotation-this.previousRotation,this.previousRotation=h.rotation,y*=-.017453292519943295):y=n.rad(m.slice(1),C.slice(1),f.slice(1)),_=this.create(\"transform\",[y,C[1],C[2]],{type:\"rotate\"}),_.update(),m=o.matVecMult(_.matrix,m),m[1]/=m[0],m[2]/=m[0],P=this.create(\"transform\",[f[1]-m[1],f[2]-m[2]],{type:\"translate\"}),P.update(),_.melt(P),u.evaluate(a.visProp.scalable)&&(u.exists(h.scale)?(v=h.scale/this.previousScale,this.previousScale=h.scale):v=n.distance(l,c)/n.distance(d,p),E=this.create(\"transform\",[-f[1],-f[2]],{type:\"translate\"}),x=this.create(\"transform\",[v,v],{type:\"scale\"}),S=this.create(\"transform\",[f[1],f[2]],{type:\"translate\"}),_.melt(E).melt(x).melt(S)),a.elementClass===e.OBJECT_CLASS_LINE)O=[],a.point1.draggable()&&O.push(a.point1),a.point2.draggable()&&O.push(a.point2),_.applyOnce(O);else if(a.type===e.OBJECT_TYPE_POLYGON){for(O=[],T=a.vertices.length-1,w=0;w<T;++w)a.vertices[w].draggable()&&O.push(a.vertices[w]);_.applyOnce(O);}this.update(),a.highlight(!0);}},twoFingerTouchCircle:function(t,r,s,o){var a,h,l,c,d,p,f,m,g,b,v;\"pointCircle\"!==o.method&&\"pointLine\"!==o.method&&u.exists(s.targets[0])&&u.exists(s.targets[1])&&!isNaN(s.targets[0].Xprev+s.targets[0].Yprev+s.targets[1].Xprev+s.targets[1].Yprev)&&(a=t.usrCoords,h=r.usrCoords,l=new i(e.COORDS_BY_SCREEN,[s.targets[0].Xprev,s.targets[0].Yprev],this).usrCoords,c=new i(e.COORDS_BY_SCREEN,[s.targets[1].Xprev,s.targets[1].Yprev],this).usrCoords,f=this.create(\"transform\",[a[1]-l[1],a[2]-l[2]],{type:\"translate\"}),p=n.rad(c.slice(1),a.slice(1),h.slice(1)),m=this.create(\"transform\",[-a[1],-a[2]],{type:\"translate\"}),g=this.create(\"transform\",[p],{type:\"rotate\"}),f.melt(m).melt(g),u.evaluate(o.visProp.scalable)&&(d=n.distance(a,h)/n.distance(l,c),b=this.create(\"transform\",[d,d],{type:\"scale\"}),f.melt(b)),v=this.create(\"transform\",[a[1],a[2]],{type:\"translate\"}),f.melt(v),o.center.draggable()&&f.applyOnce([o.center]),\"twoPoints\"===o.method?o.point2.draggable()&&f.applyOnce([o.point2]):\"pointRadius\"===o.method&&u.isNumber(o.updateRadius.origin)&&o.setRadius(o.radius*d),this.update(o.center),o.highlight(!0));},highlightElements:function(t,e,i,r){var s,o,n,a={},h=this.objectsList.length;for(s=0;s<h;s++)o=this.objectsList[s],n=o.id,u.exists(o.hasPoint)&&o.visPropCalc.visible&&o.hasPoint(t,e)&&(this.updateInfobox(o),u.exists(this.highlightedObjects[n])||(a[n]=o,o.highlight(),this.triggerEventHandlers([\"mousehit\",\"hit\"],[i,o,r])),o.mouseover?o.triggerEventHandlers([\"mousemove\",\"move\"],[i]):(o.triggerEventHandlers([\"mouseover\",\"over\"],[i]),o.mouseover=!0));for(s=0;s<h;s++)o=this.objectsList[s],n=o.id,o.mouseover&&(a[n]||(o.triggerEventHandlers([\"mouseout\",\"out\"],[i]),o.mouseover=!1));},saveStartPos:function(i,r){var s,o,n=[];if(i.type===e.OBJECT_TYPE_TICKS)n.push([1,NaN,NaN]);else if(i.elementClass===e.OBJECT_CLASS_LINE)n.push(i.point1.coords.usrCoords),n.push(i.point2.coords.usrCoords);else if(i.elementClass===e.OBJECT_CLASS_CIRCLE)n.push(i.center.coords.usrCoords),\"twoPoints\"===i.method&&n.push(i.point2.coords.usrCoords);else if(i.type===e.OBJECT_TYPE_POLYGON)for(o=i.vertices.length-1,s=0;s<o;s++)n.push(i.vertices[s].coords.usrCoords);else if(i.type===e.OBJECT_TYPE_SECTOR)n.push(i.point1.coords.usrCoords),n.push(i.point2.coords.usrCoords),n.push(i.point3.coords.usrCoords);else if(u.isPoint(i)||i.type===e.OBJECT_TYPE_GLIDER)n.push(i.coords.usrCoords);else if(i.elementClass===e.OBJECT_CLASS_CURVE)i.points.length>0&&n.push(i.points[0].usrCoords);else try{n.push(i.coords.usrCoords);}catch(e){t.debug(\"JSXGraph+ saveStartPos: obj.coords.usrCoords not available: \"+e);}for(o=n.length,s=0;s<o;s++)r.Zstart.push(n[s][0]),r.Xstart.push(n[s][1]),r.Ystart.push(n[s][2]);},mouseOriginMoveStart:function(t){var e,i;return e=this._isRequiredKeyPressed(t,\"pan\"),e&&(i=this.getMousePosition(t),this.initMoveOrigin(i[0],i[1])),e;},mouseOriginMove:function(t){var e,i=this.mode===this.BOARD_MODE_MOVE_ORIGIN;return i&&(e=this.getMousePosition(t),this.moveOrigin(e[0],e[1],!0)),i;},touchOriginMoveStart:function(e){var i,r,s=e[t.touchProperty];return i=this.attr.pan.enabled&&!this.attr.pan.needtwofingers&&1===s.length,i&&(r=this.getMousePosition(e,0),this.initMoveOrigin(r[0],r[1])),i;},touchOriginMove:function(t){var e,i=this.mode===this.BOARD_MODE_MOVE_ORIGIN;return i&&(e=this.getMousePosition(t,0),this.moveOrigin(e[0],e[1],!0)),i;},originMoveEnd:function(){this.updateQuality=this.BOARD_QUALITY_HIGH,this.mode=this.BOARD_MODE_NONE;},addEventHandlers:function(){f.supportsPointerEvents()?this.addPointerEventHandlers():(this.addMouseEventHandlers(),this.addTouchEventHandlers()),null!==this.containerObj&&(this.containerObj.oncontextmenu=function(t){return u.exists(t)&&t.preventDefault(),!1;}),this.addFullscreenEventHandlers();},addPointerEventHandlers:function(){!this.hasPointerHandlers&&f.isBrowser&&(window.navigator.msPointerEnabled?(f.addEvent(this.containerObj,\"MSPointerDown\",this.pointerDownListener,this),f.addEvent(this.containerObj,\"MSPointerMove\",this.pointerMoveListener,this)):(f.addEvent(this.containerObj,\"pointerdown\",this.pointerDownListener,this),f.addEvent(this.containerObj,\"pointermove\",this.pointerMoveListener,this)),f.addEvent(this.containerObj,\"mousewheel\",this.mouseWheelListener,this),f.addEvent(this.containerObj,\"DOMMouseScroll\",this.mouseWheelListener,this),null!==this.containerObj&&(this.containerObj.style.touchAction=\"none\"),this.hasPointerHandlers=!0);},addMouseEventHandlers:function(){!this.hasMouseHandlers&&f.isBrowser&&(f.addEvent(this.containerObj,\"mousedown\",this.mouseDownListener,this),f.addEvent(this.containerObj,\"mousemove\",this.mouseMoveListener,this),f.addEvent(this.containerObj,\"mousewheel\",this.mouseWheelListener,this),f.addEvent(this.containerObj,\"DOMMouseScroll\",this.mouseWheelListener,this),this.hasMouseHandlers=!0);},addTouchEventHandlers:function(t){!this.hasTouchHandlers&&f.isBrowser&&(f.addEvent(this.containerObj,\"touchstart\",this.touchStartListener,this),f.addEvent(this.containerObj,\"touchmove\",this.touchMoveListener,this),this.hasTouchHandlers=!0);},addFullscreenEventHandlers:function(){var t,e=[\"fullscreenchange\",\"mozfullscreenchange\",\"webkitfullscreenchange\",\"msfullscreenchange\"],i=e.length;for(t=0;t<i;t++)f.addEvent(this.document,e[t],this.fullscreenListener,this);this.hasFullsceenEventHandlers=!0;},removeFullscreenEventHandlers:function(){var t,e=[\"fullscreenchange\",\"mozfullscreenchange\",\"webkitfullscreenchange\",\"msfullscreenchange\"],i=e.length;if(this.hasFullsceenEventHandlers&&f.isBrowser)for(t=0;t<i;t++)f.removeEvent(this.document,e[t],this.fullscreenListener,this);},removePointerEventHandlers:function(){this.hasPointerHandlers&&f.isBrowser&&(window.navigator.msPointerEnabled?(f.removeEvent(this.containerObj,\"MSPointerDown\",this.pointerDownListener,this),f.removeEvent(this.containerObj,\"MSPointerMove\",this.pointerMoveListener,this)):(f.removeEvent(this.containerObj,\"pointerdown\",this.pointerDownListener,this),f.removeEvent(this.containerObj,\"pointermove\",this.pointerMoveListener,this)),f.removeEvent(this.containerObj,\"mousewheel\",this.mouseWheelListener,this),f.removeEvent(this.containerObj,\"DOMMouseScroll\",this.mouseWheelListener,this),this.hasPointerUp&&(window.navigator.msPointerEnabled?f.removeEvent(this.document,\"MSPointerUp\",this.pointerUpListener,this):f.removeEvent(this.document,\"pointerup\",this.pointerUpListener,this),this.hasPointerUp=!1),this.hasPointerHandlers=!1);},removeMouseEventHandlers:function(){this.hasMouseHandlers&&f.isBrowser&&(f.removeEvent(this.containerObj,\"mousedown\",this.mouseDownListener,this),f.removeEvent(this.containerObj,\"mousemove\",this.mouseMoveListener,this),this.hasMouseUp&&(f.removeEvent(this.document,\"mouseup\",this.mouseUpListener,this),this.hasMouseUp=!1),f.removeEvent(this.containerObj,\"mousewheel\",this.mouseWheelListener,this),f.removeEvent(this.containerObj,\"DOMMouseScroll\",this.mouseWheelListener,this),this.hasMouseHandlers=!1);},removeTouchEventHandlers:function(){this.hasTouchHandlers&&f.isBrowser&&(f.removeEvent(this.containerObj,\"touchstart\",this.touchStartListener,this),f.removeEvent(this.containerObj,\"touchmove\",this.touchMoveListener,this),this.hasTouchEnd&&(f.removeEvent(this.document,\"touchend\",this.touchEndListener,this),this.hasTouchEnd=!1),this.hasTouchHandlers=!1);},removeEventHandlers:function(){this.removeMouseEventHandlers(),this.removeTouchEventHandlers(),this.removePointerEventHandlers(),this.removeFullscreenEventHandlers();},clickLeftArrow:function(){return this.moveOrigin(this.origin.scrCoords[1]+.1*this.canvasWidth,this.origin.scrCoords[2]),this;},clickRightArrow:function(){return this.moveOrigin(this.origin.scrCoords[1]-.1*this.canvasWidth,this.origin.scrCoords[2]),this;},clickUpArrow:function(){return this.moveOrigin(this.origin.scrCoords[1],this.origin.scrCoords[2]-.1*this.canvasHeight),this;},clickDownArrow:function(){return this.moveOrigin(this.origin.scrCoords[1],this.origin.scrCoords[2]+.1*this.canvasHeight),this;},gestureChangeListener:function(t){var r,s,o,a,h,l,c,d,p,f,m=[],g=[],b=!1,v=this.attr.zoom.factorx,y=this.attr.zoom.factory;return this.mode!==this.BOARD_MODE_ZOOM||(t.preventDefault(),a=n.distance([t.touches[0].clientX,t.touches[0].clientY],[t.touches[1].clientX,t.touches[1].clientY],2),void 0===t.scale&&(t.scale=a/this.prevDist),!!u.exists(this.prevCoords)&&(m=[t.touches[0].clientX-this.prevCoords[0][0],t.touches[0].clientY-this.prevCoords[0][1]],g=[t.touches[1].clientX-this.prevCoords[1][0],t.touches[1].clientY-this.prevCoords[1][1]],!(m[0]*m[0]+m[1]*m[1]<100&&g[0]*g[0]+g[1]*g[1]<100)&&(s=n.rad(m,[0,0],g),\"pan\"!==this.isPreviousGesture&&Math.abs(s)>.2*Math.PI&&Math.abs(s)<1.8*Math.PI&&(b=!0),\"pan\"===this.isPreviousGesture||b||(Math.abs(t.scale)<.77||Math.abs(t.scale)>1.3)&&(b=!0),o=t.scale/this.prevScale,this.prevScale=t.scale,this.prevCoords=[[t.touches[0].clientX,t.touches[0].clientY],[t.touches[1].clientX,t.touches[1].clientY]],r=new i(e.COORDS_BY_SCREEN,this.getMousePosition(t,0),this),this.attr.pan.enabled&&this.attr.pan.needtwofingers&&!b?(this.isPreviousGesture=\"pan\",this.moveOrigin(r.scrCoords[1],r.scrCoords[2],!0)):this.attr.zoom.enabled&&Math.abs(o-1)<.5&&((this.attr.zoom.pinchhorizontal||this.attr.zoom.pinchvertical)&&(h=Math.abs(t.touches[0].clientX-t.touches[1].clientX),l=Math.abs(t.touches[0].clientY-t.touches[1].clientY),c=Math.abs(Math.atan2(l,h)),f=Math.PI*this.attr.zoom.pinchsensitivity/90),this.attr.zoom.pinchhorizontal&&c<f?(this.attr.zoom.factorx=o,this.attr.zoom.factory=1,d=0,p=0):this.attr.zoom.pinchvertical&&Math.abs(c-.5*Math.PI)<f?(this.attr.zoom.factorx=1,this.attr.zoom.factory=o,d=0,p=0):(this.attr.zoom.factorx=o,this.attr.zoom.factory=o,d=r.usrCoords[1],p=r.usrCoords[2]),this.zoomIn(d,p),this.attr.zoom.factorx=v,this.attr.zoom.factory=y),!1)));},gestureStartListener:function(t){var e;return t.preventDefault(),this.prevScale=1,this.prevDist=n.distance([t.touches[0].clientX,t.touches[0].clientY],[t.touches[1].clientX,t.touches[1].clientY],2),this.prevCoords=[[t.touches[0].clientX,t.touches[0].clientY],[t.touches[1].clientX,t.touches[1].clientY]],this.isPreviousGesture=\"none\",e=this.getMousePosition(t,0),this.initMoveOrigin(e[0],e[1]),this.mode=this.BOARD_MODE_ZOOM,!1;},_isRequiredKeyPressed:function(t,e){var i=this.attr[e];return!!i.enabled&&!(!(i.needshift&&t.shiftKey||!i.needshift&&!t.shiftKey)||!(i.needctrl&&t.ctrlKey||!i.needctrl&&!t.ctrlKey));},_isPointerEventAlreadyThere:function(t){var e;for(e=0;e<this._board_touches.length;e++)if(this._board_touches[e].pointerId===t.pointerId)return!0;return!1;},_pointerIsTouchRegistered:function(t){var e,i=this._board_touches.length;for(e=0;e<i;e++)if(this._board_touches[e].pointerId===t.pointerId)return!0;return!1;},_pointerAddBoardTouches:function(t){var e,i;for(e=0,i=!1;e<this._board_touches.length;e++)if(this._board_touches[e].pointerId===t.pointerId){this._board_touches[e].clientX=t.clientX,this._board_touches[e].clientY=t.clientY,i=!0;break;}return i||this._board_touches.push({pointerId:t.pointerId,clientX:t.clientX,clientY:t.clientY}),this;},_pointerRemoveBoardTouches:function(t){var e;for(e=0;e<this._board_touches.length;e++)if(this._board_touches[e].pointerId===t.pointerId){this._board_touches.splice(e,1);break;}return this;},_getPointerInputDevice:function(t){if(f.isBrowser){if(\"touch\"===t.pointerType||window.navigator.msMaxTouchPoints&&window.navigator.msMaxTouchPoints>1)return\"touch\";if(\"mouse\"===t.pointerType)return\"mouse\";if(\"pen\"===t.pointerType)return\"pen\";}return\"mouse\";},pointerDownListener:function(t,e){var i,r,s,o,n,a,h,l,c=\"mouse\";if(!e&&this._isPointerEventAlreadyThere(t))return!1;if(this.hasPointerUp||(window.navigator.msPointerEnabled?f.addEvent(this.document,\"MSPointerUp\",this.pointerUpListener,this):f.addEvent(this.document,\"pointerup\",this.pointerUpListener,this),this.hasPointerUp=!0),this.hasMouseHandlers&&this.removeMouseEventHandlers(),this.hasTouchHandlers&&this.removeTouchEventHandlers(),this.document.selection&&u.isFunction(this.document.selection.empty))this.document.selection.empty();else if(window.getSelection&&(a=window.getSelection(),a.removeAllRanges))try{a.removeAllRanges();}catch(t){}if(this._inputDevice=this._getPointerInputDevice(t),c=this._inputDevice,this.options.precision.hasPoint=this.options.precision[c],o=this.getMousePosition(t),this._testForSelection(t),this.selectingMode)return this._startSelecting(o),void this.triggerEventHandlers([\"touchstartselecting\",\"pointerstartselecting\",\"startselecting\"],[t]);if(this.attr.drag.enabled&&e?(n=[e],this.mode=this.BOARD_MODE_DRAG):n=this.initMoveObject(o[0],o[1],t,c),n.length>0){for(l=n[n.length-1],h=!1,i=0;i<this.touches.length;i++)if(this.touches[i].obj===l){r=i,s=this.touches[i].targets.push({num:t.pointerId,X:o[0],Y:o[1],Xprev:NaN,Yprev:NaN,Xstart:[],Ystart:[],Zstart:[]})-1,h=!0;break;}h||(s=0,r=this.touches.push({obj:l,targets:[{num:t.pointerId,X:o[0],Y:o[1],Xprev:NaN,Yprev:NaN,Xstart:[],Ystart:[],Zstart:[]}]})-1),this.dehighlightAll(),l.highlight(!0),this.saveStartPos(l,this.touches[r].targets[s]),t&&t.preventDefault?t.preventDefault():window.event&&(window.event.returnValue=!1);}return this.touches.length>0&&(t.preventDefault(),t.stopPropagation()),f.isBrowser&&\"touch\"!==this._getPointerInputDevice(t)?this.mode===this.BOARD_MODE_NONE&&this.mouseOriginMoveStart(t):(this._pointerAddBoardTouches(t),t.touches=this._board_touches,this.mode===this.BOARD_MODE_NONE&&this.touchOriginMoveStart(t)||this.mode!==this.BOARD_MODE_NONE&&this.mode!==this.BOARD_MODE_MOVE_ORIGIN||2!=t.touches.length||(this.mode===this.BOARD_MODE_MOVE_ORIGIN&&this.originMoveEnd(),this.gestureStartListener(t))),this.triggerEventHandlers([\"touchstart\",\"down\",\"pointerdown\",\"MSPointerDown\"],[t]),!1;},pointerOutListener:function(t){return(t.target===this.containerObj||\"svg\"===this.renderer.type&&t.target===this.renderer.foreignObjLayer)&&this.pointerUpListener(t),this.mode===this.BOARD_MODE_NONE;},pointerMoveListener:function(t){var e,i,r,s=\"mouse\";if(\"touch\"===this._getPointerInputDevice(t)&&!this._pointerIsTouchRegistered(t))return this.BOARD_MODE_NONE;if(!this.checkFrameRate(t))return!1;if(this.mode!==this.BOARD_MODE_DRAG&&(this.dehighlightAll(),this.displayInfobox(!1)),this.mode!==this.BOARD_MODE_NONE&&(t.preventDefault(),t.stopPropagation()),this.updateQuality=this.BOARD_QUALITY_LOW,this._inputDevice=this._getPointerInputDevice(t),s=this._inputDevice,this.options.precision.hasPoint=this.options.precision[s],this.selectingMode)r=this.getMousePosition(t),this._moveSelecting(r),this.triggerEventHandlers([\"touchmoveselecting\",\"moveselecting\",\"pointermoveselecting\"],[t,this.mode]);else if(!this.mouseOriginMove(t))if(this.mode===this.BOARD_MODE_DRAG){for(e=0;e<this.touches.length;e++)for(i=0;i<this.touches[e].targets.length;i++)if(this.touches[e].targets[i].num===t.pointerId){1===this.touches[e].targets.length?(this.touches[e].targets[i].X=t.pageX,this.touches[e].targets[i].Y=t.pageY,r=this.getMousePosition(t),this.moveObject(r[0],r[1],this.touches[e],t,s)):2===this.touches[e].targets.length&&(this.touches[e].targets[i].X=t.pageX,this.touches[e].targets[i].Y=t.pageY,this.twoFingerMove(this.getMousePosition({clientX:this.touches[e].targets[0].X,clientY:this.touches[e].targets[0].Y}),this.getMousePosition({clientX:this.touches[e].targets[1].X,clientY:this.touches[e].targets[1].Y}),this.touches[e],t));break;}}else\"touch\"===this._getPointerInputDevice(t)&&(this._pointerAddBoardTouches(t),2===this._board_touches.length&&(t.touches=this._board_touches,this.gestureChangeListener(t))),r=this.getMousePosition(t),this.highlightElements(r[0],r[1],t,-1);return this.triggerEventHandlers([\"touchmove\",\"move\",\"pointermove\",\"MSPointerMove\"],[t,this.mode]),this.updateQuality=this.BOARD_QUALITY_HIGH,this.mode===this.BOARD_MODE_NONE;},pointerUpListener:function(t){var e,i,r;if(this.triggerEventHandlers([\"touchend\",\"up\",\"pointerup\",\"MSPointerUp\"],[t]),this.displayInfobox(!1),t)for(e=0;e<this.touches.length;e++)for(i=0;i<this.touches[e].targets.length;i++)if(this.touches[e].targets[i].num===t.pointerId){this.touches[e].targets.splice(i,1),0===this.touches[e].targets.length&&this.touches.splice(e,1);break;}if(this.selectingMode)this._stopSelecting(t),this.triggerEventHandlers([\"touchstopselecting\",\"pointerstopselecting\",\"stopselecting\"],[t]);else for(e=this.downObjects.length-1;e>-1;e--){for(r=!1,i=0;i<this.touches.length;i++)this.touches[i].obj.id===this.downObjects[e].id&&(r=!0);r||(this.downObjects[e].triggerEventHandlers([\"touchend\",\"up\",\"pointerup\",\"MSPointerUp\"],[t]),this.downObjects[e].snapToGrid(),this.downObjects[e].snapToPoints(),this.downObjects.splice(e,1));}return this._pointerRemoveBoardTouches(t),0===this._board_touches.length&&(this.hasPointerUp&&(window.navigator.msPointerEnabled?f.removeEvent(this.document,\"MSPointerUp\",this.pointerUpListener,this):f.removeEvent(this.document,\"pointerup\",this.pointerUpListener,this),this.hasPointerUp=!1),this.dehighlightAll(),this.updateQuality=this.BOARD_QUALITY_HIGH,this.mode=this.BOARD_MODE_NONE,this.originMoveEnd(),this.update()),!0;},touchStartListener:function(i){var s,o,n,a,h,l,c,d,p,m=this.options.precision.touch,g=i[t.touchProperty];for(this.hasTouchEnd||(f.addEvent(this.document,\"touchend\",this.touchEndListener,this),this.hasTouchEnd=!0),this.document.selection&&u.isFunction(this.document.selection.empty)?this.document.selection.empty():window.getSelection&&window.getSelection().removeAllRanges(),this._inputDevice=\"touch\",this.options.precision.hasPoint=this.options.precision.touch,s=0;s<g.length;s++)g[s].jxg_isused=!1;for(s=0;s<this.touches.length;s++)for(a=0;a<this.touches[s].targets.length;a++){this.touches[s].targets[a].num=-1,m=this.options.precision.touch;do{for(h=0;h<g.length;h++)if(Math.abs(Math.pow(g[h].screenX-this.touches[s].targets[a].X,2)+Math.pow(g[h].screenY-this.touches[s].targets[a].Y,2))<m*m){this.touches[s].targets[a].num=h,this.touches[s].targets[a].X=g[h].screenX,this.touches[s].targets[a].Y=g[h].screenY,g[h].jxg_isused=!0;break;}m*=2;}while(-1===this.touches[s].targets[a].num&&m<this.options.precision.touchMax);-1===this.touches[s].targets[a].num&&(t.debug(\"i couldn't find a targettouches for target no \"+a+\" on \"+this.touches[s].obj.name+\" (\"+this.touches[s].obj.id+\"). Removed the target.\"),t.debug(\"eps = \"+m+\", touchMax = \"+r.precision.touchMax),this.touches[s].targets.splice(s,1));}for(s=0;s<g.length;s++)if(!g[s].jxg_isused){if(o=this.getMousePosition(i,s),this.selectingMode)return this._startSelecting(o),this.triggerEventHandlers([\"touchstartselecting\",\"startselecting\"],[i]),i.preventDefault(),i.stopPropagation(),this.options.precision.hasPoint=this.options.precision.mouse,this.touches.length>0;if(n=this.initMoveObject(o[0],o[1],i,\"touch\"),0!==n.length)if(l=n[n.length-1],u.isPoint(l)||l.elementClass===e.OBJECT_CLASS_TEXT||l.type===e.OBJECT_TYPE_TICKS||l.type===e.OBJECT_TYPE_IMAGE)d=[{num:s,X:g[s].screenX,Y:g[s].screenY,Xprev:NaN,Yprev:NaN,Xstart:[],Ystart:[],Zstart:[]}],this.saveStartPos(l,d[0]),this.touches.push({obj:l,targets:d}),l.highlight(!0);else if(l.elementClass===e.OBJECT_CLASS_LINE||l.elementClass===e.OBJECT_CLASS_CIRCLE||l.elementClass===e.OBJECT_CLASS_CURVE||l.type===e.OBJECT_TYPE_POLYGON){for(c=!1,a=0;a<this.touches.length;a++)l.id===this.touches[a].obj.id&&(c=!0,1===this.touches[a].targets.length&&(p={num:s,X:g[s].screenX,Y:g[s].screenY,Xprev:NaN,Yprev:NaN,Xstart:[],Ystart:[],Zstart:[]},this.saveStartPos(l,p),this.touches[a].targets.push(p)),g[s].jxg_isused=!0);c||(d=[{num:s,X:g[s].screenX,Y:g[s].screenY,Xprev:NaN,Yprev:NaN,Xstart:[],Ystart:[],Zstart:[]}],this.saveStartPos(l,d[0]),this.touches.push({obj:l,targets:d}),l.highlight(!0));}g[s].jxg_isused=!0;}return this.touches.length>0&&(i.preventDefault(),i.stopPropagation()),this.mode===this.BOARD_MODE_NONE&&this.touchOriginMoveStart(i)||2!==g.length||this.mode!==this.BOARD_MODE_NONE&&this.mode!==this.BOARD_MODE_MOVE_ORIGIN||(this.mode===this.BOARD_MODE_MOVE_ORIGIN&&this.originMoveEnd(),this.gestureStartListener(i)),this.options.precision.hasPoint=this.options.precision.mouse,this.triggerEventHandlers([\"touchstart\",\"down\"],[i]),!1;},touchMoveListener:function(e){var i,r,s,o=e[t.touchProperty];if(!this.checkFrameRate(e))return!1;if(this.mode!==this.BOARD_MODE_NONE&&(e.preventDefault(),e.stopPropagation()),this.mode!==this.BOARD_MODE_DRAG&&(this.dehighlightAll(),this.displayInfobox(!1)),this._inputDevice=\"touch\",this.options.precision.hasPoint=this.options.precision.touch,this.updateQuality=this.BOARD_QUALITY_LOW,this.selectingMode){for(i=0;i<o.length;i++)if(!o[i].jxg_isused){r=this.getMousePosition(e,i),this._moveSelecting(r),this.triggerEventHandlers([\"touchmoves\",\"moveselecting\"],[e,this.mode]);break;}}else if(!this.touchOriginMove(e))if(this.mode===this.BOARD_MODE_DRAG){for(i=0;i<this.touches.length;i++)if(1===this.touches[i].targets.length){if(o[this.touches[i].targets[0].num]){if(r=this.getMousePosition(e,this.touches[i].targets[0].num),r[0]<0||r[0]>this.canvasWidth||r[1]<0||r[1]>this.canvasHeight)return;this.touches[i].targets[0].X=o[this.touches[i].targets[0].num].screenX,this.touches[i].targets[0].Y=o[this.touches[i].targets[0].num].screenY,this.moveObject(r[0],r[1],this.touches[i],e,\"touch\");}}else if(2===this.touches[i].targets.length&&this.touches[i].targets[0].num>-1&&this.touches[i].targets[1].num>-1&&o[this.touches[i].targets[0].num]&&o[this.touches[i].targets[1].num]){if(r=this.getMousePosition(e,this.touches[i].targets[0].num),s=this.getMousePosition(e,this.touches[i].targets[1].num),r[0]<0||r[0]>this.canvasWidth||r[1]<0||r[1]>this.canvasHeight||s[0]<0||s[0]>this.canvasWidth||s[1]<0||s[1]>this.canvasHeight)return;this.touches[i].targets[0].X=o[this.touches[i].targets[0].num].screenX,this.touches[i].targets[0].Y=o[this.touches[i].targets[0].num].screenY,this.touches[i].targets[1].X=o[this.touches[i].targets[1].num].screenX,this.touches[i].targets[1].Y=o[this.touches[i].targets[1].num].screenY,this.twoFingerMove(r,s,this.touches[i],e);}}else 2===o.length&&this.gestureChangeListener(e),r=this.getMousePosition(e,0),this.highlightElements(r[0],r[1],e,-1);return this.mode!==this.BOARD_MODE_DRAG&&this.displayInfobox(!1),this.triggerEventHandlers([\"touchmove\",\"move\"],[e,this.mode]),this.options.precision.hasPoint=this.options.precision.mouse,this.updateQuality=this.BOARD_QUALITY_HIGH,this.mode===this.BOARD_MODE_NONE;},touchEndListener:function(i){var r,s,o,n,a,h=this.options.precision.touch,l=[],c=i&&i[t.touchProperty];if(this.triggerEventHandlers([\"touchend\",\"up\"],[i]),this.displayInfobox(!1),this.selectingMode)this._stopSelecting(i),this.triggerEventHandlers([\"touchstopselecting\",\"stopselecting\"],[i]);else if(c&&c.length>0){for(r=0;r<this.touches.length;r++)l[r]=this.touches[r];for(this.touches.length=0,r=0;r<c.length;r++)c[r].jxg_isused=!1;for(r=0;r<l.length;r++){for(n=!1,a=0,s=0;s<l[r].targets.length;s++)for(l[r].targets[s].found=!1,o=0;o<c.length;o++)if(Math.abs(Math.pow(c[o].screenX-l[r].targets[s].X,2)+Math.pow(c[o].screenY-l[r].targets[s].Y,2))<h*h){l[r].targets[s].found=!0,l[r].targets[s].num=o,l[r].targets[s].X=c[o].screenX,l[r].targets[s].Y=c[o].screenY,a+=1;break;}if(u.isPoint(l[r].obj)?n=l[r].targets[0]&&l[r].targets[0].found:l[r].obj.elementClass===e.OBJECT_CLASS_LINE?n=l[r].targets[0]&&l[r].targets[0].found||l[r].targets[1]&&l[r].targets[1].found:l[r].obj.elementClass===e.OBJECT_CLASS_CIRCLE&&(n=1===a||3===a),n)for(this.touches.push({obj:l[r].obj,targets:[]}),s=0;s<l[r].targets.length;s++)l[r].targets[s].found&&this.touches[this.touches.length-1].targets.push({num:l[r].targets[s].num,X:l[r].targets[s].screenX,Y:l[r].targets[s].screenY,Xprev:NaN,Yprev:NaN,Xstart:l[r].targets[s].Xstart,Ystart:l[r].targets[s].Ystart,Zstart:l[r].targets[s].Zstart});else l[r].obj.noHighlight();}}else this.touches.length=0;for(r=this.downObjects.length-1;r>-1;r--){for(n=!1,s=0;s<this.touches.length;s++)this.touches[s].obj.id===this.downObjects[r].id&&(n=!0);n||(this.downObjects[r].triggerEventHandlers([\"touchup\",\"up\"],[i]),this.downObjects[r].snapToGrid(),this.downObjects[r].snapToPoints(),this.downObjects.splice(r,1));}return c&&0!==c.length||(this.hasTouchEnd&&(f.removeEvent(this.document,\"touchend\",this.touchEndListener,this),this.hasTouchEnd=!1),this.dehighlightAll(),this.updateQuality=this.BOARD_QUALITY_HIGH,this.originMoveEnd(),this.update()),!0;},mouseDownListener:function(t){var e,i,r;if(this.document.selection&&u.isFunction(this.document.selection.empty)?this.document.selection.empty():window.getSelection&&window.getSelection().removeAllRanges(),!this.hasMouseUp)return f.addEvent(this.document,\"mouseup\",this.mouseUpListener,this),this.hasMouseUp=!0,this._inputDevice=\"mouse\",this.options.precision.hasPoint=this.options.precision.mouse,e=this.getMousePosition(t),this._testForSelection(t),this.selectingMode?(this._startSelecting(e),void this.triggerEventHandlers([\"mousestartselecting\",\"startselecting\"],[t])):(i=this.initMoveObject(e[0],e[1],t,\"mouse\"),0===i.length?(this.mode=this.BOARD_MODE_NONE,r=!0):(this.mouse={obj:null,targets:[{X:e[0],Y:e[1],Xprev:NaN,Yprev:NaN}]},this.mouse.obj=i[i.length-1],this.dehighlightAll(),this.mouse.obj.highlight(!0),this.mouse.targets[0].Xstart=[],this.mouse.targets[0].Ystart=[],this.mouse.targets[0].Zstart=[],this.saveStartPos(this.mouse.obj,this.mouse.targets[0]),t&&t.preventDefault?t.preventDefault():window.event&&(window.event.returnValue=!1)),this.mode===this.BOARD_MODE_NONE&&(r=this.mouseOriginMoveStart(t)),this.triggerEventHandlers([\"mousedown\",\"down\"],[t]),r);},mouseMoveListener:function(t){var e;if(!this.checkFrameRate(t))return!1;e=this.getMousePosition(t),this.updateQuality=this.BOARD_QUALITY_LOW,this.mode!==this.BOARD_MODE_DRAG&&(this.dehighlightAll(),this.displayInfobox(!1)),this.selectingMode?(this._moveSelecting(e),this.triggerEventHandlers([\"mousemoveselecting\",\"moveselecting\"],[t,this.mode])):this.mouseOriginMove(t)||(this.mode===this.BOARD_MODE_DRAG?this.moveObject(e[0],e[1],this.mouse,t,\"mouse\"):this.highlightElements(e[0],e[1],t,-1),this.triggerEventHandlers([\"mousemove\",\"move\"],[t,this.mode])),this.updateQuality=this.BOARD_QUALITY_HIGH;},mouseUpListener:function(t){var e;if(!1===this.selectingMode&&this.triggerEventHandlers([\"mouseup\",\"up\"],[t]),this.updateQuality=this.BOARD_QUALITY_HIGH,this.mouse&&this.mouse.obj&&(this.mouse.obj.snapToGrid(this.mouse.targets[0]),this.mouse.obj.snapToPoints()),this.originMoveEnd(),this.dehighlightAll(),this.update(),this.selectingMode)this._stopSelecting(t),this.triggerEventHandlers([\"mousestopselecting\",\"stopselecting\"],[t]);else for(e=0;e<this.downObjects.length;e++)this.downObjects[e].triggerEventHandlers([\"mouseup\",\"up\"],[t]);this.downObjects.length=0,this.hasMouseUp&&(f.removeEvent(this.document,\"mouseup\",this.mouseUpListener,this),this.hasMouseUp=!1),this.mouse=null;},mouseWheelListener:function(t){if(!this.attr.zoom.wheel||!this._isRequiredKeyPressed(t,\"zoom\"))return!0;t=t||window.event;var r=t.detail?-t.detail:t.wheelDelta/40,s=new i(e.COORDS_BY_SCREEN,this.getMousePosition(t),this);return r>0?this.zoomIn(s.usrCoords[1],s.usrCoords[2]):this.zoomOut(s.usrCoords[1],s.usrCoords[2]),this.triggerEventHandlers([\"mousewheel\"],[t]),t.preventDefault(),!1;},initInfobox:function(){var t=u.copyAttributes({},this.options,\"infobox\");return t.id=this.id+\"_infobox\",this.infobox=this.create(\"text\",[0,0,\"0,0\"],t),this.infobox.distanceX=-20,this.infobox.distanceY=25,this.infobox.dump=!1,this.displayInfobox(!1),this;},updateInfobox:function(t){var e,i,r,s,o,n=u.evaluate(t.visProp.showinfobox);return!u.evaluate(this.attr.showinfobox)&&\"inherit\"===n||!n?this:(u.isPoint(t)&&(r=t.coords.usrCoords[1],s=t.coords.usrCoords[2],o=u.evaluate(t.visProp.infoboxdigits),this.infobox.setCoords(r+this.infobox.distanceX/this.unitX,s+this.infobox.distanceY/this.unitY),\"string\"!=typeof t.infoboxText?(\"auto\"===o?(e=u.autoDigits(r),i=u.autoDigits(s)):u.isNumber(o)?(e=u.toFixed(r,o),i=u.toFixed(s,o)):(e=r,i=s),this.highlightInfobox(e,i,t)):this.highlightCustomInfobox(t.infoboxText,t),this.displayInfobox(!0)),this);},displayInfobox:function(t){return this.infobox.hiddenByParent==t&&(this.infobox.hiddenByParent=!t,this.infobox.prepareUpdate().updateVisibility(t).updateRenderer()),this;},showInfobox:function(t){return this.displayInfobox(t);},highlightInfobox:function(t,e,i){return this.highlightCustomInfobox(\"(\"+t+\", \"+e+\")\",i),this;},highlightCustomInfobox:function(t,e){return this.infobox.setText(t),this;},dehighlightAll:function(){var t,e,i=!1;for(t in this.highlightedObjects)this.highlightedObjects.hasOwnProperty(t)&&(e=this.highlightedObjects[t],(this.hasMouseHandlers||this.hasPointerHandlers)&&e.noHighlight(),i=!0);return this.highlightedObjects={},\"canvas\"===this.renderer.type&&i&&(this.prepareUpdate(),this.renderer.suspendRedraw(this),this.updateRenderer(),this.renderer.unsuspendRedraw()),this;},getScrCoordsOfMouse:function(t,e){return[t,e];},getUsrCoordsOfMouse:function(t){var r=this.getCoordsTopLeftCorner(),s=f.getPosition(t,null,this.document),o=s[0]-r[0],n=s[1]-r[1];return new i(e.COORDS_BY_SCREEN,[o,n],this).usrCoords.slice(1);},getAllUnderMouse:function(t){var e=this.getAllObjectsUnderMouse(t);return e.push(this.getUsrCoordsOfMouse(t)),e;},getAllObjectsUnderMouse:function(t){var e,i,r=this.getCoordsTopLeftCorner(),s=f.getPosition(t,null,this.document),o=s[0]-r[0],n=s[1]-r[1],a=[],h=this.objectsList.length;for(e=0;e<h;e++)i=this.objectsList[e],i.visPropCalc.visible&&i.hasPoint&&i.hasPoint(o,n)&&(a[a.length]=i);return a;},updateCoords:function(){var t,e,i=this.objectsList.length;for(e=0;e<i;e++)t=this.objectsList[e],u.exists(t.coords)&&(u.evaluate(t.visProp.frozen)?t.coords.screen2usr():t.coords.usr2screen());return this;},moveOrigin:function(t,r,s){var o,n,a,h;return u.exists(t)&&u.exists(r)&&(o=this.origin.scrCoords[1],n=this.origin.scrCoords[2],this.origin.scrCoords[1]=t,this.origin.scrCoords[2]=r,s&&(this.origin.scrCoords[1]-=this.drag_dx,this.origin.scrCoords[2]-=this.drag_dy),a=new i(e.COORDS_BY_SCREEN,[0,0],this).usrCoords,h=new i(e.COORDS_BY_SCREEN,[this.canvasWidth,this.canvasHeight],this).usrCoords,(a[1]<this.maxboundingbox[0]||a[2]>this.maxboundingbox[1]||h[1]>this.maxboundingbox[2]||h[2]<this.maxboundingbox[3])&&(this.origin.scrCoords[1]=o,this.origin.scrCoords[2]=n)),this.updateCoords().clearTraces().fullUpdate(),this.triggerEventHandlers([\"boundingbox\"]),this;},addConditions:function(i){var r,s,o,n,a,h,l,c=[],p=\"var el, x, y, c, rgbo;\\n\",f=i.indexOf(\"<data>\"),m=i.indexOf(\"</data>\"),g=function(t,i,r,s){return function(){var o,n;o=t.select(i.id),n=o.coords.usrCoords[s],2===s?o.setPositionDirectly(e.COORDS_BY_USER,[r(),n]):o.setPositionDirectly(e.COORDS_BY_USER,[n,r()]),o.prepareUpdate().update();};},b=function(t,e,i,r){return function(){var s,o;s=t.select(e.id),o=i(),\"strokewidth\"===r?s.visProp.strokewidth=o:(o=d.rgba2rgbo(o),s.visProp[r+\"color\"]=o[0],s.visProp[r+\"opacity\"]=o[1]);};};if(!(f<0)){for(;f>=0;){if(r=i.slice(f+6,m),s=r.indexOf(\"=\"),o=r.slice(0,s),n=r.slice(s+1),s=o.indexOf(\".\"),a=o.slice(0,s),h=this.elementsByName[u.unescapeHTML(a)],l=o.slice(s+1).replace(/\\s+/g,\"\").toLowerCase(),n=u.createFunction(n,this,\"\",!0),u.exists(this.elementsByName[a]))switch(p+='el = this.objects[\"'+h.id+'\"];\\n',l){case\"x\":c.push(g(this,h,n,2));break;case\"y\":c.push(g(this,h,n,1));break;case\"visible\":c.push(function(t,e,i){return function(){var r,s;r=t.select(e.id),s=i(),r.setAttribute({visible:s});};}(this,h,n));break;case\"position\":c.push(function(t,e,i){return function(){t.select(e.id).position=i();};}(this,h,n));break;case\"stroke\":c.push(b(this,h,n,\"stroke\"));break;case\"style\":c.push(function(t,e,i){return function(){t.select(e.id).setStyle(i());};}(this,h,n));break;case\"strokewidth\":c.push(b(this,h,n,\"strokewidth\"));break;case\"fill\":c.push(b(this,h,n,\"fill\"));break;case\"label\":break;default:t.debug(\"property '\"+l+\"' in conditions not yet implemented:\"+n);}else t.debug(\"debug conditions: |\"+a+\"| undefined\");i=i.slice(m+7),f=i.indexOf(\"<data>\"),m=i.indexOf(\"</data>\");}this.updateConditions=function(){var t;for(t=0;t<c.length;t++)c[t]();return this.prepareUpdate().updateElements(),!0;},this.updateConditions();}},updateConditions:function(){return!1;},calculateSnapSizes:function(){var t=new i(e.COORDS_BY_USER,[0,0],this),r=new i(e.COORDS_BY_USER,[this.options.grid.gridX,this.options.grid.gridY],this),s=t.scrCoords[1]-r.scrCoords[1],o=t.scrCoords[2]-r.scrCoords[2];for(this.options.grid.snapSizeX=this.options.grid.gridX;Math.abs(s)>25;)this.options.grid.snapSizeX*=2,s/=2;for(this.options.grid.snapSizeY=this.options.grid.gridY;Math.abs(o)>25;)this.options.grid.snapSizeY*=2,o/=2;return this;},applyZoom:function(){return this.updateCoords().calculateSnapSizes().clearTraces().fullUpdate(),this;},zoomIn:function(t,e){var i=this.getBoundingBox(),r=this.attr.zoom.factorx,s=this.attr.zoom.factory,o=(i[2]-i[0])*(1-1/r),n=(i[1]-i[3])*(1-1/s),a=.5,h=.5,l=this.attr.zoom.eps||this.attr.zoom.min||.001;return this.zoomX>this.attr.zoom.max&&r>1||this.zoomY>this.attr.zoom.max&&s>1||this.zoomX<l&&r<1||this.zoomY<l&&s<1?this:(u.isNumber(t)&&u.isNumber(e)&&(a=(t-i[0])/(i[2]-i[0]),h=(i[1]-e)/(i[1]-i[3])),this.setBoundingBox([i[0]+o*a,i[1]-n*h,i[2]-o*(1-a),i[3]+n*(1-h)],!1),this.zoomX*=r,this.zoomY*=s,this.applyZoom());},zoomOut:function(t,e){var i=this.getBoundingBox(),r=this.attr.zoom.factorx,s=this.attr.zoom.factory,o=(i[2]-i[0])*(1-r),n=(i[1]-i[3])*(1-s),a=.5,h=.5,l=this.attr.zoom.eps||this.attr.zoom.min||.001;return this.zoomX<l||this.zoomY<l?this:(u.isNumber(t)&&u.isNumber(e)&&(a=(t-i[0])/(i[2]-i[0]),h=(i[1]-e)/(i[1]-i[3])),this.setBoundingBox([i[0]+o*a,i[1]-n*h,i[2]-o*(1-a),i[3]+n*(1-h)],!1),this.zoomX/=r,this.zoomY/=s,this.applyZoom());},zoom100:function(){var t=this.getBoundingBox(),e=(t[2]-t[0])*(1-this.zoomX)*.5,i=(t[1]-t[3])*(1-this.zoomY)*.5;return this.setBoundingBox([t[0]+e,t[1]-i,t[2]-e,t[3]+i],!1),this.zoomX=1,this.zoomY=1,this.applyZoom();},zoomAllPoints:function(){var t,e,i,r,s,o=0,n=0,a=0,h=0,l=this.objectsList.length;for(t=0;t<l;t++)s=this.objectsList[t],u.isPoint(s)&&s.visPropCalc.visible&&(s.coords.usrCoords[1]<o?o=s.coords.usrCoords[1]:s.coords.usrCoords[1]>n&&(n=s.coords.usrCoords[1]),s.coords.usrCoords[2]>h?h=s.coords.usrCoords[2]:s.coords.usrCoords[2]<a&&(a=s.coords.usrCoords[2]));return e=50,i=e/this.unitX,r=e/this.unitY,this.zoomX=1,this.zoomY=1,this.setBoundingBox([o-i,h+r,n+i,a-r],!0),this.applyZoom();},zoomElements:function(t){var e,i,r,s,o,n,a,h,l=[1/0,-1/0,-1/0,1/0];if(!u.isArray(t)||0===t.length)return this;for(e=0;e<t.length;e++)i=this.select(t[e]),r=i.bounds(),u.isArray(r)&&(r[0]<l[0]&&(l[0]=r[0]),r[1]>l[1]&&(l[1]=r[1]),r[2]>l[2]&&(l[2]=r[2]),r[3]<l[3]&&(l[3]=r[3]));return u.isArray(l)&&(this.zoomX=1,this.zoomY=1,s=.5*(l[0]+l[2]),o=.5*(l[1]+l[3]),n=1.5*(l[2]-l[0])*.5,a=1.5*(l[1]-l[3])*.5,h=Math.max(n,a),this.setBoundingBox([s-h,o+h,s+h,o-h],!0)),this;},zoomElementsOld:function(t){var e,i,r,s,o=[0,0,0,0],n=[1,-1,-1,1];if(!u.isArray(t)||0===t.length)return this;for(e=0;e<t.length;e++)if(r=this.select(t[e]),s=r.bounds(),u.isArray(s))if(u.isArray(o))for(i=0;i<4;i++)n[i]*s[i]<n[i]*o[i]&&(o[i]=s[i]);else o=s;if(u.isArray(o)){for(i=0;i<4;i++)o[i]-=n[i];this.zoomX=1,this.zoomY=1,this.setBoundingBox(o,!0);}return this;},setZoom:function(t,e){var i=this.attr.zoom.factorx,r=this.attr.zoom.factory;return this.attr.zoom.factorx=t/this.zoomX,this.attr.zoom.factory=e/this.zoomY,this.zoomIn(),this.attr.zoom.factorx=i,this.attr.zoom.factory=r,this;},removeObject:function(i,r){var s,o;if(u.isArray(i)){for(o=0;o<i.length;o++)this.removeObject(i[o]);return this;}if(i=this.select(i),!u.exists(i)||u.isString(i))return this;try{for(s in i.childElements)i.childElements.hasOwnProperty(s)&&i.childElements[s].board.removeObject(i.childElements[s]);for(s in i.objects)i.objects.hasOwnProperty(s)&&i.objects[s].board.removeObject(i.objects[s]);if(r)for(s in this.objects)this.objects.hasOwnProperty(s)&&u.exists(this.objects[s].childElements)&&u.exists(this.objects[s].childElements.hasOwnProperty(i.id))&&(delete this.objects[s].childElements[i.id],delete this.objects[s].descendants[i.id]);else if(u.exists(i.ancestors))for(s in i.ancestors)i.ancestors.hasOwnProperty(s)&&u.exists(i.ancestors[s].childElements)&&u.exists(i.ancestors[s].childElements.hasOwnProperty(i.id))&&(delete i.ancestors[s].childElements[i.id],delete i.ancestors[s].descendants[i.id]);if(i._pos>-1)for(this.objectsList.splice(i._pos,1),s=i._pos;s<this.objectsList.length;s++)this.objectsList[s]._pos--;else i.type!==e.OBJECT_TYPE_TURTLE&&t.debug(\"Board.removeObject: object \"+i.id+\" not found in list.\");delete this.objects[i.id],delete this.elementsByName[i.name],i.visProp&&u.evaluate(i.visProp.trace)&&i.clearTrace(),u.exists(i.remove)&&i.remove();}catch(e){t.debug(i.id+\": Could not be removed: \"+e);}return this.update(),this;},removeAncestors:function(t){var e;for(e in t.ancestors)t.ancestors.hasOwnProperty(e)&&this.removeAncestors(t.ancestors[e]);return this.removeObject(t),this;},initGeonextBoard:function(){var t,e,i;return t=this.create(\"point\",[0,0],{id:this.id+\"g00e0\",name:\"Ursprung\",withLabel:!1,visible:!1,fixed:!0}),e=this.create(\"point\",[1,0],{id:this.id+\"gX0e0\",name:\"Punkt_1_0\",withLabel:!1,visible:!1,fixed:!0}),i=this.create(\"point\",[0,1],{id:this.id+\"gY0e0\",name:\"Punkt_0_1\",withLabel:!1,visible:!1,fixed:!0}),this.create(\"line\",[t,e],{id:this.id+\"gXLe0\",name:\"X-Achse\",withLabel:!1,visible:!1}),this.create(\"line\",[t,i],{id:this.id+\"gYLe0\",name:\"Y-Achse\",withLabel:!1,visible:!1}),this;},resizeContainer:function(t,e,i,r){var s;return r||(s=this.getBoundingBox()),this.canvasWidth=parseInt(t,10),this.canvasHeight=parseInt(e,10),i||(this.containerObj.style.width=this.canvasWidth+\"px\",this.containerObj.style.height=this.canvasHeight+\"px\"),this.renderer.resize(this.canvasWidth,this.canvasHeight),r||this.setBoundingBox(s,this.keepaspectratio),this;},showDependencies:function(){var t,e,i,r,s;e=\"<p>\\n\";for(t in this.objects)if(this.objects.hasOwnProperty(t)){s=0;for(i in this.objects[t].childElements)this.objects[t].childElements.hasOwnProperty(i)&&(s+=1);s>=0&&(e+=\"<strong>\"+this.objects[t].id+\":</strong> \");for(i in this.objects[t].childElements)this.objects[t].childElements.hasOwnProperty(i)&&(e+=this.objects[t].childElements[i].id+\"(\"+this.objects[t].childElements[i].name+\"), \");e+=\"<p>\\n\";}return e+=\"</p>\\n\",r=window.open(),r.document.open(),r.document.write(e),r.document.close(),this;},showXML:function(){var t=window.open(\"\");return t.document.open(),t.document.write(\"<pre>\"+u.escapeHTML(this.xmlString)+\"</pre>\"),t.document.close(),this;},prepareUpdate:function(){var t,e,i=this.objectsList.length;for(t=0;t<i;t++)e=this.objectsList[t],e.needsUpdate=e.needsRegularUpdate||this.needsFullUpdate;for(t in this.groups)this.groups.hasOwnProperty(t)&&(e=this.groups[t],e.needsUpdate=e.needsRegularUpdate||this.needsFullUpdate);return this;},updateElements:function(t){var i,r;for(t=this.select(t),i=0;i<this.objectsList.length;i++)r=this.objectsList[i],this.needsFullUpdate&&r.elementClass==e.OBJECT_CLASS_TEXT&&r.updateSize(),r.update(!u.exists(t)||r.id!==t.id).updateVisibility();for(i in this.groups)this.groups.hasOwnProperty(i)&&this.groups[i].update(t);return this;},updateRenderer:function(){var t,e=this.objectsList.length;if(\"canvas\"===this.renderer.type)this.updateRendererCanvas();else for(t=0;t<e;t++)this.objectsList[t].updateRenderer();return this;},updateRendererCanvas:function(){var t,e,i,r,s,o=this.objectsList.length,n=this.options.layer,a=this.options.layer.numlayers,h=Number.NEGATIVE_INFINITY;for(i=0;i<a;i++){r=Number.POSITIVE_INFINITY;for(s in n)n.hasOwnProperty(s)&&n[s]>h&&n[s]<r&&(r=n[s]);for(h=r,t=0;t<o;t++)e=this.objectsList[t],e.visProp.layer===r&&e.prepareUpdate().updateRenderer();}return this;},addHook:function(e,i,r){return t.deprecated(\"Board.addHook()\",\"Board.on()\"),i=u.def(i,\"update\"),r=u.def(r,this),this.hooks.push([i,e]),this.on(i,e,r),this.hooks.length-1;},addEvent:t.shortcut(t.Board.prototype,\"on\"),removeHook:function(e){return t.deprecated(\"Board.removeHook()\",\"Board.off()\"),this.hooks[e]&&(this.off(this.hooks[e][0],this.hooks[e][1]),this.hooks[e]=null),this;},removeEvent:t.shortcut(t.Board.prototype,\"off\"),updateHooks:function(e){var i=Array.prototype.slice.call(arguments,0);return t.deprecated(\"Board.updateHooks()\",\"Board.triggerEventHandlers()\"),i[0]=u.def(i[0],\"update\"),this.triggerEventHandlers([i[0]],arguments),this;},addChild:function(t){return u.exists(t)&&u.exists(t.containerObj)&&(this.dependentBoards.push(t),this.update()),this;},removeChild:function(t){var e;for(e=this.dependentBoards.length-1;e>=0;e--)this.dependentBoards[e]===t&&this.dependentBoards.splice(e,1);return this;},update:function(t){var e,i,r,s;if(this.inUpdate||this.isSuspendedUpdate)return this;for(this.inUpdate=!0,\"all\"===this.attr.minimizereflow&&this.containerObj&&\"vml\"!==this.renderer.type&&(s=this.renderer.removeToInsertLater(this.containerObj)),\"svg\"===this.attr.minimizereflow&&\"svg\"===this.renderer.type&&(s=this.renderer.removeToInsertLater(this.renderer.svgRoot)),this.prepareUpdate().updateElements(t).updateConditions(),this.renderer.suspendRedraw(this),this.updateRenderer(),this.renderer.unsuspendRedraw(),this.triggerEventHandlers([\"update\"],[]),s&&s(),i=this.dependentBoards.length,e=0;e<i;e++)r=this.dependentBoards[e],u.exists(r)&&r!==this&&(r.updateQuality=this.updateQuality,r.prepareUpdate().updateElements().updateConditions(),r.renderer.suspendRedraw(),r.updateRenderer(),r.renderer.unsuspendRedraw(),r.triggerEventHandlers([\"update\"],[]));return this.inUpdate=!1,this;},fullUpdate:function(){return this.needsFullUpdate=!0,this.update(),this.needsFullUpdate=!1,this;},addGrid:function(){return this.create(\"grid\",[]),this;},removeGrids:function(){var t;for(t=0;t<this.grids.length;t++)this.removeObject(this.grids[t]);return this.grids.length=0,this.update(),this;},create:function(e,i,r){var s,o;for(e=e.toLowerCase(),u.exists(i)||(i=[]),u.exists(r)||(r={}),o=0;o<i.length;o++)!u.isString(i[o])||\"text\"===e&&2===o||!(\"input\"!==e&&\"checkbox\"!==e&&\"button\"!==e||2!==o&&3!==o)||\"curve\"===e&&o>0||(i[o]=this.select(i[o]));if(!u.isFunction(t.elements[e]))throw new Error(\"JSXGraph: create: Unknown element type given: \"+e);return s=t.elements[e](this,i,r),u.exists(s)?(s.prepareUpdate&&s.update&&s.updateRenderer&&s.fullUpdate(),s):(t.debug(\"JSXGraph: create: failure creating \"+e),s);},createElement:function(){return t.deprecated(\"Board.createElement()\",\"Board.create()\"),this.create.apply(this,arguments);},clearTraces:function(){var t;for(t=0;t<this.objectsList.length;t++)this.objectsList[t].clearTrace();return this.numTraces=0,this;},suspendUpdate:function(){return this.inUpdate||(this.isSuspendedUpdate=!0),this;},unsuspendUpdate:function(){return this.isSuspendedUpdate&&(this.isSuspendedUpdate=!1,this.fullUpdate()),this;},setBoundingBox:function(t,e){var i,r,s=f.getDimensions(this.container,this.document);return u.isArray(t)?t[0]<this.maxboundingbox[0]||t[1]>this.maxboundingbox[1]||t[2]>this.maxboundingbox[2]||t[3]<this.maxboundingbox[3]?this:(this.plainBB=t,this.canvasWidth=parseInt(s.width,10),this.canvasHeight=parseInt(s.height,10),r=this.canvasWidth,i=this.canvasHeight,e?(this.unitX=r/(t[2]-t[0]),this.unitY=i/(t[1]-t[3]),Math.abs(this.unitX)<Math.abs(this.unitY)?this.unitY=Math.abs(this.unitX)*this.unitY/Math.abs(this.unitY):this.unitX=Math.abs(this.unitY)*this.unitX/Math.abs(this.unitX),this.keepaspectratio=!0):(this.unitX=r/(t[2]-t[0]),this.unitY=i/(t[1]-t[3]),this.keepaspectratio=!1),this.moveOrigin(-this.unitX*t[0],this.unitY*t[1]),this):this;},getBoundingBox:function(){var t=new i(e.COORDS_BY_SCREEN,[0,0],this).usrCoords,r=new i(e.COORDS_BY_SCREEN,[this.canvasWidth,this.canvasHeight],this).usrCoords;return[t[1],t[2],r[1],r[2]];},addAnimation:function(t){var e=this;return this.animationObjects[t.id]=t,this.animationIntervalCode||(this.animationIntervalCode=window.setInterval(function(){e.animate();},t.board.attr.animationdelay)),this;},stopAllAnimation:function(){var t;for(t in this.animationObjects)this.animationObjects.hasOwnProperty(t)&&u.exists(this.animationObjects[t])&&(this.animationObjects[t]=null,delete this.animationObjects[t]);return window.clearInterval(this.animationIntervalCode),delete this.animationIntervalCode,this;},animate:function(){var t,i,r,s,o,n,a,h,l=0,c=null;for(i in this.animationObjects)if(this.animationObjects.hasOwnProperty(i)&&u.exists(this.animationObjects[i])){if(l+=1,r=this.animationObjects[i],r.animationPath&&(s=u.isFunction(r.animationPath)?r.animationPath(new Date().getTime()-r.animationStart):r.animationPath.pop(),!u.exists(s)||!u.isArray(s)&&isNaN(s)?delete r.animationPath:(r.setPositionDirectly(e.COORDS_BY_USER,s),r.fullUpdate(),c=r)),r.animationData){a=0;for(o in r.animationData)r.animationData.hasOwnProperty(o)&&(n=r.animationData[o].pop(),u.exists(n)?(a+=1,t={},t[o]=n,r.setAttribute(t)):delete r.animationData[n]);0===a&&delete r.animationData;}u.exists(r.animationData)||u.exists(r.animationPath)||(this.animationObjects[i]=null,delete this.animationObjects[i],u.exists(r.animationCallback)&&(h=r.animationCallback,r.animationCallback=null,h()));}return 0===l?(window.clearInterval(this.animationIntervalCode),delete this.animationIntervalCode):this.update(c),this;},migratePoint:function(t,e,i){var r,s,o,n,a,h,l=!1;t=this.select(t),e=this.select(e),u.exists(t.label)&&(h=t.label.id,l=!0,this.removeObject(t.label));for(s in t.childElements)if(t.childElements.hasOwnProperty(s)){r=t.childElements[s],n=!1;for(o in r)r.hasOwnProperty(o)&&r[o]===t&&(r[o]=e,n=!0);for(n&&delete t.childElements[s],a=0;a<r.parents.length;a++)r.parents[a]===t.id&&(r.parents[a]=e.id);e.addChild(r);}return i&&(l&&(delete e.childElements[h],delete e.descendants[h]),e.label&&this.removeObject(e.label),delete this.elementsByName[e.name],e.name=t.name,l&&e.createLabel()),this.removeObject(t),u.exists(e.name)&&\"\"!==e.name&&(this.elementsByName[e.name]=e),this.fullUpdate(),this;},emulateColorblindness:function(e){var i,r;if(u.exists(e)||(e=\"none\"),this.currentCBDef===e)return this;for(i in this.objects)this.objects.hasOwnProperty(i)&&(r=this.objects[i],\"none\"!==e?(\"none\"===this.currentCBDef&&(r.visPropOriginal={strokecolor:r.visProp.strokecolor,fillcolor:r.visProp.fillcolor,highlightstrokecolor:r.visProp.highlightstrokecolor,highlightfillcolor:r.visProp.highlightfillcolor}),r.setAttribute({strokecolor:d.rgb2cb(u.evaluate(r.visPropOriginal.strokecolor),e),fillcolor:d.rgb2cb(u.evaluate(r.visPropOriginal.fillcolor),e),highlightstrokecolor:d.rgb2cb(u.evaluate(r.visPropOriginal.highlightstrokecolor),e),highlightfillcolor:d.rgb2cb(u.evaluate(r.visPropOriginal.highlightfillcolor),e)})):u.exists(r.visPropOriginal)&&t.extend(r.visProp,r.visPropOriginal));return this.currentCBDef=e,this.update(),this;},select:function(t,e){var i,r,s,o,n=t;if(null===n)return n;if(u.isString(n)&&\"\"!==n)u.exists(this.objects[n])?n=this.objects[n]:u.exists(this.elementsByName[n])?n=this.elementsByName[n]:u.exists(this.groups[n])&&(n=this.groups[n]);else if(!e&&(u.isFunction(n)||u.isObject(n)&&!u.isFunction(n.setAttribute))){for(i=u.filterElements(this.objectsList,n),r={},o=i.length,s=0;s<o;s++)r[i[s].id]=i[s];n=new C(r);}else u.isObject(n)&&u.exists(n.id)&&!u.exists(this.objects[n.id])&&(n=null);return n;},hasPoint:function(t,e){var i=t,r=e,s=this.getBoundingBox();return u.exists(t)&&u.isArray(t.usrCoords)&&(i=t.usrCoords[1],r=t.usrCoords[2]),!!(u.isNumber(i)&&u.isNumber(r)&&s[0]<i&&i<s[2]&&s[1]>r&&r>s[3]);},updateCSSTransforms:function(){var t=this.containerObj,e=t,i=t;for(this.cssTransMat=f.getCSSTransformMatrix(e),e=e.offsetParent;e;){for(this.cssTransMat=o.matMatMult(f.getCSSTransformMatrix(e),this.cssTransMat),i=i.parentNode;i!==e;)this.cssTransMat=o.matMatMult(f.getCSSTransformMatrix(e),this.cssTransMat),i=i.parentNode;e=e.offsetParent;}return this.cssTransMat=o.inverse(this.cssTransMat),this;},startSelectionMode:function(){this.selectingMode=!0,this.selectionPolygon.setAttribute({visible:!0}),this.selectingBox=[[0,0],[0,0]],this._setSelectionPolygonFromBox(),this.selectionPolygon.fullUpdate();},stopSelectionMode:function(){return this.selectingMode=!1,this.selectionPolygon.setAttribute({visible:!1}),[this.selectionPolygon.vertices[0].coords,this.selectionPolygon.vertices[2].coords];},_startSelecting:function(t){this.isSelecting=!0,this.selectingBox=[[t[0],t[1]],[t[0],t[1]]],this._setSelectionPolygonFromBox();},_moveSelecting:function(t){this.isSelecting&&(this.selectingBox[1]=[t[0],t[1]],this._setSelectionPolygonFromBox(),this.selectionPolygon.fullUpdate());},_stopSelecting:function(t){var e=this.getMousePosition(t);this.isSelecting=!1,this.selectingBox[1]=[e[0],e[1]],this._setSelectionPolygonFromBox();},_setSelectionPolygonFromBox:function(){var e=this.selectingBox[0],i=this.selectingBox[1];this.selectionPolygon.vertices[0].setPositionDirectly(t.COORDS_BY_SCREEN,[e[0],e[1]]),this.selectionPolygon.vertices[1].setPositionDirectly(t.COORDS_BY_SCREEN,[e[0],i[1]]),this.selectionPolygon.vertices[2].setPositionDirectly(t.COORDS_BY_SCREEN,[i[0],i[1]]),this.selectionPolygon.vertices[3].setPositionDirectly(t.COORDS_BY_SCREEN,[i[0],e[1]]);},_testForSelection:function(t){this._isRequiredKeyPressed(t,\"selection\")&&(u.exists(this.selectionPolygon)||this._createSelectionPolygon(this.attr),this.startSelectionMode());},_createSelectionPolygon:function(t){var e;return u.exists(this.selectionPolygon)||(e=u.copyAttributes(t,r,\"board\",\"selection\"),!0===e.enabled&&(this.selectionPolygon=this.create(\"polygon\",[[0,0],[0,0],[0,0],[0,0]],e))),this;},__evt__down:function(t){},__evt__mousedown:function(t){},__evt__pendown:function(t){},__evt__pointerdown:function(t){},__evt__touchstart:function(t){},__evt__up:function(t){},__evt__mouseup:function(t){},__evt__pointerup:function(t){},__evt__touchend:function(t){},__evt__move:function(t,e){},__evt__mousemove:function(t,e){},__evt__penmove:function(t,e){},__evt__pointermove:function(t,e){},__evt__touchmove:function(t,e){},__evt__hit:function(t,e,i){},__evt__mousehit:function(t,e,i){},__evt__update:function(){},__evt__boundingbox:function(){},__evt__startselecting:function(){},__evt__mousestartselecting:function(){},__evt__pointerstartselecting:function(){},__evt__touchstartselecting:function(){},__evt__stopselecting:function(){},__evt__mousestopselecting:function(){},__evt__pointerstopselecting:function(){},__evt__touchstopselecting:function(){},__evt__moveselecting:function(){},__evt__mousemoveselecting:function(){},__evt__pointermoveselecting:function(){},__evt__touchmoveselecting:function(){},__evt:function(){},toFullscreen:function(){var t,e=this.container,i=\"fullscreenwrap_\"+e,r=document.createElement(\"div\");return this.document.getElementById(i)||(r.classList.add(\"JXG_wrap_private\"),r.setAttribute(\"id\",i),t=this.containerObj,t.parentNode.insertBefore(r,t),r.appendChild(t)),f.toFullscreen(i,e),this;},fullscreenListener:function(t){var e=this.containerObj;u.exists(this._cssFullscreenStore)&&this._cssFullscreenStore.isFullscreen?(e._cssFullscreenStore.isFullscreen=!1,e.style.margin=this._cssFullscreenStore.margin):(e._cssFullscreenStore.isFullscreen=!0,e.style.margin=\"\"),this.updateCSSTransforms();},createRoulette:function(t,e,i,r,o,n,h){var l=this;return new function(){var c,d=0,u=0,p=0,f=i,m=s.root(function(i){var r=t.X(f),s=t.Y(f),o=e.X(i),n=e.Y(i);return(r-o)*(r-o)+(s-n)*(s-n);},[0,2*Math.PI]),g=0,b=0,v=l.create(\"transform\",[function(){return d;}],{type:\"rotate\"}),y=l.create(\"transform\",[function(){return d;},function(){return t.X(f);},function(){return t.Y(f);}],{type:\"rotate\"}),C=l.create(\"transform\",[function(){return u;},function(){return p;}],{type:\"translate\"}),_=function(t,e,i){var r=s.D(t.X)(e),o=s.D(t.Y)(e),n=s.D(t.X)(i),a=s.D(t.Y)(i),h=s.D(t.X)(.5*(e+i)),l=s.D(t.Y)(.5*(e+i)),c=Math.sqrt(r*r+o*o),d=Math.sqrt(n*n+a*a);return(c+4*Math.sqrt(h*h+l*l)+d)*(i-e)/6;},P=function(t){return c-_(e,m,t);},E=Math.PI/18,x=9*E,S=null;return this.rolling=function(){var i,n,S,O,w;g=f+o*r,c=_(t,f,g),b=s.root(P,m),i=new a(t.X(g),t.Y(g)),n=new a(e.X(b),e.Y(b)),S=new a(s.D(t.X)(g),s.D(t.Y)(g)),O=new a(s.D(e.X)(b),s.D(e.Y)(b)),w=a.C.div(S,O),d=Math.atan2(w.imaginary,w.real),w.div(a.C.abs(w)),w.mult(n),u=i.real-w.real,p=i.imaginary-w.imaginary,d<-E&&d>-x?(d=-E,y.applyOnce(h)):d>E&&d<x?(d=E,y.applyOnce(h)):(v.applyOnce(h),C.applyOnce(h),f=g,m=b),l.update();},this.start=function(){return n>0&&(S=window.setInterval(this.rolling,n)),this;},this.stop=function(){return window.clearInterval(S),this;},this;}();}}),t.Board;}),define(\"renderer/svg\",[\"jxg\",\"options\",\"renderer/abstract\",\"base/constants\",\"utils/type\",\"utils/color\",\"utils/base64\",\"math/numerics\"],function(t,e,i,r,s,o,n,a){\"use strict\";return t.SVGRenderer=function(t,i){var r;for(this.type=\"svg\",this.isIE=-1!==navigator.appVersion.indexOf(\"MSIE\")||navigator.userAgent.match(/Trident\\//),this.svgRoot=null,this.svgNamespace=\"http://www.w3.org/2000/svg\",this.xlinkNamespace=\"http://www.w3.org/1999/xlink\",this.container=t,this.container.style.MozUserSelect=\"none\",this.container.style.userSelect=\"none\",this.container.style.overflow=\"hidden\",\"\"===this.container.style.position&&(this.container.style.position=\"relative\"),this.svgRoot=this.container.ownerDocument.createElementNS(this.svgNamespace,\"svg\"),this.svgRoot.style.overflow=\"hidden\",this.resize(i.width,i.height),this.container.appendChild(this.svgRoot),this.defs=this.container.ownerDocument.createElementNS(this.svgNamespace,\"defs\"),this.svgRoot.appendChild(this.defs),this.filter=this.container.ownerDocument.createElementNS(this.svgNamespace,\"filter\"),this.filter.setAttributeNS(null,\"id\",this.container.id+\"_f1\"),this.filter.setAttributeNS(null,\"width\",\"300%\"),this.filter.setAttributeNS(null,\"height\",\"300%\"),this.filter.setAttributeNS(null,\"filterUnits\",\"userSpaceOnUse\"),this.feOffset=this.container.ownerDocument.createElementNS(this.svgNamespace,\"feOffset\"),this.feOffset.setAttributeNS(null,\"result\",\"offOut\"),this.feOffset.setAttributeNS(null,\"in\",\"SourceAlpha\"),this.feOffset.setAttributeNS(null,\"dx\",\"5\"),this.feOffset.setAttributeNS(null,\"dy\",\"5\"),this.filter.appendChild(this.feOffset),this.feGaussianBlur=this.container.ownerDocument.createElementNS(this.svgNamespace,\"feGaussianBlur\"),this.feGaussianBlur.setAttributeNS(null,\"result\",\"blurOut\"),this.feGaussianBlur.setAttributeNS(null,\"in\",\"offOut\"),this.feGaussianBlur.setAttributeNS(null,\"stdDeviation\",\"3\"),this.filter.appendChild(this.feGaussianBlur),this.feBlend=this.container.ownerDocument.createElementNS(this.svgNamespace,\"feBlend\"),this.feBlend.setAttributeNS(null,\"in\",\"SourceGraphic\"),this.feBlend.setAttributeNS(null,\"in2\",\"blurOut\"),this.feBlend.setAttributeNS(null,\"mode\",\"normal\"),this.filter.appendChild(this.feBlend),this.defs.appendChild(this.filter),this.layer=[],r=0;r<e.layer.numlayers;r++)this.layer[r]=this.container.ownerDocument.createElementNS(this.svgNamespace,\"g\"),this.svgRoot.appendChild(this.layer[r]);this.supportsForeignObject=document.implementation.hasFeature(\"http://w3.org/TR/SVG11/feature#Extensibility\",\"1.1\"),this.supportsForeignObject&&(this.foreignObjLayer=this.container.ownerDocument.createElementNS(this.svgNamespace,\"foreignObject\"),this.foreignObjLayer.setAttribute(\"x\",0),this.foreignObjLayer.setAttribute(\"y\",0),this.foreignObjLayer.setAttribute(\"width\",\"100%\"),this.foreignObjLayer.setAttribute(\"height\",\"100%\"),this.foreignObjLayer.setAttribute(\"id\",this.container.id+\"_foreignObj\"),this.svgRoot.appendChild(this.foreignObjLayer)),this.dashArray=[\"2, 2\",\"5, 5\",\"10, 10\",\"20, 20\",\"20, 10, 10, 10\",\"20, 5, 10, 5\"];},t.SVGRenderer.prototype=new i(),t.extend(t.SVGRenderer.prototype,{_createArrowHead:function(e,i){var o,n,a,h,l=e.id+\"Triangle\",c=null,d=s.evaluate(e.visProp.firstarrow),u=s.evaluate(e.visProp.lastarrow);return s.exists(i)&&(l+=i),o=this.createPrim(\"marker\",l),o.setAttributeNS(null,\"stroke\",s.evaluate(e.visProp.strokecolor)),o.setAttributeNS(null,\"stroke-opacity\",s.evaluate(e.visProp.strokeopacity)),o.setAttributeNS(null,\"fill\",s.evaluate(e.visProp.strokecolor)),o.setAttributeNS(null,\"fill-opacity\",s.evaluate(e.visProp.strokeopacity)),o.setAttributeNS(null,\"stroke-width\",0),o.setAttributeNS(null,\"orient\",\"auto\"),o.setAttributeNS(null,\"markerUnits\",\"strokeWidth\"),n=this.container.ownerDocument.createElementNS(this.svgNamespace,\"path\"),h=5,\"End\"===i?(t.exists(d.type)&&(c=s.evaluate(d.type)),a=0,2===c?n.setAttributeNS(null,\"d\",\"M 10,0 L 0,5 L 10,10 L 5,5 z\"):3===c?n.setAttributeNS(null,\"d\",\"M 0,0 L 3.33,0 L 3.33,10 L 0,10 z\"):4===c?(h=3.31,n.setAttributeNS(null,\"d\",\"M 0.00,3.31 C 3.53,3.84 7.13,4.50 10.00,6.63 C 9.33,5.52 8.67,4.42 8.00,3.31 C 8.67,2.21 9.33,1.10 10.00,0.00 C 7.13,2.13 3.53,2.79 0.00,3.31\")):5===c?(h=3.28,n.setAttributeNS(null,\"d\",\"M 0.00,3.28 C 3.39,4.19 6.81,5.07 10.00,6.55 C 9.38,5.56 9.00,4.44 9.00,3.28 C 9.00,2.11 9.38,0.99 10.00,0.00 C 6.81,1.49 3.39,2.37 0.00,3.28\")):6===c?(h=2.84,n.setAttributeNS(null,\"d\",\"M 0.00,2.84 C 3.39,3.59 6.79,4.35 10.00,5.68 C 9.67,4.73 9.33,3.78 9.00,2.84 C 9.33,1.89 9.67,0.95 10.00,0.00 C 6.79,1.33 3.39,2.09 0.00,2.84\")):n.setAttributeNS(null,\"d\",\"M 10,0 L 0,5 L 10,10 z\"),e.elementClass===r.OBJECT_CLASS_LINE&&(a=2===c?4.9:3===c?3.3:4===c||5===c||6===c?6.66:10)):(t.exists(u.type)&&(c=s.evaluate(u.type)),a=10,2===c?n.setAttributeNS(null,\"d\",\"M 0,0 L 10,5 L 0,10 L 5,5 z\"):3===c?(a=3.3,n.setAttributeNS(null,\"d\",\"M 0,0 L 3.33,0 L 3.33,10 L 0,10 z\")):4===c?(h=3.31,n.setAttributeNS(null,\"d\",\"M 10.00,3.31 C 6.47,3.84 2.87,4.50 0.00,6.63 C 0.67,5.52 1.33,4.42 2.00,3.31 C 1.33,2.21 0.67,1.10 0.00,0.00 C 2.87,2.13 6.47,2.79 10.00,3.31\")):5===c?(h=3.28,n.setAttributeNS(null,\"d\",\"M 10.00,3.28 C 6.61,4.19 3.19,5.07 0.00,6.55 C 0.62,5.56 1.00,4.44 1.00,3.28 C 1.00,2.11 0.62,0.99 0.00,0.00 C 3.19,1.49 6.61,2.37 10.00,3.28\")):6===c?(h=2.84,n.setAttributeNS(null,\"d\",\"M 10.00,2.84 C 6.61,3.59 3.21,4.35 0.00,5.68 C 0.33,4.73 0.67,3.78 1.00,2.84 C 0.67,1.89 0.33,0.95 0.00,0.00 C 3.21,1.33 6.61,2.09 10.00,2.84\")):n.setAttributeNS(null,\"d\",\"M 0,0 L 10,5 L 0,10 z\"),e.elementClass===r.OBJECT_CLASS_LINE&&(a=2===c?5.1:3===c?.02:4===c||5===c||6===c?3.33:.05)),o.setAttributeNS(null,\"refY\",h),o.setAttributeNS(null,\"refX\",a),o.appendChild(n),o;},_setArrowColor:function(t,e,i,r){t&&(s.isString(e)&&this._setAttribute(function(){t.setAttributeNS(null,\"stroke\",e),t.setAttributeNS(null,\"fill\",e),t.setAttributeNS(null,\"stroke-opacity\",i),t.setAttributeNS(null,\"fill-opacity\",i);},r.visPropOld.fillcolor),this.isIE&&r.rendNode.parentNode.insertBefore(r.rendNode,r.rendNode));},_setArrowWidth:function(t,e,i,r){var s,o;t&&(s=e,o=s*r,t.setAttributeNS(null,\"viewBox\",\"0 0 \"+10*s+\" \"+10*s),t.setAttributeNS(null,\"markerHeight\",o),t.setAttributeNS(null,\"markerWidth\",o),t.setAttributeNS(null,\"display\",\"inherit\"),this.isIE&&i.parentNode.insertBefore(i,i));},shortenPath:function(t,e,i){var r,o;if((0!==e||0!==i)&&s.exists(t.getTotalLength))try{r=t.getTotalLength(),o=r-e-i,t.style.strokeDasharray=o+\" \"+e+\" \"+o+\" \"+i,t.style.strokeDashoffset=o;}catch(t){}},updateTicks:function(t){var e,i,r,o,n,a,h,l,c=\"\",d=t.ticks.length,u=!0;for(e=0;e<d;e++){for(r=t.ticks[e],n=r[0],a=r[1],h=n.length,l=\" M \"+n[0]+\" \"+a[0],s.isNumber(n[0])||(u=!1),i=1;u&&i<h;++i)s.isNumber(n[i])?l+=\" L \"+n[i]+\" \"+a[i]:u=!1;u&&(c+=l);}o=t.rendNode,s.exists(o)||(o=this.createPrim(\"path\",t.id),this.appendChildPrim(o,s.evaluate(t.visProp.layer)),t.rendNode=o),o.setAttributeNS(null,\"stroke\",s.evaluate(t.visProp.strokecolor)),o.setAttributeNS(null,\"fill\",\"none\"),o.setAttributeNS(null,\"stroke-opacity\",s.evaluate(t.visProp.strokeopacity)),o.setAttributeNS(null,\"stroke-width\",s.evaluate(t.visProp.strokewidth)),this.updatePathPrim(o,c,t.board);},displayCopyright:function(t,e){var i,r=this.createPrim(\"text\",\"licenseText\");r.setAttributeNS(null,\"x\",\"20px\"),r.setAttributeNS(null,\"y\",2+e+\"px\"),r.setAttributeNS(null,\"style\",\"font-family:Arial,Helvetica,sans-serif; font-size:\"+e+\"px; fill:#356AA0;  opacity:0.3;\"),i=this.container.ownerDocument.createTextNode(t),r.appendChild(i),this.appendChildPrim(r,0);},drawInternalText:function(t){var e=this.createPrim(\"text\",t.id);return e.style.whiteSpace=\"nowrap\",t.rendNodeText=this.container.ownerDocument.createTextNode(\"\"),e.appendChild(t.rendNodeText),this.appendChildPrim(e,s.evaluate(t.visProp.layer)),e;},updateInternalText:function(t){var e,i=t.plaintext,r=t.getAnchorX(),o=t.getAnchorY();t.rendNode.getAttributeNS(null,\"class\")!==t.visProp.cssclass&&(t.rendNode.setAttributeNS(null,\"class\",s.evaluate(t.visProp.cssclass)),t.needsSizeUpdate=!0),isNaN(t.coords.scrCoords[1]+t.coords.scrCoords[2])||(e=t.coords.scrCoords[1],t.visPropOld.left!==r+e&&(t.rendNode.setAttributeNS(null,\"x\",e+\"px\"),\"left\"===r?t.rendNode.setAttributeNS(null,\"text-anchor\",\"start\"):\"right\"===r?t.rendNode.setAttributeNS(null,\"text-anchor\",\"end\"):\"middle\"===r&&t.rendNode.setAttributeNS(null,\"text-anchor\",\"middle\"),t.visPropOld.left=r+e),e=t.coords.scrCoords[2],t.visPropOld.top!==o+e&&(t.rendNode.setAttributeNS(null,\"y\",e+.5*this.vOffsetText+\"px\"),\"bottom\"===o?t.rendNode.setAttributeNS(null,\"dominant-baseline\",\"text-after-edge\"):\"top\"===o?t.rendNode.setAttributeNS(null,\"dy\",\"1.6ex\"):\"middle\"===o&&t.rendNode.setAttributeNS(null,\"dy\",\"0.6ex\"),t.visPropOld.top=o+e)),t.htmlStr!==i&&(t.rendNodeText.data=i,t.htmlStr=i),this.transformImage(t,t.transformations);},updateInternalTextStyle:function(t,e,i,r){this.setObjectFillColor(t,e,i);},drawImage:function(t){var e=this.createPrim(\"image\",t.id);e.setAttributeNS(null,\"preserveAspectRatio\",\"none\"),this.appendChildPrim(e,s.evaluate(t.visProp.layer)),t.rendNode=e,this.updateImage(t);},transformImage:function(t,e){var i,r,s=t.rendNode,o=\"\";e.length>0&&(r=this.joinTransforms(t,e),i=[r[1][1],r[2][1],r[1][2],r[2][2],r[1][0],r[2][0]].join(\",\"),o+=\" matrix(\"+i+\") \",s.setAttributeNS(null,\"transform\",o));},updateImageURL:function(t){var e=s.evaluate(t.url);return t._src!==e&&(t.imgIsLoaded=!1,t.rendNode.setAttributeNS(this.xlinkNamespace,\"xlink:href\",e),t._src=e,!0);},updateImageStyle:function(t,e){var i=s.evaluate(e?t.visProp.highlightcssclass:t.visProp.cssclass);t.rendNode.setAttributeNS(null,\"class\",i);},appendChildPrim:function(t,i){return s.exists(i)?i>=e.layer.numlayers&&(i=e.layer.numlayers-1):i=0,this.layer[i].appendChild(t),t;},createPrim:function(t,e){var i=this.container.ownerDocument.createElementNS(this.svgNamespace,t);return i.setAttributeNS(null,\"id\",this.container.id+\"_\"+e),i.style.position=\"absolute\",\"path\"===t&&(i.setAttributeNS(null,\"stroke-linecap\",\"round\"),i.setAttributeNS(null,\"stroke-linejoin\",\"round\")),i;},remove:function(t){s.exists(t)&&s.exists(t.parentNode)&&t.parentNode.removeChild(t);},setLayer:function(t,i){s.exists(i)?i>=e.layer.numlayers&&(i=e.layer.numlayers-1):i=0,this.layer[i].appendChild(t.rendNode);},makeArrows:function(t){var e,i=s.evaluate(t.visProp.firstarrow),r=s.evaluate(t.visProp.lastarrow);if(t.visPropOld.firstarrow===i&&t.visPropOld.lastarrow===r)return void(this.isIE&&t.visPropCalc.visible&&(i||r)&&t.rendNode.parentNode.insertBefore(t.rendNode,t.rendNode));i?(e=t.rendNodeTriangleStart,s.exists(e)?this.defs.appendChild(e):(e=this._createArrowHead(t,\"End\"),this.defs.appendChild(e),t.rendNodeTriangleStart=e,t.rendNode.setAttributeNS(null,\"marker-start\",\"url(#\"+this.container.id+\"_\"+t.id+\"TriangleEnd)\"))):(e=t.rendNodeTriangleStart,s.exists(e)&&this.remove(e)),r?(e=t.rendNodeTriangleEnd,s.exists(e)?this.defs.appendChild(e):(e=this._createArrowHead(t,\"Start\"),this.defs.appendChild(e),t.rendNodeTriangleEnd=e,t.rendNode.setAttributeNS(null,\"marker-end\",\"url(#\"+this.container.id+\"_\"+t.id+\"TriangleStart)\"))):(e=t.rendNodeTriangleEnd,s.exists(e)&&this.remove(e)),t.visPropOld.firstarrow=i,t.visPropOld.lastarrow=r;},updateEllipsePrim:function(t,e,i,r,s){var o=1e6;o=2e5,e=Math.abs(e)<o?e:o*e/Math.abs(e),i=Math.abs(i)<o?i:o*i/Math.abs(i),r=Math.abs(r)<o?r:o*r/Math.abs(r),s=Math.abs(s)<o?s:o*s/Math.abs(s),t.setAttributeNS(null,\"cx\",e),t.setAttributeNS(null,\"cy\",i),t.setAttributeNS(null,\"rx\",Math.abs(r)),t.setAttributeNS(null,\"ry\",Math.abs(s));},updateLinePrim:function(t,e,i,r,s){var o=1e6;o=2e5,isNaN(e+i+r+s)||(e=Math.abs(e)<o?e:o*e/Math.abs(e),i=Math.abs(i)<o?i:o*i/Math.abs(i),r=Math.abs(r)<o?r:o*r/Math.abs(r),s=Math.abs(s)<o?s:o*s/Math.abs(s),t.setAttributeNS(null,\"x1\",e),t.setAttributeNS(null,\"y1\",i),t.setAttributeNS(null,\"x2\",r),t.setAttributeNS(null,\"y2\",s));},updatePathPrim:function(t,e){\"\"===e&&(e=\"M 0 0\"),t.setAttributeNS(null,\"d\",e);},updatePathStringPoint:function(t,e,i){var r=\"\",s=t.coords.scrCoords,o=e*Math.sqrt(3)*.5,n=.5*e;return\"x\"===i?r=\" M \"+(s[1]-e)+\" \"+(s[2]-e)+\" L \"+(s[1]+e)+\" \"+(s[2]+e)+\" M \"+(s[1]+e)+\" \"+(s[2]-e)+\" L \"+(s[1]-e)+\" \"+(s[2]+e):\"+\"===i?r=\" M \"+(s[1]-e)+\" \"+s[2]+\" L \"+(s[1]+e)+\" \"+s[2]+\" M \"+s[1]+\" \"+(s[2]-e)+\" L \"+s[1]+\" \"+(s[2]+e):\"<>\"===i?r=\" M \"+(s[1]-e)+\" \"+s[2]+\" L \"+s[1]+\" \"+(s[2]+e)+\" L \"+(s[1]+e)+\" \"+s[2]+\" L \"+s[1]+\" \"+(s[2]-e)+\" Z \":\"^\"===i?r=\" M \"+s[1]+\" \"+(s[2]-e)+\" L \"+(s[1]-o)+\" \"+(s[2]+n)+\" L \"+(s[1]+o)+\" \"+(s[2]+n)+\" Z \":\"v\"===i?r=\" M \"+s[1]+\" \"+(s[2]+e)+\" L \"+(s[1]-o)+\" \"+(s[2]-n)+\" L \"+(s[1]+o)+\" \"+(s[2]-n)+\" Z \":\">\"===i?r=\" M \"+(s[1]+e)+\" \"+s[2]+\" L \"+(s[1]-n)+\" \"+(s[2]-o)+\" L \"+(s[1]-n)+\" \"+(s[2]+o)+\" Z \":\"<\"===i&&(r=\" M \"+(s[1]-e)+\" \"+s[2]+\" L \"+(s[1]+n)+\" \"+(s[2]-o)+\" L \"+(s[1]+n)+\" \"+(s[2]+o)+\" Z \"),r;},updatePathStringPrim:function(t){var e,i,r,s=\" M \",o=\"\";if(t.numberPoints<=0)return\"\";if(r=Math.min(t.points.length,t.numberPoints),1===t.bezierDegree)for(e=0;e<r;e++)i=t.points[e].scrCoords,isNaN(i[1])||isNaN(i[2])?s=\" M \":(i[1]=Math.max(Math.min(i[1],5e3),-5e3),i[2]=Math.max(Math.min(i[2],5e3),-5e3),o+=s+i[1]+\" \"+i[2],s=\" L \");else if(3===t.bezierDegree)for(e=0;e<r;)i=t.points[e].scrCoords,isNaN(i[1])||isNaN(i[2])?s=\" M \":(o+=s+i[1]+\" \"+i[2],\" C \"===s&&(e+=1,i=t.points[e].scrCoords,o+=\" \"+i[1]+\" \"+i[2],e+=1,i=t.points[e].scrCoords,o+=\" \"+i[1]+\" \"+i[2]),s=\" C \"),e+=1;return o;},updatePathStringBezierPrim:function(t){var e,i,r,o,n,h,l,c=\" M \",d=\"\",u=s.evaluate(t.visProp.strokewidth),p=\"plot\"!==s.evaluate(t.visProp.curvetype);if(t.numberPoints<=0)return\"\";for(p&&t.board.options.curve.RDPsmoothing&&(t.points=a.RamerDouglasPeucker(t.points,.5)),l=Math.min(t.points.length,t.numberPoints),i=1;i<3;i++)for(c=\" M \",e=0;e<l;e++)o=t.points[e].scrCoords,isNaN(o[1])||isNaN(o[2])?c=\" M \":(o[1]=Math.max(Math.min(o[1],5e3),-5e3),o[2]=Math.max(Math.min(o[2],5e3),-5e3),\" M \"===c?d+=c+o[1]+\" \"+o[2]:(r=2*i,d+=[c,n+.333*(o[1]-n)+u*(r*Math.random()-i),\" \",h+.333*(o[2]-h)+u*(r*Math.random()-i),\" \",n+.666*(o[1]-n)+u*(r*Math.random()-i),\" \",h+.666*(o[2]-h)+u*(r*Math.random()-i),\" \",o[1],\" \",o[2]].join(\"\")),c=\" C \",n=o[1],h=o[2]);return d;},updatePolygonPrim:function(t,e){var i,r,s=\"\",o=e.vertices.length;for(t.setAttributeNS(null,\"stroke\",\"none\"),\"polygonalchain\"===e.elType&&o++,i=0;i<o-1;i++){if(!e.vertices[i].isReal)return void t.setAttributeNS(null,\"points\",\"\");r=e.vertices[i].coords.scrCoords,s=s+r[1]+\",\"+r[2],i<o-2&&(s+=\" \");}-1===s.indexOf(\"NaN\")&&t.setAttributeNS(null,\"points\",s);},updateRectPrim:function(t,e,i,r,s){t.setAttributeNS(null,\"x\",e),t.setAttributeNS(null,\"y\",i),t.setAttributeNS(null,\"width\",r),t.setAttributeNS(null,\"height\",s);},setPropertyPrim:function(t,e,i){\"stroked\"!==e&&t.setAttributeNS(null,e,i);},display:function(t,e){var i;t&&t.rendNode&&(t.visPropOld.visible=e,i=t.rendNode,e?(i.setAttributeNS(null,\"display\",\"inline\"),i.style.visibility=\"inherit\"):(i.setAttributeNS(null,\"display\",\"none\"),i.style.visibility=\"hidden\"));},show:function(e){t.deprecated(\"Board.renderer.show()\",\"Board.renderer.display()\"),this.display(e,!0);},hide:function(e){t.deprecated(\"Board.renderer.hide()\",\"Board.renderer.display()\"),this.display(e,!1);},setBuffering:function(t,e){t.rendNode.setAttribute(\"buffered-rendering\",e);},setDashStyle:function(t){var e=s.evaluate(t.visProp.dash),i=t.rendNode;e>0?i.setAttributeNS(null,\"stroke-dasharray\",this.dashArray[e-1]):i.hasAttributeNS(null,\"stroke-dasharray\")&&i.removeAttributeNS(null,\"stroke-dasharray\");},setGradient:function(t){var e,i,r,o=t.rendNode,n=s.evaluate(t.visProp.gradient);\"linear\"===n||\"radial\"===n?(e=this.createPrim(n+\"Gradient\",t.id+\"_gradient\"),i=this.createPrim(\"stop\",t.id+\"_gradient1\"),r=this.createPrim(\"stop\",t.id+\"_gradient2\"),e.appendChild(i),e.appendChild(r),this.defs.appendChild(e),o.setAttributeNS(null,\"style\",\"fill:url(#\"+this.container.id+\"_\"+t.id+\"_gradient)\"),t.gradNode1=i,t.gradNode2=r,t.gradNode=e):o.removeAttributeNS(null,\"style\");},updateGradientAngle:function(t,e){var i=1,r=Math.cos(e),s=Math.sin(e);Math.abs(r)>Math.abs(s)?i/=Math.abs(r):i/=Math.abs(s),r>=0?(t.setAttributeNS(null,\"x1\",0),t.setAttributeNS(null,\"x2\",r*i)):(t.setAttributeNS(null,\"x1\",-r*i),t.setAttributeNS(null,\"x2\",0)),s>=0?(t.setAttributeNS(null,\"y1\",0),t.setAttributeNS(null,\"y2\",s*i)):(t.setAttributeNS(null,\"y1\",-s*i),t.setAttributeNS(null,\"y2\",0));},updateGradientCircle:function(t,e,i,r,s,o,n){t.setAttributeNS(null,\"cx\",100*e+\"%\"),t.setAttributeNS(null,\"cy\",100*i+\"%\"),t.setAttributeNS(null,\"r\",100*r+\"%\"),t.setAttributeNS(null,\"fx\",100*s+\"%\"),t.setAttributeNS(null,\"fy\",100*o+\"%\"),t.setAttributeNS(null,\"fr\",100*n+\"%\");},updateGradient:function(t){var e,i,r=t.gradNode1,o=t.gradNode2,n=s.evaluate(t.visProp.gradient);s.exists(r)&&s.exists(o)&&(i=s.evaluate(t.visProp.fillopacity),i=i>0?i:0,e=s.evaluate(t.visProp.fillcolor),r.setAttributeNS(null,\"style\",\"stop-color:\"+e+\";stop-opacity:\"+i),o.setAttributeNS(null,\"style\",\"stop-color:\"+s.evaluate(t.visProp.gradientsecondcolor)+\";stop-opacity:\"+s.evaluate(t.visProp.gradientsecondopacity)),r.setAttributeNS(null,\"offset\",100*s.evaluate(t.visProp.gradientstartoffset)+\"%\"),o.setAttributeNS(null,\"offset\",100*s.evaluate(t.visProp.gradientendoffset)+\"%\"),\"linear\"===n?this.updateGradientAngle(t.gradNode,s.evaluate(t.visProp.gradientangle)):\"radial\"===n&&this.updateGradientCircle(t.gradNode,s.evaluate(t.visProp.gradientcx),s.evaluate(t.visProp.gradientcy),s.evaluate(t.visProp.gradientr),s.evaluate(t.visProp.gradientfx),s.evaluate(t.visProp.gradientfy),s.evaluate(t.visProp.gradientfr)));},setObjectTransition:function(t,e){var i,o,n,a,h=[\"rendNode\",\"rendNodeTriangleStart\",\"rendNodeTriangleEnd\"];if(void 0===e&&(e=s.evaluate(t.visProp.transitionduration)),e!==t.visPropOld.transitionduration){for(o=t.elementClass===r.OBJECT_CLASS_TEXT&&\"html\"===s.evaluate(t.visProp.display)?\" color \"+e+\"ms, opacity \"+e+\"ms\":\" fill \"+e+\"ms, fill-opacity \"+e+\"ms, stroke \"+e+\"ms, stroke-opacity \"+e+\"ms\",a=h.length,n=0;n<a;++n)t[h[n]]&&(i=t[h[n]],i.style.transition=o);t.visPropOld.transitionduration=e;}},_setAttribute:function(t,e){\"\"===e?t():window.setTimeout(t,1);},setObjectFillColor:function(e,i,r,n){var a,h,l,c,d=s.evaluate(i),u=s.evaluate(r),p=s.evaluate(e.visProp.gradient);u=u>0?u:0,e.visPropOld.fillcolor===d&&e.visPropOld.fillopacity===u&&null===p||(s.exists(d)&&!1!==d&&(9!==d.length?(h=d,c=u):(l=o.rgba2rgbo(d),h=l[0],c=u*l[1]),a=void 0===n?e.rendNode:n,\"none\"!==h&&this._setAttribute(function(){a.setAttributeNS(null,\"fill\",h);},e.visPropOld.fillcolor),e.type===t.OBJECT_TYPE_IMAGE?this._setAttribute(function(){a.setAttributeNS(null,\"opacity\",c);},e.visPropOld.fillopacity):(\"none\"===h&&(c=0),this._setAttribute(function(){a.setAttributeNS(null,\"fill-opacity\",c);},e.visPropOld.fillopacity)),\"linear\"!==p&&\"radial\"!==p||this.updateGradient(e)),e.visPropOld.fillcolor=d,e.visPropOld.fillopacity=u);},setObjectStrokeColor:function(t,e,i){var n,a,h,l,c=s.evaluate(e),d=s.evaluate(i);d=d>0?d:0,t.visPropOld.strokecolor===c&&t.visPropOld.strokeopacity===d||(s.exists(c)&&!1!==c&&(9!==c.length?(n=c,h=d):(a=o.rgba2rgbo(c),n=a[0],h=d*a[1]),l=t.rendNode,t.elementClass===r.OBJECT_CLASS_TEXT?\"html\"===s.evaluate(t.visProp.display)?this._setAttribute(function(){l.style.color=n,l.style.opacity=h;},t.visPropOld.strokecolor):this._setAttribute(function(){l.setAttributeNS(null,\"style\",\"fill:\"+n),l.setAttributeNS(null,\"style\",\"fill-opacity:\"+h);},t.visPropOld.strokecolor):this._setAttribute(function(){l.setAttributeNS(null,\"stroke\",n),l.setAttributeNS(null,\"stroke-opacity\",h);},t.visPropOld.strokecolor),t.elementClass!==r.OBJECT_CLASS_CURVE&&t.elementClass!==r.OBJECT_CLASS_LINE||(s.evaluate(t.visProp.firstarrow)&&this._setArrowColor(t.rendNodeTriangleStart,n,h,t),s.evaluate(t.visProp.lastarrow)&&this._setArrowColor(t.rendNodeTriangleEnd,n,h,t))),t.visPropOld.strokecolor=c,t.visPropOld.strokeopacity=d);},setObjectStrokeWidth:function(t,e){var i,r=s.evaluate(e);isNaN(r)||t.visPropOld.strokewidth===r||(i=t.rendNode,this.setPropertyPrim(i,\"stroked\",\"true\"),s.exists(r)&&this.setPropertyPrim(i,\"stroke-width\",r+\"px\"),t.visPropOld.strokewidth=r);},setLineCap:function(t){var e=s.evaluate(t.visProp.linecap);void 0!==e&&\"\"!==e&&t.visPropOld.linecap!==e&&s.exists(t.rendNode)&&(this.setPropertyPrim(t.rendNode,\"stroke-linecap\",e),t.visPropOld.linecap=e);},setShadow:function(t){var e=s.evaluate(t.visProp.shadow);t.visPropOld.shadow!==e&&(s.exists(t.rendNode)&&(e?t.rendNode.setAttributeNS(null,\"filter\",\"url(#\"+this.container.id+\"_f1)\"):t.rendNode.removeAttributeNS(null,\"filter\")),t.visPropOld.shadow=e);},suspendRedraw:function(){},unsuspendRedraw:function(){},resize:function(t,e){this.svgRoot.style.width=parseFloat(t)+\"px\",this.svgRoot.style.height=parseFloat(e)+\"px\",this.svgRoot.setAttribute(\"width\",parseFloat(t)),this.svgRoot.setAttribute(\"height\",parseFloat(e));},createTouchpoints:function(t){var e,i,r,s;for(this.touchpoints=[],e=0;e<t;e++)i=\"touchpoint1_\"+e,s=this.createPrim(\"path\",i),this.appendChildPrim(s,19),s.setAttributeNS(null,\"d\",\"M 0 0\"),this.touchpoints.push(s),this.setPropertyPrim(s,\"stroked\",\"true\"),this.setPropertyPrim(s,\"stroke-width\",\"1px\"),s.setAttributeNS(null,\"stroke\",\"#000000\"),s.setAttributeNS(null,\"stroke-opacity\",1),s.setAttributeNS(null,\"display\",\"none\"),r=\"touchpoint2_\"+e,s=this.createPrim(\"ellipse\",r),this.appendChildPrim(s,19),this.updateEllipsePrim(s,0,0,0,0),this.touchpoints.push(s),this.setPropertyPrim(s,\"stroked\",\"true\"),this.setPropertyPrim(s,\"stroke-width\",\"1px\"),s.setAttributeNS(null,\"stroke\",\"#000000\"),s.setAttributeNS(null,\"stroke-opacity\",1),s.setAttributeNS(null,\"fill\",\"#ffffff\"),s.setAttributeNS(null,\"fill-opacity\",0),s.setAttributeNS(null,\"display\",\"none\");},showTouchpoint:function(t){this.touchpoints&&t>=0&&2*t<this.touchpoints.length&&(this.touchpoints[2*t].setAttributeNS(null,\"display\",\"inline\"),this.touchpoints[2*t+1].setAttributeNS(null,\"display\",\"inline\"));},hideTouchpoint:function(t){this.touchpoints&&t>=0&&2*t<this.touchpoints.length&&(this.touchpoints[2*t].setAttributeNS(null,\"display\",\"none\"),this.touchpoints[2*t+1].setAttributeNS(null,\"display\",\"none\"));},updateTouchpoint:function(t,e){var i,r;this.touchpoints&&t>=0&&2*t<this.touchpoints.length&&(i=e[0],r=e[1],this.touchpoints[2*t].setAttributeNS(null,\"d\",\"M \"+(i-37)+\" \"+r+\" L \"+(i+37)+\" \"+r+\" M \"+i+\" \"+(r-37)+\" L \"+i+\" \"+(r+37)),this.updateEllipsePrim(this.touchpoints[2*t+1],e[0],e[1],25,25));},_getValuesOfDOMElements:function(t){var e=[];if(1===t.nodeType)for(t=t.firstChild;t;)void 0!==t.id&&void 0!==t.value&&e.push([t.id,t.value]),e=e.concat(this._getValuesOfDOMElements(t)),t=t.nextSibling;return e;},_getDataUri:function(t,e){var i=new Image();i.onload=function(){var t=document.createElement(\"canvas\");t.width=this.naturalWidth,t.height=this.naturalHeight,t.getContext(\"2d\").drawImage(this,0,0),e(t.toDataURL(\"image/png\")),t.remove();},i.src=t;},_getImgDataURL:function(t){var e,i,r,s,o,n;if(e=t.getElementsByTagName(\"image\"),(i=e.length)>0)for(r=document.createElement(\"canvas\"),n=0;n<i;n++){e[n].setAttribute(\"crossorigin\",\"anonymous\"),s=r.getContext(\"2d\"),r.width=e[n].getAttribute(\"width\"),r.height=e[n].getAttribute(\"height\");try{s.drawImage(e[n],0,0,r.width,r.height),o=r.toDataURL(),e[n].setAttribute(\"xlink:href\",o);}catch(t){console.log(\"CORS problem! Image can not be used\",t);}}return!0;},dumpToDataURI:function(t){var e,i,r,o,a,h=this.svgRoot,l=window.btoa||n.encode,c=[];if(this.container.hasChildNodes()&&s.exists(this.foreignObjLayer)){for(;h.nextSibling;)c=c.concat(this._getValuesOfDOMElements(h.nextSibling)),this.foreignObjLayer.appendChild(h.nextSibling);!0===t&&(r=this.container.ownerDocument,i=r.createElement(\"div\"),i.appendChild(this.foreignObjLayer));}if(this._getImgDataURL(h),h.setAttribute(\"xmlns\",\"http://www.w3.org/2000/svg\"),e=new XMLSerializer().serializeToString(h),!0!==t)for(a=c.length,o=0;o<a;o++)e=e.replace('id=\"'+c[o][0]+'\"','id=\"'+c[o][0]+'\" value=\"'+c[o][1]+'\"');if((e.match(/xmlns=\\\"http:\\/\\/www.w3.org\\/2000\\/svg\\\"/g)||[]).length>1&&(e=e.replace(/xmlns=\\\"http:\\/\\/www.w3.org\\/2000\\/svg\\\"/g,\"\")),e=e.replace(/&nbsp;/g,\" \"),s.exists(this.foreignObjLayer)&&this.foreignObjLayer.hasChildNodes())for(!0===t&&h.appendChild(this.foreignObjLayer);this.foreignObjLayer.firstChild;)this.container.appendChild(this.foreignObjLayer.firstChild);return\"data:image/svg+xml;base64,\"+l(unescape(encodeURIComponent(e)));},dumpToCanvas:function(t,e,i,r){var s,o,n,a;return n=document.getElementById(t),n.width=n.width,a=n.getContext(\"2d\"),void 0!==e&&void 0!==i&&(n.style.width=parseFloat(e)+\"px\",n.style.height=parseFloat(i)+\"px\",n.setAttribute(\"width\",parseFloat(e)),n.setAttribute(\"height\",parseFloat(i))),o=new Image(),s=this.dumpToDataURI(r),o.src=s,\"Promise\"in window?new Promise(function(t,r){try{o.onload=function(){a.drawImage(o,0,0,e,i),t();};}catch(t){r(t);}}):(o.onload=function(){window.setTimeout(function(){try{a.drawImage(o,0,0,e,i);}catch(t){console.log(\"screenshots not longer supported on IE\");}},200);},this);},screenshot:function(t,e,i){var r,o,n,a,h,l,c,d,u,p,f,m=this.container.ownerDocument,g=this.container.parentNode,b=t.attr.screenshot,v=!1;return\"no\"===this.type?this:(c=b.scale*parseFloat(this.container.style.width),d=b.scale*parseFloat(this.container.style.height),void 0===e||\"\"===e?(v=!0,a=new Image(),a.style.width=c+\"px\",a.style.height=d+\"px\"):(v=!1,a=m.getElementById(e)),v&&(r=m.createElement(\"div\"),r.style.cssText=b.css,r.style.width=c+\"px\",r.style.height=d+\"px\",r.style.zIndex=this.container.style.zIndex+120,r.style.position=\"absolute\",r.style.top=this.container.offsetTop+\"px\",r.style.left=this.container.offsetLeft+\"px\"),o=m.createElement(\"canvas\"),n=Math.random().toString(36).substr(2,5),o.setAttribute(\"id\",n),o.setAttribute(\"width\",c),o.setAttribute(\"height\",d),o.style.width=c+\"px\",o.style.height=c+\"px\",o.style.display=\"none\",g.appendChild(o),v&&(h=m.createElement(\"span\"),l=m.createTextNode(\"✖\"),h.style.cssText=b.cssButton,h.appendChild(l),h.onclick=function(){r.parentNode.removeChild(r);},r.appendChild(a),r.appendChild(h),g.insertBefore(r,this.container.nextSibling)),u=document.getElementById(this.container.id+\"_navigationbar\"),s.exists(u)&&(p=u.style.display,u.style.display=\"none\"),f=function(){a.src=o.toDataURL(\"image/png\"),g.removeChild(o);},\"Promise\"in window?this.dumpToCanvas(n,c,d,i).then(f):(this.dumpToCanvas(n,c,d,i),window.setTimeout(f,200)),s.exists(u)&&(u.style.display=p),this);}}),t.SVGRenderer;}),define(\"renderer/vml\",[\"jxg\",\"renderer/abstract\",\"base/constants\",\"utils/type\",\"utils/color\",\"math/math\",\"math/numerics\"],function(t,e,i,r,s,o,n){\"use strict\";return t.VMLRenderer=function(e){this.type=\"vml\",this.container=e,this.container.style.overflow=\"hidden\",\"\"===this.container.style.position&&(this.container.style.position=\"relative\"),this.container.onselectstart=function(){return!1;},this.resolution=10,r.exists(t.vmlStylesheet)||(e.ownerDocument.namespaces.add(\"jxgvml\",\"urn:schemas-microsoft-com:vml\"),t.vmlStylesheet=this.container.ownerDocument.createStyleSheet(),t.vmlStylesheet.addRule(\".jxgvml\",\"behavior:url(#default#VML)\"));try{e.ownerDocument.namespaces.jxgvml||e.ownerDocument.namespaces.add(\"jxgvml\",\"urn:schemas-microsoft-com:vml\"),this.createNode=function(t){return e.ownerDocument.createElement(\"<jxgvml:\"+t+' class=\"jxgvml\">');};}catch(t){this.createNode=function(t){return e.ownerDocument.createElement(\"<\"+t+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"jxgvml\">');};}this.dashArray=[\"Solid\",\"1 1\",\"ShortDash\",\"Dash\",\"LongDash\",\"ShortDashDot\",\"LongDashDot\"];},t.VMLRenderer.prototype=new e(),t.extend(t.VMLRenderer.prototype,{_setAttr:function(e,i,r,s){try{8===this.container.ownerDocument.documentMode?e[i]=r:e.setAttribute(i,r,s);}catch(e){t.debug(\"_setAttr: \"+i+\" \"+r+\"<br>\\n\");}},updateTicks:function(t){var e,i,s,o,n,a=this.resolution,h=[];for(i=t.ticks.length,e=0;e<i;e++)s=t.ticks[e],o=s[0],n=s[1],r.isNumber(o[0])&&r.isNumber(o[1])&&h.push(\" m \"+Math.round(a*o[0])+\", \"+Math.round(a*n[0])+\" l \"+Math.round(a*o[1])+\", \"+Math.round(a*n[1])+\" \");r.exists(t.rendNode)||(t.rendNode=this.createPrim(\"path\",t.id),this.appendChildPrim(t.rendNode,r.evaluate(t.visProp.layer))),this._setAttr(t.rendNode,\"stroked\",\"true\"),this._setAttr(t.rendNode,\"strokecolor\",r.evaluate(t.visProp.strokecolor),1),this._setAttr(t.rendNode,\"strokeweight\",r.evaluate(t.visProp.strokewidth)),this._setAttr(t.rendNodeStroke,\"opacity\",100*r.evaluate(t.visProp.strokeopacity)+\"%\"),this.updatePathPrim(t.rendNode,h,t.board);},displayCopyright:function(t,e){var i,r;i=this.createNode(\"textbox\"),i.style.position=\"absolute\",this._setAttr(i,\"id\",this.container.id+\"_licenseText\"),i.style.left=20,i.style.top=2,i.style.fontSize=e,i.style.color=\"#356AA0\",i.style.fontFamily=\"Arial,Helvetica,sans-serif\",this._setAttr(i,\"opacity\",\"30%\"),i.style.filter=\"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand', enabled = false) progid:DXImageTransform.Microsoft.Alpha(opacity = 30, enabled = true)\",r=this.container.ownerDocument.createTextNode(t),i.appendChild(r),this.appendChildPrim(i,0);},drawInternalText:function(t){var e;return e=this.createNode(\"textbox\"),e.style.position=\"absolute\",t.rendNodeText=this.container.ownerDocument.createTextNode(\"\"),e.appendChild(t.rendNodeText),this.appendChildPrim(e,9),e.style.filter=\"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand', enabled = false) progid:DXImageTransform.Microsoft.Alpha(opacity = 100, enabled = false)\",e;},updateInternalText:function(t){var e,i,r,s,n,a,h=t.plaintext,l=this.joinTransforms(t,t.transformations),c=[0,0],d=t.rendNode,u=[],p=t.getAnchorX(),f=t.getAnchorY();if(!isNaN(t.coords.scrCoords[1]+t.coords.scrCoords[2])){for(\"right\"===p?c[0]=1:\"middle\"===p&&(c[0]=.5),\"bottom\"===f?c[1]=1:\"middle\"===f&&(c[1]=.5),u[0]=o.matVecMult(l,[1,t.coords.scrCoords[1]-c[0]*t.size[0],t.coords.scrCoords[2]+(1-c[1])*t.size[1]+this.vOffsetText]),u[0][1]/=u[0][0],u[0][2]/=u[0][0],u[1]=o.matVecMult(l,[1,t.coords.scrCoords[1]+(1-c[0])*t.size[0],t.coords.scrCoords[2]+(1-c[1])*t.size[1]+this.vOffsetText]),u[1][1]/=u[1][0],u[1][2]/=u[1][0],u[2]=o.matVecMult(l,[1,t.coords.scrCoords[1]+(1-c[0])*t.size[0],t.coords.scrCoords[2]-c[1]*t.size[1]+this.vOffsetText]),u[2][1]/=u[2][0],u[2][2]/=u[2][0],u[3]=o.matVecMult(l,[1,t.coords.scrCoords[1]-c[0]*t.size[0],t.coords.scrCoords[2]-c[1]*t.size[1]+this.vOffsetText]),u[3][1]/=u[3][0],u[3][2]/=u[3][0],i=u[0][1],s=u[0][1],r=u[0][2],n=u[0][2],a=1;a<4;a++)i=Math.max(i,u[a][1]),s=Math.min(s,u[a][1]),r=Math.max(r,u[a][2]),n=Math.min(n,u[a][2]);e=1===c[0]?Math.floor(t.board.canvasWidth-i):Math.floor(s),t.visPropOld.left!==p+e&&(1===c[0]?(t.rendNode.style.right=e+\"px\",t.rendNode.style.left=\"auto\"):(t.rendNode.style.left=e+\"px\",t.rendNode.style.right=\"auto\"),t.visPropOld.left=p+e),e=1===c[1]?Math.floor(t.board.canvasHeight-r):Math.floor(n),t.visPropOld.top!==f+e&&(1===c[1]?(t.rendNode.style.bottom=e+\"px\",t.rendNode.style.top=\"auto\"):(t.rendNode.style.top=e+\"px\",t.rendNode.style.bottom=\"auto\"),t.visPropOld.top=f+e);}t.htmlStr!==h&&(t.rendNodeText.data=h,t.htmlStr=h),d.filters.item(0).M11=l[1][1],d.filters.item(0).M12=l[1][2],d.filters.item(0).M21=l[2][1],d.filters.item(0).M22=l[2][2],d.filters.item(0).enabled=!0;},drawImage:function(t){var e;e=this.container.ownerDocument.createElement(\"img\"),e.style.position=\"absolute\",this._setAttr(e,\"id\",this.container.id+\"_\"+t.id),this.container.appendChild(e),this.appendChildPrim(e,r.evaluate(t.visProp.layer)),e.style.filter=\"progid:DXImageTransform.Microsoft.Matrix(M11='1.0', sizingMethod='auto expand') progid:DXImageTransform.Microsoft.Alpha(opacity = 100, enabled = false)\",t.rendNode=e,this.updateImage(t);},transformImage:function(t,e){var i,r,s,n,a,h,l=t.rendNode,c=[];if(e.length>0){for(i=this.joinTransforms(t,e),c[0]=o.matVecMult(i,t.coords.scrCoords),c[0][1]/=c[0][0],c[0][2]/=c[0][0],c[1]=o.matVecMult(i,[1,t.coords.scrCoords[1]+t.size[0],t.coords.scrCoords[2]]),c[1][1]/=c[1][0],c[1][2]/=c[1][0],c[2]=o.matVecMult(i,[1,t.coords.scrCoords[1]+t.size[0],t.coords.scrCoords[2]-t.size[1]]),c[2][1]/=c[2][0],c[2][2]/=c[2][0],c[3]=o.matVecMult(i,[1,t.coords.scrCoords[1],t.coords.scrCoords[2]-t.size[1]]),c[3][1]/=c[3][0],c[3][2]/=c[3][0],r=c[0][1],n=c[0][1],s=c[0][2],a=c[0][2],h=1;h<4;h++)r=Math.max(r,c[h][1]),n=Math.min(n,c[h][1]),s=Math.max(s,c[h][2]),a=Math.min(a,c[h][2]);l.style.left=Math.floor(n)+\"px\",l.style.top=Math.floor(a)+\"px\",l.filters.item(0).M11=i[1][1],l.filters.item(0).M12=i[1][2],l.filters.item(0).M21=i[2][1],l.filters.item(0).M22=i[2][2],l.filters.item(0).enabled=!0;}},updateImageURL:function(t){var e=r.evaluate(t.url);this._setAttr(t.rendNode,\"src\",e);},appendChildPrim:function(t,e){return r.exists(e)||(e=0),t.style.zIndex=e,this.container.appendChild(t),t;},appendNodesToElement:function(t,e){\"shape\"!==e&&\"path\"!==e&&\"polygon\"!==e||(t.rendNodePath=this.getElementById(t.id+\"_path\")),t.rendNodeFill=this.getElementById(t.id+\"_fill\"),t.rendNodeStroke=this.getElementById(t.id+\"_stroke\"),t.rendNodeShadow=this.getElementById(t.id+\"_shadow\"),t.rendNode=this.getElementById(t.id);},createPrim:function(t,e){var i,r,s=this.createNode(\"fill\"),o=this.createNode(\"stroke\"),n=this.createNode(\"shadow\");return this._setAttr(s,\"id\",this.container.id+\"_\"+e+\"_fill\"),this._setAttr(o,\"id\",this.container.id+\"_\"+e+\"_stroke\"),this._setAttr(n,\"id\",this.container.id+\"_\"+e+\"_shadow\"),\"circle\"===t||\"ellipse\"===t?(i=this.createNode(\"oval\"),i.appendChild(s),i.appendChild(o),i.appendChild(n)):\"polygon\"===t||\"path\"===t||\"shape\"===t||\"line\"===t?(i=this.createNode(\"shape\"),i.appendChild(s),i.appendChild(o),i.appendChild(n),r=this.createNode(\"path\"),this._setAttr(r,\"id\",this.container.id+\"_\"+e+\"_path\"),i.appendChild(r)):(i=this.createNode(t),i.appendChild(s),i.appendChild(o),i.appendChild(n)),i.style.position=\"absolute\",i.style.left=\"0px\",i.style.top=\"0px\",this._setAttr(i,\"id\",this.container.id+\"_\"+e),i;},remove:function(t){r.exists(t)&&t.removeNode(!0);},makeArrows:function(t){var e,i=r.evaluate(t.visProp.firstarrow),s=r.evaluate(t.visProp.lastarrow);t.visPropOld.firstarrow===i&&t.visPropOld.lastarrow===s||(i?(e=t.rendNodeStroke,this._setAttr(e,\"startarrow\",\"block\"),this._setAttr(e,\"startarrowlength\",\"long\")):(e=t.rendNodeStroke,r.exists(e)&&this._setAttr(e,\"startarrow\",\"none\")),s?(e=t.rendNodeStroke,this._setAttr(e,\"id\",this.container.id+\"_\"+t.id+\"stroke\"),this._setAttr(e,\"endarrow\",\"block\"),this._setAttr(e,\"endarrowlength\",\"long\")):(e=t.rendNodeStroke,r.exists(e)&&this._setAttr(e,\"endarrow\",\"none\")),t.visPropOld.firstarrow=i,t.visPropOld.lastarrow=s);},updateEllipsePrim:function(t,e,i,r,s){t.style.left=Math.floor(e-r)+\"px\",t.style.top=Math.floor(i-s)+\"px\",t.style.width=Math.floor(2*Math.abs(r))+\"px\",t.style.height=Math.floor(2*Math.abs(s))+\"px\";},updateLinePrim:function(t,e,i,r,s,o){var n,a=this.resolution;isNaN(e+i+r+s)||(n=[\"m \",Math.floor(a*e),\", \",Math.floor(a*i),\" l \",Math.floor(a*r),\", \",Math.floor(a*s)],this.updatePathPrim(t,n,o));},updatePathPrim:function(t,e,i){var r=i.canvasWidth,s=i.canvasHeight;e.length<=0&&(e=[\"m 0,0\"]),t.style.width=r,t.style.height=s,this._setAttr(t,\"coordsize\",[Math.floor(this.resolution*r),Math.floor(this.resolution*s)].join(\",\")),this._setAttr(t,\"path\",e.join(\"\"));},updatePathStringPoint:function(t,e,i){var r=[],s=Math.round,o=t.coords.scrCoords,n=e*Math.sqrt(3)*.5,a=.5*e,h=this.resolution;return\"x\"===i?r.push([\" m \",s(h*(o[1]-e)),\", \",s(h*(o[2]-e)),\" l \",s(h*(o[1]+e)),\", \",s(h*(o[2]+e)),\" m \",s(h*(o[1]+e)),\", \",s(h*(o[2]-e)),\" l \",s(h*(o[1]-e)),\", \",s(h*(o[2]+e))].join(\"\")):\"+\"===i?r.push([\" m \",s(h*(o[1]-e)),\", \",s(h*o[2]),\" l \",s(h*(o[1]+e)),\", \",s(h*o[2]),\" m \",s(h*o[1]),\", \",s(h*(o[2]-e)),\" l \",s(h*o[1]),\", \",s(h*(o[2]+e))].join(\"\")):\"<>\"===i?r.push([\" m \",s(h*(o[1]-e)),\", \",s(h*o[2]),\" l \",s(h*o[1]),\", \",s(h*(o[2]+e)),\" l \",s(h*(o[1]+e)),\", \",s(h*o[2]),\" l \",s(h*o[1]),\", \",s(h*(o[2]-e)),\" x e \"].join(\"\")):\"^\"===i?r.push([\" m \",s(h*o[1]),\", \",s(h*(o[2]-e)),\" l \",s(h*(o[1]-n)),\", \",s(h*(o[2]+a)),\" l \",s(h*(o[1]+n)),\", \",s(h*(o[2]+a)),\" x e \"].join(\"\")):\"v\"===i?r.push([\" m \",s(h*o[1]),\", \",s(h*(o[2]+e)),\" l \",s(h*(o[1]-n)),\", \",s(h*(o[2]-a)),\" l \",s(h*(o[1]+n)),\", \",s(h*(o[2]-a)),\" x e \"].join(\"\")):\">\"===i?r.push([\" m \",s(h*(o[1]+e)),\", \",s(h*o[2]),\" l \",s(h*(o[1]-a)),\", \",s(h*(o[2]-n)),\" l \",s(h*(o[1]-a)),\", \",s(h*(o[2]+n)),\" l \",s(h*(o[1]+e)),\", \",s(h*o[2])].join(\"\")):\"<\"===i&&r.push([\" m \",s(h*(o[1]-e)),\", \",s(h*o[2]),\" l \",s(h*(o[1]+a)),\", \",s(h*(o[2]-n)),\" l \",s(h*(o[1]+a)),\", \",s(h*(o[2]+n)),\" x e \"].join(\"\")),r;},updatePathStringPrim:function(t){var e,i,r=[],s=this.resolution,o=Math.round,n=\" m \",a=Math.min(t.numberPoints,8192);if(t.numberPoints<=0)return\"\";if(a=Math.min(a,t.points.length),1===t.bezierDegree)for(e=0;e<a;e++)i=t.points[e].scrCoords,isNaN(i[1])||isNaN(i[2])?n=\" m \":(i[1]>2e4?i[1]=2e4:i[1]<-2e4&&(i[1]=-2e4),i[2]>2e4?i[2]=2e4:i[2]<-2e4&&(i[2]=-2e4),r.push([n,o(s*i[1]),\", \",o(s*i[2])].join(\"\")),n=\" l \");else if(3===t.bezierDegree)for(e=0;e<a;)i=t.points[e].scrCoords,isNaN(i[1])||isNaN(i[2])?n=\" m \":(r.push([n,o(s*i[1]),\", \",o(s*i[2])].join(\"\")),\" c \"===n&&(e+=1,i=t.points[e].scrCoords,r.push([\" \",o(s*i[1]),\", \",o(s*i[2])].join(\"\")),e+=1,i=t.points[e].scrCoords,r.push([\" \",o(s*i[1]),\", \",o(s*i[2])].join(\"\"))),n=\" c \"),e+=1;return r.push(\" e\"),r;},updatePathStringBezierPrim:function(t){var e,i,s,o,a,h,l=[],c=r.evaluate(t.visProp.strokewidth),d=this.resolution,u=Math.round,p=\" m \",f=\"plot\"!==r.evaluate(t.visProp.curvetype),m=Math.min(t.numberPoints,8192);if(t.numberPoints<=0)return\"\";for(f&&t.board.options.curve.RDPsmoothing&&(t.points=n.RamerDouglasPeucker(t.points,1)),m=Math.min(m,t.points.length),i=1;i<3;i++)for(p=\" m \",e=0;e<m;e++)o=t.points[e].scrCoords,isNaN(o[1])||isNaN(o[2])?p=\" m \":(o[1]>2e4?o[1]=2e4:o[1]<-2e4&&(o[1]=-2e4),o[2]>2e4?o[2]=2e4:o[2]<-2e4&&(o[2]=-2e4),\" m \"===p?l.push([p,u(d*o[1]),\" \",u(d*o[2])].join(\"\")):(s=2*i,l.push([p,u(d*(a+.333*(o[1]-a)+c*(s*Math.random()-i))),\" \",u(d*(h+.333*(o[2]-h)+c*(s*Math.random()-i))),\" \",u(d*(a+.666*(o[1]-a)+c*(s*Math.random()-i))),\" \",u(d*(h+.666*(o[2]-h)+c*(s*Math.random()-i))),\" \",u(d*o[1]),\" \",u(d*o[2])].join(\"\"))),p=\" c \",a=o[1],h=o[2]);return l.push(\" e\"),l;},updatePolygonPrim:function(t,e){var i,r,s=e.vertices.length,o=this.resolution,n=[];if(this._setAttr(t,\"stroked\",\"false\"),r=e.vertices[0].coords.scrCoords,!isNaN(r[1]+r[2])){for(n.push([\"m \",Math.floor(o*r[1]),\",\",Math.floor(o*r[2]),\" l \"].join(\"\")),i=1;i<s-1;i++){if(!e.vertices[i].isReal)return void this.updatePathPrim(t,\"\",e.board);if(r=e.vertices[i].coords.scrCoords,isNaN(r[1]+r[2]))return;n.push(Math.floor(o*r[1])+\",\"+Math.floor(o*r[2])),i<s-2&&n.push(\", \");}n.push(\" x e\"),this.updatePathPrim(t,n,e.board);}},updateRectPrim:function(t,e,i,r,s){t.style.left=Math.floor(e)+\"px\",t.style.top=Math.floor(i)+\"px\",r>=0&&(t.style.width=r+\"px\"),s>=0&&(t.style.height=s+\"px\");},setPropertyPrim:function(t,e,i){var s,o=\"\";switch(e){case\"stroke\":o=\"strokecolor\";break;case\"stroke-width\":o=\"strokeweight\";break;case\"stroke-dasharray\":o=\"dashstyle\";}\"\"!==o&&(s=r.evaluate(i),this._setAttr(t,o,s));},display:function(t,e){t&&t.rendNode&&(t.visPropOld.visible=e,t.rendNode.style.visibility=e?\"inherit\":\"hidden\");},show:function(e){t.deprecated(\"Board.renderer.show()\",\"Board.renderer.display()\"),e&&e.rendNode&&(e.rendNode.style.visibility=\"inherit\");},hide:function(e){t.deprecated(\"Board.renderer.hide()\",\"Board.renderer.display()\"),e&&e.rendNode&&(e.rendNode.style.visibility=\"hidden\");},setDashStyle:function(t,e){var i;e.dash>=0&&(i=t.rendNodeStroke,this._setAttr(i,\"dashstyle\",this.dashArray[e.dash]));},setGradient:function(t){var e=t.rendNodeFill,i=r.evaluate(t.visProp.gradient);\"linear\"===i?(this._setAttr(e,\"type\",\"gradient\"),this._setAttr(e,\"color2\",r.evaluate(t.visProp.gradientsecondcolor)),this._setAttr(e,\"opacity2\",r.evaluate(t.visProp.gradientsecondopacity)),this._setAttr(e,\"angle\",r.evaluate(t.visProp.gradientangle))):\"radial\"===i?(this._setAttr(e,\"type\",\"gradientradial\"),this._setAttr(e,\"color2\",r.evaluate(t.visProp.gradientsecondcolor)),this._setAttr(e,\"opacity2\",r.evaluate(t.visProp.gradientsecondopacity)),this._setAttr(e,\"focusposition\",100*r.evaluate(t.visProp.gradientpositionx)+\"%,\"+100*r.evaluate(t.visProp.gradientpositiony)+\"%\"),this._setAttr(e,\"focussize\",\"0,0\")):this._setAttr(e,\"type\",\"solid\");},setObjectFillColor:function(t,e,o){var n,a,h,l=r.evaluate(e),c=r.evaluate(o),d=t.rendNode;c=c>0?c:0,t.visPropOld.fillcolor===l&&t.visPropOld.fillopacity===c||(r.exists(l)&&!1!==l&&(9!==l.length?(n=l,h=c):(a=s.rgba2rgbo(l),n=a[0],h=c*a[1]),\"none\"===n||!1===n?this._setAttr(t.rendNode,\"filled\",\"false\"):(this._setAttr(t.rendNode,\"filled\",\"true\"),this._setAttr(t.rendNode,\"fillcolor\",n),r.exists(h)&&t.rendNodeFill&&this._setAttr(t.rendNodeFill,\"opacity\",100*h+\"%\")),t.type===i.OBJECT_TYPE_IMAGE&&d.filters.length>1&&(d.filters.item(1).opacity=Math.round(100*h),d.filters.item(1).enabled=!0)),t.visPropOld.fillcolor=l,t.visPropOld.fillopacity=c);},setObjectStrokeColor:function(t,e,s){var o,n,a,h,l=r.evaluate(e),c=r.evaluate(s),d=t.rendNode;c=c>0?c:0,t.visPropOld.strokecolor===l&&t.visPropOld.strokeopacity===c||(r.exists(l)&&!1!==l&&(9!==l.length?(o=l,a=c):(n=e.rgba2rgbo(l),o=n[0],a=c*n[1]),t.elementClass===i.OBJECT_CLASS_TEXT?(d.filters.length>1&&(d.filters.item(1).opacity=Math.round(100*a),d.filters.item(1).enabled=!0),d.style.color=o):(!1!==o&&(this._setAttr(d,\"stroked\",\"true\"),this._setAttr(d,\"strokecolor\",o)),h=t.rendNodeStroke,r.exists(a)&&t.type!==i.OBJECT_TYPE_IMAGE&&this._setAttr(h,\"opacity\",100*a+\"%\"))),t.visPropOld.strokecolor=l,t.visPropOld.strokeopacity=c);},setObjectStrokeWidth:function(t,e){var i,s=r.evaluate(e);isNaN(s)||t.visPropOld.strokewidth===s||(i=t.rendNode,this.setPropertyPrim(i,\"stroked\",\"true\"),r.exists(s)&&(this.setPropertyPrim(i,\"stroke-width\",s),0===s&&r.exists(t.rendNodeStroke)&&this._setAttr(i,\"stroked\",\"false\")),t.visPropOld.strokewidth=s);},setShadow:function(t){var e=t.rendNodeShadow,i=r.evaluate(t.visProp.shadow);e&&t.visPropOld.shadow!==i&&(i?(this._setAttr(e,\"On\",\"True\"),this._setAttr(e,\"Offset\",\"3pt,3pt\"),this._setAttr(e,\"Opacity\",\"60%\"),this._setAttr(e,\"Color\",\"#aaaaaa\")):this._setAttr(e,\"On\",\"False\"),t.visPropOld.shadow=i);},suspendRedraw:function(){this.container.style.display=\"none\";},unsuspendRedraw:function(){this.container.style.display=\"\";}}),t.VMLRenderer;}),define(\"renderer/canvas\",[\"jxg\",\"renderer/abstract\",\"base/constants\",\"utils/env\",\"utils/type\",\"utils/uuid\",\"utils/color\",\"base/coords\",\"math/math\",\"math/geometry\",\"math/numerics\"],function(t,e,i,r,s,o,n,a,h,l,c){\"use strict\";return t.CanvasRenderer=function(t,e){this.type=\"canvas\",this.canvasRoot=null,this.suspendHandle=null,this.canvasId=o.genUUID(),this.canvasNamespace=null,r.isBrowser?(this.container=t,this.container.style.MozUserSelect=\"none\",this.container.style.userSelect=\"none\",this.container.style.overflow=\"hidden\",\"\"===this.container.style.position&&(this.container.style.position=\"relative\"),this.container.innerHTML=['<canvas id=\"',this.canvasId,'\" width=\"',e.width,'px\" height=\"',e.height,'px\"><',\"/canvas>\"].join(\"\"),this.canvasRoot=this.container.ownerDocument.getElementById(this.canvasId),this.context=this.canvasRoot.getContext(\"2d\")):r.isNode()&&(this.canvasId= true?__webpack_require__(/*! canvas */ \"./node_modules/canvas/browser.js\"):0,this.canvasRoot=new this.canvasId(500,500),this.context=this.canvasRoot.getContext(\"2d\")),this.dashArray=[[2,2],[5,5],[10,10],[20,20],[20,10,10,10],[20,5,10,5]];},t.CanvasRenderer.prototype=new e(),t.extend(t.CanvasRenderer.prototype,{_drawFilledPolygon:function(t,e){var i,r=t.length,s=this.context;if(r>0){if(s.beginPath(),s.moveTo(t[0][0],t[0][1]),1==e)for(i=1;i<r;i++)s.lineTo(t[i][0],t[i][1]);else for(i=1;i<r;i+=3)s.bezierCurveTo(t[i][0],t[i][1],t[i+1][0],t[i+1][1],t[i+2][0],t[i+2][1]);s.lineTo(t[0][0],t[0][1]),s.closePath(),s.fill(),s.stroke();}},_fill:function(t){var e=this.context;e.save(),this._setColor(t,\"fill\")&&e.fill(),e.restore();},_rotatePoint:function(t,e,i){return[e*Math.cos(t)-i*Math.sin(t),e*Math.sin(t)+i*Math.cos(t)];},_rotateShape:function(t,e){var i,r=[],s=t.length;if(s<=0)return t;for(i=0;i<s;i++)r.push(this._rotatePoint(e,t[i][0],t[i][1]));return r;},updateGradientAngle:function(t,e){var r,s,o,n,h,l,c,d,u,p,f,m,g=1,b=Math.cos(-e),v=Math.sin(-e),y=t.getBoundingBox();return Math.abs(b)>Math.abs(v)?g/=Math.abs(b):g/=Math.abs(v),b>=0?(o=0,n=b*g):(o=-b*g,n=0),v>=0?(h=0,l=v*g):(h=-v*g,l=0),r=new a(i.COORDS_BY_USER,[y[0],y[1]],t.board),s=new a(i.COORDS_BY_USER,[y[2],y[3]],t.board),f=s.scrCoords[1]-r.scrCoords[1],m=s.scrCoords[2]-r.scrCoords[2],c=r.scrCoords[1]+f*o,u=r.scrCoords[2]+m*h,d=r.scrCoords[1]+f*n,p=r.scrCoords[2]+m*l,this.context.createLinearGradient(c,u,d,p);},updateGradientCircle:function(t,e,r,s,o,n,h){var l,c,d,u,p,f,m,g,b,v,y=t.getBoundingBox();return l=new a(i.COORDS_BY_USER,[y[0],y[1]],t.board),c=new a(i.COORDS_BY_USER,[y[2],y[3]],t.board),b=c.scrCoords[1]-l.scrCoords[1],v=l.scrCoords[2]-c.scrCoords[2],d=l.scrCoords[1]+b*e,u=c.scrCoords[2]+v*r,f=l.scrCoords[1]+b*o,m=c.scrCoords[2]+v*n,p=s*(b+v)*.5,g=h*(b+v)*.5,this.context.createRadialGradient(f,m,g,d,u,p);},updateGradient:function(t){var e,i,r,o=s.evaluate(t.visProp.gradient);return i=s.evaluate(t.visProp.fillopacity),i=i>0?i:0,e=s.evaluate(t.visProp.fillcolor),\"linear\"===o?r=this.updateGradientAngle(t,s.evaluate(t.visProp.gradientangle)):\"radial\"===o&&(r=this.updateGradientCircle(t,s.evaluate(t.visProp.gradientcx),s.evaluate(t.visProp.gradientcy),s.evaluate(t.visProp.gradientr),s.evaluate(t.visProp.gradientfx),s.evaluate(t.visProp.gradientfy),s.evaluate(t.visProp.gradientfr))),r.addColorStop(s.evaluate(t.visProp.gradientstartoffset),e),r.addColorStop(s.evaluate(t.visProp.gradientendoffset),s.evaluate(t.visProp.gradientsecondcolor)),r;},_setColor:function(t,e,i){var r,o,a,h,l,c,d,u,p=!0,f=t.visProp;return e=e||\"stroke\",i=i||e,r=this._getHighlighted(t),\"linear\"===(u=s.evaluate(t.visProp.gradient))||\"radial\"===u?(this.context[i+\"Style\"]=this.updateGradient(t),p):(a=s.evaluate(f[r+e+\"color\"]),\"none\"!==a&&!1!==a?(c=s.evaluate(f[r+e+\"opacity\"]),c=c>0?c:0,9!==a.length?(l=a,d=c):(h=n.rgba2rgbo(a),l=h[0],d=c*h[1]),this.context.globalAlpha=d,this.context[i+\"Style\"]=l):p=!1,o=parseFloat(s.evaluate(f[r+\"strokewidth\"])),\"stroke\"!==e||isNaN(o)||(0===o?this.context.globalAlpha=0:this.context.lineWidth=o),\"stroke\"===e&&void 0!==f.linecap&&\"\"!==f.linecap&&(this.context.lineCap=f.linecap),p);},_stroke:function(t){var e=this.context,i=s.evaluate(t.visProp.dash);e.save(),i>0?e.setLineDash&&e.setLineDash(this.dashArray[i]):this.context.lineDashArray=[],this._setColor(t,\"stroke\")&&e.stroke(),e.restore();},_translateShape:function(t,e,i){var r,s=[],o=t.length;if(o<=0)return t;for(r=0;r<o;r++)s.push([t[r][0]+e,t[r][1]+i]);return s;},drawPoint:function(t){var e=s.evaluate(t.visProp.face),i=s.evaluate(t.visProp.size),r=t.coords.scrCoords,o=i*Math.sqrt(3)*.5,n=.5*i,a=parseFloat(s.evaluate(t.visProp.strokewidth))/2,h=this.context;if(t.visPropCalc.visible)switch(e){case\"cross\":case\"x\":h.beginPath(),h.moveTo(r[1]-i,r[2]-i),h.lineTo(r[1]+i,r[2]+i),h.moveTo(r[1]+i,r[2]-i),h.lineTo(r[1]-i,r[2]+i),h.lineCap=\"round\",h.lineJoin=\"round\",h.closePath(),this._stroke(t);break;case\"circle\":case\"o\":h.beginPath(),h.arc(r[1],r[2],i+1+a,0,2*Math.PI,!1),h.closePath(),this._fill(t),this._stroke(t);break;case\"square\":case\"[]\":if(i<=0)break;h.save(),this._setColor(t,\"stroke\",\"fill\")&&h.fillRect(r[1]-i-a,r[2]-i-a,2*i+3*a,2*i+3*a),h.restore(),h.save(),this._setColor(t,\"fill\"),h.fillRect(r[1]-i+a,r[2]-i+a,2*i-a,2*i-a),h.restore();break;case\"plus\":case\"+\":h.beginPath(),h.moveTo(r[1]-i,r[2]),h.lineTo(r[1]+i,r[2]),h.moveTo(r[1],r[2]-i),h.lineTo(r[1],r[2]+i),h.lineCap=\"round\",h.lineJoin=\"round\",h.closePath(),this._stroke(t);break;case\"diamond\":case\"<>\":h.beginPath(),h.moveTo(r[1]-i,r[2]),h.lineTo(r[1],r[2]+i),h.lineTo(r[1]+i,r[2]),h.lineTo(r[1],r[2]-i),h.closePath(),this._fill(t),this._stroke(t);break;case\"triangleup\":case\"a\":case\"^\":h.beginPath(),h.moveTo(r[1],r[2]-i),h.lineTo(r[1]-o,r[2]+n),h.lineTo(r[1]+o,r[2]+n),h.closePath(),this._fill(t),this._stroke(t);break;case\"triangledown\":case\"v\":h.beginPath(),h.moveTo(r[1],r[2]+i),h.lineTo(r[1]-o,r[2]-n),h.lineTo(r[1]+o,r[2]-n),h.closePath(),this._fill(t),this._stroke(t);break;case\"triangleleft\":case\"<\":h.beginPath(),h.moveTo(r[1]-i,r[2]),h.lineTo(r[1]+n,r[2]-o),h.lineTo(r[1]+n,r[2]+o),h.closePath(),this.fill(t),this._stroke(t);break;case\"triangleright\":case\">\":h.beginPath(),h.moveTo(r[1]+i,r[2]),h.lineTo(r[1]-n,r[2]-o),h.lineTo(r[1]-n,r[2]+o),h.closePath(),this._fill(t),this._stroke(t);}},updatePoint:function(t){this.drawPoint(t);},drawArrows:function(t,e,r,o){var n,a,h,l,c,d,u,p,f,m,g,b,v,y,C,_,P,E=this.context,x=6,S=1,O=1,w=1,T=s.evaluate(t.visProp.firstarrow),N=s.evaluate(t.visProp.lastarrow);if(\"none\"!==s.evaluate(t.visProp.strokecolor)&&(T||N)){if(t.elementClass===i.OBJECT_CLASS_LINE)n=e.scrCoords[1],a=e.scrCoords[2],h=r.scrCoords[1],l=r.scrCoords[2],_=P=Math.atan2(l-a,h-n);else{if(n=t.points[0].scrCoords[1],a=t.points[0].scrCoords[2],(C=t.points.length-1)<1)return;h=t.points[t.points.length-1].scrCoords[1],l=t.points[t.points.length-1].scrCoords[2],g=t.points[1].scrCoords[1]-t.points[0].scrCoords[1],b=t.points[1].scrCoords[2]-t.points[0].scrCoords[2],v=t.points[C].scrCoords[1]-t.points[C-1].scrCoords[1],y=t.points[C].scrCoords[2]-t.points[C-1].scrCoords[2],T&&(_=Math.atan2(b,g)),N&&(P=Math.atan2(y,v));}if(c=s.evaluate(t.visProp[o+\"strokewidth\"]),T)if(x=6,s.exists(T.size)&&(x=s.evaluate(T.size)),\"\"!==o&&s.exists(T[o+\"size\"])&&(x=s.evaluate(T[o+\"size\"])),d=c*x,s.exists(T.type)&&(S=s.evaluate(T.type)),2===S)p=[[d,.5*-d],[0,0],[d,.5*d],[.5*d,0]];else if(3===S)p=[[d/3,.5*-d],[0,.5*-d],[0,.5*d],[d/3,.5*d]];else if(4===S)for(d/=10,O=3,p=[[10,3.31],[6.47,3.84],[2.87,4.5],[0,6.63],[.67,5.52],[1.33,4.42],[2,3.31],[1.33,2.21],[.67,1.1],[0,0],[2.87,2.13],[6.47,2.79],[10,3.31]],m=p.length,f=0;f<m;f++)p[f][0]*=-d,p[f][1]*=d,p[f][0]+=10*d,p[f][1]-=3.31*d;else if(5===S)for(d/=10,O=3,p=[[10,3.28],[6.61,4.19],[3.19,5.07],[0,6.55],[.62,5.56],[1,4.44],[1,3.28],[1,2.11],[.62,.99],[0,0],[3.19,1.49],[6.61,2.37],[10,3.28]],m=p.length,f=0;f<m;f++)p[f][0]*=-d,p[f][1]*=d,p[f][0]+=10*d,p[f][1]-=3.28*d;else if(6===S)for(d/=10,O=3,p=[[10,2.84],[6.61,3.59],[3.21,4.35],[0,5.68],[.33,4.73],[.67,3.78],[1,2.84],[.67,1.89],[.33,.95],[0,0],[3.21,1.33],[6.61,2.09],[10,2.84]],m=p.length,f=0;f<m;f++)p[f][0]*=-d,p[f][1]*=d,p[f][0]+=10*d,p[f][1]-=2.84*d;else p=[[d,.5*-d],[0,0],[d,.5*d]];if(N)if(x=6,s.exists(N.size)&&(x=s.evaluate(N.size)),\"\"!==o&&s.exists(N[o+\"size\"])&&(x=s.evaluate(N[o+\"size\"])),d=c*x,s.exists(N.type)&&(S=s.evaluate(N.type)),2===S)u=[[-d,.5*-d],[0,0],[-d,.5*d],[.5*-d,0]];else if(3===S)u=[[-d/3,.5*-d],[0,.5*-d],[0,.5*d],[-d/3,.5*d]];else if(4===S)for(d/=10,w=3,u=[[10,3.31],[6.47,3.84],[2.87,4.5],[0,6.63],[.67,5.52],[1.33,4.42],[2,3.31],[1.33,2.21],[.67,1.1],[0,0],[2.87,2.13],[6.47,2.79],[10,3.31]],m=u.length,f=0;f<m;f++)u[f][0]*=d,u[f][1]*=d,u[f][0]-=10*d,u[f][1]-=3.31*d;else if(5===S)for(d/=10,w=3,u=[[10,3.28],[6.61,4.19],[3.19,5.07],[0,6.55],[.62,5.56],[1,4.44],[1,3.28],[1,2.11],[.62,.99],[0,0],[3.19,1.49],[6.61,2.37],[10,3.28]],m=u.length,f=0;f<m;f++)u[f][0]*=d,u[f][1]*=d,u[f][0]-=10*d,u[f][1]-=3.28*d;else if(6===S)for(d/=10,w=3,u=[[10,2.84],[6.61,3.59],[3.21,4.35],[0,5.68],[.33,4.73],[.67,3.78],[1,2.84],[.67,1.89],[.33,.95],[0,0],[3.21,1.33],[6.61,2.09],[10,2.84]],m=u.length,f=0;f<m;f++)u[f][0]*=d,u[f][1]*=d,u[f][0]-=10*d,u[f][1]-=2.84*d;else u=[[-d,.5*-d],[0,0],[-d,.5*d]];E.save(),this._setColor(t,\"stroke\",\"fill\")&&(this._setColor(t,\"stroke\"),T&&this._drawFilledPolygon(this._translateShape(this._rotateShape(p,_),n,a),O),N&&this._drawFilledPolygon(this._translateShape(this._rotateShape(u,P),h,l),w)),E.restore();}},drawLine:function(t){var e,r,o,n,h,c=new a(i.COORDS_BY_USER,t.point1.coords.usrCoords,t.board),d=new a(i.COORDS_BY_USER,t.point2.coords.usrCoords,t.board),u=null;t.visPropCalc.visible&&(o=this._getHighlighted(t),n=s.evaluate(t.visProp[o+\"strokewidth\"]),h=this.getArrowHeadData(t,n,o),(h.evFirst||h.evLast)&&(u=-4),l.calcStraight(t,c,d,u),e=new a(i.COORDS_BY_USER,c.usrCoords,t.board),r=new a(i.COORDS_BY_USER,d.usrCoords,t.board),this.getPositionArrowHead(t,c,d,h),this.context.beginPath(),this.context.moveTo(c.scrCoords[1],c.scrCoords[2]),this.context.lineTo(d.scrCoords[1],d.scrCoords[2]),this._stroke(t),(h.evFirst||h.evLast)&&this.drawArrows(t,e,r,o));},updateLine:function(t){this.drawLine(t);},drawTicks:function(){},updateTicks:function(t){var e,i,r,s,o,n,a=t.ticks.length,h=this.context;for(h.beginPath(),e=0;e<a;e++)for(i=t.ticks[e],r=i[0],s=i[1],o=r.length,h.moveTo(r[0],s[0]),n=1;n<o;++n)h.lineTo(r[n],s[n]);h.lineCap=\"round\",this._stroke(t);},drawCurve:function(t){var e;s.evaluate(t.visProp.handdrawing)?this.updatePathStringBezierPrim(t):this.updatePathStringPrim(t),t.numberPoints>1&&(e=this._getHighlighted(t),this.drawArrows(t,null,null,e));},updateCurve:function(t){this.drawCurve(t);},drawEllipse:function(t){var e=t.center.coords.scrCoords[1],i=t.center.coords.scrCoords[2],r=t.board.unitX,s=t.board.unitY,o=2*t.Radius(),n=2*t.Radius(),a=o*r,h=n*s,l=e-a/2,c=i-h/2,d=a/2*.5522848,u=h/2*.5522848,p=l+a,f=c+h,m=l+a/2,g=c+h/2,b=this.context;o>0&&n>0&&!isNaN(e+i)&&(b.beginPath(),b.moveTo(l,g),b.bezierCurveTo(l,g-u,m-d,c,m,c),b.bezierCurveTo(m+d,c,p,g-u,p,g),b.bezierCurveTo(p,g+u,m+d,f,m,f),b.bezierCurveTo(m-d,f,l,g+u,l,g),b.closePath(),this._fill(t),this._stroke(t));},updateEllipse:function(t){return this.drawEllipse(t);},displayCopyright:function(t,e){var i=this.context;i.save(),i.font=e+\"px Arial\",i.fillStyle=\"#aaa\",i.lineWidth=.5,i.fillText(t,10,2+e),i.restore();},drawInternalText:function(t){var e=s.evaluate(t.visProp.fontsize),i=t.getAnchorX(),r=t.getAnchorY(),o=this.context;return o.save(),this._setColor(t,\"stroke\",\"fill\")&&!isNaN(t.coords.scrCoords[1]+t.coords.scrCoords[2])&&(o.font=(e>0?e:0)+\"px Arial\",this.transformImage(t,t.transformations),\"left\"===i?o.textAlign=\"left\":\"right\"===i?o.textAlign=\"right\":\"middle\"===i&&(o.textAlign=\"center\"),\"bottom\"===r?o.textBaseline=\"bottom\":\"top\"===r?o.textBaseline=\"top\":\"middle\"===r&&(o.textBaseline=\"middle\"),o.fillText(t.plaintext,t.coords.scrCoords[1],t.coords.scrCoords[2])),o.restore(),null;},updateInternalText:function(t){this.drawInternalText(t);},setObjectStrokeColor:function(t,e,r){var o,a,h,l,c=s.evaluate(e),d=s.evaluate(r);d=d>0?d:0,t.visPropOld.strokecolor===c&&t.visPropOld.strokeopacity===d||(s.exists(c)&&!1!==c&&(9!==c.length?(o=c,h=d):(a=n.rgba2rgbo(c),o=a[0],h=d*a[1]),l=t.rendNode,t.elementClass===i.OBJECT_CLASS_TEXT&&\"html\"===s.evaluate(t.visProp.display)&&(l.style.color=o,l.style.opacity=h)),t.visPropOld.strokecolor=c,t.visPropOld.strokeopacity=d);},drawImage:function(t){t.rendNode=new Image(),t._src=\"\",this.updateImage(t);},updateImage:function(t){var e=this.context,i=s.evaluate(t.visProp.fillopacity),r=s.bind(function(){t.imgIsLoaded=!0,t.size[0]<=0||t.size[1]<=0||(e.save(),e.globalAlpha=i,this.transformImage(t,t.transformations),e.drawImage(t.rendNode,t.coords.scrCoords[1],t.coords.scrCoords[2]-t.size[1],t.size[0],t.size[1]),e.restore());},this);this.updateImageURL(t)?t.rendNode.onload=r:t.imgIsLoaded&&r();},transformImage:function(t,e){var i,r=e.length,s=this.context;r>0&&(i=this.joinTransforms(t,e),Math.abs(c.det(i))>=h.eps&&s.transform(i[1][1],i[2][1],i[1][2],i[2][2],i[1][0],i[2][0]));},updateImageURL:function(t){var e;return e=s.evaluate(t.url),t._src!==e&&(t.imgIsLoaded=!1,t.rendNode.src=e,t._src=e,!0);},remove:function(t){s.exists(t)&&s.exists(t.parentNode)&&t.parentNode.removeChild(t);},updatePathStringPrim:function(t){var e,i,r,s,o,n=\"M\",a=this.context;if(!(t.numberPoints<=0)){if(o=Math.min(t.points.length,t.numberPoints),a.beginPath(),1===t.bezierDegree)for(e=0;e<o;e++)i=t.points[e].scrCoords,isNaN(i[1])||isNaN(i[2])?n=\"M\":(i[1]>5e3?i[1]=5e3:i[1]<-5e3&&(i[1]=-5e3),i[2]>5e3?i[2]=5e3:i[2]<-5e3&&(i[2]=-5e3),\"M\"===n?a.moveTo(i[1],i[2]):a.lineTo(i[1],i[2]),n=\"L\");else if(3===t.bezierDegree)for(e=0;e<o;)i=t.points[e].scrCoords,isNaN(i[1])||isNaN(i[2])?n=\"M\":(\"M\"===n?a.moveTo(i[1],i[2]):(e+=1,r=t.points[e].scrCoords,e+=1,s=t.points[e].scrCoords,a.bezierCurveTo(i[1],i[2],r[1],r[2],s[1],s[2])),n=\"C\"),e+=1;a.lineCap=\"round\",this._fill(t),this._stroke(t);}},updatePathStringBezierPrim:function(t){var e,i,r,o,n,a,h,l=\"M\",d=s.evaluate(t.visProp.strokewidth),u=\"plot\"!==s.evaluate(t.visProp.curvetype),p=this.context;if(!(t.numberPoints<=0)){for(u&&t.board.options.curve.RDPsmoothing&&(t.points=c.RamerDouglasPeucker(t.points,.5)),h=Math.min(t.points.length,t.numberPoints),p.beginPath(),i=1;i<3;i++)for(l=\"M\",e=0;e<h;e++)o=t.points[e].scrCoords,isNaN(o[1])||isNaN(o[2])?l=\"M\":(o[1]>5e3?o[1]=5e3:o[1]<-5e3&&(o[1]=-5e3),o[2]>5e3?o[2]=5e3:o[2]<-5e3&&(o[2]=-5e3),\"M\"===l?p.moveTo(o[1],o[2]):(r=2*i,p.bezierCurveTo(n+.333*(o[1]-n)+d*(r*Math.random()-i),a+.333*(o[2]-a)+d*(r*Math.random()-i),n+.666*(o[1]-n)+d*(r*Math.random()-i),a+.666*(o[2]-a)+d*(r*Math.random()-i),o[1],o[2])),l=\"C\",n=o[1],a=o[2]);p.lineCap=\"round\",this._fill(t),this._stroke(t);}},updatePolygonPrim:function(t,e){var i,r,s,o=e.vertices.length,n=this.context,a=!0;if(!(o<=0)&&e.visPropCalc.visible){for(\"polygonalchain\"===e.elType&&o++,n.beginPath(),r=0;!e.vertices[r].isReal&&r<o-1;)r++,a=!1;for(i=e.vertices[r].coords.scrCoords,n.moveTo(i[1],i[2]),s=r;s<o-1;s++)e.vertices[s].isReal||(a=!1),i=e.vertices[s].coords.scrCoords,n.lineTo(i[1],i[2]);n.closePath(),a&&this._fill(e);}},display:function(t,e){t&&t.rendNode&&(t.visPropOld.visible=e,t.rendNode.style.visibility=e?\"inherit\":\"hidden\");},show:function(e){t.deprecated(\"Board.renderer.show()\",\"Board.renderer.display()\"),s.exists(e.rendNode)&&(e.rendNode.style.visibility=\"inherit\");},hide:function(e){t.deprecated(\"Board.renderer.hide()\",\"Board.renderer.display()\"),s.exists(e.rendNode)&&(e.rendNode.style.visibility=\"hidden\");},setGradient:function(t){var e;e=s.evaluate(t.visProp.fillopacity),e=e>0?e:0,s.evaluate(t.visProp.fillcolor);},setShadow:function(t){t.visPropOld.shadow!==t.visProp.shadow&&(t.visPropOld.shadow=t.visProp.shadow);},highlight:function(t){return t.elementClass===i.OBJECT_CLASS_TEXT&&\"html\"===s.evaluate(t.visProp.display)?this.updateTextStyle(t,!0):(t.board.prepareUpdate(),t.board.renderer.suspendRedraw(t.board),t.board.updateRenderer(),t.board.renderer.unsuspendRedraw()),this;},noHighlight:function(t){return t.elementClass===i.OBJECT_CLASS_TEXT&&\"html\"===s.evaluate(t.visProp.display)?this.updateTextStyle(t,!1):(t.board.prepareUpdate(),t.board.renderer.suspendRedraw(t.board),t.board.updateRenderer(),t.board.renderer.unsuspendRedraw()),this;},suspendRedraw:function(e){this.context.save(),this.context.clearRect(0,0,this.canvasRoot.width,this.canvasRoot.height),e&&e.attr.showcopyright&&this.displayCopyright(t.licenseText,12);},unsuspendRedraw:function(){this.context.restore();},resize:function(t,e){this.container?(this.canvasRoot.style.width=parseFloat(t)+\"px\",this.canvasRoot.style.height=parseFloat(e)+\"px\",this.canvasRoot.setAttribute(\"width\",2*parseFloat(t)+\"px\"),this.canvasRoot.setAttribute(\"height\",2*parseFloat(e)+\"px\")):(this.canvasRoot.width=2*parseFloat(t),this.canvasRoot.height=2*parseFloat(e)),this.context=this.canvasRoot.getContext(\"2d\"),this.context.scale(2,2);},removeToInsertLater:function(){return function(){};}}),t.CanvasRenderer;}),define(\"renderer/no\",[\"jxg\",\"renderer/abstract\"],function(t,e){\"use strict\";return t.NoRenderer=function(){this.enhancedRendering=!1,this.type=\"no\";},t.extend(t.NoRenderer.prototype,{drawPoint:function(t){},updatePoint:function(t){},changePointStyle:function(t){},drawLine:function(t){},updateLine:function(t){},drawTicks:function(t){},updateTicks:function(t){},drawCurve:function(t){},updateCurve:function(t){},drawEllipse:function(t){},updateEllipse:function(t){},drawPolygon:function(t){},updatePolygon:function(t){},displayCopyright:function(t,e){},drawInternalText:function(t){},updateInternalText:function(t){},drawText:function(t){},updateText:function(t){},updateTextStyle:function(t,e){},updateInternalTextStyle:function(t,e,i){},drawImage:function(t){},updateImage:function(t){},transformImage:function(t,e){},updateImageURL:function(t){},appendChildPrim:function(t,e){},appendNodesToElement:function(t,e){},createPrim:function(t,e){return null;},remove:function(t){},makeArrows:function(t){},updateEllipsePrim:function(t,e,i,r,s){},updateLinePrim:function(t,e,i,r,s,o){},updatePathPrim:function(t,e,i){},updatePathStringPoint:function(t,e,i){},updatePathStringPrim:function(t){},updatePathStringBezierPrim:function(t){},updatePolygonPrim:function(t,e){},updateRectPrim:function(t,e,i,r,s){},setPropertyPrim:function(t,e,i){},display:function(t,e){t&&(t.visPropOld.visible=e);},show:function(t){},hide:function(t){},setBuffering:function(t,e){},setDashStyle:function(t){},setDraft:function(t){},removeDraft:function(t){},setGradient:function(t){},updateGradient:function(t){},setObjectTransition:function(t,e){},setObjectFillColor:function(t,e,i){},setObjectStrokeColor:function(t,e,i){},setObjectStrokeWidth:function(t,e){},setShadow:function(t){},highlight:function(t){},noHighlight:function(t){},suspendRedraw:function(){},unsuspendRedraw:function(){},drawZoomBar:function(t){},getElementById:function(t){return null;},resize:function(t,e){},removeToInsertLater:function(){return function(){};}}),t.NoRenderer.prototype=new e(),t.NoRenderer;}),define(\"jsxgraph\",[\"jxg\",\"utils/env\",\"utils/type\",\"base/board\",\"reader/file\",\"options\",\"renderer/svg\",\"renderer/vml\",\"renderer/canvas\",\"renderer/no\"],function(t,e,i,r,s,o,n,a,h,l){\"use strict\";return t.JSXGraph={rendererType:function(){return o.board.renderer=\"no\",e.supportsVML()&&(o.board.renderer=\"vml\",document.onmousemove=function(){var t;return document.body&&(t=document.body.scrollLeft,t+=document.body.scrollTop),t;}),e.supportsCanvas()&&(o.board.renderer=\"canvas\"),e.supportsSVG()&&(o.board.renderer=\"svg\"),e.isNode()&&e.supportsCanvas()&&(o.board.renderer=\"canvas\"),(e.isNode()||\"no\"===o.renderer)&&(o.text.display=\"internal\",o.infobox.display=\"internal\"),o.board.renderer;}(),initRenderer:function(t,e,r,s){var o;if(i.exists(r)&&!1!==r||\"object\"!=typeof document||(r=document),\"object\"==typeof r&&null!==t)for(o=r.getElementById(t);o.firstChild;)o.removeChild(o.firstChild);else o=t;return void 0!==s&&\"auto\"!==s||(s=this.rendererType),\"svg\"===s?new n(o,e):\"vml\"===s?new a(o):\"canvas\"===s?new h(o,e):new l();},_setAttributes:function(t){var e=i.copyAttributes(t,o,\"board\");return e.zoom=i.copyAttributes(e,o,\"board\",\"zoom\"),e.pan=i.copyAttributes(e,o,\"board\",\"pan\"),e.drag=i.copyAttributes(e,o,\"board\",\"drag\"),e.selection=i.copyAttributes(e,o,\"board\",\"selection\"),e.navbar=i.copyAttributes(e.navbar,o,\"navbar\"),e.screenshot=i.copyAttributes(e,o,\"board\",\"screenshot\"),e;},_fillBoard:function(e,i,r){e.initInfobox(),e.maxboundingbox=i.maxboundingbox,e.resizeContainer(r.width,r.height,!0,!0),e._createSelectionPolygon(i),e.renderer.drawZoomBar(e,i.navbar),t.boards[e.id]=e;},_setARIA:function(t,e){var i,r,s,o,n,a=e.document||document;\"object\"==typeof a&&(i=a.getElementById(t),s=i.parentNode,o=t+\"_ARIAlabel\",n=t+\"_ARIAdescription\",r=a.createElement(\"div\"),r.innerHTML=e.title,r.setAttribute(\"id\",o),r.style.display=\"none\",s.insertBefore(r,i),r=a.createElement(\"div\"),r.innerHTML=e.description,r.setAttribute(\"id\",n),r.style.display=\"none\",s.insertBefore(r,i),i.setAttribute(\"aria-labelledby\",o),i.setAttribute(\"aria-describedby\",n));},_removeARIANodes:function(t){var e,i,r;\"object\"==typeof(r=t.document||document)&&(i=t.containerObj.getAttribute(\"aria-labelledby\"),e=document.getElementById(i),e&&e.parentNode&&e.parentNode.removeChild(e),i=t.containerObj.getAttribute(\"aria-describedby\"),(e=document.getElementById(i))&&e.parentNode&&e.parentNode.removeChild(e));},initBoard:function(t,s){var n,a,h,l,c,d,u,p,f,m,g,b,v,y;return s=s||{},m=this._setAttributes(s),p=e.getDimensions(t,m.document),m.unitx||m.unity?(n=i.def(m.originx,150),a=i.def(m.originy,150),h=i.def(m.unitx,50),l=i.def(m.unity,50)):(f=m.boundingbox,f[0]<m.maxboundingbox[0]&&(f[0]=m.maxboundingbox[0]),f[1]>m.maxboundingbox[1]&&(f[1]=m.maxboundingbox[1]),f[2]>m.maxboundingbox[2]&&(f[2]=m.maxboundingbox[2]),f[3]<m.maxboundingbox[3]&&(f[3]=m.maxboundingbox[3]),d=parseInt(p.width,10),u=parseInt(p.height,10),i.exists(f)&&m.keepaspectratio?(h=d/(f[2]-f[0]),l=u/(f[1]-f[3]),Math.abs(h)<Math.abs(l)?l=Math.abs(h)*l/Math.abs(l):h=Math.abs(l)*h/Math.abs(h)):(h=d/(f[2]-f[0]),l=u/(f[1]-f[3])),n=-h*f[0],a=l*f[1]),c=this.initRenderer(t,p,m.document,m.renderer),this._setARIA(t,m),y=new r(t,c,m.id,[n,a],m.zoomfactor*m.zoomx,m.zoomfactor*m.zoomy,h,l,p.width,p.height,m),y.keepaspectratio=m.keepaspectratio,this._fillBoard(y,m,p),y.suspendUpdate(),m.axis&&(g=\"object\"==typeof m.axis?m.axis:{},b=i.deepCopy(o.board.defaultAxes.x,g),v=i.deepCopy(o.board.defaultAxes.y,g),m.defaultaxes.x&&(b=i.deepCopy(b,m.defaultaxes.x)),m.defaultaxes.y&&(v=i.deepCopy(v,m.defaultaxes.y)),y.defaultAxes={},y.defaultAxes.x=y.create(\"axis\",[[0,0],[1,0]],b),y.defaultAxes.y=y.create(\"axis\",[[0,0],[0,1]],v)),m.grid&&y.create(\"grid\",[],\"object\"==typeof m.grid?m.grid:{}),y.unsuspendUpdate(),y;},loadBoardFromFile:function(t,i,o,n,a){var h,l,c,d,u;return n=n||{},h=this._setAttributes(n),d=e.getDimensions(t,h.document),l=this.initRenderer(t,d,h.document,h.renderer),this._setARIA(t,h),c=new r(t,l,\"\",[150,150],1,1,50,50,d.width,d.height,h),this._fillBoard(c,h,d),u=h.encoding||\"iso-8859-1\",s.parseFileContent(i,c,o,!0,u,a),c;},loadBoardFromString:function(t,i,o,n,a){var h,l,c,d;return n=n||{},h=this._setAttributes(n),d=e.getDimensions(t,h.document),l=this.initRenderer(t,d,h.document),this._setARIA(t,h),c=new r(t,l,\"\",[150,150],1,1,50,50,d.width,d.height,h),this._fillBoard(c,h,d),s.parseString(i,c,o,!0,a),c;},freeBoard:function(e){var i;\"string\"==typeof e&&(e=t.boards[e]),this._removeARIANodes(e),e.removeEventHandlers(),e.suspendUpdate();for(i in e.objects)e.objects.hasOwnProperty(i)&&e.objects[i].remove();for(;e.containerObj.firstChild;)e.containerObj.removeChild(e.containerObj.firstChild);for(i in e.objects)e.objects.hasOwnProperty(i)&&delete e.objects[i];delete e.renderer,e.jc.creator.clearCache(),delete e.jc,delete t.boards[e.id];},registerElement:function(e,i){t.deprecated(\"JXG.JSXGraph.registerElement()\",\"JXG.registerElement()\"),t.registerElement(e,i);}},e.isBrowser&&\"object\"==typeof window&&\"object\"==typeof document&&e.addEvent(window,\"load\",function(){var e,r,s,o,n,a,h,l,c,d,u,p,f=document.getElementsByTagName(\"script\"),m=function(e,i,r){var s=t.JSXGraph.initBoard(n,{boundingbox:r,keepaspectratio:!0,grid:u,axis:d,showReload:!0});if(i.toLowerCase().indexOf(\"script\")>-1)s.construct(e);else try{s.jc.parse(e);}catch(e){t.debug(e);}return s;},g=function(e,i,r,s){return function(){var o;t.JSXGraph.freeBoard(e),o=m(i,r,s),o.reload=g(o,i,r,s);};};for(r=0;r<f.length;r++)if(e=f[r].getAttribute(\"type\",!1),i.exists(e)&&(\"text/jessiescript\"===e.toLowerCase()||\"jessiescript\"===e.toLowerCase()||\"text/jessiecode\"===e.toLowerCase()||\"jessiecode\"===e.toLowerCase())){if(h=f[r].getAttribute(\"width\",!1)||\"500px\",l=f[r].getAttribute(\"height\",!1)||\"500px\",c=f[r].getAttribute(\"boundingbox\",!1)||\"-5, 5, 5, -5\",n=f[r].getAttribute(\"container\",!1),c=c.split(\",\"),4!==c.length)c=[-5,5,5,-5];else for(s=0;s<c.length;s++)c[s]=parseFloat(c[s]);if(d=i.str2Bool(f[r].getAttribute(\"axis\",!1)||\"false\"),u=i.str2Bool(f[r].getAttribute(\"grid\",!1)||\"false\"),i.exists(n))o=document.getElementById(n);else{n=\"jessiescript_autgen_jxg_\"+r,o=document.createElement(\"div\"),o.setAttribute(\"id\",n),o.setAttribute(\"style\",\"width:\"+h+\"; height:\"+l+\"; float:left\"),o.setAttribute(\"class\",\"jxgbox\");try{document.body.insertBefore(o,f[r]);}catch(t){\"object\"==typeof jQuery&&jQuery(o).insertBefore(f[r]);}}document.getElementById(n)?(p=f[r].innerHTML,p=p.replace(/<!\\[CDATA\\[/g,\"\").replace(/\\]\\]>/g,\"\"),f[r].innerHTML=p,a=m(p,e,c),a.reload=g(a,p,e,c)):t.debug(\"JSXGraph: Apparently the div injection failed. Can't create a board, sorry.\");}},window),t.JSXGraph;}),define(\"base/group\",[\"jxg\",\"base/constants\",\"math/math\",\"math/geometry\",\"utils/type\"],function(t,e,i,r,s){\"use strict\";return t.Group=function(t,i,r,o,n){var a,h,l,c;for(this.board=t,this.objects={},a=this.board.numObjects,this.board.numObjects+=1,\"\"!==i&&s.exists(i)?this.id=i:this.id=this.board.id+\"Group\"+a,this.board.groups[this.id]=this,this.type=e.OBJECT_TYPE_POINT,this.elementClass=e.OBJECT_CLASS_POINT,\"\"!==r&&s.exists(r)?this.name=r:this.name=\"group_\"+this.board.generateName(this),delete this.type,this.coords={},this.needsRegularUpdate=n.needsregularupdate,this.rotationCenter=\"centroid\",this.scaleCenter=null,this.rotationPoints=[],this.translationPoints=[],this.scalePoints=[],this.scaleDirections={},this.parents=[],h=s.isArray(o)?o:Array.prototype.slice.call(arguments,3),l=0;l<h.length;l++)c=this.board.select(h[l]),!s.evaluate(c.visProp.fixed)&&s.exists(c.coords)&&this.addPoint(c);this.methodMap={ungroup:\"ungroup\",add:\"addPoint\",addPoint:\"addPoint\",addPoints:\"addPoints\",addGroup:\"addGroup\",remove:\"removePoint\",removePoint:\"removePoint\",setAttribute:\"setAttribute\",setProperty:\"setAttribute\"};},t.extend(t.Group.prototype,{ungroup:function(){var t,e,i;for(t in this.objects)this.objects.hasOwnProperty(t)&&(e=this.objects[t].point,s.isArray(e.groups)&&(i=s.indexOf(e.groups,this.id))>=0&&delete e.groups[i]);return this.objects={},this;},addParents:function(t){var e,i,r;for(r=s.isArray(t)?t:arguments,i=r.length,e=0;e<i;++e)s.isId(this.board,r[e])?this.parents.push(r[e]):s.exists(r[e].id)&&this.parents.push(r[e].id);this.parents=s.uniqueArray(this.parents);},setParents:function(t){this.parents=[],this.addParents(t);},getParents:function(){return s.isArray(this.parents)?this.parents:[];},_updateCoordsCache:function(t){var e;\"\"!==t&&s.exists(this.objects[t])&&(e=this.objects[t].point,this.coords[e.id]={usrCoords:e.coords.usrCoords.slice(0)});},update:function(t){var e,o,n,a,h,l,c,d,u,p=null;if(!this.needsUpdate)return this;if(t=this._update_find_drag_type(),\"nothing\"===t.action)return this._updateCoordsCache(t.id),this;if(p=this.objects[t.id].point,\"translation\"===t.action)d=[p.coords.usrCoords[1]-this.coords[t.id].usrCoords[1],p.coords.usrCoords[2]-this.coords[t.id].usrCoords[2]];else if(\"rotation\"===t.action||\"scaling\"===t.action){if(o=\"rotation\"===t.action?\"rotationCenter\":\"scaleCenter\",s.isPoint(this[o]))u=this[o].coords.usrCoords.slice(1);else if(\"centroid\"===this[o])u=this._update_centroid_center();else if(s.isArray(this[o]))u=this[o];else{if(!s.isFunction(this[o]))return this;u=this[o]();}if(\"rotation\"===t.action)c=r.rad(this.coords[t.id].usrCoords.slice(1),u,this.objects[t.id].point),d=this.board.create(\"transform\",[c,u[0],u[1]],{type:\"rotate\"}),d.update();else{if(\"scaling\"!==t.action)return this;if(a=r.distance(this.coords[t.id].usrCoords.slice(1),u),Math.abs(a)<i.eps)return this;a=r.distance(p.coords.usrCoords.slice(1),u)/a,h=this.scaleDirections[t.id].indexOf(\"x\")>=0?a:1,l=this.scaleDirections[t.id].indexOf(\"y\")>=0?a:1,d=this.board.create(\"transform\",[1,0,0,u[0]*(1-h),h,0,u[1]*(1-l),0,l],{type:\"generic\"}),d.update();}}this._update_apply_transformation(t,d),this.needsUpdate=!1;for(e in this.objects)if(this.objects.hasOwnProperty(e))for(n in this.objects[e].descendants)this.objects[e].descendants.hasOwnProperty(n)&&(this.objects[e].descendants.needsUpdate=this.objects[e].descendants.needsRegularUpdate||this.board.needsFullUpdate);this.board.updateElements(t);for(e in this.objects)this.objects.hasOwnProperty(e)&&this._updateCoordsCache(e);return this;},_update_find_drag_type:function(){var t,r,o,n=\"nothing\",a=[];for(t in this.objects)this.objects.hasOwnProperty(t)&&(r=this.objects[t].point,r.coords.distance(e.COORDS_BY_USER,this.coords[t])>i.eps&&a.push(r.id));return 0===a.length?{action:n,id:\"\",changed:a}:(o=a[0],r=this.objects[o].point,a.length>1?n=\"translation\":s.isInArray(this.rotationPoints,r)&&s.exists(this.rotationCenter)?n=\"rotation\":s.isInArray(this.scalePoints,r)&&s.exists(this.scaleCenter)?n=\"scaling\":s.isInArray(this.translationPoints,r)&&(n=\"translation\"),{action:n,id:o,changed:a});},_update_centroid_center:function(){var t,e,i;t=[0,0],e=0;for(i in this.coords)this.coords.hasOwnProperty(i)&&(t[0]+=this.coords[i].usrCoords[1],t[1]+=this.coords[i].usrCoords[2],++e);return e>0&&(t[0]/=e,t[1]/=e),t;},_update_apply_transformation:function(t,r){var o,n;for(o in this.objects)this.objects.hasOwnProperty(o)&&(s.exists(this.board.objects[o])?(n=this.objects[o].point,n.id!==t.id?\"translation\"===t.action?s.isInArray(t.changed,n.id)||n.coords.setCoordinates(e.COORDS_BY_USER,[this.coords[o].usrCoords[1]+r[0],this.coords[o].usrCoords[2]+r[1]]):\"rotation\"!==t.action&&\"scaling\"!==t.action||r.applyOnce([n]):\"rotation\"!==t.action&&\"scaling\"!==t.action||n.coords.setCoordinates(e.COORDS_BY_USER,i.matVecMult(r.matrix,this.coords[n.id].usrCoords))):delete this.objects[o]);},addPoint:function(t){return this.objects[t.id]={point:this.board.select(t)},this._updateCoordsCache(t.id),this.translationPoints.push(t),t.groups.push(this.id),t.groups=s.uniqueArray(t.groups),this;},addPoints:function(t){var e;for(e=0;e<t.length;e++)this.addPoint(t[e]);return this;},addGroup:function(t){var e;for(e in t.objects)t.objects.hasOwnProperty(e)&&this.addPoint(t.objects[e].point);return this;},removePoint:function(t){return delete this.objects[t.id],this;},setRotationCenter:function(t){return this.rotationCenter=t,this;},setRotationPoints:function(t){return this._setActionPoints(\"rotation\",t);},addRotationPoint:function(t){return this._addActionPoint(\"rotation\",t);},removeRotationPoint:function(t){return this._removeActionPoint(\"rotation\",t);},setTranslationPoints:function(t){return this._setActionPoints(\"translation\",t);},addTranslationPoint:function(t){return this._addActionPoint(\"translation\",t);},removeTranslationPoint:function(t){return this._removeActionPoint(\"translation\",t);},setScaleCenter:function(t){return this.scaleCenter=t,this;},setScalePoints:function(t,e){var i,r,o;for(i=s.isArray(t)?t:arguments,o=i.length,r=0;r<o;++r)this.scaleDirections[this.board.select(i[r]).id]=e||\"xy\";return this._setActionPoints(\"scale\",t);},addScalePoint:function(t,e){return this._addActionPoint(\"scale\",t),this.scaleDirections[this.board.select(t).id]=e||\"xy\",this;},removeScalePoint:function(t){return this._removeActionPoint(\"scale\",t);},_setActionPoints:function(t,e){var i,r,o;for(i=s.isArray(e)?e:arguments,o=i.length,this[t+\"Points\"]=[],r=0;r<o;++r)this._addActionPoint(t,i[r]);return this;},_addActionPoint:function(t,e){return this[t+\"Points\"].push(this.board.select(e)),this;},_removeActionPoint:function(t,e){var i=this[t+\"Points\"].indexOf(this.board.select(e));return i>-1&&this[t+\"Points\"].splice(i,1),this;},setProperty:function(){t.deprecated(\"Group.setProperty\",\"Group.setAttribute()\"),this.setAttribute.apply(this,arguments);},setAttribute:function(){var t;for(t in this.objects)this.objects.hasOwnProperty(t)&&this.objects[t].point.setAttribute.apply(this.objects[t].point,arguments);return this;}}),t.createGroup=function(e,i,r){var o=s.copyAttributes(r,e.options,\"group\"),n=new t.Group(e,o.id,o.name,i,o);return n.elType=\"group\",n.setParents(i),n;},t.registerElement(\"group\",t.createGroup),{Group:t.Group,createGroup:t.createGroup};}),define(\"element/arc\",[\"jxg\",\"math/geometry\",\"math/math\",\"base/coords\",\"base/circle\",\"utils/type\",\"base/constants\"],function(t,e,i,r,s,o,n){\"use strict\";return t.createArc=function(a,h,l){var c,d,u;if(!1===(u=o.providePoints(a,h,l,\"arc\",[\"center\",\"radiusPoint\",\"anglePoint\"]))||u.length<3)throw new Error(\"JSXGraph: Can't create Arc with parent types '\"+typeof h[0]+\"' and '\"+typeof h[1]+\"' and '\"+typeof h[2]+\"'.\\nPossible parent types: [point,point,point], [arc, transformation]\");return d=o.copyAttributes(l,a.options,\"arc\"),c=a.create(\"curve\",[[0],[0]],d),c.elType=\"arc\",c.setParents(u),c.type=n.OBJECT_TYPE_ARC,c.center=u[0],c.radiuspoint=u[1],c.point2=c.radiuspoint,c.anglepoint=u[2],c.point3=c.anglepoint,c.center.addChild(c),c.radiuspoint.addChild(c),c.anglepoint.addChild(c),c.useDirection=d.usedirection,c.updateDataArray=function(){var t,i,r,s,n,a,h=1,l=this.radiuspoint,c=this.center,d=this.anglepoint,p=o.evaluate(this.visProp.selection);i=e.rad(l,c,d),(\"minor\"===p&&i>Math.PI||\"major\"===p&&i<Math.PI)&&(h=-1),this.useDirection&&(s=u[1].coords.usrCoords,n=u[3].coords.usrCoords,a=u[2].coords.usrCoords,r=(s[1]-a[1])*(s[2]-n[2])-(s[2]-a[2])*(s[1]-n[1]),r<0?(this.radiuspoint=u[1],this.anglepoint=u[2]):(this.radiuspoint=u[2],this.anglepoint=u[1])),l=l.coords.usrCoords,c=c.coords.usrCoords,d=d.coords.usrCoords,t=e.bezierArc(l,c,d,!1,h),this.dataX=t[0],this.dataY=t[1],this.bezierDegree=3,this.updateStdform(),this.updateQuadraticform();},c.Radius=function(){return this.radiuspoint.Dist(this.center);},c.getRadius=function(){return t.deprecated(\"Arc.getRadius()\",\"Arc.Radius()\"),this.Radius();},c.Value=function(){return this.Radius()*e.rad(this.radiuspoint,this.center,this.anglepoint);},c.hasPoint=function(t,s){var a,h,l,c,d,u,p,f,m,g,b=this.Radius(),v=o.evaluate(this.visProp.selection);return o.evaluate(this.visProp.hasinnerpoints)?this.hasPointSector(t,s):(o.isObject(o.evaluate(this.visProp.precision))?(g=this.board._inputDevice,m=o.evaluate(this.visProp.precision[g])):m=this.board.options.precision.hasPoint,m/=Math.min(this.board.unitX,this.board.unitY),h=new r(n.COORDS_BY_SCREEN,[t,s],this.board),this.transformations.length>0&&(this.updateTransformMatrix(),p=i.inverse(this.transformMat),f=i.matVecMult(p,h.usrCoords),h=new r(n.COORDS_BY_USER,f,this.board)),a=this.center.coords.distance(n.COORDS_BY_USER,h),l=Math.abs(a-b)<m,l&&(c=e.rad(this.radiuspoint,this.center,h.usrCoords.slice(1)),d=0,u=e.rad(this.radiuspoint,this.center,this.anglepoint),(\"minor\"===v&&u>Math.PI||\"major\"===v&&u<Math.PI)&&(d=u,u=2*Math.PI),(c<d||c>u)&&(l=!1)),l);},c.hasPointSector=function(t,i){var s,a,h,l=new r(n.COORDS_BY_SCREEN,[t,i],this.board),c=this.Radius(),d=this.center.coords.distance(n.COORDS_BY_USER,l),u=d<c,p=o.evaluate(this.visProp.selection);return u&&(s=e.rad(this.radiuspoint,this.center,l.usrCoords.slice(1)),a=0,h=e.rad(this.radiuspoint,this.center,this.anglepoint),(\"minor\"===p&&h>Math.PI||\"major\"===p&&h<Math.PI)&&(a=h,h=2*Math.PI),(s<a||s>h)&&(u=!1)),u;},c.getTextAnchor=function(){return this.center.coords;},c.getLabelAnchor=function(){var t,i,s,a,h,l=e.rad(this.radiuspoint,this.center,this.anglepoint),c=10/this.board.unitX,d=10/this.board.unitY,u=this.point2.coords.usrCoords,p=this.center.coords.usrCoords,f=u[1]-p[1],m=u[2]-p[2],g=o.evaluate(this.visProp.selection),b=this.label?this.label.visProp:this.visProp.label;return(\"minor\"===g&&l>Math.PI||\"major\"===g&&l<Math.PI)&&(l=-(2*Math.PI-l)),t=new r(n.COORDS_BY_USER,[p[1]+Math.cos(.5*l)*f-Math.sin(.5*l)*m,p[2]+Math.sin(.5*l)*f+Math.cos(.5*l)*m],this.board),s=t.usrCoords[1]-p[1],a=t.usrCoords[2]-p[2],h=Math.sqrt(s*s+a*a),s=s*(h+c)/h,a=a*(h+d)/h,i=[p[1]+s,p[2]+a],b.position=e.calcLabelQuadrant(e.rad([1,0],[0,0],i)),new r(n.COORDS_BY_USER,i,this.board);},c.updateQuadraticform=s.Circle.prototype.updateQuadraticform,c.updateStdform=s.Circle.prototype.updateStdform,c.methodMap=t.deepCopy(c.methodMap,{getRadius:\"getRadius\",radius:\"Radius\",center:\"center\",radiuspoint:\"radiuspoint\",anglepoint:\"anglepoint\",Value:\"Value\"}),c.prepareUpdate().update(),c;},t.registerElement(\"arc\",t.createArc),t.createSemicircle=function(t,e,i){var r,s,n,a;if(!1===(a=o.providePoints(t,e,i,\"point\"))||2!==a.length)throw new Error(\"JSXGraph: Can't create Semicircle with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [point,point]\");return n=o.copyAttributes(i,t.options,\"semicircle\",\"center\"),s=t.create(\"midpoint\",a,n),s.dump=!1,n=o.copyAttributes(i,t.options,\"semicircle\"),r=t.create(\"arc\",[s,a[1],a[0]],n),r.elType=\"semicircle\",r.setParents([a[0].id,a[1].id]),r.subs={midpoint:s},r.inherits.push(s),r.midpoint=r.center=s,r;},t.registerElement(\"semicircle\",t.createSemicircle),t.createCircumcircleArc=function(t,e,i){var r,s,n,a;if(!1===(a=o.providePoints(t,e,i,\"point\"))||3!==a.length)throw new Error(\"JSXGraph: create Circumcircle Arc with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"' and '\"+typeof e[2]+\"'.\\nPossible parent types: [point,point,point]\");return n=o.copyAttributes(i,t.options,\"circumcirclearc\",\"center\"),s=t.create(\"circumcenter\",a,n),s.dump=!1,n=o.copyAttributes(i,t.options,\"circumcirclearc\"),n.usedirection=!0,r=t.create(\"arc\",[s,a[0],a[2],a[1]],n),r.elType=\"circumcirclearc\",r.setParents([a[0].id,a[1].id,a[2].id]),r.subs={center:s},r.inherits.push(s),r.center=s,r;},t.registerElement(\"circumcirclearc\",t.createCircumcircleArc),t.createMinorArc=function(e,i,r){return r.selection=\"minor\",t.createArc(e,i,r);},t.registerElement(\"minorarc\",t.createMinorArc),t.createMajorArc=function(e,i,r){return r.selection=\"major\",t.createArc(e,i,r);},t.registerElement(\"majorarc\",t.createMajorArc),{createArc:t.createArc,createSemicircle:t.createSemicircle,createCircumcircleArc:t.createCircumcircleArc,createMinorArc:t.createMinorArc,createMajorArc:t.createMajorArc};}),define(\"element/sector\",[\"jxg\",\"math/geometry\",\"math/math\",\"math/statistics\",\"base/coords\",\"base/constants\",\"utils/type\",\"base/point\",\"base/curve\",\"base/transformation\",\"element/composition\"],function(t,e,i,r,s,o,n,a,h,l,c){\"use strict\";return t.createSector=function(a,h,l){var c,d,u,p,f,m=\"invalid\",g=[\"center\",\"radiusPoint\",\"anglePoint\"];if(h[0].elementClass===o.OBJECT_CLASS_LINE&&h[1].elementClass===o.OBJECT_CLASS_LINE&&(n.isArray(h[2])||n.isNumber(h[2]))&&(n.isArray(h[3])||n.isNumber(h[3]))&&(n.isNumber(h[4])||n.isFunction(h[4])))m=\"2lines\";else{if(!1===(f=n.providePoints(a,h,l,\"sector\",g)))throw new Error(\"JSXGraph: Can't create Sector with parent types '\"+typeof h[0]+\"' and '\"+typeof h[1]+\"' and '\"+typeof h[2]+\"'.\");m=\"3points\";}return d=n.copyAttributes(l,a.options,\"sector\"),c=a.create(\"curve\",[[0],[0]],d),c.type=o.OBJECT_TYPE_SECTOR,c.elType=\"sector\",\"2lines\"===m?(c.Radius=function(){return n.evaluate(h[4]);},c.line1=a.select(h[0]),c.line2=a.select(h[1]),c.line1.addChild(c),c.line2.addChild(c),c.setParents(h),c.point1={visProp:{}},c.point2={visProp:{}},c.point3={visProp:{}},u=e.meetLineLine(c.line1.stdform,c.line2.stdform,0,a),n.isArray(h[2])?(2===h[2].length&&(h[2]=[1].concat(h[2])),p=e.projectPointToLine({coords:{usrCoords:h[2]}},c.line1,a),p=r.subtract(p.usrCoords,u.usrCoords),c.direction1=i.innerProduct(p,[0,c.line1.stdform[2],-c.line1.stdform[1]],3)>=0?1:-1):c.direction1=h[2]>=0?1:-1,n.isArray(h[3])?(2===h[3].length&&(h[3]=[1].concat(h[3])),p=e.projectPointToLine({coords:{usrCoords:h[3]}},c.line2,a),p=r.subtract(p.usrCoords,u.usrCoords),c.direction2=i.innerProduct(p,[0,c.line2.stdform[2],-c.line2.stdform[1]],3)>=0?1:-1):c.direction2=h[3]>=0?1:-1,c.updateDataArray=function(){var t,n,a,h,l=[0,0,0],d=[0,0,0],u=[0,0,0];if(n=this.line1,a=this.line2,d=i.crossProduct(n.stdform,a.stdform),Math.abs(d[0])>i.eps*i.eps&&(d[1]/=d[0],d[2]/=d[0],d[0]/=d[0]),t=this.direction1*this.Radius(),l=r.add(d,[0,t*n.stdform[2],-t*n.stdform[1]]),t=this.direction2*this.Radius(),u=r.add(d,[0,t*a.stdform[2],-t*a.stdform[1]]),this.point2.coords=new s(o.COORDS_BY_USER,l,c.board),this.point1.coords=new s(o.COORDS_BY_USER,d,c.board),this.point3.coords=new s(o.COORDS_BY_USER,u,c.board),Math.abs(l[0])<i.eps||Math.abs(d[0])<i.eps||Math.abs(u[0])<i.eps)return this.dataX=[NaN],void(this.dataY=[NaN]);h=e.bezierArc(l,d,u,!0,1),this.dataX=h[0],this.dataY=h[1],this.bezierDegree=3;},c.methodMap=t.deepCopy(c.methodMap,{radius:\"getRadius\",getRadius:\"getRadius\",setRadius:\"setRadius\"}),c.prepareUpdate().update()):\"3points\"===m&&(c.point1=f[0],c.point2=f[1],c.point3=f[2],c.point1.addChild(c),c.point2.addChild(c),c.point3.addChild(c),c.useDirection=l.usedirection,c.setParents(f),n.exists(f[3])&&(c.point4=f[3],c.point4.addChild(c)),c.methodMap=t.deepCopy(c.methodMap,{arc:\"arc\",center:\"center\",radiuspoint:\"radiuspoint\",anglepoint:\"anglepoint\",radius:\"getRadius\",getRadius:\"getRadius\",setRadius:\"setRadius\"}),c.updateDataArray=function(){var t,i,r,s,o,a=this.point2,h=this.point1,l=this.point3,c=1,d=n.evaluate(this.visProp.selection);if(!a.isReal||!h.isReal||!l.isReal)return this.dataX=[NaN],void(this.dataY=[NaN]);o=e.rad(a,h,l),(\"minor\"===d&&o>Math.PI||\"major\"===d&&o<Math.PI)&&(c=-1),this.useDirection&&n.exists(this.point4)&&(i=this.point2.coords.usrCoords,r=this.point4.coords.usrCoords,s=this.point3.coords.usrCoords,(i[1]-s[1])*(i[2]-r[2])-(i[2]-s[2])*(i[1]-r[1])>=0&&(l=this.point2,a=this.point3)),a=a.coords.usrCoords,h=h.coords.usrCoords,l=l.coords.usrCoords,t=e.bezierArc(a,h,l,!0,c),this.dataX=t[0],this.dataY=t[1],this.bezierDegree=3;},c.Radius=function(){return this.point2.Dist(this.point1);},d=n.copyAttributes(l,a.options,\"sector\",\"arc\"),d.withLabel=!1,d.name+=\"_arc\",c.arc=a.create(\"arc\",[c.point1,c.point2,c.point3],d),c.addChild(c.arc)),c.center=c.point1,c.radiuspoint=c.point2,c.anglepoint=c.point3,c.hasPointCurve=function(t,i){var r,a,h,l,c,d,u=new s(o.COORDS_BY_SCREEN,[t,i],this.board),p=this.Radius(),f=this.center.coords.distance(o.COORDS_BY_USER,u),m=n.evaluate(this.visProp.selection);return n.isObject(n.evaluate(this.visProp.precision))?(c=this.board._inputDevice,l=n.evaluate(this.visProp.precision[c])):l=this.board.options.precision.hasPoint,l/=Math.min(this.board.unitX,this.board.unitY),d=Math.abs(f-p)<l,d&&(r=e.rad(this.point2,this.center,u.usrCoords.slice(1)),a=0,h=e.rad(this.point2,this.center,this.point3),(\"minor\"===m&&h>Math.PI||\"major\"===m&&h<Math.PI)&&(a=h,h=2*Math.PI),(r<a||r>h)&&(d=!1)),d;},c.hasPointSector=function(t,i){var r,a,h,l=new s(o.COORDS_BY_SCREEN,[t,i],this.board),c=this.Radius(),d=this.point1.coords.distance(o.COORDS_BY_USER,l),u=d<c,p=n.evaluate(this.visProp.selection);return u&&(r=e.rad(this.radiuspoint,this.center,l.usrCoords.slice(1)),a=0,h=e.rad(this.radiuspoint,this.center,this.anglepoint),(\"minor\"===p&&h>Math.PI||\"major\"===p&&h<Math.PI)&&(a=h,h=2*Math.PI),(r<a||r>h)&&(u=!1)),u;},c.hasPoint=function(t,e){return n.evaluate(this.visProp.highlightonsector)||n.evaluate(this.visProp.hasinnerpoints)?this.hasPointSector(t,e):this.hasPointCurve(t,e);},c.getTextAnchor=function(){return this.point1.coords;},c.getLabelAnchor=function(){var t,i,r,a,h,l=e.rad(this.point2,this.point1,this.point3),c=13/this.board.unitX,d=13/this.board.unitY,u=this.point2.coords.usrCoords,p=this.point1.coords.usrCoords,f=u[1]-p[1],m=u[2]-p[2],g=n.evaluate(this.visProp.selection),b=this.label?this.label.visProp:this.visProp.label;return(\"minor\"===g&&l>Math.PI||\"major\"===g&&l<Math.PI)&&(l=-(2*Math.PI-l)),t=new s(o.COORDS_BY_USER,[p[1]+Math.cos(.5*l)*f-Math.sin(.5*l)*m,p[2]+Math.sin(.5*l)*f+Math.cos(.5*l)*m],this.board),r=t.usrCoords[1]-p[1],a=t.usrCoords[2]-p[2],h=Math.sqrt(r*r+a*a),r=r*(h+c)/h,a=a*(h+d)/h,i=[p[1]+r,p[2]+a],b.position=e.calcLabelQuadrant(e.rad([1,0],[0,0],i)),new s(o.COORDS_BY_USER,i,this.board);},c.setRadius=function(t){c.Radius=function(){return n.evaluate(t);};},c.getRadius=function(){return t.deprecated(\"Sector.getRadius()\",\"Sector.Radius()\"),this.Radius();},\"3points\"===m&&(c.setPositionDirectly=function(t,e,i){var o,n,a=new s(t,e,this.board),h=new s(t,i,this.board);return c.point1.draggable()&&c.point2.draggable()&&c.point3.draggable()?(o=r.subtract(a.usrCoords,h.usrCoords),n=this.board.create(\"transform\",o.slice(1),{type:\"translate\"}),n.applyOnce([c.point1,c.point2,c.point3]),this):this;}),c.prepareUpdate().update(),c;},t.registerElement(\"sector\",t.createSector),t.createCircumcircleSector=function(t,e,i){var r,s,o,a;if(!1===(a=n.providePoints(t,e,i,\"point\")))throw new Error(\"JSXGraph: Can't create circumcircle sector with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"' and '\"+typeof e[2]+\"'.\");return s=t.create(\"circumcenter\",a.slice(0,3),o),s.dump=!1,o=n.copyAttributes(i,t.options,\"circumcirclesector\"),r=t.create(\"sector\",[s,a[0],a[2],a[1]],o),r.elType=\"circumcirclesector\",r.setParents(a),r.center=s,r.subs={center:s},r;},t.registerElement(\"circumcirclesector\",t.createCircumcircleSector),t.createMinorSector=function(e,i,r){return r.selection=\"minor\",t.createSector(e,i,r);},t.registerElement(\"minorsector\",t.createMinorSector),t.createMajorSector=function(e,i,r){return r.selection=\"major\",t.createSector(e,i,r);},t.registerElement(\"majorsector\",t.createMajorSector),t.createAngle=function(t,r,a){var h,l,c,d,u,p,f=\"invalid\";if(r[0].elementClass===o.OBJECT_CLASS_LINE&&r[1].elementClass===o.OBJECT_CLASS_LINE&&(n.isArray(r[2])||n.isNumber(r[2]))&&(n.isArray(r[3])||n.isNumber(r[3])))f=\"2lines\";else{if(!1===(p=n.providePoints(t,r,a,\"point\")))throw new Error(\"JSXGraph: Can't create angle with parent types '\"+typeof r[0]+\"' and '\"+typeof r[1]+\"' and '\"+typeof r[2]+\"'.\");f=\"3points\";}if(c=n.copyAttributes(a,t.options,\"angle\"),n.exists(c.name)&&\"\"!==c.name||(c.name=t.generateName({type:o.OBJECT_TYPE_ANGLE})),l=n.exists(c.radius)?c.radius:0,\"2lines\"===f?(r.push(l),h=t.create(\"sector\",r,c),h.updateDataArraySector=h.updateDataArray,h.setAngle=function(t){},h.free=function(t){}):(h=t.create(\"sector\",[p[1],p[0],p[2]],c),h.arc.visProp.priv=!0,h.point=h.point2=h.radiuspoint=p[0],h.pointsquare=h.point3=h.anglepoint=p[2],h.Radius=function(){return n.evaluate(l);},h.updateDataArraySector=function(){var t,i,r=this.point2,s=this.point1,o=this.point3,a=this.Radius(),h=s.Dist(r),l=1,c=n.evaluate(this.visProp.selection);i=e.rad(r,s,o),(\"minor\"===c&&i>Math.PI||\"major\"===c&&i<Math.PI)&&(l=-1),r=r.coords.usrCoords,s=s.coords.usrCoords,o=o.coords.usrCoords,r=[1,s[1]+(r[1]-s[1])*a/h,s[2]+(r[2]-s[2])*a/h],o=[1,s[1]+(o[1]-s[1])*a/h,s[2]+(o[2]-s[2])*a/h],t=e.bezierArc(r,s,o,!0,l),this.dataX=t[0],this.dataY=t[1],this.bezierDegree=3;},h.setAngle=function(t){var e,i=this.anglepoint,r=this.radiuspoint;return i.draggable()&&(e=this.board.create(\"transform\",[t,this.center],{type:\"rotate\"}),i.addTransform(r,e),i.isDraggable=!1,i.setParents(r)),this;},h.free=function(){var t=this.anglepoint;return t.transformations.length>0&&(t.transformations.pop(),t.isDraggable=!0,t.parents=[]),this;},h.setParents(p)),n.exists(h.visProp.text)&&h.label.setText(n.evaluate(h.visProp.text)),h.elType=\"angle\",h.type=o.OBJECT_TYPE_ANGLE,h.subs={},h.updateDataArraySquare=function(){var t,r,s,o,n,a,h,l,c=this.Radius();\"2lines\"===f&&this.updateDataArraySector(),t=this.point2,r=this.point1,s=this.point3,t=t.coords.usrCoords,r=r.coords.usrCoords,s=s.coords.usrCoords,o=e.distance(t,r,3),n=e.distance(s,r,3),t=[1,r[1]+(t[1]-r[1])*c/o,r[2]+(t[2]-r[2])*c/o],s=[1,r[1]+(s[1]-r[1])*c/n,r[2]+(s[2]-r[2])*c/n],a=i.crossProduct(s,r),h=[-t[1]*a[1]-t[2]*a[2],t[0]*a[1],t[0]*a[2]],a=i.crossProduct(t,r),l=[-s[1]*a[1]-s[2]*a[2],s[0]*a[1],s[0]*a[2]],a=i.crossProduct(h,l),a[1]/=a[0],a[2]/=a[0],this.dataX=[r[1],t[1],a[1],s[1],r[1]],this.dataY=[r[2],t[2],a[2],s[2],r[2]],this.bezierDegree=1;},h.updateDataArrayNone=function(){this.dataX=[NaN],this.dataY=[NaN],this.bezierDegree=1;},h.updateDataArray=function(){var t=n.evaluate(this.visProp.type),r=e.trueAngle(this.point2,this.point1,this.point3),s=n.evaluate(this.visProp.selection);(\"minor\"===s&&r>180||\"major\"===s&&r<180)&&(r=360-r),Math.abs(r-90)<n.evaluate(this.visProp.orthosensitivity)+i.eps&&(t=n.evaluate(this.visProp.orthotype)),\"none\"===t?this.updateDataArrayNone():\"square\"===t?this.updateDataArraySquare():\"sector\"===t?this.updateDataArraySector():\"sectordot\"===t&&(this.updateDataArraySector(),this.dot.visProp.visible||this.dot.setAttribute({visible:!0})),(!this.visProp.visible||\"sectordot\"!==t&&this.dot.visProp.visible)&&this.dot.setAttribute({visible:!1});},d=n.copyAttributes(a,t.options,\"angle\",\"dot\"),h.dot=t.create(\"point\",[function(){var t,r,s,o,a,l,c,d,u;return n.exists(h.dot)&&!h.dot.visProp.visible?[0,0]:(t=h.point2.coords.usrCoords,r=h.point1.coords.usrCoords,s=h.Radius(),o=e.distance(t,r,3),a=e.rad(h.point2,h.point1,h.point3),u=n.evaluate(h.visProp.selection),(\"minor\"===u&&a>Math.PI||\"major\"===u&&a<Math.PI)&&(a=-(2*Math.PI-a)),a*=.5,l=Math.cos(a),c=Math.sin(a),t=[1,r[1]+(t[1]-r[1])*s/o,r[2]+(t[2]-r[2])*s/o],d=[[1,0,0],[r[1]-.5*r[1]*l+.5*r[2]*c,.5*l,.5*-c],[r[2]-.5*r[1]*c-.5*r[2]*l,.5*c,.5*l]],i.matVecMult(d,t));}],d),h.dot.dump=!1,h.subs.dot=h.dot,\"2lines\"===f)for(u=0;u<2;u++)t.select(r[u]).addChild(h.dot);else for(u=0;u<3;u++)t.select(p[u]).addChild(h.dot);return h.getLabelAnchor=function(){var t,r,a,l,c,d,u,p,f,m=12,g=n.evaluate(h.visProp.selection),b=this.label?this.label.visProp:this.visProp.label;return n.exists(this.label.visProp.fontSize)&&(m=n.evaluate(this.label.visProp.fontSize)),m/=this.board.unitX,r=h.point2.coords.usrCoords,a=h.point1.coords.usrCoords,l=h.Radius(),c=e.distance(r,a,3),d=e.rad(h.point2,h.point1,h.point3),(\"minor\"===g&&d>Math.PI||\"major\"===g&&d<Math.PI)&&(d=-(2*Math.PI-d)),d*=.5,u=Math.cos(d),p=Math.sin(d),r=[1,a[1]+(r[1]-a[1])*l/c,a[2]+(r[2]-a[2])*l/c],f=[[1,0,0],[a[1]-.5*a[1]*u+.5*a[2]*p,.5*u,.5*-p],[a[2]-.5*a[1]*p-.5*a[2]*u,.5*p,.5*u]],t=i.matVecMult(f,r),t[1]/=t[0],t[2]/=t[0],t[0]/=t[0],c=e.distance(t,a,3),t=[t[0],a[1]+(t[1]-a[1])*(l+m)/c,a[2]+(t[2]-a[2])*(l+m)/c],b.position=e.calcLabelQuadrant(e.rad([1,0],[0,0],t)),new s(o.COORDS_BY_USER,t,this.board);},h.Value=function(){return e.rad(this.point2,this.point1,this.point3);},h.methodMap=n.deepCopy(h.methodMap,{Value:\"Value\",setAngle:\"setAngle\",free:\"free\"}),h;},t.registerElement(\"angle\",t.createAngle),t.createNonreflexAngle=function(i,r,s){var o;return s.selection=\"minor\",o=t.createAngle(i,r,s),o.Value=function(){var t=e.rad(this.point2,this.point1,this.point3);return t<Math.PI?t:2*Math.PI-t;},o;},t.registerElement(\"nonreflexangle\",t.createNonreflexAngle),t.createReflexAngle=function(i,r,s){var o;return s.selection=\"major\",o=t.createAngle(i,r,s),o.Value=function(){var t=e.rad(this.point2,this.point1,this.point3);return t>=Math.PI?t:2*Math.PI-t;},o;},t.registerElement(\"reflexangle\",t.createReflexAngle),{createSector:t.createSector,createCircumcircleSector:t.createCircumcircleSector,createMinorSector:t.createMinorSector,createMajorSector:t.createMajorSector,createAngle:t.createAngle,createReflexAngle:t.createReflexAngle,createNonreflexAngle:t.createNonreflexAngle};}),define(\"element/locus\",[\"jxg\",\"math/symbolic\",\"utils/type\"],function(t,e,i){\"use strict\";return t.createLocus=function(t,r,s){var o,n;if(!i.isArray(r)||1!==r.length||!i.isPoint(r[0]))throw new Error(\"JSXGraph: Can't create locus with parent of type other than point.\\nPossible parent types: [point]\");return n=r[0],o=t.create(\"curve\",[[null],[null]],s),o.dontCallServer=!1,o.elType=\"locus\",o.setParents([n.id]),o.updateDataArray=function(){var i,r,s;o.board.mode>0||(i=e.generatePolynomials(t,n,!0).join(\"|\"))!==o.spe&&(o.spe=i,r=function(t,e,i,r){o.dataX=t,o.dataY=e,o.eq=i,o.ctime=r,o.generatePolynomial=function(t){return function(e){var i,r=\"(\"+e.symbolic.x+\")\",s=\"(\"+e.symbolic.y+\")\",o=[];for(i=0;i<t.length;i++)o[i]=t[i].replace(/\\*\\*/g,\"^\").replace(/x/g,r).replace(/y/g,s);return o;};}(i);},s=e.geometricLocusByGroebnerBase(t,n,r),r(s.datax,s.datay,s.polynomial,s.exectime));},o;},t.registerElement(\"locus\",t.createLocus),{createLocus:t.createLocus};}),define(\"base/image\",[\"jxg\",\"base/constants\",\"base/coords\",\"base/element\",\"math/math\",\"utils/type\",\"base/coordselement\"],function(t,e,i,r,s,o,n){\"use strict\";return t.Image=function(i,r,s,n,a){this.constructor(i,s,e.OBJECT_TYPE_IMAGE,e.OBJECT_CLASS_OTHER),this.element=this.board.select(s.anchor),this.coordsConstructor(r),this.W=o.createFunction(a[0],this.board,\"\"),this.H=o.createFunction(a[1],this.board,\"\"),this.usrSize=[this.W(),this.H()],this.size=[Math.abs(this.usrSize[0]*i.unitX),Math.abs(this.usrSize[1]*i.unitY)],this.url=n,this.elType=\"image\",this.span=[this.coords.usrCoords.slice(0),[this.coords.usrCoords[0],this.W(),0],[this.coords.usrCoords[0],0,this.H()]],this.id=this.board.setId(this,\"Im\"),this.board.renderer.drawImage(this),this.board.finalizeAdding(this),this.methodMap=t.deepCopy(this.methodMap,{addTransformation:\"addTransform\",trans:\"addTransform\"});},t.Image.prototype=new r(),o.copyPrototypeMethods(t.Image,n,\"coordsConstructor\"),t.extend(t.Image.prototype,{hasPoint:function(t,r){var n,a,h,l,c,d,u,p,f,m=this.transformations.length;return o.isObject(o.evaluate(this.visProp.precision))?(l=this.board._inputDevice,c=o.evaluate(this.visProp.precision[l])):c=this.board.options.precision.hasPoint,0===m?(n=t-this.coords.scrCoords[1],a=this.coords.scrCoords[2]-r,h=c,n>=-h&&n-this.size[0]<=h&&a>=-h&&a-this.size[1]<=h):(d=new i(e.COORDS_BY_SCREEN,[t,r],this.board),d=d.usrCoords,u=[d[0]-this.span[0][0],d[1]-this.span[0][1],d[2]-this.span[0][2]],f=s.innerProduct,0<=(p=f(u,this.span[1]))&&p<=f(this.span[1],this.span[1])&&0<=(p=f(u,this.span[2]))&&p<=f(this.span[2],this.span[2]));},update:function(t){return this.needsUpdate?(this.updateCoords(t),this.updateSize(),this.updateSpan(),this):this;},updateRenderer:function(){return this.updateRendererGeneric(\"updateImage\");},updateSize:function(){return this.usrSize=[this.W(),this.H()],this.size=[Math.abs(this.usrSize[0]*this.board.unitX),Math.abs(this.usrSize[1]*this.board.unitY)],this;},updateSpan:function(){var t,e,i=this.transformations.length,r=[];if(0===i)this.span=[[this.Z(),this.X(),this.Y()],[this.Z(),this.W(),0],[this.Z(),0,this.H()]];else{for(r[0]=[this.Z(),this.X(),this.Y()],r[1]=[this.Z(),this.X()+this.W(),this.Y()],r[2]=[this.Z(),this.X(),this.Y()+this.H()],t=0;t<i;t++)for(e=0;e<3;e++)r[e]=s.matVecMult(this.transformations[t].matrix,r[e]);for(e=0;e<3;e++)r[e][1]/=r[e][0],r[e][2]/=r[e][0],r[e][0]/=r[e][0];for(e=1;e<3;e++)r[e][0]-=r[0][0],r[e][1]-=r[0][1],r[e][2]-=r[0][2];this.span=r;}return this;},addTransform:function(t){var e;if(o.isArray(t))for(e=0;e<t.length;e++)this.transformations.push(t[e]);else this.transformations.push(t);return this;},getParents:function(){var t=[this.url,[this.Z(),this.X(),this.Y()],this.usrSize];return 0!==this.parents.length&&(t=this.parents),t;},setSize:function(t,e){return this.W=o.createFunction(t,this.board,\"\"),this.H=o.createFunction(e,this.board,\"\"),this;},W:function(){},H:function(){}}),t.createImage=function(e,i,r){var s,a,h=i[0],l=i[1],c=i[2];if(s=o.copyAttributes(r,e.options,\"image\"),!(a=n.create(t.Image,e,l,s,h,c)))throw new Error(\"JSXGraph: Can't create image with parent types '\"+typeof i[0]+\"' and '\"+typeof i[1]+\"'.\\nPossible parent types: [x,y], [z,x,y], [element,transformation]\");return 0!==s.rotate&&a.addRotation(s.rotate),a;},t.registerElement(\"image\",t.createImage),{Image:t.Image,createImage:t.createImage};}),define(\"base/ticks\",[\"jxg\",\"math/math\",\"math/geometry\",\"math/numerics\",\"base/constants\",\"base/element\",\"base/coords\",\"utils/type\",\"base/text\"],function(t,e,i,r,s,o,n,a,h){\"use strict\";return t.Ticks=function(t,i,r){if(this.constructor(t.board,r,s.OBJECT_TYPE_TICKS,s.OBJECT_CLASS_OTHER),this.line=t,this.board=this.line.board,this.ticksFunction=null,this.fixedTicks=null,this.equidistant=!1,this.labelsData=[],a.isFunction(i))throw this.ticksFunction=i,new Error(\"Function arguments are no longer supported.\");a.isArray(i)?this.fixedTicks=i:((Math.abs(i)<e.eps||i<0)&&(i=r.defaultdistance),this.ticksFunction=this.makeTicksFunction(i),this.equidistant=!0),this.minTicksDistance=r.minticksdistance,this.ticks=[],this.ticksDelta=1,this.labels=[],this.labelData=[],this.labelCounter=0,this.id=this.line.addTicks(this),this.elType=\"ticks\",this.inherits.push(this.labels),this.board.setId(this,\"Ti\");},t.Ticks.prototype=new o(),t.extend(t.Ticks.prototype,{makeTicksFunction:function(t){return function(){var e,i,r;return a.evaluate(this.visProp.insertticks)?(i=this.getLowerAndUpperBounds(this.getZeroCoordinates(),\"ticksdistance\"),r=i.upper-i.lower,e=Math.pow(10,Math.floor(Math.log(.6*r)/Math.LN10)),r<=6*e&&(e*=.5),e):t;};},hasPoint:function(t,i){var r,o,n,h,l=this.ticks&&this.ticks.length||0;if(a.isObject(a.evaluate(this.visProp.precision))?(h=this.board._inputDevice,n=a.evaluate(this.visProp.precision[h])):n=this.board.options.precision.hasPoint,n+=.5*a.evaluate(this.visProp.strokewidth),!a.evaluate(this.line.visProp.scalable)||this.line.elementClass===s.OBJECT_CLASS_CURVE)return!1;if(0!==this.line.stdform[1]&&0!==this.line.stdform[2]&&this.line.type!==s.OBJECT_TYPE_AXIS)return!1;for(r=0;r<l;r++)if(o=this.ticks[r],o[2]&&!(0===this.line.stdform[1]&&Math.abs(o[0][0]-this.line.point1.coords.scrCoords[1])<e.eps||0===this.line.stdform[2]&&Math.abs(o[1][0]-this.line.point1.coords.scrCoords[2])<e.eps)&&(Math.abs(o[0][0]-o[0][1])>=1||Math.abs(o[1][0]-o[1][1])>=1))if(0===this.line.stdform[1]){if(Math.abs(i-.5*(o[1][0]+o[1][1]))<2*n&&o[0][0]-n<t&&t<o[0][1]+n)return!0;}else if(0===this.line.stdform[2]&&Math.abs(t-.5*(o[0][0]+o[0][1]))<2*n&&o[1][0]-n<i&&i<o[1][1]+n)return!0;return!1;},setPositionDirectly:function(t,i,r){var o,h,l=new n(t,i,this.board),c=new n(t,r,this.board),d=this.board.getBoundingBox();return this.line.type===s.OBJECT_TYPE_AXIS&&a.evaluate(this.line.visProp.scalable)?(Math.abs(this.line.stdform[1])<e.eps&&Math.abs(l.usrCoords[1]*c.usrCoords[1])>e.eps?(o=c.usrCoords[1]/l.usrCoords[1],d[0]*=o,d[2]*=o,this.board.setBoundingBox(d,!1)):Math.abs(this.line.stdform[2])<e.eps&&Math.abs(l.usrCoords[2]*c.usrCoords[2])>e.eps&&(h=c.usrCoords[2]/l.usrCoords[2],d[3]*=h,d[1]*=h,this.board.setBoundingBox(d,!1)),this):this;},calculateTicksCoordinates:function(){var t,i,r,o;if(!(this.line.elementClass===s.OBJECT_CLASS_LINE&&(this.setTicksSizeVariables(),Math.abs(this.dx)<e.eps&&Math.abs(this.dy)<e.eps)))return t=this.getZeroCoordinates(),i=this.line.elementClass===s.OBJECT_CLASS_LINE?this.getLowerAndUpperBounds(t):{lower:this.line.minX(),upper:this.line.maxX()},\"polar\"===a.evaluate(this.visProp.type)&&(o=this.board.getBoundingBox(),r=Math.max(Math.sqrt(o[0]*o[0]+o[1]*o[1]),Math.sqrt(o[2]*o[2]+o[3]*o[3])),i.upper=r),this.ticks=[],this.labelsData=[],this.equidistant?this.generateEquidistantTicks(t,i):this.generateFixedTicks(t,i),this;},setTicksSizeVariables:function(t){var i,s,o,n,h=.5*a.evaluate(this.visProp.majorheight),l=.5*a.evaluate(this.visProp.minorheight);a.exists(t)?(s=this.line.minX(),o=this.line.maxX(),n=this.line.points.length,n<2?(this.dxMaj=0,this.dyMaj=0):e.relDif(t,s)<e.eps?(this.dxMaj=this.line.points[0].usrCoords[2]-this.line.points[1].usrCoords[2],this.dyMaj=this.line.points[1].usrCoords[1]-this.line.points[0].usrCoords[1]):e.relDif(t,o)<e.eps?(this.dxMaj=this.line.points[n-2].usrCoords[2]-this.line.points[n-1].usrCoords[2],this.dyMaj=this.line.points[n-1].usrCoords[1]-this.line.points[n-2].usrCoords[1]):(this.dxMaj=-r.D(this.line.Y)(t),this.dyMaj=r.D(this.line.X)(t))):(this.dxMaj=this.line.stdform[1],this.dyMaj=this.line.stdform[2]),this.dxMin=this.dxMaj,this.dyMin=this.dyMaj,this.dx=this.dxMaj,this.dy=this.dyMaj,i=Math.sqrt(this.dxMaj*this.dxMaj*this.board.unitX*this.board.unitX+this.dyMaj*this.dyMaj*this.board.unitY*this.board.unitY),this.dxMaj*=h/i*this.board.unitX,this.dyMaj*=h/i*this.board.unitY,this.dxMin*=l/i*this.board.unitX,this.dyMin*=l/i*this.board.unitY,this.minStyle=a.evaluate(this.visProp.minorheight)<0?\"infinite\":\"finite\",this.majStyle=a.evaluate(this.visProp.majorheight)<0?\"infinite\":\"finite\";},getZeroCoordinates:function(){var t,e,r,o,h,l,c,d,u=a.evaluate(this.visProp.anchor);return this.line.elementClass===s.OBJECT_CLASS_LINE?this.line.type===s.OBJECT_TYPE_AXIS?i.projectPointToLine({coords:{usrCoords:[1,0,0]}},this.line,this.board):(r=this.line.point1.coords.usrCoords[0],t=this.line.point1.coords.usrCoords[1],e=this.line.point1.coords.usrCoords[2],l=this.line.point2.coords.usrCoords[0],o=this.line.point2.coords.usrCoords[1],h=this.line.point2.coords.usrCoords[2],\"right\"===u?this.line.point2.coords:\"middle\"===u?new n(s.COORDS_BY_USER,[.5*(r+l),.5*(t+o),.5*(e+h)],this.board):a.isNumber(u)?new n(s.COORDS_BY_USER,[r+(l-r)*u,t+(o-t)*u,e+(h-e)*u],this.board):this.line.point1.coords):(c=this.line.minX(),d=this.line.maxX(),\"right\"===u?d:\"middle\"===u?.5*(c+d):a.isNumber(u)?c*(1-u)+d*u:c);},getLowerAndUpperBounds:function(t,r){var o,h,l,c,d,u,p,f,m,g,b=a.evaluate(this.line.visProp.straightfirst),v=a.evaluate(this.line.visProp.straightlast),y=a.evaluate(this.visProp.includeboundaries);return this.line.elementClass===s.OBJECT_CLASS_CURVE?{lower:this.line.minX(),upper:this.line.maxX()}:(d=new n(s.COORDS_BY_USER,this.line.point1.coords.usrCoords,this.board),u=new n(s.COORDS_BY_USER,this.line.point2.coords.usrCoords,this.board),p=Math.abs(d.usrCoords[0])>=e.eps&&d.scrCoords[1]>=0&&d.scrCoords[1]<=this.board.canvasWidth&&d.scrCoords[2]>=0&&d.scrCoords[2]<=this.board.canvasHeight,f=Math.abs(u.usrCoords[0])>=e.eps&&u.scrCoords[1]>=0&&u.scrCoords[1]<=this.board.canvasWidth&&u.scrCoords[2]>=0&&u.scrCoords[2]<=this.board.canvasHeight,a.exists(r)||\"tickdistance\"===r?i.calcStraight(this.line,d,u,a.evaluate(this.line.visProp.margin)):i.calcLineDelimitingPoints(this.line,d,u),l=a.evaluate(this.line.visProp.firstarrow),c=a.evaluate(this.line.visProp.lastarrow),(l||c)&&(this.board.renderer.getPositionArrowHead(this.line,d,u,a.evaluate(this.line.visProp.strokewidth)),l&&d.setCoordinates(s.COORDS_BY_SCREEN,[d.scrCoords[1],d.scrCoords[2]]),c&&u.setCoordinates(s.COORDS_BY_SCREEN,[u.scrCoords[1],u.scrCoords[2]])),m=this.getDistanceFromZero(t,d),g=this.getDistanceFromZero(t,u),m<g?(o=m,b||!p||y||(o+=e.eps),h=g,v||!f||y||(h-=e.eps)):g<m?(o=g,v||!f||y||(o+=e.eps),h=m,b||!p||y||(h-=e.eps)):(o=0,h=0),{lower:o,upper:h});},getDistanceFromZero:function(t,i){var r,o,n,a,h;return r=this.line.point1.coords,o=this.line.point2.coords,h=t.distance(s.COORDS_BY_USER,i),n=[o.usrCoords[0]-r.usrCoords[0],o.usrCoords[1]-r.usrCoords[1],o.usrCoords[2]-r.usrCoords[2]],a=[i.usrCoords[0]-t.usrCoords[0],i.usrCoords[1]-t.usrCoords[1],i.usrCoords[2]-t.usrCoords[2]],e.innerProduct(n,a,3)<0&&(h*=-1),h;},generateEquidistantTicks:function(t,i){var r,o,n=e.eps,h=this.equidistant?this.ticksFunction(1):this.ticksDelta,l=a.evaluate(this.visProp.insertticks),c=a.evaluate(this.visProp.minorticks);if(this.line.elementClass===s.OBJECT_CLASS_LINE&&(o=this.getXandYdeltas()),h*=a.evaluate(this.visProp.scale),l&&this.minTicksDistance>e.eps?(h=this.adjustTickDistance(h,t,o),h/=c+1):l||(h/=c+1),this.ticksDelta=h,!(h<e.eps)){for(r=0,a.evaluate(this.visProp.drawzero)||(r=h);r<=i.upper+n;)r>=i.lower-n&&this.processTickPosition(t,r,h,o),r+=h;for(r=-h;r>=i.lower-n;)r<=i.upper+n&&this.processTickPosition(t,r,h,o),r-=h;}},adjustTickDistance:function(t,e,i){var r,o,h,l=1,c=a.evaluate(this.visProp.minorticks);if(this.line.elementClass===s.OBJECT_CLASS_CURVE)return t;if(this.getLowerAndUpperBounds(e,\"ticksdistance\"),r=e.usrCoords[1]+i.x*t,o=e.usrCoords[2]+i.y*t,h=e.distance(s.COORDS_BY_SCREEN,new n(s.COORDS_BY_USER,[r,o],this.board)),0===t)return 0;for(;h/(c+1)<this.minTicksDistance;)t*=1===l?2:5,l*=-1,r=e.usrCoords[1]+i.x*t,o=e.usrCoords[2]+i.y*t,h=e.distance(s.COORDS_BY_SCREEN,new n(s.COORDS_BY_USER,[r,o],this.board));return t;},processTickPosition:function(t,e,i,r){var o,h,l,c,d=null;this.line.elementClass===s.OBJECT_CLASS_LINE?(o=t.usrCoords[1]+e*r.x,h=t.usrCoords[2]+e*r.y):(o=this.line.X(t+e),h=this.line.Y(t+e)),l=new n(s.COORDS_BY_USER,[o,h],this.board),this.line.elementClass===s.OBJECT_CLASS_CURVE&&(d=t+e,this.setTicksSizeVariables(d)),l.major=Math.round(e/i)%(a.evaluate(this.visProp.minorticks)+1)==0,c=this.createTickPath(l,l.major),3===c.length&&(this.ticks.push(c),l.major&&a.evaluate(this.visProp.drawlabels)?this.labelsData.push(this.generateLabelData(this.generateLabelText(l,t,d),l,this.ticks.length)):this.labelsData.push(null));},generateFixedTicks:function(t,i){var r,o,h,l,c,d,u,p,f=e.eps,m=a.isArray(this.visProp.labels),g=a.evaluate(this.visProp.drawlabels);for(this.line.elementClass===s.OBJECT_CLASS_LINE&&(p=this.getXandYdeltas()),h=0;h<this.fixedTicks.length;h++)this.line.elementClass===s.OBJECT_CLASS_LINE?(u=this.fixedTicks[h],c=t.usrCoords[1]+u*p.x,d=t.usrCoords[2]+u*p.y):(u=t+this.fixedTicks[h],c=this.line.X(u),d=this.line.Y(u)),r=new n(s.COORDS_BY_USER,[c,d],this.board),this.line.elementClass===s.OBJECT_CLASS_CURVE&&this.setTicksSizeVariables(u),l=this.createTickPath(r,!0),3===l.length&&u>=i.lower-f&&u<=i.upper+f&&(this.ticks.push(l),g&&(m||a.exists(this.visProp.labels[h]))?(o=m?a.evaluate(this.visProp.labels[h]):u,this.labelsData.push(this.generateLabelData(this.generateLabelText(r,t,o),r,h))):this.labelsData.push(null));},getXandYdeltas:function(){var t,i,r=this.line.point1.Dist(this.line.point2);return this.line.type===s.OBJECT_TYPE_AXIS?(t=this.line.point1.coords.usrCoords,i=this.line.point2.coords.usrCoords,(t[1]>i[1]||Math.abs(t[1]-i[1])<e.eps&&t[2]>i[2])&&(t=this.line.point2.coords.usrCoords,i=this.line.point1.coords.usrCoords)):(t=this.line.point1.coords.usrCoords,i=this.line.point2.coords.usrCoords),{x:(i[1]-t[1])/r,y:(i[2]-t[2])/r};},_isInsideCanvas:function(t,e,i){var r=this.board.canvasWidth,s=this.board.canvasHeight;return void 0===i&&(i=0),t[0]>=i&&t[0]<=r-i&&e[0]>=i&&e[0]<=s-i||t[1]>=i&&t[1]<=r-i&&e[1]>=i&&e[1]<=s-i;},createTickPath:function(t,e){var r,s,o,n,h,l,c,d,u,p,f,m,g,b,v,y=[-2e6,-2e6],C=[-2e6,-2e6];if(r=t.scrCoords,e?(n=this.dxMaj,h=this.dyMaj,u=this.majStyle):(n=this.dxMin,h=this.dyMin,u=this.minStyle),s=[-h*r[1]-n*r[2],h,n],e&&\"polar\"===a.evaluate(this.visProp.type)){if(g=this.board.getBoundingBox(),b=2*Math.PI,v=b/180,r=t.usrCoords,f=Math.sqrt(r[1]*r[1]+r[2]*r[2]),m=Math.max(Math.sqrt(g[0]*g[0]+g[1]*g[1]),Math.sqrt(g[2]*g[2]+g[3]*g[3])),f<m){for(y=[],C=[],p=0;p<=b;p+=v)y.push(this.board.origin.scrCoords[1]+f*Math.cos(p)*this.board.unitX),C.push(this.board.origin.scrCoords[2]+f*Math.sin(p)*this.board.unitY);return[y,C,e];}}else if(\"infinite\"===u?(o=i.meetLineBoard(s,this.board),y[0]=o[0].scrCoords[1],y[1]=o[1].scrCoords[1],C[0]=o[0].scrCoords[2],C[1]=o[1].scrCoords[2]):(d=\">\"===a.evaluate(this.visProp.face)?Math.PI/4:\"<\"===a.evaluate(this.visProp.face)?-Math.PI/4:0,l=Math.cos(d)*n-Math.sin(d)*h,c=Math.sin(d)*n+Math.cos(d)*h,y[0]=r[1]+l*a.evaluate(this.visProp.tickendings[0]),C[0]=r[2]-c*a.evaluate(this.visProp.tickendings[0]),y[1]=r[1],C[1]=r[2],d=-d,l=Math.cos(d)*n-Math.sin(d)*h,c=Math.sin(d)*n+Math.cos(d)*h,y[2]=r[1]-l*a.evaluate(this.visProp.tickendings[1]),C[2]=r[2]+c*a.evaluate(this.visProp.tickendings[1])),this._isInsideCanvas(y,C))return[y,C,e];return[];},formatLabelText:function(t){var e=t.toString(),i=a.evaluate(this.visProp.scalesymbol);return a.isNumber(t)&&((e.length>a.evaluate(this.visProp.maxlabellength)||-1!==e.indexOf(\"e\"))&&(e=t.toPrecision(a.evaluate(this.visProp.precision)).toString()),a.evaluate(this.visProp.beautifulscientificticklabels)&&(e=this.beautifyScientificNotationLabel(e)),e.indexOf(\".\")>-1&&-1===e.indexOf(\"e\")&&(e=e.replace(/0+$/,\"\"),e=e.replace(/\\.$/,\"\"))),i.length>0&&(\"1\"===e?e=i:\"-1\"===e?e=\"-\"+i:\"0\"!==e&&(e+=i)),a.evaluate(this.visProp.useunicodeminus)&&(e=e.replace(/-/g,\"−\")),e;},beautifyScientificNotationLabel:function(t){var e;return-1===t.indexOf(\"e\")?t:(e=parseFloat(t.substring(0,t.indexOf(\"e\")))+t.substring(t.indexOf(\"e\")),e=e.replace(/e(.*)$/g,function(t,e){var i=\"•10\";return i+=e.replace(/-/g,\"⁻\").replace(/\\+/g,\"\").replace(/0/g,\"⁰\").replace(/1/g,\"¹\").replace(/2/g,\"²\").replace(/3/g,\"³\").replace(/4/g,\"⁴\").replace(/5/g,\"⁵\").replace(/6/g,\"⁶\").replace(/7/g,\"⁷\").replace(/8/g,\"⁸\").replace(/9/g,\"⁹\");}));},generateLabelText:function(t,i,r){var s;if(!a.exists(r)){if(s=this.getDistanceFromZero(i,t),Math.abs(s)<e.eps)return\"0\";r=s/a.evaluate(this.visProp.scale);}return this.formatLabelText(r);},generateLabelData:function(t,e,i){var r,s,o,n;return n=a.evaluate(this.visProp.label.fontsize),r=[e.scrCoords[1],e.scrCoords[1]],s=[e.scrCoords[2],e.scrCoords[2]],o=void 0===n?12:n,o*=.5,this._isInsideCanvas(r,s,o)?(r=a.evaluate(this.visProp.label.offset[0]),s=a.evaluate(this.visProp.label.offset[1]),{x:e.usrCoords[1]+r/this.board.unitX,y:e.usrCoords[2]+s/this.board.unitY,t:t,i:i}):null;},update:function(){return this.needsUpdate&&0!==this.board.canvasWidth&&0!==this.board.canvasHeight&&this.calculateTicksCoordinates(),this;},updateRenderer:function(){return this.needsUpdate?(this.visPropCalc.visible&&this.board.renderer.updateTicks(this),this.updateRendererLabels(),this.setDisplayRendNode(),this.needsUpdate=!1,this):this;},updateRendererLabels:function(){var t,e,i,r,s,o,n,l;for(i=this.labelsData.length,r=this.labels.length,t=0,e=0;t<i;t++)null!==this.labelsData[t]&&(n=this.labelsData[t],e<r?(o=this.labels[e],o.setText(n.t),o.setCoords(n.x,n.y),e++):(this.labelCounter+=1,s={isLabel:!0,layer:this.board.options.layer.line,highlightStrokeColor:this.board.options.text.strokeColor,highlightStrokeWidth:this.board.options.text.strokeWidth,highlightStrokeOpacity:this.board.options.text.strokeOpacity,priv:this.visProp.priv},s=a.deepCopy(s,this.visProp.label),s.id=this.id+n.i+\"Label\"+this.labelCounter,o=h.createText(this.board,[n.x,n.y,n.t],s),o.isDraggable=!1,o.dump=!1,this.labels.push(o)),l=a.evaluate(this.visProp.label.visible),\"inherit\"===l&&(l=this.visPropCalc.visible),o.prepareUpdate().updateVisibility(l).updateRenderer(),o.distanceX=a.evaluate(this.visProp.label.offset[0]),o.distanceY=a.evaluate(this.visProp.label.offset[1]));for(i=e,e=i;e<r;e++)this.board.renderer.display(this.labels[e],!1),this.labels[e].visProp.visible=this.labels[e].visPropCalc.visible=!1;return this;},hideElement:function(){var e;for(t.deprecated(\"Element.hideElement()\",\"Element.setDisplayRendNode()\"),this.visPropCalc.visible=!1,this.board.renderer.display(this,!1),e=0;e<this.labels.length;e++)a.exists(this.labels[e])&&this.labels[e].hideElement();return this;},showElement:function(){var e;for(t.deprecated(\"Element.showElement()\",\"Element.setDisplayRendNode()\"),this.visPropCalc.visible=!0,this.board.renderer.display(this,!1),e=0;e<this.labels.length;e++)a.exists(this.labels[e])&&this.labels[e].showElement();return this;}}),t.createTicks=function(e,i,r){var o,n,h=a.copyAttributes(r,e.options,\"ticks\");if(n=i.length<2?h.ticksdistance:i[1],i[0].elementClass!==s.OBJECT_CLASS_LINE&&i[0].elementClass!==s.OBJECT_CLASS_CURVE)throw new Error(\"JSXGraph: Can't create Ticks with parent types '\"+typeof i[0]+\"'.\");return o=new t.Ticks(i[0],n,h),a.isFunction(h.generatelabelvalue)&&(o.generateLabelText=h.generatelabelvalue),a.isFunction(h.generatelabeltext)&&(o.generateLabelText=h.generatelabeltext),o.setParents(i[0]),o.isDraggable=!0,o.fullUpdate(i[0].visPropCalc.visible),o;},t.createHatchmark=function(t,e,i){var r,o,n,h,l,c,d=[],u=a.copyAttributes(i,t.options,\"hatch\");if(e[0].elementClass!==s.OBJECT_CLASS_LINE&&e[0].elementClass!==s.OBJECT_CLASS_CURVE||\"number\"!=typeof e[1])throw new Error(\"JSXGraph: Can't create Hatch mark with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\" and ''\"+typeof e[2]+\"'.\");for(r=e[1],h=u.ticksdistance,l=(r-1)*h,n=.5*-l,o=0;o<r;o++)d[o]=n+o*h;return c=t.create(\"ticks\",[e[0],d],u),c.elType=\"hatch\",c;},t.registerElement(\"ticks\",t.createTicks),t.registerElement(\"hash\",t.createHatchmark),t.registerElement(\"hatch\",t.createHatchmark),{Ticks:t.Ticks,createTicks:t.createTicks,createHashmark:t.createHatchmark,createHatchmark:t.createHatchmark};}),define(\"element/slider\",[\"jxg\",\"math/math\",\"base/constants\",\"base/coords\",\"utils/type\",\"base/point\",\"base/group\",\"base/element\",\"base/line\",\"base/ticks\",\"base/text\"],function(t,e,i,r,s,o,n,a,h,l,c){\"use strict\";return t.createSlider=function(t,n,a){var h,l,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O,w,T,N,M;return N=s.copyAttributes(a,t.options,\"slider\"),S=N.withticks,x=N.withlabel,O=N.snapwidth,M=N.precision,N=s.copyAttributes(a,t.options,\"slider\",\"point1\"),f=t.create(\"point\",n[0],N),N=s.copyAttributes(a,t.options,\"slider\",\"point2\"),m=t.create(\"point\",n[1],N),N=s.copyAttributes(a,t.options,\"slider\",\"baseline\"),g=t.create(\"segment\",[f,m],N),g.updateStdform(),h=f.coords.usrCoords.slice(1),l=m.coords.usrCoords.slice(1),c=n[2][0],d=n[2][1],u=n[2][2],p=u-c,w=s.evaluate(O),T=-1==w?d:Math.round(d/w)*w,y=h[0]+(l[0]-h[0])*(T-c)/(u-c),C=h[1]+(l[1]-h[1])*(T-c)/(u-c),N=s.copyAttributes(a,t.options,\"slider\"),N.withLabel=!1,_=t.create(\"glider\",[y,C,g],N),_.setAttribute({snapwidth:O}),N=s.copyAttributes(a,t.options,\"slider\",\"highline\"),P=t.create(\"segment\",[f,_],N),_.Value=function(){var t=this._smax-this._smin,e=s.evaluate(this.visProp.snapwidth);return-1===e?this.position*t+this._smin:Math.round((this.position*t+this._smin)/e)*e;},_.methodMap=s.deepCopy(_.methodMap,{Value:\"Value\",setValue:\"setValue\",smax:\"_smax\",smin:\"_smin\",setMax:\"setMax\",setMin:\"setMin\"}),_._smax=u,_._smin=c,_.setMax=function(t){return this._smax=t,this;},_.setValue=function(t){var i=this._smax-this._smin;return Math.abs(i)>e.eps?this.position=(t-this._smin)/i:this.position=0,this.position=Math.max(0,Math.min(1,this.position)),this;},_.setMin=function(t){return this._smin=t,this;},x&&(N=s.copyAttributes(a,t.options,\"slider\",\"label\"),E=t.create(\"text\",[function(){return .05*(m.X()-f.X())+m.X();},function(){return .05*(m.Y()-f.Y())+m.Y();},function(){var t,e=s.evaluate(_.visProp.suffixlabel),i=s.evaluate(_.visProp.unitlabel),r=s.evaluate(_.visProp.postlabel);return t=null!==e?e:_.name&&\"\"!==_.name?_.name+\" = \":\"\",t+=s.toFixed(_.Value(),M),null!==i&&(t+=i),null!==r&&(t+=r),t;}],N),_.label=E,_.visProp.withlabel=!0,_.hasLabel=!0),_.point1=f,_.point2=m,_.baseline=g,_.highline=P,S&&(N=s.copyAttributes(a,t.options,\"slider\",\"ticks\"),s.exists(N.generatelabeltext)||(N.generateLabelText=function(t,i,r){var s=_.point1.Dist(_.point2),o=_._smin,n=_._smax,a=this.getDistanceFromZero(i,t)*(n-o)/s+o;return s<e.eps||Math.abs(a)<e.eps?\"0\":this.formatLabelText(a);}),b=2,v=t.create(\"ticks\",[_.baseline,_.point1.Dist(f)/b,function(t){var r=_.point1.Dist(_.point2),s=_.point1.coords.distance(i.COORDS_BY_USER,t);return r<e.eps?0:s/r*p+c;}],N),_.ticks=v),_.remove=function(){x&&t.removeObject(E),t.removeObject(P),t.removeObject(g),t.removeObject(m),t.removeObject(f),o.Point.prototype.remove.call(_);},f.dump=!1,m.dump=!1,g.dump=!1,P.dump=!1,_.elType=\"slider\",_.parents=n,_.subs={point1:f,point2:m,baseLine:g,highLine:P},_.inherits.push(f,m,g,P),S&&(v.dump=!1,_.subs.ticks=v,_.inherits.push(v)),_.baseline.on(\"up\",function(t){var e,o;s.evaluate(_.visProp.moveonup)&&!s.evaluate(_.visProp.fixed)&&(e=g.board.getMousePosition(t,0),o=new r(i.COORDS_BY_SCREEN,e,this.board),_.moveTo([o.usrCoords[1],o.usrCoords[2]]));}),_.prepareUpdate().update(),t.isSuspendedUpdate||(_.updateVisibility().updateRenderer(),_.baseline.updateVisibility().updateRenderer(),_.highline.updateVisibility().updateRenderer(),S&&_.ticks.updateVisibility().updateRenderer()),_;},t.registerElement(\"slider\",t.createSlider),{createSlider:t.createSlider};}),define(\"element/measure\",[\"jxg\",\"utils/type\",\"base/element\",\"base/point\",\"base/line\",\"base/ticks\"],function(t,e,i,r,s,o){\"use strict\";return t.createTapemeasure=function(r,s,o){var n,a,h,l,c,d,u,p,f,m,g;return n=s[0],a=s[1],h=e.copyAttributes(o,r.options,\"tapemeasure\",\"point1\"),p=r.create(\"point\",n,h),h=e.copyAttributes(o,r.options,\"tapemeasure\",\"point2\"),f=r.create(\"point\",a,h),p.setAttribute({ignoredSnapToPoints:[f]}),f.setAttribute({ignoredSnapToPoints:[p]}),h=e.copyAttributes(o,r.options,\"tapemeasure\"),l=h.withticks,c=h.withlabel,d=h.precision,c&&(h.withlabel=!0),u=r.create(\"segment\",[p,f],h),c&&(m=o.name&&\"\"!==o.name?o.name+\" = \":\"\",u.label.setText(function(){return m+e.toFixed(p.Dist(f),d);})),l&&(h=e.copyAttributes(o,r.options,\"tapemeasure\",\"ticks\"),g=r.create(\"ticks\",[u,.1],h),u.inherits.push(g)),u.remove=function(){l&&u.removeTicks(g),r.removeObject(f),r.removeObject(p),i.prototype.remove.call(this);},u.Value=function(){return p.Dist(f);},p.dump=!1,f.dump=!1,u.elType=\"tapemeasure\",u.getParents=function(){return[[p.X(),p.Y()],[f.X(),f.Y()]];},u.subs={point1:p,point2:f},l&&(g.dump=!1),u.methodMap=t.deepCopy(u.methodMap,{Value:\"Value\"}),u.prepareUpdate().update(),r.isSuspendedUpdate||(u.updateVisibility().updateRenderer(),u.point1.updateVisibility().updateRenderer(),u.point2.updateVisibility().updateRenderer()),u;},t.registerElement(\"tapemeasure\",t.createTapemeasure),{createTapemeasure:t.createTapemeasure};}),define(\"parser/datasource\",[\"jxg\",\"utils/type\"],function(t,e){\"use strict\";return t.DataSource=function(){return this.data=[],this.columnHeaders=[],this.rowHeaders=[],this;},t.extend(t.DataSource.prototype,{loadFromArray:function(t,i,r){var s,o,n;if(e.isArray(i)&&(this.columnHeaders=i,i=!1),e.isArray(r)&&(this.rowHeaders=r,r=!1),this.data=[],i&&(this.columnHeaders=[]),r&&(this.rowHeaders=[]),e.exists(t)){for(this.data=[],s=0;s<t.length;s++)for(this.data[s]=[],o=0;o<t[s].length;o++)n=t[s][o],parseFloat(n).toString()===n?this.data[s][o]=parseFloat(n):this.data[s][o]=\"-\"!==n?n:NaN;if(i&&(this.columnHeaders=this.data[0].slice(1),this.data=this.data.slice(1)),r)for(this.rowHeaders=[],s=0;s<this.data.length;s++)this.rowHeaders.push(this.data[s][0]),this.data[s]=this.data[s].slice(1);}return this;},loadFromTable:function(t,i,r){var s,o,n,a,h;if(e.isArray(i)&&(this.columnHeaders=i,i=!1),e.isArray(r)&&(this.rowHeaders=r,r=!1),this.data=[],i&&(this.columnHeaders=[]),r&&(this.rowHeaders=[]),t=document.getElementById(t),e.exists(t)){for(s=t.getElementsByTagName(\"tr\"),this.data=[],o=0;o<s.length;o++)for(a=s[o].getElementsByTagName(\"td\"),this.data[o]=[],n=0;n<a.length;n++)h=a[n].innerHTML,parseFloat(h).toString()===h?this.data[o][n]=parseFloat(h):this.data[o][n]=\"-\"!==h?h:NaN;if(i&&(this.columnHeaders=this.data[0].slice(1),this.data=this.data.slice(1)),r)for(this.rowHeaders=[],o=0;o<this.data.length;o++)this.rowHeaders.push(this.data[o][0]),this.data[o]=this.data[o].slice(1);}return this;},addColumn:function(t,e,i){throw new Error(\"not implemented\");},addRow:function(t,e,i){throw new Error(\"not implemented\");},getColumn:function(t){var i,r=[];if(e.isString(t))for(i=0;i<this.columnHeaders.length;i++)if(t===this.columnHeaders[i]){t=i;break;}for(i=0;i<this.data.length;i++)this.data[i].length>t&&(r[i]=parseFloat(this.data[i][t]));return r;},getRow:function(t){var i,r;if(e.isString(t))for(r=0;r<this.rowHeaders.length;r++)if(t===this.rowHeaders[r]){t=r;break;}for(i=[],r=0;r<this.data[t].length;r++)i[r]=this.data[t][r];return i;}}),t.DataSource;}),define(\"base/chart\",[\"jxg\",\"math/numerics\",\"math/statistics\",\"base/constants\",\"base/coords\",\"base/element\",\"parser/datasource\",\"utils/color\",\"utils/type\",\"utils/env\",\"base/curve\",\"base/point\",\"base/text\",\"base/polygon\",\"element/sector\",\"base/transformation\",\"base/line\",\"base/circle\"],function(t,e,i,r,s,o,n,a,h,l,c,d,u,p,f,m,g,b){\"use strict\";return t.Chart=function(t,e,i){this.constructor(t,i);var r,s,o,n,a,l;if(!h.isArray(e)||0===e.length)throw new Error(\"JSXGraph: Can't create a chart without data\");if(this.elements=[],h.isNumber(e[0]))for(s=e,r=[],o=0;o<s.length;o++)r[o]=o+1;else if(1===e.length&&h.isArray(e[0]))for(s=e[0],r=[],l=h.evaluate(s).length,o=0;o<l;o++)r[o]=o+1;else 2===e.length&&(l=Math.min(e[0].length,e[1].length),r=e[0].slice(0,l),s=e[1].slice(0,l));if(h.isArray(s)&&0===s.length)throw new Error(\"JSXGraph: Can't create charts without data.\");for(a=i.chartstyle.replace(/ /g,\"\").split(\",\"),o=0;o<a.length;o++){switch(a[o]){case\"bar\":n=this.drawBar(t,r,s,i);break;case\"line\":n=this.drawLine(t,r,s,i);break;case\"fit\":n=this.drawFit(t,r,s,i);break;case\"spline\":n=this.drawSpline(t,r,s,i);break;case\"pie\":n=this.drawPie(t,s,i);break;case\"point\":n=this.drawPoints(t,r,s,i);break;case\"radar\":n=this.drawRadar(t,e,i);}this.elements.push(n);}return this.id=this.board.setId(this,\"Chart\"),this.elements;},t.Chart.prototype=new o(),t.extend(t.Chart.prototype,{drawLine:function(t,e,i,r){return r.fillcolor=\"none\",r.highlightfillcolor=\"none\",t.create(\"curve\",[e,i],r);},drawSpline:function(t,e,i,r){return r.fillColor=\"none\",r.highlightfillcolor=\"none\",t.create(\"spline\",[e,i],r);},drawFit:function(t,i,r,s){var o=s.degree;return o=Math.max(parseInt(o,10),1)||1,s.fillcolor=\"none\",s.highlightfillcolor=\"none\",t.create(\"functiongraph\",[e.regressionPolynomial(o,i,r)],s);},drawBar:function(t,e,i,r){var s,o,n,a,l,c,d,u,p,f,m=[],g=[],b=function(t,i){return function(){return e[t]()-i*n;};},v={fixed:!0,withLabel:!1,visible:!1,name:\"\"};if((p=h.copyAttributes(r,t.options,\"chart\"))&&p.width)n=p.width;else{if(e.length<=1)n=1;else for(n=e[1]-e[0],s=1;s<e.length-1;s++)n=e[s+1]-e[s]<n?e[s+1]-e[s]:n;n*=.8;}for(f=h.copyAttributes(r,t.options,\"chart\",\"label\"),s=0;s<e.length;s++)h.isFunction(e[s])?(a=b(s,-.5),l=b(s,0),c=b(s,.5)):(a=e[s]-.5*n,l=e[s],c=e[s]+.5*n),d=h.isFunction(i[s])?i[s]():i[s],d=i[s],\"horizontal\"===p.dir?(g[0]=t.create(\"point\",[0,a],v),g[1]=t.create(\"point\",[d,a],v),g[2]=t.create(\"point\",[d,c],v),g[3]=t.create(\"point\",[0,c],v),h.exists(p.labels)&&h.exists(p.labels[s])&&(f.anchorY=\"middle\",o=t.create(\"text\",[d,l,p.labels[s]],f),o.visProp.anchorx=function(t){return function(){return t.X()>=0?\"left\":\"right\";};}(o))):(g[0]=t.create(\"point\",[a,0],v),g[1]=t.create(\"point\",[a,d],v),g[2]=t.create(\"point\",[c,d],v),g[3]=t.create(\"point\",[c,0],v),h.exists(p.labels)&&h.exists(p.labels[s])&&(f.anchorX=\"middle\",o=t.create(\"text\",[l,d,p.labels[s]],f),o.visProp.anchory=function(t){return function(){return t.Y()>=0?\"bottom\":\"top\";};}(o))),h.isArray(p.colors)&&(u=p.colors,p.fillcolor=u[s%u.length]),m[s]=t.create(\"polygon\",g,p),h.exists(p.labels)&&h.exists(p.labels[s])&&(m[s].text=o);return m;},drawPoints:function(t,e,i,r){var s,o=[],n=r.infoboxarray;for(r.fixed=!0,r.name=\"\",s=0;s<e.length;s++)r.infoboxtext=!!n&&n[s%n.length],o[s]=t.create(\"point\",[e[s],i[s]],r);return o;},drawPie:function(t,e,o){var n,a,l=[],c=[],d=(i.sum(e),o.colors),u=o.highlightcolors,p=o.labels,f=o.radius||4,m=f,g=o.center||[0,0],b=g[0],v=g[1],y=function(t,i,r){return function(){var s,o,n,a=0;for(o=0;o<=t;o++)a+=parseFloat(h.evaluate(e[o]));for(s=a,o=t+1;o<e.length;o++)s+=parseFloat(h.evaluate(e[o]));return n=0!==s?2*Math.PI*a/s:0,m()*Math[i](n)+r;};},C=function(t,e){var i=-this.point1.coords.usrCoords[1]+this.point2.coords.usrCoords[1],o=-this.point1.coords.usrCoords[2]+this.point2.coords.usrCoords[2];h.exists(this.label)&&(this.label.rendNode.style.fontSize=e*h.evaluate(this.label.visProp.fontsize)+\"px\",this.label.fullUpdate()),this.point2.coords=new s(r.COORDS_BY_USER,[this.point1.coords.usrCoords[1]+i*t,this.point1.coords.usrCoords[2]+o*t],this.board),this.fullUpdate();},_=function(){this.highlighted||(this.highlighted=!0,this.board.highlightedObjects[this.id]=this,this.board.renderer.highlight(this),C.call(this,1.1,2));},P=function(){this.highlighted&&(this.highlighted=!1,this.board.renderer.noHighlight(this),C.call(this,.9090909,1));},E={fixed:!0,withLabel:!1,visible:!1,name:\"\"};if(!h.isArray(p))for(p=[],n=0;n<e.length;n++)p[n]=\"\";for(h.isFunction(f)||(m=function(){return f;}),o.highlightonsector=o.highlightonsector||!1,o.straightfirst=!1,o.straightlast=!1,a=t.create(\"point\",[b,v],E),l[0]=t.create(\"point\",[function(){return m()+b;},function(){return v;}],E),n=0;n<e.length;n++)l[n+1]=t.create(\"point\",[y(n,\"cos\",b),y(n,\"sin\",v)],E),o.name=p[n],o.withlabel=\"\"!==o.name,o.fillcolor=d&&d[n%d.length],o.labelcolor=d&&d[n%d.length],o.highlightfillcolor=u&&u[n%u.length],c[n]=t.create(\"sector\",[a,l[n],l[n+1]],o),o.highlightonsector&&(c[n].hasPoint=c[n].hasPointSector),o.highlightbysize&&(c[n].highlight=_,c[n].noHighlight=P);return{sectors:c,points:l,midpoint:a};},drawRadar:function(e,i,o){var n,a,l,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x,S,O,w,T,N,M,A,R,L,k,B,I,Y,D,j,X,U,F,G,J,z,H,V,$,q,W=i.length,Z=function(){var t,e,i,o,n=h.evaluate(this.visProp.label.offset).slice(0);return t=this.point1.X(),e=this.point2.X(),i=this.point1.Y(),o=this.point2.Y(),e<t&&(n[0]=-n[0]),o<i&&(n[1]=-n[1]),this.setLabelRelativeCoords(n),new s(r.COORDS_BY_USER,[this.point2.X(),this.point2.Y()],this.board);},Q=function(t,i){var r,s,o;return r=e.create(\"transform\",[-(_[i]-y[i]),0],{type:\"translate\"}),s=e.create(\"transform\",[S/(P[i]+C[i]-(_[i]-y[i])),1],{type:\"scale\"}),r.melt(s),o=e.create(\"transform\",[t],{type:\"rotate\"}),r.melt(o),r;};if(W<=0)throw new Error(\"JSXGraph radar chart: no data\");if(l=o.paramarray,!h.exists(l))throw new Error(\"JSXGraph radar chart: need paramArray attribute\");if((c=l.length)<=1)throw new Error(\"JSXGraph radar chart: need more than one param in paramArray\");for(n=0;n<W;n++)if(c!==i[n].length)throw new Error(\"JSXGraph radar chart: use data length equal to number of params (\"+i[n].length+\" != \"+c+\")\");for(d=[],u=[],a=0;a<c;a++)d[a]=i[0][a],u[a]=d[a];for(n=1;n<W;n++)for(a=0;a<c;a++)i[n][a]>d[a]&&(d[a]=i[n][a]),i[n][a]<u[a]&&(u[a]=i[n][a]);for(p=[],f=[],n=0;n<W;n++)p[n]=\"\",f[n]=[];for(m=[],g=[],b=o.startshiftratio||0,v=o.endshiftratio||0,n=0;n<c;n++)m[n]=(d[n]-u[n])*b,g[n]=(d[n]-u[n])*v;if(y=o.startshiftarray||m,C=o.endshiftarray||g,_=o.startarray||u,h.exists(o.start))for(n=0;n<c;n++)_[n]=o.start;if(P=o.endarray||d,h.exists(o.end))for(n=0;n<c;n++)P[n]=o.end;if(y.length!==c)throw new Error(\"JSXGraph radar chart: start shifts length is not equal to number of parameters\");if(C.length!==c)throw new Error(\"JSXGraph radar chart: end shifts length is not equal to number of parameters\");if(_.length!==c)throw new Error(\"JSXGraph radar chart: starts length is not equal to number of parameters\");if(P.length!==c)throw new Error(\"JSXGraph radar chart: snds length is not equal to number of parameters\");for(E=o.labelarray||p,x=o.colors,o.highlightcolors,S=o.radius||10,$=o.strokewidth||1,h.exists(o.highlightonsector)||(o.highlightonsector=!1),O={name:o.name,id:o.id,strokewidth:$,polystrokewidth:o.polystrokewidth||$,strokecolor:o.strokecolor||\"black\",straightfirst:!1,straightlast:!1,fillcolor:o.fillColor||\"#FFFF88\",fillopacity:o.fillOpacity||.4,highlightfillcolor:o.highlightFillColor||\"#FF7400\",highlightstrokecolor:o.highlightStrokeColor||\"black\",gradient:o.gradient||\"none\"},w=o.center||[0,0],T=w[0],N=w[1],M=e.create(\"point\",[T,N],{name:\"\",fixed:!0,withlabel:!1,visible:!1}),A=Math.PI/2-Math.PI/c,A=o.startangle||0,R=A,L=[],k=[],n=0;n<c;n++)for(R+=2*Math.PI/c,I=S*Math.cos(R)+T,Y=S*Math.sin(R)+N,L[n]=e.create(\"point\",[I,Y],{name:\"\",fixed:!0,withlabel:!1,visible:!1}),k[n]=e.create(\"line\",[M,L[n]],{name:l[n],strokeColor:O.strokecolor,strokeWidth:O.strokewidth,strokeOpacity:1,straightFirst:!1,straightLast:!1,withLabel:!0,highlightStrokeColor:O.highlightstrokecolor}),k[n].getLabelAnchor=Z,B=Q(R,n),a=0;a<i.length;a++)q=i[a][n],f[a][n]=e.create(\"point\",[q,0],{name:\"\",fixed:!0,withlabel:!1,visible:!1}),f[a][n].addTransform(f[a][n],B);for(D=[],n=0;n<W;n++)for(O.labelcolor=x&&x[n%x.length],O.strokecolor=x&&x[n%x.length],O.fillcolor=x&&x[n%x.length],D[n]=e.create(\"polygon\",f[n],{withLines:!0,withLabel:!1,fillColor:O.fillcolor,fillOpacity:O.fillopacity,highlightFillColor:O.highlightfillcolor}),a=0;a<c;a++)D[n].borders[a].setAttribute(\"strokecolor:\"+x[n%x.length]),D[n].borders[a].setAttribute(\"strokewidth:\"+O.polystrokewidth);switch(o.legendposition||\"none\"){case\"right\":X=o.legendleftoffset||2,U=o.legendtopoffset||1,this.legend=e.create(\"legend\",[T+S+X,N+S-U],{labels:E,colors:x});break;case\"none\":break;default:t.debug(\"Unknown legend position\");}if(j=[],o.showcircles){for(F=[],n=0;n<6;n++)F[n]=20*n;if(F[0]=\"0\",G=o.circlelabelarray||F,(J=G.length)<2)throw new Error(\"JSXGraph radar chart: too less circles in circleLabelArray\");for(z=[],H=A+Math.PI/c,B=Q(H,0),O.fillcolor=\"none\",O.highlightfillcolor=\"none\",O.strokecolor=o.strokecolor||\"black\",O.strokewidth=o.circlestrokewidth||.5,O.layer=0,V=(P[0]-_[0])/(J-1),n=0;n<J;n++)z[n]=e.create(\"point\",[_[0]+n*V,0],{name:G[n],size:0,fixed:!0,withLabel:!0,visible:!0}),z[n].addTransform(z[n],B),j[n]=e.create(\"circle\",[M,z[n]],O);}return this.rendNode=D[0].rendNode,{circles:j,lines:k,points:f,midpoint:M,polygons:D};},updateRenderer:function(){return this;},update:function(){return this.needsUpdate&&this.updateDataArray(),this;},updateDataArray:function(){return this;}}),t.createChart=function(e,i,r){var s,o,c,d,u,p,f,m,g,b,v,y,C,_,P,E,x=[],S=l.isBrowser?e.document.getElementById(i[0]):null;if(1===i.length&&h.isString(i[0])){if(h.exists(S)){if(g=h.copyAttributes(r,e.options,\"chart\"),S=new n().loadFromTable(i[0],g.withheaders,g.withheaders),s=S.data,u=S.columnHeaders,o=S.rowHeaders,b=g.width,v=g.name,y=g.strokecolor,C=g.fillcolor,_=g.highlightstrokecolor,P=g.highlightfillcolor,e.suspendUpdate(),E=s.length,m=[],g.rows&&h.isArray(g.rows)){for(c=0;c<E;c++)for(d=0;d<g.rows.length;d++)if(g.rows[d]===c||g.withheaders&&g.rows[d]===o[c]){m.push(s[c]);break;}}else m=s;for(E=m.length,c=0;c<E;c++){if(f=[],g.chartstyle&&-1!==g.chartstyle.indexOf(\"bar\")){for(p=b||.8,f.push(1-p/2+(c+.5)*p/E),d=1;d<m[c].length;d++)f.push(f[d-1]+1);g.width=p/E;}v&&v.length===E?g.name=v[c]:g.withheaders&&(g.name=u[c]),y&&y.length===E?g.strokecolor=y[c]:g.strokecolor=a.hsv2rgb((c+1)/E*360,.9,.6),C&&C.length===E?g.fillcolor=C[c]:g.fillcolor=a.hsv2rgb((c+1)/E*360,.9,1),_&&_.length===E?g.highlightstrokecolor=_[c]:g.highlightstrokecolor=a.hsv2rgb((c+1)/E*360,.9,1),P&&P.length===E?g.highlightfillcolor=P[c]:g.highlightfillcolor=a.hsv2rgb((c+1)/E*360,.9,.6),g.chartstyle&&-1!==g.chartstyle.indexOf(\"bar\")?x.push(new t.Chart(e,[f,m[c]],g)):x.push(new t.Chart(e,[m[c]],g));}e.unsuspendUpdate();}return x;}return g=h.copyAttributes(r,e.options,\"chart\"),new t.Chart(e,i,g);},t.registerElement(\"chart\",t.createChart),t.Legend=function(t,e,i){var o;if(this.constructor(),o=h.copyAttributes(i,t.options,\"legend\"),this.board=t,this.coords=new s(r.COORDS_BY_USER,e,this.board),this.myAtts={},this.label_array=o.labelarray||o.labels,this.color_array=o.colorarray||o.colors,this.lines=[],this.myAtts.strokewidth=o.strokewidth||5,this.myAtts.straightfirst=!1,this.myAtts.straightlast=!1,this.myAtts.withlabel=!0,this.myAtts.fixed=!0,this.style=o.legendstyle||o.style,\"vertical\"!==this.style)throw new Error(\"JSXGraph: Unknown legend style: \"+this.style);this.drawVerticalLegend(t,o);},t.Legend.prototype=new o(),t.Legend.prototype.drawVerticalLegend=function(t,e){var i,o=e.linelength||1,n=(e.rowheight||20)/this.board.unitY,a=function(){return this.setLabelRelativeCoords(this.visProp.label.offset),new s(r.COORDS_BY_USER,[this.point2.X(),this.point2.Y()],this.board);};for(i=0;i<this.label_array.length;i++)this.myAtts.name=this.label_array[i],this.myAtts.strokecolor=this.color_array[i%this.color_array.length],this.myAtts.highlightstrokecolor=this.color_array[i%this.color_array.length],this.myAtts.label={offset:[10,0],strokeColor:this.color_array[i%this.color_array.length],strokeWidth:this.myAtts.strokewidth},this.lines[i]=t.create(\"line\",[[this.coords.usrCoords[1],this.coords.usrCoords[2]-i*n],[this.coords.usrCoords[1]+o,this.coords.usrCoords[2]-i*n]],this.myAtts),this.lines[i].getLabelAnchor=a,this.lines[i].prepareUpdate().update().updateVisibility(h.evaluate(this.lines[i].visProp.visible)).updateRenderer();},t.createLegend=function(e,i,r){var s=[0,0];if(!h.exists(i)||2!==i.length)throw new Error(\"JSXGraph: Legend element needs two numbers as parameters\");return s=i,new t.Legend(e,s,r);},t.registerElement(\"legend\",t.createLegend),{Chart:t.Chart,Legend:t.Legend,createChart:t.createChart,createLegend:t.createLegend};}),define(\"base/turtle\",[\"jxg\",\"base/constants\",\"base/element\",\"utils/type\",\"base/curve\",\"base/point\",\"base/line\",\"base/transformation\"],function(t,e,i,r,s,o,n,a){\"use strict\";return t.Turtle=function(t,i,s){var o,n,a;return this.constructor(t,s,e.OBJECT_TYPE_TURTLE,e.OBJECT_CLASS_OTHER),this.turtleIsHidden=!1,this.board=t,this.visProp.curveType=\"plot\",this._attributes=r.copyAttributes(this.visProp,t.options,\"turtle\"),delete this._attributes.id,o=0,n=0,a=90,0!==i.length&&(3===i.length?(o=i[0],n=i[1],a=i[2]):2===i.length?r.isArray(i[0])?(o=i[0][0],n=i[0][1],a=i[1]):(o=i[0],n=i[1]):(o=i[0][0],n=i[0][1])),this.init(o,n,a),this.methodMap=r.deepCopy(this.methodMap,{forward:\"forward\",fd:\"forward\",back:\"back\",bk:\"back\",right:\"right\",rt:\"right\",left:\"left\",lt:\"left\",penUp:\"penUp\",pu:\"penUp\",penDown:\"penDown\",pd:\"penDown\",clearScreen:\"clearScreen\",cs:\"clearScreen\",clean:\"clean\",setPos:\"setPos\",home:\"home\",hideTurtle:\"hideTurtle\",ht:\"hideTurtle\",showTurtle:\"showTurtle\",st:\"showTurtle\",penSize:\"setPenSize\",penColor:\"setPenColor\",pushTurtle:\"pushTurtle\",push:\"pushTurtle\",popTurtle:\"popTurtle\",pop:\"popTurtle\",lookTo:\"lookTo\",pos:\"pos\",moveTo:\"moveTo\",X:\"X\",Y:\"Y\"}),this;},t.Turtle.prototype=new i(),t.extend(t.Turtle.prototype,{init:function(t,e,i){var r={fixed:!0,name:\"\",visible:!1,withLabel:!1};this.arrowLen=20/Math.sqrt(this.board.unitX*this.board.unitX+this.board.unitY*this.board.unitY),this.pos=[t,e],this.isPenDown=!0,this.dir=90,this.stack=[],this.objects=[],this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this._attributes),this.objects.push(this.curve),this.turtle=this.board.create(\"point\",this.pos,r),this.objects.push(this.turtle),this.turtle2=this.board.create(\"point\",[this.pos[0],this.pos[1]+this.arrowLen],r),this.objects.push(this.turtle2),this.visProp.arrow.lastArrow=!0,this.visProp.arrow.straightFirst=!1,this.visProp.arrow.straightLast=!1,this.arrow=this.board.create(\"line\",[this.turtle,this.turtle2],this.visProp.arrow),this.objects.push(this.arrow),this.subs={arrow:this.arrow},this.inherits.push(this.arrow),this.right(90-i),this.board.update();},forward:function(t){if(0===t)return this;var e,i=t*Math.cos(this.dir*Math.PI/180),r=t*Math.sin(this.dir*Math.PI/180);return this.turtleIsHidden||(e=this.board.create(\"transform\",[i,r],{type:\"translate\"}),e.applyOnce(this.turtle),e.applyOnce(this.turtle2)),this.isPenDown&&this.curve.dataX.length>=8192&&(this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this._attributes),this.objects.push(this.curve)),this.pos[0]+=i,this.pos[1]+=r,this.isPenDown&&(this.curve.dataX.push(this.pos[0]),this.curve.dataY.push(this.pos[1])),this.board.update(),this;},back:function(t){return this.forward(-t);},right:function(t){if(this.dir-=t,this.dir%=360,!this.turtleIsHidden){this.board.create(\"transform\",[-t*Math.PI/180,this.turtle],{type:\"rotate\"}).applyOnce(this.turtle2);}return this.board.update(),this;},left:function(t){return this.right(-t);},penUp:function(){return this.isPenDown=!1,this;},penDown:function(){return this.isPenDown=!0,this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this._attributes),this.objects.push(this.curve),this;},clean:function(){var t,i;for(t=0;t<this.objects.length;t++)i=this.objects[t],i.type===e.OBJECT_TYPE_CURVE&&(this.board.removeObject(i),this.objects.splice(t,1));return this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this._attributes),this.objects.push(this.curve),this.board.update(),this;},clearScreen:function(){var t,e,i=this.objects.length;for(t=0;t<i;t++)e=this.objects[t],this.board.removeObject(e);return this.init(0,0,90),this;},setPos:function(t,i){var s;return r.isArray(t)?this.pos=t:this.pos=[t,i],this.turtleIsHidden||(this.turtle.setPositionDirectly(e.COORDS_BY_USER,[t,i]),this.turtle2.setPositionDirectly(e.COORDS_BY_USER,[t,i+this.arrowLen]),s=this.board.create(\"transform\",[-(this.dir-90)*Math.PI/180,this.turtle],{type:\"rotate\"}),s.applyOnce(this.turtle2)),this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this._attributes),this.objects.push(this.curve),this.board.update(),this;},setPenSize:function(t){return this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this.copyAttr(\"strokeWidth\",t)),this.objects.push(this.curve),this;},setPenColor:function(t){return this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this.copyAttr(\"strokeColor\",t)),this.objects.push(this.curve),this;},setHighlightPenColor:function(t){return this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this.copyAttr(\"highlightStrokeColor\",t)),this.objects.push(this.curve),this;},setAttribute:function(t){var i,s,o,n=this.objects.length;for(i=0;i<n;i++)s=this.objects[i],s.type===e.OBJECT_TYPE_CURVE&&s.setAttribute(t);return o=this.visProp.id,this.visProp=r.deepCopy(this.curve.visProp),this.visProp.id=o,this._attributes=r.deepCopy(this.visProp),delete this._attributes.id,this;},copyAttr:function(t,e){return this._attributes[t.toLowerCase()]=e,this._attributes;},showTurtle:function(){return this.turtleIsHidden=!1,this.arrow.setAttribute({visible:!0}),this.visProp.arrow.visible=!1,this.setPos(this.pos[0],this.pos[1]),this.board.update(),this;},hideTurtle:function(){return this.turtleIsHidden=!0,this.arrow.setAttribute({visible:!1}),this.visProp.arrow.visible=!1,this.board.update(),this;},home:function(){return this.pos=[0,0],this.setPos(this.pos[0],this.pos[1]),this;},pushTurtle:function(){return this.stack.push([this.pos[0],this.pos[1],this.dir]),this;},popTurtle:function(){var t=this.stack.pop();return this.pos[0]=t[0],this.pos[1]=t[1],this.dir=t[2],this.setPos(this.pos[0],this.pos[1]),this;},lookTo:function(t){var e,i,s,o,n;return r.isArray(t)?(e=this.pos[0],i=this.pos[1],s=t[0],o=t[1],n=Math.atan2(o-i,s-e),this.right(this.dir-180*n/Math.PI)):r.isNumber(t)&&this.right(this.dir-t),this;},moveTo:function(t){var e,i,s;return r.isArray(t)&&(e=t[0]-this.pos[0],i=t[1]-this.pos[1],this.turtleIsHidden||(s=this.board.create(\"transform\",[e,i],{type:\"translate\"}),s.applyOnce(this.turtle),s.applyOnce(this.turtle2)),this.isPenDown&&this.curve.dataX.length>=8192&&(this.curve=this.board.create(\"curve\",[[this.pos[0]],[this.pos[1]]],this._attributes),this.objects.push(this.curve)),this.pos[0]=t[0],this.pos[1]=t[1],this.isPenDown&&(this.curve.dataX.push(this.pos[0]),this.curve.dataY.push(this.pos[1])),this.board.update()),this;},fd:function(t){return this.forward(t);},bk:function(t){return this.back(t);},lt:function(t){return this.left(t);},rt:function(t){return this.right(t);},pu:function(){return this.penUp();},pd:function(){return this.penDown();},ht:function(){return this.hideTurtle();},st:function(){return this.showTurtle();},cs:function(){return this.clearScreen();},push:function(){return this.pushTurtle();},pop:function(){return this.popTurtle();},evalAt:function(t,i){var r,s,o,n,a=this.objects.length;for(r=0,s=0;r<a;r++)if(o=this.objects[r],o.elementClass===e.OBJECT_CLASS_CURVE){if(s<=t&&t<s+o.numberPoints)return n=t-s,o[i](n);s+=o.numberPoints;}return this[i]();},X:function(t){return r.exists(t)?this.evalAt(t,\"X\"):this.pos[0];},Y:function(t){return r.exists(t)?this.evalAt(t,\"Y\"):this.pos[1];},Z:function(t){return 1;},minX:function(){return 0;},maxX:function(){var t,i,r=this.objects.length,s=0;for(t=0;t<r;t++)i=this.objects[t],i.elementClass===e.OBJECT_CLASS_CURVE&&(s+=this.objects[t].numberPoints);return s;},hasPoint:function(t,i){var r,s;for(r=0;r<this.objects.length;r++)if(s=this.objects[r],s.type===e.OBJECT_TYPE_CURVE&&s.hasPoint(t,i))return!0;return!1;}}),t.createTurtle=function(e,i,s){var o;return i=i||[],o=r.copyAttributes(s,e.options,\"turtle\"),new t.Turtle(e,i,o);},t.registerElement(\"turtle\",t.createTurtle),{Turtle:t.Turtle,createTurtle:t.createTurtle};}),define(\"parser/ca\",[\"jxg\",\"base/constants\",\"base/text\",\"math/math\",\"math/geometry\",\"math/statistics\",\"utils/type\",\"utils/env\"],function(t,e,i,r,s,o,n,a){\"use strict\";return t.CA=function(t,e,i){this.node=t,this.createNode=e,this.parser=i;},t.extend(t.CA.prototype,{findMapNode:function(t,e){var i,r,s;if(\"op_assign\"===e.value&&e.children[0].value===t)return e.children[1];if(e.children)for(r=e.children.length,i=0;i<r;++i)if(null!==(s=this.findMapNode(t,e.children[i])))return s;return null;},setMath:function(t){var e,i;if((\"node_op\"!=t.type||\"op_add\"!=t.value&&\"op_sub\"!=t.value&&\"op_mul\"!=t.value&&\"op_div\"!=t.value&&\"op_neg\"!=t.value&&\"op_execfun\"!=t.value&&\"op_exp\"!=t.value)&&\"node_var\"!=t.type&&\"node_const\"!=t.type||(t.isMath=!0),t.children)for(i=t.children.length,e=0;e<i;++e)this.setMath(t.children[e]);},deriveElementary:function(t,e){var i,r=t.children[0].value,s=t.children[1];switch(r){case\"abs\":i=this.createNode(\"node_op\",\"op_div\",s[0],this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"sqrt\"),[this.createNode(\"node_op\",\"op_mul\",n.deepCopy(s[0]),n.deepCopy(s[0]))]));break;case\"sqrt\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_mul\",this.createNode(\"node_const\",2),this.createNode(t.type,t.value,n.deepCopy(t.children[0]),n.deepCopy(t.children[1]))));break;case\"sin\":i=this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"cos\"),n.deepCopy(s));break;case\"cos\":i=this.createNode(\"node_op\",\"op_neg\",this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"sin\"),n.deepCopy(s)));break;case\"tan\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_exp\",this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"cos\"),n.deepCopy(s)),this.createNode(\"node_const\",2)));break;case\"cot\":i=this.createNode(\"node_op\",\"op_neg\",this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_exp\",this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"sin\"),n.deepCopy(s)),this.createNode(\"node_const\",2))));break;case\"exp\":i=this.createNode(t.type,t.value,n.deepCopy(t.children[0]),n.deepCopy(t.children[1]));break;case\"pow\":i=this.createNode(\"node_op\",\"op_mul\",this.createNode(\"node_op\",\"op_execfun\",n.deepCopy(t.children[0]),n.deepCopy(t.children[1])),this.createNode(\"node_op\",\"op_add\",this.createNode(\"node_op\",\"op_mul\",this.derivative(t.children[1][0],e),this.createNode(\"node_op\",\"op_div\",n.deepCopy(t.children[1][1]),n.deepCopy(t.children[1][0]))),this.createNode(\"node_op\",\"op_mul\",this.derivative(t.children[1][1],e),this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"log\"),[n.deepCopy(t.children[1][0])]))));break;case\"log\":case\"ln\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),n.deepCopy(s[0]));break;case\"log2\":case\"lb\":case\"ld\":i=this.createNode(\"node_op\",\"op_mul\",this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),n.deepCopy(s[0])),this.createNode(\"node_const\",1.4426950408889634));break;case\"log10\":case\"lg\":i=this.createNode(\"node_op\",\"op_mul\",this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),n.deepCopy(s[0])),this.createNode(\"node_const\",.43429448190325176));break;case\"asin\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"sqrt\"),[this.createNode(\"node_op\",\"op_sub\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_mul\",n.deepCopy(s[0]),n.deepCopy(s[0])))]));break;case\"acos\":i=this.createNode(\"node_op\",\"op_neg\",this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"sqrt\"),[this.createNode(\"node_op\",\"op_sub\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_mul\",n.deepCopy(s[0]),n.deepCopy(s[0])))])));break;case\"atan\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_add\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_mul\",n.deepCopy(s[0]),n.deepCopy(s[0]))));break;case\"acot\":i=this.createNode(\"node_op\",\"op_neg\",this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_add\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_mul\",n.deepCopy(s[0]),n.deepCopy(s[0])))));break;case\"sinh\":i=this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"cosh\"),[n.deepCopy(s[0])]);break;case\"cosh\":i=this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"sinh\"),[n.deepCopy(s[0])]);break;case\"tanh\":i=this.createNode(\"node_op\",\"op_sub\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_exp\",this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"tanh\"),[n.deepCopy(s[0])]),this.createNode(\"node_const\",2)));break;case\"asinh\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"sqrt\"),[this.createNode(\"node_op\",\"op_add\",this.createNode(\"node_op\",\"op_mul\",n.deepCopy(s[0]),n.deepCopy(s[0])),this.createNode(\"node_const\",1))]));break;case\"acosh\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"sqrt\"),[this.createNode(\"node_op\",\"op_sub\",this.createNode(\"node_op\",\"op_mul\",n.deepCopy(s[0]),n.deepCopy(s[0])),this.createNode(\"node_const\",1))]));break;case\"atanh\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_sub\",this.createNode(\"node_const\",1),this.createNode(\"node_op\",\"op_mul\",n.deepCopy(s[0]),n.deepCopy(s[0]))));break;default:i=this.createNode(\"node_const\",0),this._error('Derivative of \"'+r+'\" not yet implemented');}return i;},derivative:function(t,e){var i;switch(t.type){case\"node_op\":switch(t.value){case\"op_execfun\":i=\"pow\"==t.children[0].value?this.deriveElementary(t,e):this.createNode(\"node_op\",\"op_mul\",this.deriveElementary(t,e),this.derivative(t.children[1][0],e));break;case\"op_div\":i=this.createNode(\"node_op\",\"op_div\",this.createNode(\"node_op\",\"op_sub\",this.createNode(\"node_op\",\"op_mul\",this.derivative(t.children[0],e),n.deepCopy(t.children[1])),this.createNode(\"node_op\",\"op_mul\",n.deepCopy(t.children[0]),this.derivative(t.children[1],e))),this.createNode(\"node_op\",\"op_mul\",n.deepCopy(t.children[1]),n.deepCopy(t.children[1])));break;case\"op_mul\":i=this.createNode(\"node_op\",\"op_add\",this.createNode(\"node_op\",\"op_mul\",n.deepCopy(t.children[0]),this.derivative(t.children[1],e)),this.createNode(\"node_op\",\"op_mul\",this.derivative(t.children[0],e),n.deepCopy(t.children[1])));break;case\"op_neg\":i=this.createNode(\"node_op\",\"op_neg\",this.derivative(t.children[0],e));break;case\"op_add\":case\"op_sub\":i=this.createNode(\"node_op\",t.value,this.derivative(t.children[0],e),this.derivative(t.children[1],e));break;case\"op_exp\":i=this.createNode(\"node_op\",\"op_mul\",n.deepCopy(t),this.createNode(\"node_op\",\"op_add\",this.createNode(\"node_op\",\"op_mul\",this.derivative(t.children[0],e),this.createNode(\"node_op\",\"op_div\",n.deepCopy(t.children[1]),n.deepCopy(t.children[0]))),this.createNode(\"node_op\",\"op_mul\",this.derivative(t.children[1],e),this.createNode(\"node_op\",\"op_execfun\",this.createNode(\"node_var\",\"log\"),[n.deepCopy(t.children[0])]))));}break;case\"node_var\":i=t.value===e?this.createNode(\"node_const\",1):this.createNode(\"node_const\",0);break;case\"node_const\":i=this.createNode(\"node_const\",0);}return i;},expandDerivatives:function(t,e,i){var r,s,o,a,h,l,c,d,u,p,f,m;if(l=0,!t)return l;for(this.line=t.line,this.col=t.col,r=t.children.length,s=0;s<r;++s)if(t.children[s]&&t.children[s].type)t.children[s]=this.expandDerivatives(t.children[s],t,i);else if(n.isArray(t.children[s]))for(o=0;o<t.children[s].length;++o)t.children[s][o]&&t.children[s][o].type&&(t.children[s][o]=this.expandDerivatives(t.children[s][o],t,i));switch(t.type){case\"node_op\":switch(t.value){case\"op_execfun\":if(t.children[0]&&\"D\"===t.children[0].value){if(\"node_var\"==t.children[1][0].type?(u=t.children[1][0].value,a=this.findMapNode(u,i),f=a.children[0],p=t.children[1].length>=2?t.children[1][1].value:a.children[0][0],h=a.children[1]):(h=t.children[1][0],f=[\"x\"],p=t.children[1].length>=2?t.children[1][1].value:\"x\"),m=t.children[1].length>=3?t.children[1][2].value:1,d=h,m>=1)for(;m>=1;)d=this.derivative(d,p),d=this.removeTrivialNodes(d),m--;c=\"node_op\"==e.type&&\"op_assign\"==e.value?this.createNode(\"node_op\",\"op_map\",f,d):d,this.setMath(c),t.type=c.type,t.value=c.value,t.children[0]=c.children[0],t.children[1]=c.children[1];}}}return t;},removeTrivialNodes:function(t){var e,i,r,s,o;if(n.isArray(t))for(i=t.length,e=0;e<i;++e)t[e]=this.removeTrivialNodes(t[e]);if(\"node_op\"!=t.type||!t.children)return t;for(i=t.children.length,e=0;e<i;++e){this.mayNotBeSimplified=!1;do{t.children[e]=this.removeTrivialNodes(t.children[e]);}while(this.mayNotBeSimplified);}switch(t.value){case\"op_map\":if(r=t.children[0],s=t.children[1],\"node_var\"==s.type)for(e=0;e<r.length;++e)if(r[e]==s.value){s.isMath=!0;break;}break;case\"op_add\":if(r=t.children[0],s=t.children[1],\"node_const\"==r.type&&0===r.value)return s;if(\"node_const\"==s.type&&0===s.value)return r;if(\"node_const\"==r.type&&\"node_const\"==s.type)return r.value+=s.value,r;break;case\"op_mul\":if(r=t.children[0],s=t.children[1],\"node_const\"==r.type&&1==r.value)return s;if(\"node_const\"==s.type&&1==s.value)return r;if(\"node_const\"==r.type&&0===r.value)return r;if(\"node_const\"==s.type&&0===s.value)return s;if(\"node_const\"==s.type&&0===s.value)return s;if(\"node_op\"==r.type&&\"op_neg\"==r.value&&\"node_op\"==s.type&&\"op_neg\"==s.value)return t.children=[r.children[0],s.children[0]],this.mayNotBeSimplified=!0,t;if(\"op_neg\"==r.value&&\"op_neg\"!=s.value)return t.type=\"node_op\",t.value=\"op_neg\",t.children=[this.createNode(\"node_op\",\"op_mul\",r.children[0],s)],this.mayNotBeSimplified=!0,t;if(\"op_neg\"!=r.value&&\"op_neg\"==s.value)return t.type=\"node_op\",t.value=\"op_neg\",t.children=[this.createNode(\"node_op\",\"op_mul\",r,s.children[0])],this.mayNotBeSimplified=!0,t;if(\"op_div\"==r.value&&\"node_const\"==r.children[0].type&&1==r.children[0].value)return t.type=\"node_op\",t.value=\"op_div\",t.children=[s,r.children[1]],this.mayNotBeSimplified=!0,t;if(\"op_div\"==s.value&&\"node_const\"==s.children[0].type&&1==s.children[0].value)return t.type=\"node_op\",t.value=\"op_div\",t.children=[r,s.children[1]],this.mayNotBeSimplified=!0,t;if(\"node_const\"!=r.type&&\"node_const\"==s.type)return t.children=[s,r],this.mayNotBeSimplified=!0,t;if(\"node_const\"!=r.type&&\"node_op\"==s.type&&\"op_neg\"==s.value&&\"node_const\"==s.children[0].type)return t.children=[s,r],this.mayNotBeSimplified=!0,t;if(\"node_op\"==r.type&&\"op_execfun\"!=r.value&&(\"node_var\"==s.type||\"node_op\"==s.type&&\"op_execfun\"==s.value))return t.children=[s,r],this.mayNotBeSimplified=!0,t;if(\"node_op\"!=r.type&&\"node_op\"==s.type&&\"op_neg\"==s.value&&\"node_var\"==s.children[0].type)return t.children=[s,r],this.mayNotBeSimplified=!0,t;if(\"node_const\"!=r.type&&\"node_op\"==s.type&&(\"op_mul\"==s.value||\"op_div\"==s.value)&&\"node_const\"==s.children[0].type)return o=s.children[0],s.children[0]=r,t.children=[o,s],this.mayNotBeSimplified=!0,t;if(\"node_const\"!=s.type&&\"node_op\"==r.type&&\"op_mul\"==r.value&&\"node_const\"==r.children[0].type)return t.children=[r.children[0],this.createNode(\"node_op\",\"op_mul\",r.children[1],s)],this.mayNotBeSimplified=!0,t;if(\"node_const\"==r.type&&\"node_const\"==s.type)return r.value*=s.value,r;if(\"node_const\"==r.type&&\"node_op\"==s.type&&(\"op_mul\"==s.value||\"op_div\"==s.value)&&\"node_const\"==s.children[0].type)return s.children[0].value*=r.value,s;if(r.hash=this.parser.compile(r),s.hash=this.parser.compile(s),r.hash===s.hash)return t.value=\"op_exp\",t.children[1]=this.createNode(\"node_const\",2),t;if(\"node_const\"==r.type&&\"node_op\"==s.type&&(\"op_mul\"==s.value||\"op_div\"==s.value)&&\"node_const\"==s.children[0].type)return s.children[0].value*=r.value,s;if(\"node_op\"==s.type&&\"op_exp\"==s.value&&(r.hash||(r.hash=this.parser.compile(r)),s.children[0].hash||(s.children[0].hash=this.parser.compile(s.children[0])),r.hash===s.children[0].hash))return s.children[1]=this.createNode(\"node_op\",\"op_add\",s.children[1],this.createNode(\"node_const\",1)),this.mayNotBeSimplified=!0,s;if(\"node_op\"==r.type&&\"op_exp\"==r.value&&\"node_op\"==s.type&&\"op_exp\"==s.value&&(r.children[0].hash=this.parser.compile(r.children[0]),s.children[0].hash=this.parser.compile(s.children[0]),r.children[0].hash===s.children[0].hash))return r.children[1]=this.createNode(\"node_op\",\"op_add\",r.children[1],s.children[1]),this.mayNotBeSimplified=!0,r;break;case\"op_sub\":if(r=t.children[0],s=t.children[1],\"node_const\"==r.type&&0===r.value)return t.value=\"op_neg\",t.children[0]=s,t;if(\"node_const\"==s.type&&0===s.value)return r;if(\"node_const\"==r.type&&\"node_const\"==s.type&&r.value==s.value)return this.createNode(\"node_const\",0);if(\"node_var\"==r.type&&\"node_var\"==s.type&&r.value==s.value)return this.createNode(\"node_const\",0);if(\"node_const\"==r.type&&\"node_const\"==s.type)return r.value-=s.value,r;if(\"node_op\"==r.type&&\"op_mul\"==r.value&&\"node_op\"==s.type&&\"op_mul\"==s.value&&(r.children[1].hash=this.parser.compile(r.children[1]),s.children[1].hash=this.parser.compile(s.children[1]),r.children[1].hash===s.children[1].hash))return t.value=\"op_mul\",t.children=[this.createNode(\"node_op\",\"op_sub\",r.children[0],s.children[0]),r.children[1]],this.mayNotBeSimplified=!0,t;if(\"node_op\"==r.type&&\"op_mul\"==r.value&&(r.children[1].hash=this.parser.compile(r.children[1]),s.hash=this.parser.compile(s),r.children[1].hash===s.hash))return t.value=\"op_mul\",t.children=[this.createNode(\"node_op\",\"op_sub\",r.children[0],this.createNode(\"node_const\",1)),s],this.mayNotBeSimplified=!0,t;if(\"node_op\"==s.type&&\"op_mul\"==s.value&&(s.children[1].hash=this.parser.compile(s.children[1]),r.hash=this.parser.compile(r),s.children[1].hash===r.hash))return t.value=\"op_mul\",t.children=[this.createNode(\"node_op\",\"op_sub\",this.createNode(\"node_const\",1),s.children[0]),r],this.mayNotBeSimplified=!0,t;break;case\"op_neg\":if(r=t.children[0],\"node_const\"==r.type&&0===r.value)return r;if(\"node_op\"==r.type&&\"op_neg\"==r.value)return r.children[0];break;case\"op_div\":if(r=t.children[0],s=t.children[1],\"node_const\"==r.type&&\"node_const\"==s.type&&r.value==s.value&&0!==r.value)return r.value=1,r;if(\"node_const\"==r.type&&0===r.value&&\"node_const\"==s.type&&0!==s.value)return r.value=0,r;if(\"node_const\"==r.type&&0===r.value&&(\"node_op\"==s.type||\"node_var\"==s.type))return t.type=\"node_const\",t.value=0,t;if(\"node_var\"==r.type&&\"node_var\"==s.type&&r.value==s.value)return this.createNode(\"node_const\",1);if(\"node_const\"==r.type&&0!==r.value&&\"node_const\"==s.type&&0===s.value)return r.value>0?r.value=1/0:r.value=-1/0,r;if(\"node_op\"==r.type&&\"op_neg\"==r.value&&\"node_op\"==s.type&&\"op_neg\"==s.value)return t.children=[r.children[0],s.children[0]],this.mayNotBeSimplified=!0,t;if(\"op_neg\"==r.value&&\"op_neg\"!=s.value)return t.type=\"node_op\",t.value=\"op_neg\",t.children=[this.createNode(\"node_op\",\"op_div\",r.children[0],s)],this.mayNotBeSimplified=!0,t;if(\"op_neg\"!=r.value&&\"op_neg\"==s.value)return t.type=\"node_op\",t.value=\"op_neg\",t.children=[this.createNode(\"node_op\",\"op_div\",r,s.children[0])],this.mayNotBeSimplified=!0,t;if(\"node_op\"==r.type&&\"op_exp\"==r.value&&(s.hash||(s.hash=this.parser.compile(s)),r.children[0].hash||(r.children[0].hash=this.parser.compile(r.children[0])),s.hash===r.children[0].hash))return r.children[1]=this.createNode(\"node_op\",\"op_sub\",r.children[1],this.createNode(\"node_const\",1)),this.mayNotBeSimplified=!0,r;if(\"node_const\"!=s.type&&\"node_op\"==r.type&&\"op_mul\"==r.value&&\"node_const\"==r.children[0].type)return t.value=\"op_mul\",t.children=[r.children[0],this.createNode(\"node_op\",\"op_div\",r.children[1],s)],this.mayNotBeSimplified=!0,t;if(\"node_op\"==r.type&&\"op_exp\"==r.value&&\"node_op\"==s.type&&\"op_exp\"==s.value&&(r.children[0].hash=this.parser.compile(r.children[0]),s.children[0].hash=this.parser.compile(s.children[0]),r.children[0].hash===s.children[0].hash))return r.children[1]=this.createNode(\"node_op\",\"op_sub\",r.children[1],s.children[1]),this.mayNotBeSimplified=!0,r;break;case\"op_exp\":if(r=t.children[0],s=t.children[1],\"node_const\"==s.type&&0===s.value)return s.value=1,s;if(\"node_const\"==s.type&&1==s.value)return r;if(\"node_const\"==r.type&&1==r.value)return r;if(\"node_const\"==r.type&&0===r.value&&\"node_const\"==s.type&&0!==s.value)return r;if(\"node_op\"==r.type&&\"op_exp\"==r.value)return t.children=[r.children[0],this.createNode(\"node_op\",\"op_mul\",r.children[1],s)],t;}switch(t.value){case\"op_add\":if(r=t.children[0],s=t.children[1],\"node_const\"==r.type&&\"node_const\"==s.type&&r.value==s.value)return r.value+=s.value,r;if(\"node_var\"==r.type&&\"node_var\"==s.type&&r.value==s.value)return t.children[0]=this.createNode(\"node_const\",2),t.value=\"op_mul\",t;if(\"node_op\"==r.type&&\"op_neg\"==r.value)return t.value=\"op_sub\",t.children[0]=s,t.children[1]=r.children[0],this.mayNotBeSimplified=!0,t;if(\"node_op\"==s.type&&\"op_neg\"==s.value)return t.value=\"op_sub\",t.children[1]=s.children[0],this.mayNotBeSimplified=!0,t;if(\"node_op\"==r.type&&\"op_mul\"==r.value&&\"node_op\"==s.type&&\"op_mul\"==s.value&&(r.children[1].hash=this.parser.compile(r.children[1]),s.children[1].hash=this.parser.compile(s.children[1]),r.children[1].hash===s.children[1].hash))return t.value=\"op_mul\",t.children=[this.createNode(\"node_op\",\"op_add\",r.children[0],s.children[0]),r.children[1]],this.mayNotBeSimplified=!0,t;if(\"node_op\"==r.type&&\"op_mul\"==r.value&&(r.children[1].hash=this.parser.compile(r.children[1]),s.hash=this.parser.compile(s),r.children[1].hash===s.hash))return t.value=\"op_mul\",t.children=[this.createNode(\"node_op\",\"op_add\",r.children[0],this.createNode(\"node_const\",1)),s],this.mayNotBeSimplified=!0,t;if(\"node_op\"==s.type&&\"op_mul\"==s.value&&(s.children[1].hash=this.parser.compile(s.children[1]),r.hash=this.parser.compile(r),s.children[1].hash===r.hash))return t.value=\"op_mul\",t.children=[this.createNode(\"node_op\",\"op_add\",this.createNode(\"node_const\",1),s.children[0]),r],this.mayNotBeSimplified=!0,t;break;case\"op_sub\":if(r=t.children[0],s=t.children[1],\"node_op\"==s.type&&\"op_neg\"==s.value)return t.value=\"op_add\",t.children[1]=s.children[0],this.mayNotBeSimplified=!0,t;break;case\"op_execfun\":return this.simplifyElementary(t);}return t;},simplifyElementary:function(t){var e=t.children[0].value,i=t.children[1];if(0==i.length)return t;switch(e){case\"sin\":case\"tan\":if(\"node_const\"==i[0].type&&0===i[0].value)return t.type=\"node_const\",t.value=0,t;if(\"node_var\"==i[0].type&&\"PI\"==i[0].value)return t.type=\"node_const\",t.value=0,t;if(\"node_op\"==i[0].type&&\"op_mul\"==i[0].value&&\"node_const\"==i[0].children[0].type&&i[0].children[0].value%1==0&&\"node_var\"==i[0].children[1].type&&\"PI\"==i[0].children[1].value)return t.type=\"node_const\",t.value=0,t;break;case\"cos\":if(\"node_const\"==i[0].type&&0===i[0].value)return t.type=\"node_const\",t.value=1,t;if(\"node_var\"==i[0].type&&\"PI\"==i[0].value)return t.type=\"node_op\",t.value=\"op_neg\",t.children=[this.createNode(\"node_const\",1)],t;break;case\"exp\":if(\"node_const\"==i[0].type&&0===i[0].value)return t.type=\"node_const\",t.value=1,t;break;case\"pow\":if(\"node_const\"==i[1].type&&0===i[1].value)return t.type=\"node_const\",t.value=1,t;}return t;}}),t.CA;}),define(\"utils/dump\",[\"jxg\",\"utils/type\"],function(t,e){\"use strict\";return t.Dump={addMarkers:function(t,i,r){var s,o,n;e.isArray(i)||(i=[i]),e.isArray(r)||(r=[r]),o=Math.min(i.length,r.length),i.length=o,r.length=o;for(s in t.objects)if(t.objects.hasOwnProperty(s))for(n=0;n<o;n++)t.objects[s][i[n]]=r[n];},deleteMarkers:function(t,i){var r,s,o;e.isArray(i)||(i=[i]),s=i.length,i.length=s;for(r in t.objects)if(t.objects.hasOwnProperty(r))for(o=0;o<s;o++)delete t.objects[r][i[o]];},str:function(t){return\"string\"==typeof t&&\"function\"!==t.substr(0,7)&&(t='\"'+t+'\"'),t;},minimizeObject:function(i,r){var s,o,n,a={},h=e.deepCopy(i),l=[];for(n=1;n<arguments.length;n++)l.push(arguments[n]);for(a=e.deepCopy(a,t.Options.elements,!0),n=l.length;n>0;n--)a=e.deepCopy(a,l[n-1],!0);for(s in a)a.hasOwnProperty(s)&&(o=s.toLowerCase(),\"object\"!=typeof a[s]&&a[s]===h[o]&&delete h[o]);return h;},prepareAttributes:function(e,i){var r,s;r=this.minimizeObject(i.getAttributes(),t.Options[i.elType]);for(s in i.subs)i.subs.hasOwnProperty(s)&&(r[s]=this.minimizeObject(i.subs[s].getAttributes(),t.Options[i.elType][s],t.Options[i.subs[s].elType]),r[s].id=i.subs[s].id,r[s].name=i.subs[s].name);return r.id=i.id,r.name=i.name,r;},setBoundingBox:function(t,e,i){return t.push({obj:i,method:\"setBoundingBox\",params:[e.getBoundingBox(),!0]}),t;},dump:function(t){var i,r,s,o,n=[],a=[],h=[],l=t.objectsList.length;for(this.addMarkers(t,\"dumped\",!1),i=0;i<l;i++)if(r=t.objectsList[i],s={},!r.dumped&&r.dump){for(s.type=r.getType(),s.parents=r.getParents().slice(),\"point\"===s.type&&1===s.parents[0]&&(s.parents=s.parents.slice(1)),o=0;o<s.parents.length;o++)e.isString(s.parents[o])&&\"'\"!==s.parents[o][0]&&'\"'!==s.parents[o][0]?s.parents[o]='\"'+s.parents[o]+'\"':e.isArray(s.parents[o])&&(s.parents[o]=\"[\"+s.parents[o].toString()+\"]\");s.attributes=this.prepareAttributes(t,r),\"glider\"===s.type&&r.onPolygon&&n.push({obj:r.id,prop:\"onPolygon\",val:!0}),h.push(s);}return this.deleteMarkers(t,\"dumped\"),{elements:h,props:n,methods:a};},arrayToParamStr:function(t,e){var i,r=[];for(i=0;i<t.length;i++)r.push(e.call(this,t[i]));return r.join(\", \");},toJCAN:function(t){var i,r,s;switch(typeof t){case\"object\":if(t){if(r=[],e.isArray(t)){for(i=0;i<t.length;i++)r.push(this.toJCAN(t[i]));return\"[\"+r.join(\",\")+\"]\";}for(s in t)t.hasOwnProperty(s)&&r.push(s+\": \"+this.toJCAN(t[s]));return\"<<\"+r.join(\", \")+\">> \";}return\"null\";case\"string\":return\"'\"+t.replace(/([\"'])/g,\"\\\\$1\")+\"'\";case\"number\":case\"boolean\":return t.toString();case\"null\":return\"null\";}},toJessie:function(t){var e,i,r=this.dump(t),s=[];for(r.methods=this.setBoundingBox(r.methods,t,\"$board\"),i=r.elements,e=0;e<i.length;e++)i[e].attributes.name.length>0&&s.push(\"// \"+i[e].attributes.name),s.push(\"s\"+e+\" = \"+i[e].type+\"(\"+i[e].parents.join(\", \")+\") \"+this.toJCAN(i[e].attributes).replace(/\\n/,\"\\\\n\")+\";\"),s.push(\"\");for(e=0;e<r.methods.length;e++)s.push(r.methods[e].obj+\".\"+r.methods[e].method+\"(\"+this.arrayToParamStr(r.methods[e].params,this.toJCAN)+\");\"),s.push(\"\");for(e=0;e<r.props.length;e++)s.push(r.props[e].obj+\".\"+r.props[e].prop+\" = \"+this.toJCAN(r.props[e].val)+\";\"),s.push(\"\");return s.join(\"\\n\");},toJavaScript:function(t){var i,r,s=this.dump(t),o=[];for(s.methods=this.setBoundingBox(s.methods,t,\"board\"),r=s.elements,i=0;i<r.length;i++)o.push('board.create(\"'+r[i].type+'\", ['+r[i].parents.join(\", \")+\"], \"+e.toJSON(r[i].attributes)+\");\");for(i=0;i<s.methods.length;i++)o.push(s.methods[i].obj+\".\"+s.methods[i].method+\"(\"+this.arrayToParamStr(s.methods[i].params,e.toJSON)+\");\"),o.push(\"\");for(i=0;i<s.props.length;i++)o.push(s.props[i].obj+\".\"+s.props[i].prop+\" = \"+e.toJSON(s.props[i].val)+\";\"),o.push(\"\");return o.join(\"\\n\");}},t.Dump;}),define(\"element/comb\",[\"jxg\",\"options\",\"utils/type\",\"base/constants\",\"base/line\",\"base/polygon\",\"base/point\"],function(t,e,i,r,s,o,n){\"use strict\";return t.createComb=function(t,e,r){var s,o,a,h,l;if(2!==e.length)throw l=e.map(function(t){return\"'\"+typeof t+\"'\";}),new Error(\"JSXGraph: Can't create comb with parent types \"+l.join(\", \")+\".\\nPossible parent types: [point,point], [[x1,y1],[x2,y2]]\");if(i.isArray(e[0])&&e[0].length>1)h=i.copyAttributes(r,t.options,\"comb\",\"point1\"),s=t.create(\"point\",e[0],h);else if(i.isString(e[0])||i.isPoint(e[0]))s=t.select(e[0]);else if(i.isFunction(e[0])&&i.isPoint(e[0]()))s=e[0]();else{if(!(i.isFunction(e[0])&&e[0]().length&&e[0]().length>=2))throw new Error(\"JSXGraph: Can't create comb with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [point,point], [[x1,y1],[x2,y2]]\");h=i.copyAttributes(r,t.options,\"comb\",\"point1\"),s=n.createPoint(t,e[0](),h);}if(i.isArray(e[1])&&e[1].length>1)h=i.copyAttributes(r,t.options,\"comb\",\"point2\"),o=t.create(\"point\",e[1],h);else if(i.isString(e[1])||i.isPoint(e[1]))o=t.select(e[1]);else if(i.isFunction(e[1])&&i.isPoint(e[1]()))o=e[1]();else{if(!(i.isFunction(e[1])&&e[1]().length&&e[1]().length>=2))throw new Error(\"JSXGraph: Can't create comb with parent types '\"+typeof e[0]+\"' and '\"+typeof e[1]+\"'.\\nPossible parent types: [point,point], [[x1,y1],[x2,y2]]\");h=i.copyAttributes(r,t.options,\"comb\",\"point2\"),o=n.createPoint(t,e[1](),h);}return h=i.copyAttributes(r,t.options,\"comb\"),i.merge(h,i.copyAttributes(r,t.options,\"comb\",\"curve\")),a=t.create(\"curve\",[[0],[0]],h),a.updateDataArray=function(){var t,e,r,n,h,l,c,d,u,p,f=0,m=s.Dist(o),g=s,b=o;for(d=i.evaluate(a.visProp.frequency),u=-i.evaluate(a.visProp.angle),p=i.evaluate(a.visProp.width),i.evaluate(a.visProp.reverse)&&(g=o,b=s,u=-u),t=Math.cos(u),e=Math.sin(u),r=(b.X()-g.X())/m,n=(b.Y()-g.Y())/m,t*=p/Math.abs(e),e*=p/Math.abs(e),this.dataX=[],this.dataY=[];f<m;)h=g.X()+r*f,l=g.Y()+n*f,c=Math.min(t,m-f)/Math.abs(t),e*=c,t*=c,this.dataX.push(h),this.dataY.push(l),this.dataX.push(h+r*t+n*e),this.dataY.push(l-r*e+n*t),this.dataX.push(NaN),this.dataY.push(NaN),f+=d;},a;},t.registerElement(\"comb\",t.createComb),{createComb:t.createComb};}),define(\"element/slopetriangle\",[\"jxg\",\"options\",\"utils/type\",\"base/constants\",\"base/line\",\"base/polygon\",\"base/point\",\"base/element\"],function(t,e,i,r,s,o,n,a){\"use strict\";var h={removeSlopeTriangle:function(){o.Polygon.prototype.remove.call(this),this.board.removeObject(this.toppoint),this.board.removeObject(this.glider),this.board.removeObject(this.baseline),this.board.removeObject(this.basepoint),this.board.removeObject(this.label),this._isPrivateTangent&&this.board.removeObject(this.tangent);},Value:function(){return this.tangent.getSlope();}};return t.createSlopeTriangle=function(e,s,o){var n,a,l,c,d,u,p,f,m,g=!1;if(1===s.length&&s[0].type===r.OBJECT_TYPE_TANGENT)a=s[0],l=a.glider;else if(1===s.length&&s[0].type===r.OBJECT_TYPE_GLIDER)l=s[0],m=i.copyAttributes(o,e.options,\"slopetriangle\",\"tangent\"),a=e.create(\"tangent\",[l],m),g=!0;else{if(2!==s.length||s[0].elementClass!==r.OBJECT_CLASS_LINE||!i.isPoint(s[1]))throw new Error(\"JSXGraph: Can't create slope triangle with parent types '\"+typeof s[0]+\"'.\");a=s[0],l=s[1];}return m=i.copyAttributes(o,e.options,\"slopetriangle\",\"basepoint\"),p=e.create(\"point\",[function(){return[l.X()+1,l.Y()];}],m),m=i.copyAttributes(o,e.options,\"slopetriangle\",\"baseline\"),u=e.create(\"line\",[l,p],m),m=i.copyAttributes(o,e.options,\"slopetriangle\",\"glider\"),c=e.create(\"glider\",[l.X()+1,l.Y(),u],m),m=i.copyAttributes(o,e.options,\"slopetriangle\",\"toppoint\"),d=e.create(\"point\",[function(){return[c.X(),c.Y()+(c.X()-l.X())*a.getSlope()];}],m),m=i.copyAttributes(o,e.options,\"slopetriangle\"),m.borders=i.copyAttributes(m.borders,e.options,\"slopetriangle\",\"borders\"),n=e.create(\"polygon\",[l,c,d],m),n.Value=h.Value,n.tangent=a,n._isPrivateTangent=g,n.borders[2].setArrow(!1,!1),m=i.copyAttributes(o,e.options,\"slopetriangle\",\"label\"),f=e.create(\"text\",[function(){return c.X()+.1;},function(){return .5*(c.Y()+d.Y());},function(){return\"\";}],m),f._setText(function(){return i.toFixed(n.Value(),i.evaluate(f.visProp.digits));}),f.fullUpdate(),n.glider=c,n.basepoint=p,n.baseline=u,n.toppoint=d,n.label=f,n.subs={glider:c,basePoint:p,baseLine:u,topPoint:d,label:f},n.inherits.push(c,p,u,d,f),n.methodMap=t.deepCopy(n.methodMap,{tangent:\"tangent\",glider:\"glider\",basepoint:\"basepoint\",baseline:\"baseline\",toppoint:\"toppoint\",label:\"label\",Value:\"Value\",V:\"Value\"}),n.remove=h.removeSlopeTriangle,n;},t.registerElement(\"slopetriangle\",t.createSlopeTriangle),{createSlopeTriangle:t.createSlopeTriangle};}),define(\"element/checkbox\",[\"jxg\",\"utils/env\",\"utils/type\"],function(t,e,i){\"use strict\";var r={CheckboxChangeEventHandler:function(){this._value=this.rendNodeCheckbox.checked,this.board.update();}};return t.createCheckbox=function(s,o,n){var a,h,l=i.copyAttributes(n,s.options,\"checkbox\");return h=[o[0],o[1],'<span style=\"display:inline\"><input type=\"checkbox\" /><label for=\"\"></label></span>'],a=s.create(\"text\",h,l),a.type=i.OBJECT_TYPE_CHECKBOX,a.rendNodeCheckbox=a.rendNode.childNodes[0].childNodes[0],a.rendNodeLabel=a.rendNode.childNodes[0].childNodes[1],a.rendNodeTag=a.rendNodeCheckbox,a.rendNodeTag.disabled=!!l.disabled,a.rendNodeLabel.innerHTML=o[2],a.rendNodeCheckbox.id=a.rendNode.id+\"_checkbox\",a.rendNodeLabel.id=a.rendNode.id+\"_label\",a.rendNodeLabel.setAttribute(\"for\",a.rendNodeCheckbox.id),a.visPropOld.fontsize=\"0px\",s.renderer.updateTextStyle(a,!1),a.rendNodeCheckbox.checked=l.checked,a._value=l.checked,a.Value=function(){return this._value;},a.update=function(){return this.needsUpdate&&(t.Text.prototype.update.call(this),this._value=this.rendNodeCheckbox.checked),this;},e.addEvent(a.rendNodeCheckbox,\"change\",r.CheckboxChangeEventHandler,a),a;},t.registerElement(\"checkbox\",t.createCheckbox),{createCheckbox:t.createCheckbox};}),define(\"element/input\",[\"jxg\",\"utils/env\",\"utils/type\"],function(t,e,i){\"use strict\";var r={InputInputEventHandler:function(t){this._value=this.rendNodeInput.value,this.board.update();}};return t.createInput=function(s,o,n){var a,h,l=i.copyAttributes(n,s.options,\"input\");return h=[o[0],o[1],'<span style=\"display:inline; white-space:nowrap; padding:0px;\"><span></span><input type=\"text\" maxlength=\"'+l.maxlength+'\" style=\"width:100%\"/></span>'],a=s.create(\"text\",h,l),a.type=i.OBJECT_TYPE_INPUT,a.rendNodeLabel=a.rendNode.childNodes[0].childNodes[0],a.rendNodeInput=a.rendNode.childNodes[0].childNodes[1],a.rendNodeLabel.innerHTML=o[3],a.rendNodeInput.value=o[2],a.rendNodeTag=a.rendNodeInput,a.rendNodeTag.disabled=!!l.disabled,a.rendNodeLabel.id=a.rendNode.id+\"_label\",a.rendNodeInput.id=a.rendNode.id+\"_input\",a._value=o[2],a.update=function(){return this.needsUpdate&&(t.Text.prototype.update.call(this),this._value=this.rendNodeInput.value),this;},a.Value=function(){return this._value;},a.set=function(t){return this._value=t,this.rendNodeInput.value=t,this;},e.addEvent(a.rendNodeInput,\"input\",r.InputInputEventHandler,a),e.addEvent(a.rendNodeInput,\"mousedown\",function(t){i.exists(t.stopPropagation)&&t.stopPropagation();},a),e.addEvent(a.rendNodeInput,\"touchstart\",function(t){i.exists(t.stopPropagation)&&t.stopPropagation();},a),e.addEvent(a.rendNodeInput,\"pointerdown\",function(t){i.exists(t.stopPropagation)&&t.stopPropagation();},a),a.visPropOld.fontsize=\"0px\",s.renderer.updateTextStyle(a,!1),a;},t.registerElement(\"input\",t.createInput),{createInput:t.createInput};}),define(\"element/button\",[\"jxg\",\"utils/env\",\"utils/type\"],function(t,e,i){\"use strict\";var r={ButtonClickEventHandler:function(){this._handler&&this._handler(),this.board.update();}};return t.createButton=function(s,o,n){var a,h,l=i.copyAttributes(n,s.options,\"button\");return h=[o[0],o[1],'<button type=\"button\" style=\"width:100%;\"></button>'],a=s.create(\"text\",h,l),a.type=i.OBJECT_TYPE_BUTTON,a.rendNodeButton=a.rendNode.childNodes[0],a.rendNodeButton.id=a.rendNode.id+\"_button\",a.rendNodeButton.innerHTML=o[2],a.rendNodeTag=a.rendNodeButton,a.rendNodeTag.disabled=!!l.disabled,a.visPropOld.fontsize=\"0px\",s.renderer.updateTextStyle(a,!1),o[3]&&(i.isString(o[3])?(a._jc=new t.JessieCode(),a._jc.use(s),a._handler=function(){a._jc.parse(o[3]);}):a._handler=o[3]),e.addEvent(a.rendNodeButton,\"click\",r.ButtonClickEventHandler,a),e.addEvent(a.rendNodeButton,\"mousedown\",function(t){i.exists(t.stopPropagation)&&t.stopPropagation();},a),e.addEvent(a.rendNodeButton,\"touchstart\",function(t){i.exists(t.stopPropagation)&&t.stopPropagation();},a),e.addEvent(a.rendNodeButton,\"pointerdown\",function(t){i.exists(t.stopPropagation)&&t.stopPropagation();},a),a;},t.registerElement(\"button\",t.createButton),{createButton:t.createButton};}),define(\"../build/core.deps.js\",[\"jxg\",\"utils/env\",\"base/constants\",\"utils/type\",\"utils/xml\",\"utils/event\",\"utils/expect\",\"math/math\",\"math/ia\",\"math/extrapolate\",\"math/qdt\",\"math/numerics\",\"math/nlp\",\"math/plot\",\"math/metapost\",\"math/statistics\",\"math/symbolic\",\"math/geometry\",\"math/clip\",\"math/poly\",\"math/complex\",\"renderer/abstract\",\"reader/file\",\"parser/geonext\",\"base/board\",\"options\",\"jsxgraph\",\"base/element\",\"base/coords\",\"base/coordselement\",\"base/point\",\"base/line\",\"base/group\",\"base/circle\",\"element/conic\",\"base/polygon\",\"base/curve\",\"element/arc\",\"element/sector\",\"base/composition\",\"element/composition\",\"element/locus\",\"base/text\",\"base/image\",\"element/slider\",\"element/measure\",\"base/chart\",\"base/transformation\",\"base/turtle\",\"utils/color\",\"base/ticks\",\"utils/zip\",\"utils/base64\",\"utils/uuid\",\"utils/encoding\",\"server/server\",\"parser/datasource\",\"parser/jessiecode\",\"parser/ca\",\"utils/dump\",\"renderer/svg\",\"renderer/vml\",\"renderer/canvas\",\"renderer/no\",\"element/comb\",\"element/slopetriangle\",\"element/checkbox\",\"element/input\",\"element/button\"],function(t,e){\"use strict\";return e.isBrowser?window.JXG=t:e.isNode()&&\"object\"==\"object\"?module.exports=t:e.isWebWorker()&&(self.JXG=t),t;}),require(\"../build/core.deps.js\");});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/jsxgraph/distrib/jsxgraphcore.js?");

/***/ }),

/***/ "./node_modules/lodash/_DataView.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_DataView.js?");

/***/ }),

/***/ "./node_modules/lodash/_Hash.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var hashClear = __webpack_require__(/*! ./_hashClear */ \"./node_modules/lodash/_hashClear.js\"),\n    hashDelete = __webpack_require__(/*! ./_hashDelete */ \"./node_modules/lodash/_hashDelete.js\"),\n    hashGet = __webpack_require__(/*! ./_hashGet */ \"./node_modules/lodash/_hashGet.js\"),\n    hashHas = __webpack_require__(/*! ./_hashHas */ \"./node_modules/lodash/_hashHas.js\"),\n    hashSet = __webpack_require__(/*! ./_hashSet */ \"./node_modules/lodash/_hashSet.js\");\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_Hash.js?");

/***/ }),

/***/ "./node_modules/lodash/_ListCache.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ \"./node_modules/lodash/_listCacheClear.js\"),\n    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ \"./node_modules/lodash/_listCacheDelete.js\"),\n    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ \"./node_modules/lodash/_listCacheGet.js\"),\n    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ \"./node_modules/lodash/_listCacheHas.js\"),\n    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ \"./node_modules/lodash/_listCacheSet.js\");\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_ListCache.js?");

/***/ }),

/***/ "./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_Map.js?");

/***/ }),

/***/ "./node_modules/lodash/_MapCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ \"./node_modules/lodash/_mapCacheClear.js\"),\n    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ \"./node_modules/lodash/_mapCacheDelete.js\"),\n    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ \"./node_modules/lodash/_mapCacheGet.js\"),\n    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ \"./node_modules/lodash/_mapCacheHas.js\"),\n    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ \"./node_modules/lodash/_mapCacheSet.js\");\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_MapCache.js?");

/***/ }),

/***/ "./node_modules/lodash/_Promise.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_Promise.js?");

/***/ }),

/***/ "./node_modules/lodash/_Set.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_Set.js?");

/***/ }),

/***/ "./node_modules/lodash/_SetCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_SetCache.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var MapCache = __webpack_require__(/*! ./_MapCache */ \"./node_modules/lodash/_MapCache.js\"),\n    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ \"./node_modules/lodash/_setCacheAdd.js\"),\n    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ \"./node_modules/lodash/_setCacheHas.js\");\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_SetCache.js?");

/***/ }),

/***/ "./node_modules/lodash/_Stack.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var ListCache = __webpack_require__(/*! ./_ListCache */ \"./node_modules/lodash/_ListCache.js\"),\n    stackClear = __webpack_require__(/*! ./_stackClear */ \"./node_modules/lodash/_stackClear.js\"),\n    stackDelete = __webpack_require__(/*! ./_stackDelete */ \"./node_modules/lodash/_stackDelete.js\"),\n    stackGet = __webpack_require__(/*! ./_stackGet */ \"./node_modules/lodash/_stackGet.js\"),\n    stackHas = __webpack_require__(/*! ./_stackHas */ \"./node_modules/lodash/_stackHas.js\"),\n    stackSet = __webpack_require__(/*! ./_stackSet */ \"./node_modules/lodash/_stackSet.js\");\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_Stack.js?");

/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_Symbol.js?");

/***/ }),

/***/ "./node_modules/lodash/_Uint8Array.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_Uint8Array.js?");

/***/ }),

/***/ "./node_modules/lodash/_WeakMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\"),\n    root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_WeakMap.js?");

/***/ }),

/***/ "./node_modules/lodash/_arrayFilter.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_arrayFilter.js ***!
  \*********************************************/
/***/ ((module) => {

eval("/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_arrayFilter.js?");

/***/ }),

/***/ "./node_modules/lodash/_arrayLikeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseTimes = __webpack_require__(/*! ./_baseTimes */ \"./node_modules/lodash/_baseTimes.js\"),\n    isArguments = __webpack_require__(/*! ./isArguments */ \"./node_modules/lodash/isArguments.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isBuffer = __webpack_require__(/*! ./isBuffer */ \"./node_modules/lodash/isBuffer.js\"),\n    isIndex = __webpack_require__(/*! ./_isIndex */ \"./node_modules/lodash/_isIndex.js\"),\n    isTypedArray = __webpack_require__(/*! ./isTypedArray */ \"./node_modules/lodash/isTypedArray.js\");\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_arrayLikeKeys.js?");

/***/ }),

/***/ "./node_modules/lodash/_arrayMap.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_arrayMap.js ***!
  \******************************************/
/***/ ((module) => {

eval("/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_arrayMap.js?");

/***/ }),

/***/ "./node_modules/lodash/_arrayPush.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayPush.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_arrayPush.js?");

/***/ }),

/***/ "./node_modules/lodash/_arraySome.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arraySome.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_arraySome.js?");

/***/ }),

/***/ "./node_modules/lodash/_assocIndexOf.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var eq = __webpack_require__(/*! ./eq */ \"./node_modules/lodash/eq.js\");\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_assocIndexOf.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseFindIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_baseFindIndex.js ***!
  \***********************************************/
/***/ ((module) => {

eval("/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseFindIndex.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseFlatten.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseFlatten.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var arrayPush = __webpack_require__(/*! ./_arrayPush */ \"./node_modules/lodash/_arrayPush.js\"),\n    isFlattenable = __webpack_require__(/*! ./_isFlattenable */ \"./node_modules/lodash/_isFlattenable.js\");\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\n\n\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseFlatten.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_baseGet.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var castPath = __webpack_require__(/*! ./_castPath */ \"./node_modules/lodash/_castPath.js\"),\n    toKey = __webpack_require__(/*! ./_toKey */ \"./node_modules/lodash/_toKey.js\");\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseGet.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseGetAllKeys.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_baseGetAllKeys.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var arrayPush = __webpack_require__(/*! ./_arrayPush */ \"./node_modules/lodash/_arrayPush.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\");\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseGetAllKeys.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\"),\n    getRawTag = __webpack_require__(/*! ./_getRawTag */ \"./node_modules/lodash/_getRawTag.js\"),\n    objectToString = __webpack_require__(/*! ./_objectToString */ \"./node_modules/lodash/_objectToString.js\");\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseGetTag.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseHasIn.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseHasIn.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseHasIn.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseIsArguments.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseIsEqual.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsEqual.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ \"./node_modules/lodash/_baseIsEqualDeep.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseIsEqual.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseIsEqualDeep.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsEqualDeep.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Stack = __webpack_require__(/*! ./_Stack */ \"./node_modules/lodash/_Stack.js\"),\n    equalArrays = __webpack_require__(/*! ./_equalArrays */ \"./node_modules/lodash/_equalArrays.js\"),\n    equalByTag = __webpack_require__(/*! ./_equalByTag */ \"./node_modules/lodash/_equalByTag.js\"),\n    equalObjects = __webpack_require__(/*! ./_equalObjects */ \"./node_modules/lodash/_equalObjects.js\"),\n    getTag = __webpack_require__(/*! ./_getTag */ \"./node_modules/lodash/_getTag.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isBuffer = __webpack_require__(/*! ./isBuffer */ \"./node_modules/lodash/isBuffer.js\"),\n    isTypedArray = __webpack_require__(/*! ./isTypedArray */ \"./node_modules/lodash/isTypedArray.js\");\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseIsEqualDeep.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseIsMatch.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsMatch.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Stack = __webpack_require__(/*! ./_Stack */ \"./node_modules/lodash/_Stack.js\"),\n    baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ \"./node_modules/lodash/_baseIsEqual.js\");\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseIsMatch.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isFunction = __webpack_require__(/*! ./isFunction */ \"./node_modules/lodash/isFunction.js\"),\n    isMasked = __webpack_require__(/*! ./_isMasked */ \"./node_modules/lodash/_isMasked.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\"),\n    toSource = __webpack_require__(/*! ./_toSource */ \"./node_modules/lodash/_toSource.js\");\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseIsNative.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isLength = __webpack_require__(/*! ./isLength */ \"./node_modules/lodash/isLength.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseIsTypedArray.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseIteratee.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIteratee.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseMatches = __webpack_require__(/*! ./_baseMatches */ \"./node_modules/lodash/_baseMatches.js\"),\n    baseMatchesProperty = __webpack_require__(/*! ./_baseMatchesProperty */ \"./node_modules/lodash/_baseMatchesProperty.js\"),\n    identity = __webpack_require__(/*! ./identity */ \"./node_modules/lodash/identity.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    property = __webpack_require__(/*! ./property */ \"./node_modules/lodash/property.js\");\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseIteratee.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isPrototype = __webpack_require__(/*! ./_isPrototype */ \"./node_modules/lodash/_isPrototype.js\"),\n    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ \"./node_modules/lodash/_nativeKeys.js\");\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseKeys.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseMatches.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseMatches.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseIsMatch = __webpack_require__(/*! ./_baseIsMatch */ \"./node_modules/lodash/_baseIsMatch.js\"),\n    getMatchData = __webpack_require__(/*! ./_getMatchData */ \"./node_modules/lodash/_getMatchData.js\"),\n    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ \"./node_modules/lodash/_matchesStrictComparable.js\");\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseMatches.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseMatchesProperty.js":
/*!*****************************************************!*\
  !*** ./node_modules/lodash/_baseMatchesProperty.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ \"./node_modules/lodash/_baseIsEqual.js\"),\n    get = __webpack_require__(/*! ./get */ \"./node_modules/lodash/get.js\"),\n    hasIn = __webpack_require__(/*! ./hasIn */ \"./node_modules/lodash/hasIn.js\"),\n    isKey = __webpack_require__(/*! ./_isKey */ \"./node_modules/lodash/_isKey.js\"),\n    isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ \"./node_modules/lodash/_isStrictComparable.js\"),\n    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ \"./node_modules/lodash/_matchesStrictComparable.js\"),\n    toKey = __webpack_require__(/*! ./_toKey */ \"./node_modules/lodash/_toKey.js\");\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseMatchesProperty.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseProperty.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseProperty.js ***!
  \**********************************************/
/***/ ((module) => {

eval("/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseProperty.js?");

/***/ }),

/***/ "./node_modules/lodash/_basePropertyDeep.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_basePropertyDeep.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseGet = __webpack_require__(/*! ./_baseGet */ \"./node_modules/lodash/_baseGet.js\");\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_basePropertyDeep.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseRange.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseRange.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\n\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n\n  return result;\n}\n\nmodule.exports = baseRange;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseRange.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseTimes.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseTimes.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseToString.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseToString.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\"),\n    arrayMap = __webpack_require__(/*! ./_arrayMap */ \"./node_modules/lodash/_arrayMap.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseToString.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseTrim.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseTrim.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var trimmedEndIndex = __webpack_require__(/*! ./_trimmedEndIndex */ \"./node_modules/lodash/_trimmedEndIndex.js\");\n/** Used to match leading whitespace. */\n\n\nvar reTrimStart = /^\\s+/;\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\n\nfunction baseTrim(string) {\n  return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string;\n}\n\nmodule.exports = baseTrim;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseTrim.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_baseUnary.js?");

/***/ }),

/***/ "./node_modules/lodash/_cacheHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_cacheHas.js ***!
  \******************************************/
/***/ ((module) => {

eval("/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_cacheHas.js?");

/***/ }),

/***/ "./node_modules/lodash/_castPath.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_castPath.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isKey = __webpack_require__(/*! ./_isKey */ \"./node_modules/lodash/_isKey.js\"),\n    stringToPath = __webpack_require__(/*! ./_stringToPath */ \"./node_modules/lodash/_stringToPath.js\"),\n    toString = __webpack_require__(/*! ./toString */ \"./node_modules/lodash/toString.js\");\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_castPath.js?");

/***/ }),

/***/ "./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_coreJsData.js?");

/***/ }),

/***/ "./node_modules/lodash/_createFind.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_createFind.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ \"./node_modules/lodash/_baseIteratee.js\"),\n    isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"./node_modules/lodash/isArrayLike.js\"),\n    keys = __webpack_require__(/*! ./keys */ \"./node_modules/lodash/keys.js\");\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function (key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_createFind.js?");

/***/ }),

/***/ "./node_modules/lodash/_createRange.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_createRange.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseRange = __webpack_require__(/*! ./_baseRange */ \"./node_modules/lodash/_baseRange.js\"),\n    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ \"./node_modules/lodash/_isIterateeCall.js\"),\n    toFinite = __webpack_require__(/*! ./toFinite */ \"./node_modules/lodash/toFinite.js\");\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\n\n\nfunction createRange(fromRight) {\n  return function (start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    } // Ensure the sign of `-0` is preserved.\n\n\n    start = toFinite(start);\n\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n\n    step = step === undefined ? start < end ? 1 : -1 : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_createRange.js?");

/***/ }),

/***/ "./node_modules/lodash/_createRound.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_createRound.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\"),\n    toInteger = __webpack_require__(/*! ./toInteger */ \"./node_modules/lodash/toInteger.js\"),\n    toNumber = __webpack_require__(/*! ./toNumber */ \"./node_modules/lodash/toNumber.js\"),\n    toString = __webpack_require__(/*! ./toString */ \"./node_modules/lodash/toString.js\");\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeIsFinite = root.isFinite,\n    nativeMin = Math.min;\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\n\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function (number, precision) {\n    number = toNumber(number);\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n\n    if (precision && nativeIsFinite(number)) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n\n    return func(number);\n  };\n}\n\nmodule.exports = createRound;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_createRound.js?");

/***/ }),

/***/ "./node_modules/lodash/_equalArrays.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_equalArrays.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var SetCache = __webpack_require__(/*! ./_SetCache */ \"./node_modules/lodash/_SetCache.js\"),\n    arraySome = __webpack_require__(/*! ./_arraySome */ \"./node_modules/lodash/_arraySome.js\"),\n    cacheHas = __webpack_require__(/*! ./_cacheHas */ \"./node_modules/lodash/_cacheHas.js\");\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Check that cyclic values are equal.\n\n\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_equalArrays.js?");

/***/ }),

/***/ "./node_modules/lodash/_equalByTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_equalByTag.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\"),\n    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ \"./node_modules/lodash/_Uint8Array.js\"),\n    eq = __webpack_require__(/*! ./eq */ \"./node_modules/lodash/eq.js\"),\n    equalArrays = __webpack_require__(/*! ./_equalArrays */ \"./node_modules/lodash/_equalArrays.js\"),\n    mapToArray = __webpack_require__(/*! ./_mapToArray */ \"./node_modules/lodash/_mapToArray.js\"),\n    setToArray = __webpack_require__(/*! ./_setToArray */ \"./node_modules/lodash/_setToArray.js\");\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_equalByTag.js?");

/***/ }),

/***/ "./node_modules/lodash/_equalObjects.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_equalObjects.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ \"./node_modules/lodash/_getAllKeys.js\");\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Check that cyclic values are equal.\n\n\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_equalObjects.js?");

/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\nmodule.exports = freeGlobal;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_freeGlobal.js?");

/***/ }),

/***/ "./node_modules/lodash/_getAllKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getAllKeys.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ \"./node_modules/lodash/_baseGetAllKeys.js\"),\n    getSymbols = __webpack_require__(/*! ./_getSymbols */ \"./node_modules/lodash/_getSymbols.js\"),\n    keys = __webpack_require__(/*! ./keys */ \"./node_modules/lodash/keys.js\");\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_getAllKeys.js?");

/***/ }),

/***/ "./node_modules/lodash/_getMapData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isKeyable = __webpack_require__(/*! ./_isKeyable */ \"./node_modules/lodash/_isKeyable.js\");\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_getMapData.js?");

/***/ }),

/***/ "./node_modules/lodash/_getMatchData.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_getMatchData.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ \"./node_modules/lodash/_isStrictComparable.js\"),\n    keys = __webpack_require__(/*! ./keys */ \"./node_modules/lodash/keys.js\");\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_getMatchData.js?");

/***/ }),

/***/ "./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ \"./node_modules/lodash/_baseIsNative.js\"),\n    getValue = __webpack_require__(/*! ./_getValue */ \"./node_modules/lodash/_getValue.js\");\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_getNative.js?");

/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\");\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_getRawTag.js?");

/***/ }),

/***/ "./node_modules/lodash/_getSymbols.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getSymbols.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ \"./node_modules/lodash/_arrayFilter.js\"),\n    stubArray = __webpack_require__(/*! ./stubArray */ \"./node_modules/lodash/stubArray.js\");\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_getSymbols.js?");

/***/ }),

/***/ "./node_modules/lodash/_getTag.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var DataView = __webpack_require__(/*! ./_DataView */ \"./node_modules/lodash/_DataView.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"./node_modules/lodash/_Map.js\"),\n    Promise = __webpack_require__(/*! ./_Promise */ \"./node_modules/lodash/_Promise.js\"),\n    Set = __webpack_require__(/*! ./_Set */ \"./node_modules/lodash/_Set.js\"),\n    WeakMap = __webpack_require__(/*! ./_WeakMap */ \"./node_modules/lodash/_WeakMap.js\"),\n    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    toSource = __webpack_require__(/*! ./_toSource */ \"./node_modules/lodash/_toSource.js\");\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function (value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_getTag.js?");

/***/ }),

/***/ "./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/***/ ((module) => {

eval("/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_getValue.js?");

/***/ }),

/***/ "./node_modules/lodash/_hasPath.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hasPath.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var castPath = __webpack_require__(/*! ./_castPath */ \"./node_modules/lodash/_castPath.js\"),\n    isArguments = __webpack_require__(/*! ./isArguments */ \"./node_modules/lodash/isArguments.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isIndex = __webpack_require__(/*! ./_isIndex */ \"./node_modules/lodash/_isIndex.js\"),\n    isLength = __webpack_require__(/*! ./isLength */ \"./node_modules/lodash/isLength.js\"),\n    toKey = __webpack_require__(/*! ./_toKey */ \"./node_modules/lodash/_toKey.js\");\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_hasPath.js?");

/***/ }),

/***/ "./node_modules/lodash/_hashClear.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"./node_modules/lodash/_nativeCreate.js\");\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_hashClear.js?");

/***/ }),

/***/ "./node_modules/lodash/_hashDelete.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/***/ ((module) => {

eval("/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_hashDelete.js?");

/***/ }),

/***/ "./node_modules/lodash/_hashGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"./node_modules/lodash/_nativeCreate.js\");\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_hashGet.js?");

/***/ }),

/***/ "./node_modules/lodash/_hashHas.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"./node_modules/lodash/_nativeCreate.js\");\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_hashHas.js?");

/***/ }),

/***/ "./node_modules/lodash/_hashSet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"./node_modules/lodash/_nativeCreate.js\");\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_hashSet.js?");

/***/ }),

/***/ "./node_modules/lodash/_isFlattenable.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_isFlattenable.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\"),\n    isArguments = __webpack_require__(/*! ./isArguments */ \"./node_modules/lodash/isArguments.js\"),\n    isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\");\n/** Built-in value references. */\n\n\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\n\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_isFlattenable.js?");

/***/ }),

/***/ "./node_modules/lodash/_isIndex.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/***/ ((module) => {

eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_isIndex.js?");

/***/ }),

/***/ "./node_modules/lodash/_isIterateeCall.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_isIterateeCall.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var eq = __webpack_require__(/*! ./eq */ \"./node_modules/lodash/eq.js\"),\n    isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"./node_modules/lodash/isArrayLike.js\"),\n    isIndex = __webpack_require__(/*! ./_isIndex */ \"./node_modules/lodash/_isIndex.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\");\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\n\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq(object[index], value);\n  }\n\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_isIterateeCall.js?");

/***/ }),

/***/ "./node_modules/lodash/_isKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_isKey.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isArray = __webpack_require__(/*! ./isArray */ \"./node_modules/lodash/isArray.js\"),\n    isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_isKey.js?");

/***/ }),

/***/ "./node_modules/lodash/_isKeyable.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/***/ ((module) => {

eval("/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_isKeyable.js?");

/***/ }),

/***/ "./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var coreJsData = __webpack_require__(/*! ./_coreJsData */ \"./node_modules/lodash/_coreJsData.js\");\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_isMasked.js?");

/***/ }),

/***/ "./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/***/ ((module) => {

eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_isPrototype.js?");

/***/ }),

/***/ "./node_modules/lodash/_isStrictComparable.js":
/*!****************************************************!*\
  !*** ./node_modules/lodash/_isStrictComparable.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\");\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_isStrictComparable.js?");

/***/ }),

/***/ "./node_modules/lodash/_listCacheClear.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/***/ ((module) => {

eval("/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_listCacheClear.js?");

/***/ }),

/***/ "./node_modules/lodash/_listCacheDelete.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"./node_modules/lodash/_assocIndexOf.js\");\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_listCacheDelete.js?");

/***/ }),

/***/ "./node_modules/lodash/_listCacheGet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"./node_modules/lodash/_assocIndexOf.js\");\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_listCacheGet.js?");

/***/ }),

/***/ "./node_modules/lodash/_listCacheHas.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"./node_modules/lodash/_assocIndexOf.js\");\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_listCacheHas.js?");

/***/ }),

/***/ "./node_modules/lodash/_listCacheSet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"./node_modules/lodash/_assocIndexOf.js\");\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_listCacheSet.js?");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var Hash = __webpack_require__(/*! ./_Hash */ \"./node_modules/lodash/_Hash.js\"),\n    ListCache = __webpack_require__(/*! ./_ListCache */ \"./node_modules/lodash/_ListCache.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"./node_modules/lodash/_Map.js\");\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_mapCacheClear.js?");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getMapData = __webpack_require__(/*! ./_getMapData */ \"./node_modules/lodash/_getMapData.js\");\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_mapCacheDelete.js?");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getMapData = __webpack_require__(/*! ./_getMapData */ \"./node_modules/lodash/_getMapData.js\");\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_mapCacheGet.js?");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getMapData = __webpack_require__(/*! ./_getMapData */ \"./node_modules/lodash/_getMapData.js\");\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_mapCacheHas.js?");

/***/ }),

/***/ "./node_modules/lodash/_mapCacheSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getMapData = __webpack_require__(/*! ./_getMapData */ \"./node_modules/lodash/_getMapData.js\");\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_mapCacheSet.js?");

/***/ }),

/***/ "./node_modules/lodash/_mapToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_mapToArray.js ***!
  \********************************************/
/***/ ((module) => {

eval("/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_mapToArray.js?");

/***/ }),

/***/ "./node_modules/lodash/_matchesStrictComparable.js":
/*!*********************************************************!*\
  !*** ./node_modules/lodash/_matchesStrictComparable.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_matchesStrictComparable.js?");

/***/ }),

/***/ "./node_modules/lodash/_memoizeCapped.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_memoizeCapped.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var memoize = __webpack_require__(/*! ./memoize */ \"./node_modules/lodash/memoize.js\");\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_memoizeCapped.js?");

/***/ }),

/***/ "./node_modules/lodash/_nativeCreate.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var getNative = __webpack_require__(/*! ./_getNative */ \"./node_modules/lodash/_getNative.js\");\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_nativeCreate.js?");

/***/ }),

/***/ "./node_modules/lodash/_nativeKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var overArg = __webpack_require__(/*! ./_overArg */ \"./node_modules/lodash/_overArg.js\");\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_nativeKeys.js?");

/***/ }),

/***/ "./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"./node_modules/lodash/_freeGlobal.js\");\n/** Detect free variable `exports`. */\n\n\nvar freeExports =  true && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_nodeUtil.js?");

/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/***/ ((module) => {

eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_objectToString.js?");

/***/ }),

/***/ "./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/***/ ((module) => {

eval("/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_overArg.js?");

/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"./node_modules/lodash/_freeGlobal.js\");\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_root.js?");

/***/ }),

/***/ "./node_modules/lodash/_setCacheAdd.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheAdd.js ***!
  \*********************************************/
/***/ ((module) => {

eval("/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_setCacheAdd.js?");

/***/ }),

/***/ "./node_modules/lodash/_setCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheHas.js ***!
  \*********************************************/
/***/ ((module) => {

eval("/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_setCacheHas.js?");

/***/ }),

/***/ "./node_modules/lodash/_setToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_setToArray.js ***!
  \********************************************/
/***/ ((module) => {

eval("/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_setToArray.js?");

/***/ }),

/***/ "./node_modules/lodash/_stackClear.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var ListCache = __webpack_require__(/*! ./_ListCache */ \"./node_modules/lodash/_ListCache.js\");\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_stackClear.js?");

/***/ }),

/***/ "./node_modules/lodash/_stackDelete.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/***/ ((module) => {

eval("/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_stackDelete.js?");

/***/ }),

/***/ "./node_modules/lodash/_stackGet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/***/ ((module) => {

eval("/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_stackGet.js?");

/***/ }),

/***/ "./node_modules/lodash/_stackHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/***/ ((module) => {

eval("/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_stackHas.js?");

/***/ }),

/***/ "./node_modules/lodash/_stackSet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var ListCache = __webpack_require__(/*! ./_ListCache */ \"./node_modules/lodash/_ListCache.js\"),\n    Map = __webpack_require__(/*! ./_Map */ \"./node_modules/lodash/_Map.js\"),\n    MapCache = __webpack_require__(/*! ./_MapCache */ \"./node_modules/lodash/_MapCache.js\");\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_stackSet.js?");

/***/ }),

/***/ "./node_modules/lodash/_stringToPath.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_stringToPath.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var memoizeCapped = __webpack_require__(/*! ./_memoizeCapped */ \"./node_modules/lodash/_memoizeCapped.js\");\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_stringToPath.js?");

/***/ }),

/***/ "./node_modules/lodash/_toKey.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_toKey.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_toKey.js?");

/***/ }),

/***/ "./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/***/ ((module) => {

eval("/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_toSource.js?");

/***/ }),

/***/ "./node_modules/lodash/_trimmedEndIndex.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_trimmedEndIndex.js ***!
  \*************************************************/
/***/ ((module) => {

eval("/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\n\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/_trimmedEndIndex.js?");

/***/ }),

/***/ "./node_modules/lodash/eq.js":
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/***/ ((module) => {

eval("/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/eq.js?");

/***/ }),

/***/ "./node_modules/lodash/find.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/find.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var createFind = __webpack_require__(/*! ./_createFind */ \"./node_modules/lodash/_createFind.js\"),\n    findIndex = __webpack_require__(/*! ./findIndex */ \"./node_modules/lodash/findIndex.js\");\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/find.js?");

/***/ }),

/***/ "./node_modules/lodash/findIndex.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/findIndex.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ \"./node_modules/lodash/_baseFindIndex.js\"),\n    baseIteratee = __webpack_require__(/*! ./_baseIteratee */ \"./node_modules/lodash/_baseIteratee.js\"),\n    toInteger = __webpack_require__(/*! ./toInteger */ \"./node_modules/lodash/toInteger.js\");\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/findIndex.js?");

/***/ }),

/***/ "./node_modules/lodash/flatten.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/flatten.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseFlatten = __webpack_require__(/*! ./_baseFlatten */ \"./node_modules/lodash/_baseFlatten.js\");\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\n\n\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/flatten.js?");

/***/ }),

/***/ "./node_modules/lodash/get.js":
/*!************************************!*\
  !*** ./node_modules/lodash/get.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseGet = __webpack_require__(/*! ./_baseGet */ \"./node_modules/lodash/_baseGet.js\");\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/get.js?");

/***/ }),

/***/ "./node_modules/lodash/hasIn.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/hasIn.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseHasIn = __webpack_require__(/*! ./_baseHasIn */ \"./node_modules/lodash/_baseHasIn.js\"),\n    hasPath = __webpack_require__(/*! ./_hasPath */ \"./node_modules/lodash/_hasPath.js\");\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/hasIn.js?");

/***/ }),

/***/ "./node_modules/lodash/identity.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/identity.js ***!
  \*****************************************/
/***/ ((module) => {

eval("/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/identity.js?");

/***/ }),

/***/ "./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ \"./node_modules/lodash/_baseIsArguments.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isArguments.js?");

/***/ }),

/***/ "./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/***/ ((module) => {

eval("/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isArray.js?");

/***/ }),

/***/ "./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var isFunction = __webpack_require__(/*! ./isFunction */ \"./node_modules/lodash/isFunction.js\"),\n    isLength = __webpack_require__(/*! ./isLength */ \"./node_modules/lodash/isLength.js\");\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isArrayLike.js?");

/***/ }),

/***/ "./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\"),\n    stubFalse = __webpack_require__(/*! ./stubFalse */ \"./node_modules/lodash/stubFalse.js\");\n/** Detect free variable `exports`. */\n\n\nvar freeExports =  true && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isBuffer.js?");

/***/ }),

/***/ "./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\");\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isFunction.js?");

/***/ }),

/***/ "./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/***/ ((module) => {

eval("/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isLength.js?");

/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/***/ ((module) => {

eval("/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isObject.js?");

/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/***/ ((module) => {

eval("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isObjectLike.js?");

/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isSymbol.js?");

/***/ }),

/***/ "./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ \"./node_modules/lodash/_baseIsTypedArray.js\"),\n    baseUnary = __webpack_require__(/*! ./_baseUnary */ \"./node_modules/lodash/_baseUnary.js\"),\n    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ \"./node_modules/lodash/_nodeUtil.js\");\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/isTypedArray.js?");

/***/ }),

/***/ "./node_modules/lodash/keys.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/keys.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ \"./node_modules/lodash/_arrayLikeKeys.js\"),\n    baseKeys = __webpack_require__(/*! ./_baseKeys */ \"./node_modules/lodash/_baseKeys.js\"),\n    isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"./node_modules/lodash/isArrayLike.js\");\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/keys.js?");

/***/ }),

/***/ "./node_modules/lodash/memoize.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/memoize.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var MapCache = __webpack_require__(/*! ./_MapCache */ \"./node_modules/lodash/_MapCache.js\");\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function () {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/memoize.js?");

/***/ }),

/***/ "./node_modules/lodash/property.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/property.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseProperty = __webpack_require__(/*! ./_baseProperty */ \"./node_modules/lodash/_baseProperty.js\"),\n    basePropertyDeep = __webpack_require__(/*! ./_basePropertyDeep */ \"./node_modules/lodash/_basePropertyDeep.js\"),\n    isKey = __webpack_require__(/*! ./_isKey */ \"./node_modules/lodash/_isKey.js\"),\n    toKey = __webpack_require__(/*! ./_toKey */ \"./node_modules/lodash/_toKey.js\");\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/property.js?");

/***/ }),

/***/ "./node_modules/lodash/range.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/range.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var createRange = __webpack_require__(/*! ./_createRange */ \"./node_modules/lodash/_createRange.js\");\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\n\n\nvar range = createRange();\nmodule.exports = range;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/range.js?");

/***/ }),

/***/ "./node_modules/lodash/round.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/round.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var createRound = __webpack_require__(/*! ./_createRound */ \"./node_modules/lodash/_createRound.js\");\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\n\n\nvar round = createRound('round');\nmodule.exports = round;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/round.js?");

/***/ }),

/***/ "./node_modules/lodash/stubArray.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubArray.js ***!
  \******************************************/
/***/ ((module) => {

eval("/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/stubArray.js?");

/***/ }),

/***/ "./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/***/ ((module) => {

eval("/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/stubFalse.js?");

/***/ }),

/***/ "./node_modules/lodash/toFinite.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toFinite.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var toNumber = __webpack_require__(/*! ./toNumber */ \"./node_modules/lodash/toNumber.js\");\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/toFinite.js?");

/***/ }),

/***/ "./node_modules/lodash/toInteger.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/toInteger.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var toFinite = __webpack_require__(/*! ./toFinite */ \"./node_modules/lodash/toFinite.js\");\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/toInteger.js?");

/***/ }),

/***/ "./node_modules/lodash/toNumber.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toNumber.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseTrim = __webpack_require__(/*! ./_baseTrim */ \"./node_modules/lodash/_baseTrim.js\"),\n    isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\"),\n    isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/toNumber.js?");

/***/ }),

/***/ "./node_modules/lodash/toString.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toString.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var baseToString = __webpack_require__(/*! ./_baseToString */ \"./node_modules/lodash/_baseToString.js\");\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/lodash/toString.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/constants.js":
/*!**************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/constants.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTrue\": () => (/* binding */ createTrue),\n/* harmony export */   \"createFalse\": () => (/* binding */ createFalse),\n/* harmony export */   \"createNull\": () => (/* binding */ createNull),\n/* harmony export */   \"createInfinity\": () => (/* binding */ createInfinity),\n/* harmony export */   \"createNaN\": () => (/* binding */ createNaN),\n/* harmony export */   \"createPi\": () => (/* binding */ createPi),\n/* harmony export */   \"createTau\": () => (/* binding */ createTau),\n/* harmony export */   \"createE\": () => (/* binding */ createE),\n/* harmony export */   \"createPhi\": () => (/* binding */ createPhi),\n/* harmony export */   \"createLN2\": () => (/* binding */ createLN2),\n/* harmony export */   \"createLN10\": () => (/* binding */ createLN10),\n/* harmony export */   \"createLOG2E\": () => (/* binding */ createLOG2E),\n/* harmony export */   \"createLOG10E\": () => (/* binding */ createLOG10E),\n/* harmony export */   \"createSQRT1_2\": () => (/* binding */ createSQRT1_2),\n/* harmony export */   \"createSQRT2\": () => (/* binding */ createSQRT2),\n/* harmony export */   \"createI\": () => (/* binding */ createI),\n/* harmony export */   \"createUppercasePi\": () => (/* binding */ createUppercasePi),\n/* harmony export */   \"createUppercaseE\": () => (/* binding */ createUppercaseE),\n/* harmony export */   \"createVersion\": () => (/* binding */ createVersion)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./version.js */ \"./node_modules/mathjs/lib/esm/version.js\");\n/* harmony import */ var _utils_bignumber_constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/bignumber/constants.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/constants.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/constants.js\");\n\n\n\n\nvar createTrue = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)('true', [], () => true);\nvar createFalse = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)('false', [], () => false);\nvar createNull = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)('null', [], () => null);\nvar createInfinity = /* #__PURE__ */recreateFactory('Infinity', ['config', '?BigNumber'], _ref => {\n  var {\n    config,\n    BigNumber\n  } = _ref;\n  return config.number === 'BigNumber' ? new BigNumber(Infinity) : Infinity;\n});\nvar createNaN = /* #__PURE__ */recreateFactory('NaN', ['config', '?BigNumber'], _ref2 => {\n  var {\n    config,\n    BigNumber\n  } = _ref2;\n  return config.number === 'BigNumber' ? new BigNumber(NaN) : NaN;\n});\nvar createPi = /* #__PURE__ */recreateFactory('pi', ['config', '?BigNumber'], _ref3 => {\n  var {\n    config,\n    BigNumber\n  } = _ref3;\n  return config.number === 'BigNumber' ? (0,_utils_bignumber_constants_js__WEBPACK_IMPORTED_MODULE_1__.createBigNumberPi)(BigNumber) : _plain_number_index_js__WEBPACK_IMPORTED_MODULE_2__.pi;\n});\nvar createTau = /* #__PURE__ */recreateFactory('tau', ['config', '?BigNumber'], _ref4 => {\n  var {\n    config,\n    BigNumber\n  } = _ref4;\n  return config.number === 'BigNumber' ? (0,_utils_bignumber_constants_js__WEBPACK_IMPORTED_MODULE_1__.createBigNumberTau)(BigNumber) : _plain_number_index_js__WEBPACK_IMPORTED_MODULE_2__.tau;\n});\nvar createE = /* #__PURE__ */recreateFactory('e', ['config', '?BigNumber'], _ref5 => {\n  var {\n    config,\n    BigNumber\n  } = _ref5;\n  return config.number === 'BigNumber' ? (0,_utils_bignumber_constants_js__WEBPACK_IMPORTED_MODULE_1__.createBigNumberE)(BigNumber) : _plain_number_index_js__WEBPACK_IMPORTED_MODULE_2__.e;\n}); // golden ratio, (1+sqrt(5))/2\n\nvar createPhi = /* #__PURE__ */recreateFactory('phi', ['config', '?BigNumber'], _ref6 => {\n  var {\n    config,\n    BigNumber\n  } = _ref6;\n  return config.number === 'BigNumber' ? (0,_utils_bignumber_constants_js__WEBPACK_IMPORTED_MODULE_1__.createBigNumberPhi)(BigNumber) : _plain_number_index_js__WEBPACK_IMPORTED_MODULE_2__.phi;\n});\nvar createLN2 = /* #__PURE__ */recreateFactory('LN2', ['config', '?BigNumber'], _ref7 => {\n  var {\n    config,\n    BigNumber\n  } = _ref7;\n  return config.number === 'BigNumber' ? new BigNumber(2).ln() : Math.LN2;\n});\nvar createLN10 = /* #__PURE__ */recreateFactory('LN10', ['config', '?BigNumber'], _ref8 => {\n  var {\n    config,\n    BigNumber\n  } = _ref8;\n  return config.number === 'BigNumber' ? new BigNumber(10).ln() : Math.LN10;\n});\nvar createLOG2E = /* #__PURE__ */recreateFactory('LOG2E', ['config', '?BigNumber'], _ref9 => {\n  var {\n    config,\n    BigNumber\n  } = _ref9;\n  return config.number === 'BigNumber' ? new BigNumber(1).div(new BigNumber(2).ln()) : Math.LOG2E;\n});\nvar createLOG10E = /* #__PURE__ */recreateFactory('LOG10E', ['config', '?BigNumber'], _ref10 => {\n  var {\n    config,\n    BigNumber\n  } = _ref10;\n  return config.number === 'BigNumber' ? new BigNumber(1).div(new BigNumber(10).ln()) : Math.LOG10E;\n});\nvar createSQRT1_2 = /* #__PURE__ */recreateFactory( // eslint-disable-line camelcase\n'SQRT1_2', ['config', '?BigNumber'], _ref11 => {\n  var {\n    config,\n    BigNumber\n  } = _ref11;\n  return config.number === 'BigNumber' ? new BigNumber('0.5').sqrt() : Math.SQRT1_2;\n});\nvar createSQRT2 = /* #__PURE__ */recreateFactory('SQRT2', ['config', '?BigNumber'], _ref12 => {\n  var {\n    config,\n    BigNumber\n  } = _ref12;\n  return config.number === 'BigNumber' ? new BigNumber(2).sqrt() : Math.SQRT2;\n});\nvar createI = /* #__PURE__ */recreateFactory('i', ['Complex'], _ref13 => {\n  var {\n    Complex\n  } = _ref13;\n  return Complex.I;\n}); // for backward compatibility with v5\n\nvar createUppercasePi = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)('PI', ['pi'], _ref14 => {\n  var {\n    pi\n  } = _ref14;\n  return pi;\n});\nvar createUppercaseE = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)('E', ['e'], _ref15 => {\n  var {\n    e\n  } = _ref15;\n  return e;\n});\nvar createVersion = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)('version', [], () => _version_js__WEBPACK_IMPORTED_MODULE_3__.version); // helper function to create a factory with a flag recreateOnConfigChange\n// idea: allow passing optional properties to be attached to the factory function as 4th argument?\n\nfunction recreateFactory(name, dependencies, create) {\n  return (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, create, {\n    recreateOnConfigChange: true\n  });\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/constants.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/core/config.js":
/*!****************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/core/config.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_CONFIG\": () => (/* binding */ DEFAULT_CONFIG)\n/* harmony export */ });\nvar DEFAULT_CONFIG = {\n  // minimum relative difference between two compared values,\n  // used by all comparison functions\n  epsilon: 1e-12,\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\n  matrix: 'Matrix',\n  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n  number: 'number',\n  // number of significant digits in BigNumbers\n  precision: 64,\n  // predictable output type of functions. When true, output type depends only\n  // on the input types. When false (default), output type can vary depending\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n  // predictable is false, and returns `NaN` when true.\n  predictable: false,\n  // random seed for seeded pseudo random number generation\n  // null = randomly seed\n  randomSeed: null\n};\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/core/config.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/core/function/config.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/core/function/config.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MATRIX_OPTIONS\": () => (/* binding */ MATRIX_OPTIONS),\n/* harmony export */   \"NUMBER_OPTIONS\": () => (/* binding */ NUMBER_OPTIONS),\n/* harmony export */   \"configFactory\": () => (/* binding */ configFactory)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config.js */ \"./node_modules/mathjs/lib/esm/core/config.js\");\n\n\nvar MATRIX_OPTIONS = ['Matrix', 'Array']; // valid values for option matrix\n\nvar NUMBER_OPTIONS = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\nfunction configFactory(config, emit) {\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *\n   *     import { create, all } from 'mathjs'\n   *\n   *     // create a mathjs instance\n   *     const math = create(all)\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.evaluate('0.4')                // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.evaluate('0.4')                // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config(options) {\n    if (options) {\n      var prev = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.mapObject)(config, _utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone); // validate some of the options\n\n      validateOption(options, 'matrix', MATRIX_OPTIONS);\n      validateOption(options, 'number', NUMBER_OPTIONS); // merge options\n\n      (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(config, options);\n      var curr = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.mapObject)(config, _utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone);\n      var changes = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.mapObject)(options, _utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone); // emit 'config' event\n\n      emit('config', curr, prev, changes);\n      return curr;\n    } else {\n      return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.mapObject)(config, _utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone);\n    }\n  } // attach the valid options to the function so they can be extended\n\n\n  _config.MATRIX_OPTIONS = MATRIX_OPTIONS;\n  _config.NUMBER_OPTIONS = NUMBER_OPTIONS; // attach the config properties as readonly properties to the config function\n\n  Object.keys(_config_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CONFIG).forEach(key => {\n    Object.defineProperty(_config, key, {\n      get: () => config[key],\n      enumerable: true,\n      configurable: true\n    });\n  });\n  return _config;\n}\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\n\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1;\n}\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\n\n\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    // unknown value\n    console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". ' + 'Available options: ' + values.map(value => JSON.stringify(value)).join(', ') + '.');\n  }\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/core/function/config.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/core/function/typed.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/core/function/typed.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTyped\": () => (/* binding */ createTyped)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var typed_function__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! typed-function */ \"./node_modules/typed-function/typed-function.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_map_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/map.js */ \"./node_modules/mathjs/lib/esm/utils/map.js\");\n/**\n * Create a typed-function which checks the types of the arguments and\n * can match them against multiple provided signatures. The typed-function\n * automatically converts inputs in order to find a matching signature.\n * Typed functions throw informative errors in case of wrong input arguments.\n *\n * See the library [typed-function](https://github.com/josdejong/typed-function)\n * for detailed documentation.\n *\n * Syntax:\n *\n *     math.typed(name, signatures) : function\n *     math.typed(signatures) : function\n *\n * Examples:\n *\n *     // create a typed function with multiple types per argument (type union)\n *     const fn2 = typed({\n *       'number | boolean': function (b) {\n *         return 'b is a number or boolean'\n *       },\n *       'string, number | boolean': function (a, b) {\n *         return 'a is a string, b is a number or boolean'\n *       }\n *     })\n *\n *     // create a typed function with an any type argument\n *     const log = typed({\n *       'string, any': function (event, data) {\n *         console.log('event: ' + event + ', data: ' + JSON.stringify(data))\n *       }\n *     })\n *\n * @param {string} [name]                          Optional name for the typed-function\n * @param {Object<string, function>} signatures   Object with one or multiple function signatures\n * @returns {function} The created typed-function.\n */\n\n\n\n\n // returns a new instance of typed-function\n\nvar _createTyped2 = function _createTyped() {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped2 = typed_function__WEBPACK_IMPORTED_MODULE_0__.create;\n  return typed_function__WEBPACK_IMPORTED_MODULE_0__;\n};\n\nvar dependencies = ['?BigNumber', '?Complex', '?DenseMatrix', '?Fraction'];\n/**\n * Factory function for creating a new typed instance\n * @param {Object} dependencies   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\n\nvar createTyped = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)('typed', dependencies, function createTyped(_ref) {\n  var {\n    BigNumber,\n    Complex,\n    DenseMatrix,\n    Fraction\n  } = _ref; // TODO: typed-function must be able to silently ignore signatures with unknown data types\n  // get a new instance of typed-function\n\n  var typed = _createTyped2(); // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n\n\n  typed.types = [{\n    name: 'number',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isNumber\n  }, {\n    name: 'Complex',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isComplex\n  }, {\n    name: 'BigNumber',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBigNumber\n  }, {\n    name: 'Fraction',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isFraction\n  }, {\n    name: 'Unit',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isUnit\n  }, {\n    name: 'string',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isString\n  }, {\n    name: 'Chain',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isChain\n  }, {\n    name: 'Array',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isArray\n  }, {\n    name: 'Matrix',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMatrix\n  }, {\n    name: 'DenseMatrix',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isDenseMatrix\n  }, {\n    name: 'SparseMatrix',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isSparseMatrix\n  }, {\n    name: 'Range',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isRange\n  }, {\n    name: 'Index',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isIndex\n  }, {\n    name: 'boolean',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBoolean\n  }, {\n    name: 'ResultSet',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isResultSet\n  }, {\n    name: 'Help',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isHelp\n  }, {\n    name: 'function',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunction\n  }, {\n    name: 'Date',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isDate\n  }, {\n    name: 'RegExp',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isRegExp\n  }, {\n    name: 'null',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isNull\n  }, {\n    name: 'undefined',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isUndefined\n  }, {\n    name: 'AccessorNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isAccessorNode\n  }, {\n    name: 'ArrayNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isArrayNode\n  }, {\n    name: 'AssignmentNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isAssignmentNode\n  }, {\n    name: 'BlockNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBlockNode\n  }, {\n    name: 'ConditionalNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isConditionalNode\n  }, {\n    name: 'ConstantNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isConstantNode\n  }, {\n    name: 'FunctionNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunctionNode\n  }, {\n    name: 'FunctionAssignmentNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isFunctionAssignmentNode\n  }, {\n    name: 'IndexNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isIndexNode\n  }, {\n    name: 'Node',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isNode\n  }, {\n    name: 'ObjectNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isObjectNode\n  }, {\n    name: 'OperatorNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isOperatorNode\n  }, {\n    name: 'ParenthesisNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isParenthesisNode\n  }, {\n    name: 'RangeNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isRangeNode\n  }, {\n    name: 'SymbolNode',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isSymbolNode\n  }, {\n    name: 'Map',\n    test: _utils_map_js__WEBPACK_IMPORTED_MODULE_3__.isMap\n  }, {\n    name: 'Object',\n    test: _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isObject\n  } // order 'Object' last, it matches on other classes too\n  ];\n  typed.conversions = [{\n    from: 'number',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      } // note: conversion from number to BigNumber can fail if x has >15 digits\n\n\n      if ((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_4__.digits)(x) > 15) {\n        throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n      }\n\n      return new BigNumber(x);\n    }\n  }, {\n    from: 'number',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x, 0);\n    }\n  }, {\n    from: 'number',\n    to: 'string',\n    convert: function convert(x) {\n      return x + '';\n    }\n  }, {\n    from: 'BigNumber',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x.toNumber(), 0);\n    }\n  }, {\n    from: 'Fraction',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n    }\n  }, {\n    from: 'Fraction',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      return new Complex(x.valueOf(), 0);\n    }\n  }, {\n    from: 'number',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      var f = new Fraction(x);\n\n      if (f.valueOf() !== x) {\n        throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n      }\n\n      return f;\n    }\n  }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf()\n    //  }\n    // }, {\n    from: 'string',\n    to: 'number',\n    convert: function convert(x) {\n      var n = Number(x);\n\n      if (isNaN(n)) {\n        throw new Error('Cannot convert \"' + x + '\" to a number');\n      }\n\n      return n;\n    }\n  }, {\n    from: 'string',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n\n      try {\n        return new BigNumber(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      try {\n        return new Fraction(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Fraction');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n\n      try {\n        return new Complex(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Complex');\n      }\n    }\n  }, {\n    from: 'boolean',\n    to: 'number',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'boolean',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n\n      return new BigNumber(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n\n      return new Fraction(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'string',\n    convert: function convert(x) {\n      return String(x);\n    }\n  }, {\n    from: 'Array',\n    to: 'Matrix',\n    convert: function convert(array) {\n      if (!DenseMatrix) {\n        throwNoMatrix();\n      }\n\n      return new DenseMatrix(array);\n    }\n  }, {\n    from: 'Matrix',\n    to: 'Array',\n    convert: function convert(matrix) {\n      return matrix.valueOf();\n    }\n  }];\n  return typed;\n});\n\nfunction throwNoBignumber(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a BigNumber: no class 'BigNumber' provided\"));\n}\n\nfunction throwNoComplex(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Complex number: no class 'Complex' provided\"));\n}\n\nfunction throwNoMatrix() {\n  throw new Error('Cannot convert array into a Matrix: no class \\'DenseMatrix\\' provided');\n}\n\nfunction throwNoFraction(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Fraction, no class 'Fraction' provided.\"));\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/core/function/typed.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/entry/configReadonly.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/entry/configReadonly.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _core_config_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/config.js */ \"./node_modules/mathjs/lib/esm/core/config.js\");\n/* harmony import */ var _core_function_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/function/config.js */ \"./node_modules/mathjs/lib/esm/core/function/config.js\");\n\n\n // create a read-only version of config\n\nvar config = /* #__PURE__ */function config(options) {\n  if (options) {\n    throw new Error('The global config is readonly. \\n' + 'Please create a mathjs instance if you want to change the default configuration. \\n' + 'Example:\\n' + '\\n' + '  import { create, all } from \\'mathjs\\';\\n' + '  const mathjs = create(all);\\n' + '  mathjs.config({ number: \\'BigNumber\\' });\\n');\n  }\n\n  return Object.freeze(_core_config_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CONFIG);\n};\n\n(0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__.default)(config, _core_config_js__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CONFIG, {\n  MATRIX_OPTIONS: _core_function_config_js__WEBPACK_IMPORTED_MODULE_2__.MATRIX_OPTIONS,\n  NUMBER_OPTIONS: _core_function_config_js__WEBPACK_IMPORTED_MODULE_2__.NUMBER_OPTIONS\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/entry/configReadonly.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/entry/pureFunctionsAny.generated.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/entry/pureFunctionsAny.generated.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ResultSet\": () => (/* binding */ ResultSet),\n/* harmony export */   \"Complex\": () => (/* binding */ Complex),\n/* harmony export */   \"Range\": () => (/* binding */ Range),\n/* harmony export */   \"_false\": () => (/* binding */ _false),\n/* harmony export */   \"_null\": () => (/* binding */ _null),\n/* harmony export */   \"_true\": () => (/* binding */ _true),\n/* harmony export */   \"BigNumber\": () => (/* binding */ BigNumber),\n/* harmony export */   \"Matrix\": () => (/* binding */ Matrix),\n/* harmony export */   \"replacer\": () => (/* binding */ replacer),\n/* harmony export */   \"i\": () => (/* binding */ i),\n/* harmony export */   \"LN10\": () => (/* binding */ LN10),\n/* harmony export */   \"LOG10E\": () => (/* binding */ LOG10E),\n/* harmony export */   \"_NaN\": () => (/* binding */ _NaN),\n/* harmony export */   \"pi\": () => (/* binding */ pi),\n/* harmony export */   \"SQRT1_2\": () => (/* binding */ SQRT1_2),\n/* harmony export */   \"tau\": () => (/* binding */ tau),\n/* harmony export */   \"efimovFactor\": () => (/* binding */ efimovFactor),\n/* harmony export */   \"fineStructure\": () => (/* binding */ fineStructure),\n/* harmony export */   \"sackurTetrode\": () => (/* binding */ sackurTetrode),\n/* harmony export */   \"weakMixingAngle\": () => (/* binding */ weakMixingAngle),\n/* harmony export */   \"Fraction\": () => (/* binding */ Fraction),\n/* harmony export */   \"e\": () => (/* binding */ e),\n/* harmony export */   \"_Infinity\": () => (/* binding */ _Infinity),\n/* harmony export */   \"LOG2E\": () => (/* binding */ LOG2E),\n/* harmony export */   \"version\": () => (/* binding */ version),\n/* harmony export */   \"DenseMatrix\": () => (/* binding */ DenseMatrix),\n/* harmony export */   \"phi\": () => (/* binding */ phi),\n/* harmony export */   \"typed\": () => (/* binding */ typed),\n/* harmony export */   \"isInteger\": () => (/* binding */ isInteger),\n/* harmony export */   \"isNumeric\": () => (/* binding */ isNumeric),\n/* harmony export */   \"isPositive\": () => (/* binding */ isPositive),\n/* harmony export */   \"isNaN\": () => (/* binding */ isNaN),\n/* harmony export */   \"equalScalar\": () => (/* binding */ equalScalar),\n/* harmony export */   \"number\": () => (/* binding */ number),\n/* harmony export */   \"boolean\": () => (/* binding */ boolean),\n/* harmony export */   \"complex\": () => (/* binding */ complex),\n/* harmony export */   \"splitUnit\": () => (/* binding */ splitUnit),\n/* harmony export */   \"unaryPlus\": () => (/* binding */ unaryPlus),\n/* harmony export */   \"apply\": () => (/* binding */ apply),\n/* harmony export */   \"cube\": () => (/* binding */ cube),\n/* harmony export */   \"expm1\": () => (/* binding */ expm1),\n/* harmony export */   \"log10\": () => (/* binding */ log10),\n/* harmony export */   \"multiplyScalar\": () => (/* binding */ multiplyScalar),\n/* harmony export */   \"sign\": () => (/* binding */ sign),\n/* harmony export */   \"square\": () => (/* binding */ square),\n/* harmony export */   \"bitNot\": () => (/* binding */ bitNot),\n/* harmony export */   \"arg\": () => (/* binding */ arg),\n/* harmony export */   \"im\": () => (/* binding */ im),\n/* harmony export */   \"not\": () => (/* binding */ not),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"erf\": () => (/* binding */ erf),\n/* harmony export */   \"format\": () => (/* binding */ format),\n/* harmony export */   \"oct\": () => (/* binding */ oct),\n/* harmony export */   \"print\": () => (/* binding */ print),\n/* harmony export */   \"isPrime\": () => (/* binding */ isPrime),\n/* harmony export */   \"acos\": () => (/* binding */ acos),\n/* harmony export */   \"acot\": () => (/* binding */ acot),\n/* harmony export */   \"acsc\": () => (/* binding */ acsc),\n/* harmony export */   \"asec\": () => (/* binding */ asec),\n/* harmony export */   \"asin\": () => (/* binding */ asin),\n/* harmony export */   \"atan\": () => (/* binding */ atan),\n/* harmony export */   \"atanh\": () => (/* binding */ atanh),\n/* harmony export */   \"cosh\": () => (/* binding */ cosh),\n/* harmony export */   \"coth\": () => (/* binding */ coth),\n/* harmony export */   \"csch\": () => (/* binding */ csch),\n/* harmony export */   \"sech\": () => (/* binding */ sech),\n/* harmony export */   \"sinh\": () => (/* binding */ sinh),\n/* harmony export */   \"tanh\": () => (/* binding */ tanh),\n/* harmony export */   \"combinations\": () => (/* binding */ combinations),\n/* harmony export */   \"pickRandom\": () => (/* binding */ pickRandom),\n/* harmony export */   \"randomInt\": () => (/* binding */ randomInt),\n/* harmony export */   \"LN2\": () => (/* binding */ LN2),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"hasNumericValue\": () => (/* binding */ hasNumericValue),\n/* harmony export */   \"typeOf\": () => (/* binding */ typeOf),\n/* harmony export */   \"string\": () => (/* binding */ string),\n/* harmony export */   \"fraction\": () => (/* binding */ fraction),\n/* harmony export */   \"unaryMinus\": () => (/* binding */ unaryMinus),\n/* harmony export */   \"addScalar\": () => (/* binding */ addScalar),\n/* harmony export */   \"exp\": () => (/* binding */ exp),\n/* harmony export */   \"log2\": () => (/* binding */ log2),\n/* harmony export */   \"sqrt\": () => (/* binding */ sqrt),\n/* harmony export */   \"conj\": () => (/* binding */ conj),\n/* harmony export */   \"getMatrixDataType\": () => (/* binding */ getMatrixDataType),\n/* harmony export */   \"mode\": () => (/* binding */ mode),\n/* harmony export */   \"bin\": () => (/* binding */ bin),\n/* harmony export */   \"acosh\": () => (/* binding */ acosh),\n/* harmony export */   \"acsch\": () => (/* binding */ acsch),\n/* harmony export */   \"asinh\": () => (/* binding */ asinh),\n/* harmony export */   \"cos\": () => (/* binding */ cos),\n/* harmony export */   \"csc\": () => (/* binding */ csc),\n/* harmony export */   \"sin\": () => (/* binding */ sin),\n/* harmony export */   \"combinationsWithRep\": () => (/* binding */ combinationsWithRep),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"SQRT2\": () => (/* binding */ SQRT2),\n/* harmony export */   \"isNegative\": () => (/* binding */ isNegative),\n/* harmony export */   \"SparseMatrix\": () => (/* binding */ SparseMatrix),\n/* harmony export */   \"matrix\": () => (/* binding */ matrix),\n/* harmony export */   \"abs\": () => (/* binding */ abs),\n/* harmony export */   \"gcd\": () => (/* binding */ gcd),\n/* harmony export */   \"mod\": () => (/* binding */ mod),\n/* harmony export */   \"nthRoot\": () => (/* binding */ nthRoot),\n/* harmony export */   \"xgcd\": () => (/* binding */ xgcd),\n/* harmony export */   \"bitAnd\": () => (/* binding */ bitAnd),\n/* harmony export */   \"bitXor\": () => (/* binding */ bitXor),\n/* harmony export */   \"or\": () => (/* binding */ or),\n/* harmony export */   \"concat\": () => (/* binding */ concat),\n/* harmony export */   \"diag\": () => (/* binding */ diag),\n/* harmony export */   \"identity\": () => (/* binding */ identity),\n/* harmony export */   \"ones\": () => (/* binding */ ones),\n/* harmony export */   \"reshape\": () => (/* binding */ reshape),\n/* harmony export */   \"size\": () => (/* binding */ size),\n/* harmony export */   \"subset\": () => (/* binding */ subset),\n/* harmony export */   \"zeros\": () => (/* binding */ zeros),\n/* harmony export */   \"hex\": () => (/* binding */ hex),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"leftShift\": () => (/* binding */ leftShift),\n/* harmony export */   \"rightLogShift\": () => (/* binding */ rightLogShift),\n/* harmony export */   \"compare\": () => (/* binding */ compare),\n/* harmony export */   \"compareText\": () => (/* binding */ compareText),\n/* harmony export */   \"smaller\": () => (/* binding */ smaller),\n/* harmony export */   \"larger\": () => (/* binding */ larger),\n/* harmony export */   \"unequal\": () => (/* binding */ unequal),\n/* harmony export */   \"ImmutableDenseMatrix\": () => (/* binding */ ImmutableDenseMatrix),\n/* harmony export */   \"FibonacciHeap\": () => (/* binding */ FibonacciHeap),\n/* harmony export */   \"sparse\": () => (/* binding */ sparse),\n/* harmony export */   \"acoth\": () => (/* binding */ acoth),\n/* harmony export */   \"atan2\": () => (/* binding */ atan2),\n/* harmony export */   \"sec\": () => (/* binding */ sec),\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"dot\": () => (/* binding */ dot),\n/* harmony export */   \"composition\": () => (/* binding */ composition),\n/* harmony export */   \"isZero\": () => (/* binding */ isZero),\n/* harmony export */   \"matrixFromFunction\": () => (/* binding */ matrixFromFunction),\n/* harmony export */   \"cbrt\": () => (/* binding */ cbrt),\n/* harmony export */   \"floor\": () => (/* binding */ floor),\n/* harmony export */   \"multiply\": () => (/* binding */ multiply),\n/* harmony export */   \"dotMultiply\": () => (/* binding */ dotMultiply),\n/* harmony export */   \"re\": () => (/* binding */ re),\n/* harmony export */   \"flatten\": () => (/* binding */ flatten),\n/* harmony export */   \"resize\": () => (/* binding */ resize),\n/* harmony export */   \"squeeze\": () => (/* binding */ squeeze),\n/* harmony export */   \"to\": () => (/* binding */ to),\n/* harmony export */   \"pow\": () => (/* binding */ pow),\n/* harmony export */   \"dotPow\": () => (/* binding */ dotPow),\n/* harmony export */   \"rightArithShift\": () => (/* binding */ rightArithShift),\n/* harmony export */   \"compareNatural\": () => (/* binding */ compareNatural),\n/* harmony export */   \"equalText\": () => (/* binding */ equalText),\n/* harmony export */   \"largerEq\": () => (/* binding */ largerEq),\n/* harmony export */   \"partitionSelect\": () => (/* binding */ partitionSelect),\n/* harmony export */   \"Index\": () => (/* binding */ Index),\n/* harmony export */   \"asech\": () => (/* binding */ asech),\n/* harmony export */   \"tan\": () => (/* binding */ tan),\n/* harmony export */   \"setDifference\": () => (/* binding */ setDifference),\n/* harmony export */   \"setIntersect\": () => (/* binding */ setIntersect),\n/* harmony export */   \"setMultiplicity\": () => (/* binding */ setMultiplicity),\n/* harmony export */   \"setSize\": () => (/* binding */ setSize),\n/* harmony export */   \"trace\": () => (/* binding */ trace),\n/* harmony export */   \"quantileSeq\": () => (/* binding */ quantileSeq),\n/* harmony export */   \"gamma\": () => (/* binding */ gamma),\n/* harmony export */   \"bignumber\": () => (/* binding */ bignumber),\n/* harmony export */   \"matrixFromColumns\": () => (/* binding */ matrixFromColumns),\n/* harmony export */   \"lcm\": () => (/* binding */ lcm),\n/* harmony export */   \"bitOr\": () => (/* binding */ bitOr),\n/* harmony export */   \"kron\": () => (/* binding */ kron),\n/* harmony export */   \"transpose\": () => (/* binding */ transpose),\n/* harmony export */   \"numeric\": () => (/* binding */ numeric),\n/* harmony export */   \"and\": () => (/* binding */ and),\n/* harmony export */   \"smallerEq\": () => (/* binding */ smallerEq),\n/* harmony export */   \"sort\": () => (/* binding */ sort),\n/* harmony export */   \"min\": () => (/* binding */ min),\n/* harmony export */   \"cot\": () => (/* binding */ cot),\n/* harmony export */   \"setDistinct\": () => (/* binding */ setDistinct),\n/* harmony export */   \"setPowerset\": () => (/* binding */ setPowerset),\n/* harmony export */   \"index\": () => (/* binding */ index),\n/* harmony export */   \"sum\": () => (/* binding */ sum),\n/* harmony export */   \"factorial\": () => (/* binding */ factorial),\n/* harmony export */   \"permutations\": () => (/* binding */ permutations),\n/* harmony export */   \"matrixFromRows\": () => (/* binding */ matrixFromRows),\n/* harmony export */   \"subtract\": () => (/* binding */ subtract),\n/* harmony export */   \"cross\": () => (/* binding */ cross),\n/* harmony export */   \"range\": () => (/* binding */ range),\n/* harmony export */   \"row\": () => (/* binding */ row),\n/* harmony export */   \"prod\": () => (/* binding */ prod),\n/* harmony export */   \"equal\": () => (/* binding */ equal),\n/* harmony export */   \"max\": () => (/* binding */ max),\n/* harmony export */   \"setCartesian\": () => (/* binding */ setCartesian),\n/* harmony export */   \"setSymDifference\": () => (/* binding */ setSymDifference),\n/* harmony export */   \"ceil\": () => (/* binding */ ceil),\n/* harmony export */   \"xor\": () => (/* binding */ xor),\n/* harmony export */   \"count\": () => (/* binding */ count),\n/* harmony export */   \"ctranspose\": () => (/* binding */ ctranspose),\n/* harmony export */   \"deepEqual\": () => (/* binding */ deepEqual),\n/* harmony export */   \"setIsSubset\": () => (/* binding */ setIsSubset),\n/* harmony export */   \"fix\": () => (/* binding */ fix),\n/* harmony export */   \"diff\": () => (/* binding */ diff),\n/* harmony export */   \"divideScalar\": () => (/* binding */ divideScalar),\n/* harmony export */   \"nthRoots\": () => (/* binding */ nthRoots),\n/* harmony export */   \"lsolve\": () => (/* binding */ lsolve),\n/* harmony export */   \"lsolveAll\": () => (/* binding */ lsolveAll),\n/* harmony export */   \"Spa\": () => (/* binding */ Spa),\n/* harmony export */   \"setUnion\": () => (/* binding */ setUnion),\n/* harmony export */   \"lup\": () => (/* binding */ lup),\n/* harmony export */   \"slu\": () => (/* binding */ slu),\n/* harmony export */   \"det\": () => (/* binding */ det),\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"stirlingS2\": () => (/* binding */ stirlingS2),\n/* harmony export */   \"catalan\": () => (/* binding */ catalan),\n/* harmony export */   \"column\": () => (/* binding */ column),\n/* harmony export */   \"log\": () => (/* binding */ log),\n/* harmony export */   \"dotDivide\": () => (/* binding */ dotDivide),\n/* harmony export */   \"usolveAll\": () => (/* binding */ usolveAll),\n/* harmony export */   \"hypot\": () => (/* binding */ hypot),\n/* harmony export */   \"qr\": () => (/* binding */ qr),\n/* harmony export */   \"inv\": () => (/* binding */ inv),\n/* harmony export */   \"expm\": () => (/* binding */ expm),\n/* harmony export */   \"divide\": () => (/* binding */ divide),\n/* harmony export */   \"mean\": () => (/* binding */ mean),\n/* harmony export */   \"variance\": () => (/* binding */ variance),\n/* harmony export */   \"kldivergence\": () => (/* binding */ kldivergence),\n/* harmony export */   \"bellNumbers\": () => (/* binding */ bellNumbers),\n/* harmony export */   \"log1p\": () => (/* binding */ log1p),\n/* harmony export */   \"Unit\": () => (/* binding */ Unit),\n/* harmony export */   \"createUnit\": () => (/* binding */ createUnit),\n/* harmony export */   \"sqrtm\": () => (/* binding */ sqrtm),\n/* harmony export */   \"median\": () => (/* binding */ median),\n/* harmony export */   \"std\": () => (/* binding */ std),\n/* harmony export */   \"atomicMass\": () => (/* binding */ atomicMass),\n/* harmony export */   \"bohrMagneton\": () => (/* binding */ bohrMagneton),\n/* harmony export */   \"boltzmann\": () => (/* binding */ boltzmann),\n/* harmony export */   \"conductanceQuantum\": () => (/* binding */ conductanceQuantum),\n/* harmony export */   \"deuteronMass\": () => (/* binding */ deuteronMass),\n/* harmony export */   \"electronMass\": () => (/* binding */ electronMass),\n/* harmony export */   \"faraday\": () => (/* binding */ faraday),\n/* harmony export */   \"firstRadiation\": () => (/* binding */ firstRadiation),\n/* harmony export */   \"gravitationConstant\": () => (/* binding */ gravitationConstant),\n/* harmony export */   \"hartreeEnergy\": () => (/* binding */ hartreeEnergy),\n/* harmony export */   \"klitzing\": () => (/* binding */ klitzing),\n/* harmony export */   \"magneticConstant\": () => (/* binding */ magneticConstant),\n/* harmony export */   \"molarMass\": () => (/* binding */ molarMass),\n/* harmony export */   \"molarPlanckConstant\": () => (/* binding */ molarPlanckConstant),\n/* harmony export */   \"neutronMass\": () => (/* binding */ neutronMass),\n/* harmony export */   \"planckCharge\": () => (/* binding */ planckCharge),\n/* harmony export */   \"planckLength\": () => (/* binding */ planckLength),\n/* harmony export */   \"planckTemperature\": () => (/* binding */ planckTemperature),\n/* harmony export */   \"protonMass\": () => (/* binding */ protonMass),\n/* harmony export */   \"reducedPlanckConstant\": () => (/* binding */ reducedPlanckConstant),\n/* harmony export */   \"secondRadiation\": () => (/* binding */ secondRadiation),\n/* harmony export */   \"stefanBoltzmann\": () => (/* binding */ stefanBoltzmann),\n/* harmony export */   \"vacuumImpedance\": () => (/* binding */ vacuumImpedance),\n/* harmony export */   \"usolve\": () => (/* binding */ usolve),\n/* harmony export */   \"lusolve\": () => (/* binding */ lusolve),\n/* harmony export */   \"eigs\": () => (/* binding */ eigs),\n/* harmony export */   \"mad\": () => (/* binding */ mad),\n/* harmony export */   \"avogadro\": () => (/* binding */ avogadro),\n/* harmony export */   \"classicalElectronRadius\": () => (/* binding */ classicalElectronRadius),\n/* harmony export */   \"electricConstant\": () => (/* binding */ electricConstant),\n/* harmony export */   \"fermiCoupling\": () => (/* binding */ fermiCoupling),\n/* harmony export */   \"gravity\": () => (/* binding */ gravity),\n/* harmony export */   \"loschmidt\": () => (/* binding */ loschmidt),\n/* harmony export */   \"molarMassC12\": () => (/* binding */ molarMassC12),\n/* harmony export */   \"nuclearMagneton\": () => (/* binding */ nuclearMagneton),\n/* harmony export */   \"planckMass\": () => (/* binding */ planckMass),\n/* harmony export */   \"quantumOfCirculation\": () => (/* binding */ quantumOfCirculation),\n/* harmony export */   \"speedOfLight\": () => (/* binding */ speedOfLight),\n/* harmony export */   \"wienDisplacement\": () => (/* binding */ wienDisplacement),\n/* harmony export */   \"unit\": () => (/* binding */ unit),\n/* harmony export */   \"intersect\": () => (/* binding */ intersect),\n/* harmony export */   \"coulomb\": () => (/* binding */ coulomb),\n/* harmony export */   \"gasConstant\": () => (/* binding */ gasConstant),\n/* harmony export */   \"magneticFluxQuantum\": () => (/* binding */ magneticFluxQuantum),\n/* harmony export */   \"planckConstant\": () => (/* binding */ planckConstant),\n/* harmony export */   \"rydberg\": () => (/* binding */ rydberg),\n/* harmony export */   \"norm\": () => (/* binding */ norm),\n/* harmony export */   \"elementaryCharge\": () => (/* binding */ elementaryCharge),\n/* harmony export */   \"molarVolume\": () => (/* binding */ molarVolume),\n/* harmony export */   \"thomsonCrossSection\": () => (/* binding */ thomsonCrossSection),\n/* harmony export */   \"rotationMatrix\": () => (/* binding */ rotationMatrix),\n/* harmony export */   \"bohrRadius\": () => (/* binding */ bohrRadius),\n/* harmony export */   \"planckTime\": () => (/* binding */ planckTime),\n/* harmony export */   \"rotate\": () => (/* binding */ rotate),\n/* harmony export */   \"multinomial\": () => (/* binding */ multinomial),\n/* harmony export */   \"inverseConductanceQuantum\": () => (/* binding */ inverseConductanceQuantum)\n/* harmony export */ });\n/* harmony import */ var _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./configReadonly.js */ \"./node_modules/mathjs/lib/esm/entry/configReadonly.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/resultset/ResultSet.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/complex/Complex.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/Range.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/constants.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/Matrix.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/json/replacer.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/unit/physicalConstants.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/fraction/Fraction.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/DenseMatrix.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/core/function/typed.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/isInteger.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/isNumeric.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/isPositive.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/isNaN.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/equalScalar.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/number.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/boolean.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/complex/function/complex.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/unit/function/splitUnit.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/unaryPlus.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/apply.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/cube.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/expm1.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/log10.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/multiplyScalar.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/sign.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/square.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/bitwise/bitNot.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/complex/arg.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/complex/im.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/logical/not.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/filter.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/forEach.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/map.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/special/erf.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/string/format.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/string/oct.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/string/print.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/isPrime.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/acos.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/acot.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/acsc.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/asec.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/asin.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/atan.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/atanh.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/cosh.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/coth.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/csch.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/sech.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/sinh.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/tanh.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/combinations.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/pickRandom.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/randomInt.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/clone.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/hasNumericValue.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/typeOf.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/string.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/fraction/function/fraction.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/unaryMinus.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/addScalar.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/exp.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/log2.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/sqrt.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/complex/conj.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/mode.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/string/bin.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/acosh.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/acsch.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/asinh.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/cos.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/csc.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/sin.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/combinationsWithRep.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/random.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/isNegative.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/SparseMatrix.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/function/matrix.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/abs.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/gcd.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/mod.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/nthRoot.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/xgcd.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/bitwise/bitAnd.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/bitwise/bitXor.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/logical/or.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/concat.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/diag.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/identity.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/ones.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/reshape.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/size.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/subset.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/zeros.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/string/hex.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/round.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/bitwise/leftShift.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/bitwise/rightLogShift.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/compare.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/compareText.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/smaller.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/larger.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/unequal.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/ImmutableDenseMatrix.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/FibonacciHeap.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/function/sparse.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/acoth.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/atan2.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/sec.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/add.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/dot.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/combinatorics/composition.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/isZero.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/matrixFromFunction.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/cbrt.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/floor.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/multiply.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/dotMultiply.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/complex/re.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/flatten.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/resize.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/squeeze.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/unit/to.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/pow.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/dotPow.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/bitwise/rightArithShift.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/compareNatural.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/equalText.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/largerEq.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/partitionSelect.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/MatrixIndex.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/asech.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/tan.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setDifference.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setIntersect.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setMultiplicity.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setSize.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/trace.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/quantileSeq.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/gamma.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/bignumber/function/bignumber.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/matrixFromColumns.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/lcm.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/bitwise/bitOr.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/kron.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/transpose.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/utils/numeric.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/logical/and.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/smallerEq.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/sort.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/min.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/trigonometry/cot.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setDistinct.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setPowerset.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/function/index.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/sum.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/factorial.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/permutations.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/matrixFromRows.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/subtract.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/cross.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/range.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/row.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/prod.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/equal.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/max.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setCartesian.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setSymDifference.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/ceil.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/logical/xor.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/count.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/ctranspose.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/relational/deepEqual.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setIsSubset.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/fix.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/diff.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/divideScalar.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/nthRoots.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/lsolve.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/lsolveAll.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/matrix/Spa.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/set/setUnion.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/algebra/decomposition/lup.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/algebra/decomposition/slu.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/det.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/geometry/distance.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/combinatorics/stirlingS2.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/combinatorics/catalan.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/column.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/log.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/dotDivide.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/usolveAll.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/hypot.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/algebra/decomposition/qr.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/inv.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/expm.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/divide.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/mean.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/variance.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/kldivergence.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/combinatorics/bellNumbers.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/log1p.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/unit/Unit.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/unit/function/createUnit.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/sqrtm.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/median.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/std.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/usolve.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/lusolve.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/eigs.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/statistics/mad.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/type/unit/function/unit.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/geometry/intersect.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/arithmetic/norm.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/rotationMatrix.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/matrix/rotate.js\");\n/* harmony import */ var _factoriesAny_js__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(/*! ../factoriesAny.js */ \"./node_modules/mathjs/lib/esm/function/probability/multinomial.js\");\n/**\n * THIS FILE IS AUTO-GENERATED\n * DON'T MAKE CHANGES HERE\n */\n\n\nvar ResultSet = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_0__.createResultSet)({});\nvar Complex = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_1__.createComplexClass)({});\nvar Range = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_2__.createRangeClass)({});\nvar _false = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createFalse)({});\nvar _null = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createNull)({});\nvar _true = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createTrue)({});\nvar BigNumber = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_4__.createBigNumberClass)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar Matrix = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_6__.createMatrixClass)({});\nvar replacer = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_7__.createReplacer)({});\nvar i = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createI)({\n  Complex\n});\nvar LN10 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createLN10)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar LOG10E = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createLOG10E)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar _NaN = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createNaN)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar pi = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createPi)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar SQRT1_2 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createSQRT1_2)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar tau = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createTau)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar efimovFactor = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createEfimovFactor)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar fineStructure = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createFineStructure)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar sackurTetrode = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createSackurTetrode)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar weakMixingAngle = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createWeakMixingAngle)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar Fraction = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_9__.createFractionClass)({});\nvar e = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createE)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar _Infinity = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createInfinity)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar LOG2E = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createLOG2E)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar version = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createVersion)({});\nvar DenseMatrix = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_10__.createDenseMatrixClass)({\n  Matrix\n});\nvar phi = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createPhi)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar typed = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_11__.createTyped)({\n  BigNumber,\n  Complex,\n  DenseMatrix,\n  Fraction\n});\nvar isInteger = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_12__.createIsInteger)({\n  typed\n});\nvar isNumeric = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_13__.createIsNumeric)({\n  typed\n});\nvar isPositive = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_14__.createIsPositive)({\n  typed\n});\nvar isNaN = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_15__.createIsNaN)({\n  typed\n});\nvar equalScalar = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_16__.createEqualScalar)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar number = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_17__.createNumber)({\n  typed\n});\nvar boolean = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_18__.createBoolean)({\n  typed\n});\nvar complex = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_19__.createComplex)({\n  Complex,\n  typed\n});\nvar splitUnit = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_20__.createSplitUnit)({\n  typed\n});\nvar unaryPlus = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_21__.createUnaryPlus)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar apply = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_22__.createApply)({\n  isInteger,\n  typed\n});\nvar cube = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_23__.createCube)({\n  typed\n});\nvar expm1 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_24__.createExpm1)({\n  Complex,\n  typed\n});\nvar log10 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_25__.createLog10)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar multiplyScalar = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_26__.createMultiplyScalar)({\n  typed\n});\nvar sign = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_27__.createSign)({\n  BigNumber,\n  Fraction,\n  complex,\n  typed\n});\nvar square = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_28__.createSquare)({\n  typed\n});\nvar bitNot = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_29__.createBitNot)({\n  typed\n});\nvar arg = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_30__.createArg)({\n  typed\n});\nvar im = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_31__.createIm)({\n  typed\n});\nvar not = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_32__.createNot)({\n  typed\n});\nvar filter = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_33__.createFilter)({\n  typed\n});\nvar forEach = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_34__.createForEach)({\n  typed\n});\nvar map = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_35__.createMap)({\n  typed\n});\nvar erf = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_36__.createErf)({\n  typed\n});\nvar format = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_37__.createFormat)({\n  typed\n});\nvar oct = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_38__.createOct)({\n  format,\n  typed\n});\nvar print = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_39__.createPrint)({\n  typed\n});\nvar isPrime = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_40__.createIsPrime)({\n  typed\n});\nvar acos = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_41__.createAcos)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar acot = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_42__.createAcot)({\n  BigNumber,\n  typed\n});\nvar acsc = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_43__.createAcsc)({\n  BigNumber,\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar asec = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_44__.createAsec)({\n  BigNumber,\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar asin = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_45__.createAsin)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar atan = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_46__.createAtan)({\n  typed\n});\nvar atanh = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_47__.createAtanh)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar cosh = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_48__.createCosh)({\n  typed\n});\nvar coth = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_49__.createCoth)({\n  BigNumber,\n  typed\n});\nvar csch = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_50__.createCsch)({\n  BigNumber,\n  typed\n});\nvar sech = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_51__.createSech)({\n  BigNumber,\n  typed\n});\nvar sinh = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_52__.createSinh)({\n  typed\n});\nvar tanh = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_53__.createTanh)({\n  typed\n});\nvar combinations = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_54__.createCombinations)({\n  typed\n});\nvar pickRandom = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_55__.createPickRandom)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar randomInt = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_56__.createRandomInt)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar LN2 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createLN2)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar clone = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_57__.createClone)({\n  typed\n});\nvar hasNumericValue = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_58__.createHasNumericValue)({\n  isNumeric,\n  typed\n});\nvar typeOf = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_59__.createTypeOf)({\n  typed\n});\nvar string = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_60__.createString)({\n  typed\n});\nvar fraction = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_61__.createFraction)({\n  Fraction,\n  typed\n});\nvar unaryMinus = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_62__.createUnaryMinus)({\n  typed\n});\nvar addScalar = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_63__.createAddScalar)({\n  typed\n});\nvar exp = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_64__.createExp)({\n  typed\n});\nvar log2 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_65__.createLog2)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar sqrt = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_66__.createSqrt)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar conj = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_67__.createConj)({\n  typed\n});\nvar getMatrixDataType = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_68__.createGetMatrixDataType)({\n  typed\n});\nvar mode = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_69__.createMode)({\n  isNaN,\n  isNumeric,\n  typed\n});\nvar bin = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_70__.createBin)({\n  format,\n  typed\n});\nvar acosh = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_71__.createAcosh)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar acsch = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_72__.createAcsch)({\n  BigNumber,\n  typed\n});\nvar asinh = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_73__.createAsinh)({\n  typed\n});\nvar cos = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_74__.createCos)({\n  typed\n});\nvar csc = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_75__.createCsc)({\n  BigNumber,\n  typed\n});\nvar sin = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_76__.createSin)({\n  typed\n});\nvar combinationsWithRep = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_77__.createCombinationsWithRep)({\n  typed\n});\nvar random = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_78__.createRandom)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar SQRT2 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_3__.createSQRT2)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar isNegative = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_79__.createIsNegative)({\n  typed\n});\nvar SparseMatrix = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_80__.createSparseMatrixClass)({\n  Matrix,\n  equalScalar,\n  typed\n});\nvar matrix = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_81__.createMatrix)({\n  DenseMatrix,\n  Matrix,\n  SparseMatrix,\n  typed\n});\nvar abs = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_82__.createAbs)({\n  typed\n});\nvar gcd = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_83__.createGcd)({\n  BigNumber,\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed\n});\nvar mod = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_84__.createMod)({\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed\n});\nvar nthRoot = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_85__.createNthRoot)({\n  BigNumber,\n  equalScalar,\n  matrix,\n  typed\n});\nvar xgcd = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_86__.createXgcd)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix,\n  typed\n});\nvar bitAnd = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_87__.createBitAnd)({\n  equalScalar,\n  matrix,\n  typed\n});\nvar bitXor = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_88__.createBitXor)({\n  DenseMatrix,\n  matrix,\n  typed\n});\nvar or = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_89__.createOr)({\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed\n});\nvar concat = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_90__.createConcat)({\n  isInteger,\n  matrix,\n  typed\n});\nvar diag = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_91__.createDiag)({\n  DenseMatrix,\n  SparseMatrix,\n  matrix,\n  typed\n});\nvar identity = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_92__.createIdentity)({\n  BigNumber,\n  DenseMatrix,\n  SparseMatrix,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix,\n  typed\n});\nvar ones = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_93__.createOnes)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix,\n  typed\n});\nvar reshape = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_94__.createReshape)({\n  isInteger,\n  matrix,\n  typed\n});\nvar size = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_95__.createSize)({\n  matrix,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar subset = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_96__.createSubset)({\n  matrix,\n  typed\n});\nvar zeros = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_97__.createZeros)({\n  BigNumber,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix,\n  typed\n});\nvar hex = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_98__.createHex)({\n  format,\n  typed\n});\nvar round = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_99__.createRound)({\n  BigNumber,\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed,\n  zeros\n});\nvar leftShift = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_100__.createLeftShift)({\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed,\n  zeros\n});\nvar rightLogShift = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_101__.createRightLogShift)({\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed,\n  zeros\n});\nvar compare = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_102__.createCompare)({\n  BigNumber,\n  DenseMatrix,\n  Fraction,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  equalScalar,\n  matrix,\n  typed\n});\nvar compareText = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_103__.createCompareText)({\n  matrix,\n  typed\n});\nvar smaller = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_104__.createSmaller)({\n  DenseMatrix,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix,\n  typed\n});\nvar larger = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_105__.createLarger)({\n  DenseMatrix,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix,\n  typed\n});\nvar unequal = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_106__.createUnequal)({\n  DenseMatrix,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  equalScalar,\n  matrix,\n  typed\n});\nvar ImmutableDenseMatrix = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_107__.createImmutableDenseMatrixClass)({\n  DenseMatrix,\n  smaller\n});\nvar FibonacciHeap = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_108__.createFibonacciHeapClass)({\n  larger,\n  smaller\n});\nvar sparse = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_109__.createSparse)({\n  SparseMatrix,\n  typed\n});\nvar acoth = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_110__.createAcoth)({\n  BigNumber,\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar atan2 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_111__.createAtan2)({\n  BigNumber,\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed\n});\nvar sec = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_112__.createSec)({\n  BigNumber,\n  typed\n});\nvar add = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_113__.createAdd)({\n  DenseMatrix,\n  SparseMatrix,\n  addScalar,\n  equalScalar,\n  matrix,\n  typed\n});\nvar dot = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_114__.createDot)({\n  addScalar,\n  conj,\n  multiplyScalar,\n  size,\n  typed\n});\nvar composition = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_115__.createComposition)({\n  addScalar,\n  combinations,\n  isInteger,\n  isNegative,\n  isPositive,\n  larger,\n  typed\n});\nvar isZero = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_116__.createIsZero)({\n  typed\n});\nvar matrixFromFunction = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_117__.createMatrixFromFunction)({\n  isZero,\n  matrix,\n  typed\n});\nvar cbrt = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_118__.createCbrt)({\n  BigNumber,\n  Complex,\n  Fraction,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  isNegative,\n  matrix,\n  typed,\n  unaryMinus\n});\nvar floor = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_119__.createFloor)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  equalScalar,\n  matrix,\n  round,\n  typed\n});\nvar multiply = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_120__.createMultiply)({\n  addScalar,\n  dot,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  typed\n});\nvar dotMultiply = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_121__.createDotMultiply)({\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  typed\n});\nvar re = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_122__.createRe)({\n  typed\n});\nvar flatten = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_123__.createFlatten)({\n  matrix,\n  typed\n});\nvar resize = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_124__.createResize)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix\n});\nvar squeeze = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_125__.createSqueeze)({\n  matrix,\n  typed\n});\nvar to = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_126__.createTo)({\n  matrix,\n  typed\n});\nvar pow = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_127__.createPow)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  fraction,\n  identity,\n  matrix,\n  multiply,\n  number,\n  typed\n});\nvar dotPow = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_128__.createDotPow)({\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  pow,\n  typed\n});\nvar rightArithShift = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_129__.createRightArithShift)({\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed,\n  zeros\n});\nvar compareNatural = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_130__.createCompareNatural)({\n  compare,\n  typed\n});\nvar equalText = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_131__.createEqualText)({\n  compareText,\n  isZero,\n  typed\n});\nvar largerEq = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_132__.createLargerEq)({\n  DenseMatrix,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix,\n  typed\n});\nvar partitionSelect = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_133__.createPartitionSelect)({\n  compare,\n  isNaN,\n  isNumeric,\n  typed\n});\nvar Index = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_134__.createIndexClass)({\n  ImmutableDenseMatrix\n});\nvar asech = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_135__.createAsech)({\n  BigNumber,\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  typed\n});\nvar tan = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_136__.createTan)({\n  typed\n});\nvar setDifference = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_137__.createSetDifference)({\n  DenseMatrix,\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nvar setIntersect = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_138__.createSetIntersect)({\n  DenseMatrix,\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nvar setMultiplicity = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_139__.createSetMultiplicity)({\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nvar setSize = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_140__.createSetSize)({\n  compareNatural,\n  typed\n});\nvar trace = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_141__.createTrace)({\n  add,\n  matrix,\n  typed\n});\nvar quantileSeq = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_142__.createQuantileSeq)({\n  add,\n  compare,\n  multiply,\n  partitionSelect,\n  typed\n});\nvar gamma = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_143__.createGamma)({\n  BigNumber,\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  multiplyScalar,\n  pow,\n  typed\n});\nvar bignumber = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_144__.createBignumber)({\n  BigNumber,\n  typed\n});\nvar matrixFromColumns = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_145__.createMatrixFromColumns)({\n  flatten,\n  matrix,\n  size,\n  typed\n});\nvar lcm = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_146__.createLcm)({\n  equalScalar,\n  matrix,\n  typed\n});\nvar bitOr = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_147__.createBitOr)({\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed\n});\nvar kron = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_148__.createKron)({\n  matrix,\n  multiplyScalar,\n  typed\n});\nvar transpose = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_149__.createTranspose)({\n  matrix,\n  typed\n});\nvar numeric = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_150__.createNumeric)({\n  bignumber,\n  fraction,\n  number\n});\nvar and = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_151__.createAnd)({\n  equalScalar,\n  matrix,\n  not,\n  typed,\n  zeros\n});\nvar smallerEq = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_152__.createSmallerEq)({\n  DenseMatrix,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  matrix,\n  typed\n});\nvar sort = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_153__.createSort)({\n  compare,\n  compareNatural,\n  matrix,\n  typed\n});\nvar min = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_154__.createMin)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  numeric,\n  smaller,\n  typed\n});\nvar cot = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_155__.createCot)({\n  BigNumber,\n  typed\n});\nvar setDistinct = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_156__.createSetDistinct)({\n  DenseMatrix,\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nvar setPowerset = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_157__.createSetPowerset)({\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nvar index = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_158__.createIndex)({\n  Index,\n  typed\n});\nvar sum = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_159__.createSum)({\n  add,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  numeric,\n  typed\n});\nvar factorial = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_160__.createFactorial)({\n  gamma,\n  typed\n});\nvar permutations = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_161__.createPermutations)({\n  factorial,\n  typed\n});\nvar matrixFromRows = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_162__.createMatrixFromRows)({\n  flatten,\n  matrix,\n  size,\n  typed\n});\nvar subtract = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_163__.createSubtract)({\n  DenseMatrix,\n  addScalar,\n  equalScalar,\n  matrix,\n  typed,\n  unaryMinus\n});\nvar cross = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_164__.createCross)({\n  matrix,\n  multiply,\n  subtract,\n  typed\n});\nvar range = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_165__.createRange)({\n  bignumber,\n  matrix,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  larger,\n  largerEq,\n  smaller,\n  smallerEq,\n  typed\n});\nvar row = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_166__.createRow)({\n  Index,\n  matrix,\n  range,\n  typed\n});\nvar prod = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_167__.createProd)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  multiplyScalar,\n  numeric,\n  typed\n});\nvar equal = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_168__.createEqual)({\n  DenseMatrix,\n  equalScalar,\n  matrix,\n  typed\n});\nvar max = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_169__.createMax)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  larger,\n  numeric,\n  typed\n});\nvar setCartesian = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_170__.createSetCartesian)({\n  DenseMatrix,\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nvar setSymDifference = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_171__.createSetSymDifference)({\n  Index,\n  concat,\n  setDifference,\n  size,\n  subset,\n  typed\n});\nvar ceil = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_172__.createCeil)({\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  equalScalar,\n  matrix,\n  round,\n  typed\n});\nvar xor = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_173__.createXor)({\n  DenseMatrix,\n  matrix,\n  typed\n});\nvar count = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_174__.createCount)({\n  prod,\n  size,\n  typed\n});\nvar ctranspose = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_175__.createCtranspose)({\n  conj,\n  transpose,\n  typed\n});\nvar deepEqual = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_176__.createDeepEqual)({\n  equal,\n  typed\n});\nvar setIsSubset = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_177__.createSetIsSubset)({\n  Index,\n  compareNatural,\n  size,\n  subset,\n  typed\n});\nvar fix = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_178__.createFix)({\n  Complex,\n  ceil,\n  floor,\n  matrix,\n  typed\n});\nvar diff = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_179__.createDiff)({\n  matrix,\n  number,\n  subtract,\n  typed\n});\nvar divideScalar = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_180__.createDivideScalar)({\n  numeric,\n  typed\n});\nvar nthRoots = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_181__.createNthRoots)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  divideScalar,\n  typed\n});\nvar lsolve = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_182__.createLsolve)({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  subtract,\n  typed\n});\nvar lsolveAll = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_183__.createLsolveAll)({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  subtract,\n  typed\n});\nvar Spa = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_184__.createSpaClass)({\n  FibonacciHeap,\n  addScalar,\n  equalScalar\n});\nvar setUnion = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_185__.createSetUnion)({\n  Index,\n  concat,\n  setIntersect,\n  setSymDifference,\n  size,\n  subset,\n  typed\n});\nvar lup = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_186__.createLup)({\n  DenseMatrix,\n  Spa,\n  SparseMatrix,\n  abs,\n  addScalar,\n  divideScalar,\n  equalScalar,\n  larger,\n  matrix,\n  multiplyScalar,\n  subtract,\n  typed,\n  unaryMinus\n});\nvar slu = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_187__.createSlu)({\n  SparseMatrix,\n  abs,\n  add,\n  divideScalar,\n  larger,\n  largerEq,\n  multiply,\n  subtract,\n  transpose,\n  typed\n});\nvar det = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_188__.createDet)({\n  lup,\n  matrix,\n  multiply,\n  subtract,\n  typed,\n  unaryMinus\n});\nvar distance = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_189__.createDistance)({\n  abs,\n  addScalar,\n  divideScalar,\n  multiplyScalar,\n  sqrt,\n  subtract,\n  typed,\n  unaryMinus\n});\nvar stirlingS2 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_190__.createStirlingS2)({\n  addScalar,\n  combinations,\n  divideScalar,\n  factorial,\n  isInteger,\n  isNegative,\n  larger,\n  multiplyScalar,\n  pow,\n  subtract,\n  typed\n});\nvar catalan = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_191__.createCatalan)({\n  addScalar,\n  combinations,\n  divideScalar,\n  isInteger,\n  isNegative,\n  multiplyScalar,\n  typed\n});\nvar column = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_192__.createColumn)({\n  Index,\n  matrix,\n  range,\n  typed\n});\nvar log = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_193__.createLog)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  divideScalar,\n  typed\n});\nvar dotDivide = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_194__.createDotDivide)({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  typed\n});\nvar usolveAll = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_195__.createUsolveAll)({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  subtract,\n  typed\n});\nvar hypot = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_196__.createHypot)({\n  abs,\n  addScalar,\n  divideScalar,\n  isPositive,\n  multiplyScalar,\n  smaller,\n  sqrt,\n  typed\n});\nvar qr = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_197__.createQr)({\n  addScalar,\n  complex,\n  conj,\n  divideScalar,\n  equal,\n  identity,\n  isZero,\n  matrix,\n  multiplyScalar,\n  sign,\n  sqrt,\n  subtract,\n  typed,\n  unaryMinus,\n  zeros\n});\nvar inv = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_198__.createInv)({\n  abs,\n  addScalar,\n  det,\n  divideScalar,\n  identity,\n  matrix,\n  multiply,\n  typed,\n  unaryMinus\n});\nvar expm = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_199__.createExpm)({\n  abs,\n  add,\n  identity,\n  inv,\n  multiply,\n  typed\n});\nvar divide = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_200__.createDivide)({\n  divideScalar,\n  equalScalar,\n  inv,\n  matrix,\n  multiply,\n  typed\n});\nvar mean = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_201__.createMean)({\n  add,\n  divide,\n  typed\n});\nvar variance = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_202__.createVariance)({\n  add,\n  apply,\n  divide,\n  isNaN,\n  multiply,\n  subtract,\n  typed\n});\nvar kldivergence = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_203__.createKldivergence)({\n  divide,\n  dotDivide,\n  isNumeric,\n  log,\n  matrix,\n  multiply,\n  sum,\n  typed\n});\nvar bellNumbers = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_204__.createBellNumbers)({\n  addScalar,\n  isInteger,\n  isNegative,\n  stirlingS2,\n  typed\n});\nvar log1p = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_205__.createLog1p)({\n  Complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  divideScalar,\n  log,\n  typed\n});\nvar Unit = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_206__.createUnitClass)({\n  BigNumber,\n  Complex,\n  Fraction,\n  abs,\n  addScalar,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  divideScalar,\n  equal,\n  fix,\n  format,\n  isNumeric,\n  multiplyScalar,\n  number,\n  pow,\n  round,\n  subtract\n});\nvar createUnit = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_207__.createCreateUnit)({\n  Unit,\n  typed\n});\nvar sqrtm = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_208__.createSqrtm)({\n  abs,\n  add,\n  identity,\n  inv,\n  max,\n  multiply,\n  size,\n  sqrt,\n  subtract,\n  typed\n});\nvar median = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_209__.createMedian)({\n  add,\n  compare,\n  divide,\n  partitionSelect,\n  typed\n});\nvar std = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_210__.createStd)({\n  sqrt,\n  typed,\n  variance\n});\nvar atomicMass = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createAtomicMass)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar bohrMagneton = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createBohrMagneton)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar boltzmann = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createBoltzmann)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar conductanceQuantum = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createConductanceQuantum)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar deuteronMass = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createDeuteronMass)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar electronMass = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createElectronMass)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar faraday = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createFaraday)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar firstRadiation = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createFirstRadiation)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar gravitationConstant = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createGravitationConstant)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar hartreeEnergy = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createHartreeEnergy)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar klitzing = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createKlitzing)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar magneticConstant = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createMagneticConstant)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar molarMass = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createMolarMass)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar molarPlanckConstant = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createMolarPlanckConstant)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar neutronMass = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createNeutronMass)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar planckCharge = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createPlanckCharge)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar planckLength = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createPlanckLength)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar planckTemperature = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createPlanckTemperature)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar protonMass = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createProtonMass)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar reducedPlanckConstant = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createReducedPlanckConstant)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar secondRadiation = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createSecondRadiation)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar stefanBoltzmann = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createStefanBoltzmann)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar vacuumImpedance = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createVacuumImpedance)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar usolve = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_211__.createUsolve)({\n  DenseMatrix,\n  divideScalar,\n  equalScalar,\n  matrix,\n  multiplyScalar,\n  subtract,\n  typed\n});\nvar lusolve = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_212__.createLusolve)({\n  DenseMatrix,\n  lsolve,\n  lup,\n  matrix,\n  slu,\n  typed,\n  usolve\n});\nvar eigs = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_213__.createEigs)({\n  abs,\n  add,\n  addScalar,\n  atan,\n  bignumber,\n  column,\n  complex,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  cos,\n  diag,\n  divideScalar,\n  dot,\n  equal,\n  flatten,\n  im,\n  inv,\n  larger,\n  matrix,\n  matrixFromColumns,\n  multiply,\n  multiplyScalar,\n  number,\n  qr,\n  re,\n  sin,\n  smaller,\n  sqrt,\n  subtract,\n  typed,\n  usolve,\n  usolveAll\n});\nvar mad = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_214__.createMad)({\n  abs,\n  map,\n  median,\n  subtract,\n  typed\n});\nvar avogadro = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createAvogadro)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar classicalElectronRadius = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createClassicalElectronRadius)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar electricConstant = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createElectricConstant)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar fermiCoupling = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createFermiCoupling)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar gravity = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createGravity)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar loschmidt = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createLoschmidt)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar molarMassC12 = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createMolarMassC12)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar nuclearMagneton = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createNuclearMagneton)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar planckMass = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createPlanckMass)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar quantumOfCirculation = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createQuantumOfCirculation)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar speedOfLight = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createSpeedOfLight)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar wienDisplacement = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createWienDisplacement)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar unit = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_215__.createUnitFunction)({\n  Unit,\n  typed\n});\nvar intersect = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_216__.createIntersect)({\n  abs,\n  add,\n  addScalar,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  divideScalar,\n  equalScalar,\n  flatten,\n  matrix,\n  multiply,\n  multiplyScalar,\n  smaller,\n  subtract,\n  typed\n});\nvar coulomb = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createCoulomb)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar gasConstant = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createGasConstant)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar magneticFluxQuantum = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createMagneticFluxQuantum)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar planckConstant = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createPlanckConstant)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar rydberg = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createRydberg)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar norm = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_217__.createNorm)({\n  abs,\n  add,\n  conj,\n  ctranspose,\n  eigs,\n  equalScalar,\n  larger,\n  matrix,\n  multiply,\n  pow,\n  smaller,\n  sqrt,\n  typed\n});\nvar elementaryCharge = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createElementaryCharge)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar molarVolume = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createMolarVolume)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar thomsonCrossSection = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createThomsonCrossSection)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar rotationMatrix = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_218__.createRotationMatrix)({\n  BigNumber,\n  DenseMatrix,\n  SparseMatrix,\n  addScalar,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config,\n  cos,\n  matrix,\n  multiplyScalar,\n  norm,\n  sin,\n  typed,\n  unaryMinus\n});\nvar bohrRadius = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createBohrRadius)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar planckTime = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createPlanckTime)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\nvar rotate = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_219__.createRotate)({\n  multiply,\n  rotationMatrix,\n  typed\n});\nvar multinomial = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_220__.createMultinomial)({\n  add,\n  divide,\n  factorial,\n  isInteger,\n  isPositive,\n  multiply,\n  typed\n});\nvar inverseConductanceQuantum = /* #__PURE__ */(0,_factoriesAny_js__WEBPACK_IMPORTED_MODULE_8__.createInverseConductanceQuantum)({\n  BigNumber,\n  Unit,\n  config: _configReadonly_js__WEBPACK_IMPORTED_MODULE_5__.config\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/entry/pureFunctionsAny.generated.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/error/ArgumentsError.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/error/ArgumentsError.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ArgumentsError\": () => (/* binding */ ArgumentsError)\n/* harmony export */ });\n/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nfunction ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n  this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n  this.stack = new Error().stack;\n}\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/error/ArgumentsError.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/error/DimensionError.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/error/DimensionError.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DimensionError\": () => (/* binding */ DimensionError)\n/* harmony export */ });\n/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nfunction DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.actual = actual;\n  this.expected = expected;\n  this.relation = relation;\n  this.message = 'Dimension mismatch (' + (Array.isArray(actual) ? '[' + actual.join(', ') + ']' : actual) + ' ' + (this.relation || '!=') + ' ' + (Array.isArray(expected) ? '[' + expected.join(', ') + ']' : expected) + ')';\n  this.stack = new Error().stack;\n}\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\nDimensionError.prototype.isDimensionError = true;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/error/DimensionError.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/error/IndexError.js":
/*!*********************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/error/IndexError.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IndexError\": () => (/* binding */ IndexError)\n/* harmony export */ });\n/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nfunction IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.index = index;\n\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  } else {\n    this.min = min;\n    this.max = max;\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  } else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n\n  this.stack = new Error().stack;\n}\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/error/IndexError.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/decomposition/lup.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/decomposition/lup.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLup\": () => (/* binding */ createLup)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'lup';\nvar dependencies = ['typed', 'matrix', 'abs', 'addScalar', 'divideScalar', 'multiplyScalar', 'subtract', 'larger', 'equalScalar', 'unaryMinus', 'DenseMatrix', 'SparseMatrix', 'Spa'];\nvar createLup = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    abs,\n    addScalar,\n    divideScalar,\n    multiplyScalar,\n    subtract,\n    larger,\n    equalScalar,\n    unaryMinus,\n    DenseMatrix,\n    SparseMatrix,\n    Spa\n  } = _ref;\n  /**\n   * Calculate the Matrix LU decomposition with partial pivoting. Matrix `A` is decomposed in two matrices (`L`, `U`) and a\n   * row permutation vector `p` where `A[p,:] = L * U`\n   *\n   * Syntax:\n   *\n   *    math.lup(A)\n   *\n   * Example:\n   *\n   *    const m = [[2, 1], [1, 4]]\n   *    const r = math.lup(m)\n   *    // r = {\n   *    //   L: [[1, 0], [0.5, 1]],\n   *    //   U: [[2, 1], [0, 3.5]],\n   *    //   P: [0, 1]\n   *    // }\n   *\n   * See also:\n   *\n   *    slu, lsolve, lusolve, usolve\n   *\n   * @param {Matrix | Array} A    A two dimensional matrix or array for which to get the LUP decomposition.\n   *\n   * @return {{L: Array | Matrix, U: Array | Matrix, P: Array.<number>}} The lower triangular matrix, the upper triangular matrix and the permutation matrix.\n   */\n\n  return typed(name, {\n    DenseMatrix: function DenseMatrix(m) {\n      return _denseLUP(m);\n    },\n    SparseMatrix: function SparseMatrix(m) {\n      return _sparseLUP(m);\n    },\n    Array: function Array(a) {\n      // create dense matrix from array\n      var m = matrix(a); // lup, use matrix implementation\n\n      var r = _denseLUP(m); // result\n\n\n      return {\n        L: r.L.valueOf(),\n        U: r.U.valueOf(),\n        p: r.p\n      };\n    }\n  });\n\n  function _denseLUP(m) {\n    // rows & columns\n    var rows = m._size[0];\n    var columns = m._size[1]; // minimum rows and columns\n\n    var n = Math.min(rows, columns); // matrix array, clone original data\n\n    var data = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(m._data); // l matrix arrays\n\n    var ldata = [];\n    var lsize = [rows, n]; // u matrix arrays\n\n    var udata = [];\n    var usize = [n, columns]; // vars\n\n    var i, j, k; // permutation vector\n\n    var p = [];\n\n    for (i = 0; i < rows; i++) {\n      p[i] = i;\n    } // loop columns\n\n\n    for (j = 0; j < columns; j++) {\n      // skip first column in upper triangular matrix\n      if (j > 0) {\n        // loop rows\n        for (i = 0; i < rows; i++) {\n          // min i,j\n          var min = Math.min(i, j); // v[i, j]\n\n          var s = 0; // loop up to min\n\n          for (k = 0; k < min; k++) {\n            // s = l[i, k] - data[k, j]\n            s = addScalar(s, multiplyScalar(data[i][k], data[k][j]));\n          }\n\n          data[i][j] = subtract(data[i][j], s);\n        }\n      } // row with larger value in cvector, row >= j\n\n\n      var pi = j;\n      var pabsv = 0;\n      var vjj = 0; // loop rows\n\n      for (i = j; i < rows; i++) {\n        // data @ i, j\n        var v = data[i][j]; // absolute value\n\n        var absv = abs(v); // value is greater than pivote value\n\n        if (larger(absv, pabsv)) {\n          // store row\n          pi = i; // update max value\n\n          pabsv = absv; // value @ [j, j]\n\n          vjj = v;\n        }\n      } // swap rows (j <-> pi)\n\n\n      if (j !== pi) {\n        // swap values j <-> pi in p\n        p[j] = [p[pi], p[pi] = p[j]][0]; // swap j <-> pi in data\n\n        DenseMatrix._swapRows(j, pi, data);\n      } // check column is in lower triangular matrix\n\n\n      if (j < rows) {\n        // loop rows (lower triangular matrix)\n        for (i = j + 1; i < rows; i++) {\n          // value @ i, j\n          var vij = data[i][j];\n\n          if (!equalScalar(vij, 0)) {\n            // update data\n            data[i][j] = divideScalar(data[i][j], vjj);\n          }\n        }\n      }\n    } // loop columns\n\n\n    for (j = 0; j < columns; j++) {\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // initialize row in arrays\n        if (j === 0) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i] = [];\n          } // L\n\n\n          ldata[i] = [];\n        } // check we are in the upper triangular matrix\n\n\n        if (i < j) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i][j] = data[i][j];\n          } // check column exists in lower triangular matrix\n\n\n          if (j < rows) {\n            // L\n            ldata[i][j] = 0;\n          }\n\n          continue;\n        } // diagonal value\n\n\n        if (i === j) {\n          // check row exists in upper triangular matrix\n          if (i < columns) {\n            // U\n            udata[i][j] = data[i][j];\n          } // check column exists in lower triangular matrix\n\n\n          if (j < rows) {\n            // L\n            ldata[i][j] = 1;\n          }\n\n          continue;\n        } // check row exists in upper triangular matrix\n\n\n        if (i < columns) {\n          // U\n          udata[i][j] = 0;\n        } // check column exists in lower triangular matrix\n\n\n        if (j < rows) {\n          // L\n          ldata[i][j] = data[i][j];\n        }\n      }\n    } // l matrix\n\n\n    var l = new DenseMatrix({\n      data: ldata,\n      size: lsize\n    }); // u matrix\n\n    var u = new DenseMatrix({\n      data: udata,\n      size: usize\n    }); // p vector\n\n    var pv = [];\n\n    for (i = 0, n = p.length; i < n; i++) {\n      pv[p[i]] = i;\n    } // return matrices\n\n\n    return {\n      L: l,\n      U: u,\n      p: pv,\n      toString: function toString() {\n        return 'L: ' + this.L.toString() + '\\nU: ' + this.U.toString() + '\\nP: ' + this.p;\n      }\n    };\n  }\n\n  function _sparseLUP(m) {\n    // rows & columns\n    var rows = m._size[0];\n    var columns = m._size[1]; // minimum rows and columns\n\n    var n = Math.min(rows, columns); // matrix arrays (will not be modified, thanks to permutation vector)\n\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // l matrix arrays\n\n    var lvalues = [];\n    var lindex = [];\n    var lptr = [];\n    var lsize = [rows, n]; // u matrix arrays\n\n    var uvalues = [];\n    var uindex = [];\n    var uptr = [];\n    var usize = [n, columns]; // vars\n\n    var i, j, k; // permutation vectors, (current index -> original index) and (original index -> current index)\n\n    var pvCo = [];\n    var pvOc = [];\n\n    for (i = 0; i < rows; i++) {\n      pvCo[i] = i;\n      pvOc[i] = i;\n    } // swap indices in permutation vectors (condition x < y)!\n\n\n    var swapIndeces = function swapIndeces(x, y) {\n      // find pv indeces getting data from x and y\n      var kx = pvOc[x];\n      var ky = pvOc[y]; // update permutation vector current -> original\n\n      pvCo[kx] = y;\n      pvCo[ky] = x; // update permutation vector original -> current\n\n      pvOc[x] = ky;\n      pvOc[y] = kx;\n    }; // loop columns\n\n\n    var _loop = function _loop() {\n      // sparse accumulator\n      var spa = new Spa(); // check lower triangular matrix has a value @ column j\n\n      if (j < rows) {\n        // update ptr\n        lptr.push(lvalues.length); // first value in j column for lower triangular matrix\n\n        lvalues.push(1);\n        lindex.push(j);\n      } // update ptr\n\n\n      uptr.push(uvalues.length); // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1]; // copy column j into sparse accumulator\n\n      for (k = k0; k < k1; k++) {\n        // row\n        i = index[k]; // copy column values into sparse accumulator (use permutation vector)\n\n        spa.set(pvCo[i], values[k]);\n      } // skip first column in upper triangular matrix\n\n\n      if (j > 0) {\n        // loop rows in column j (above diagonal)\n        spa.forEach(0, j - 1, function (k, vkj) {\n          // loop rows in column k (L)\n          SparseMatrix._forEachRow(k, lvalues, lindex, lptr, function (i, vik) {\n            // check row is below k\n            if (i > k) {\n              // update spa value\n              spa.accumulate(i, unaryMinus(multiplyScalar(vik, vkj)));\n            }\n          });\n        });\n      } // row with larger value in spa, row >= j\n\n\n      var pi = j;\n      var vjj = spa.get(j);\n      var pabsv = abs(vjj); // loop values in spa (order by row, below diagonal)\n\n      spa.forEach(j + 1, rows - 1, function (x, v) {\n        // absolute value\n        var absv = abs(v); // value is greater than pivote value\n\n        if (larger(absv, pabsv)) {\n          // store row\n          pi = x; // update max value\n\n          pabsv = absv; // value @ [j, j]\n\n          vjj = v;\n        }\n      }); // swap rows (j <-> pi)\n\n      if (j !== pi) {\n        // swap values j <-> pi in L\n        SparseMatrix._swapRows(j, pi, lsize[1], lvalues, lindex, lptr); // swap values j <-> pi in U\n\n\n        SparseMatrix._swapRows(j, pi, usize[1], uvalues, uindex, uptr); // swap values in spa\n\n\n        spa.swap(j, pi); // update permutation vector (swap values @ j, pi)\n\n        swapIndeces(j, pi);\n      } // loop values in spa (order by row)\n\n\n      spa.forEach(0, rows - 1, function (x, v) {\n        // check we are above diagonal\n        if (x <= j) {\n          // update upper triangular matrix\n          uvalues.push(v);\n          uindex.push(x);\n        } else {\n          // update value\n          v = divideScalar(v, vjj); // check value is non zero\n\n          if (!equalScalar(v, 0)) {\n            // update lower triangular matrix\n            lvalues.push(v);\n            lindex.push(x);\n          }\n        }\n      });\n    };\n\n    for (j = 0; j < columns; j++) {\n      _loop();\n    } // update ptrs\n\n\n    uptr.push(uvalues.length);\n    lptr.push(lvalues.length); // return matrices\n\n    return {\n      L: new SparseMatrix({\n        values: lvalues,\n        index: lindex,\n        ptr: lptr,\n        size: lsize\n      }),\n      U: new SparseMatrix({\n        values: uvalues,\n        index: uindex,\n        ptr: uptr,\n        size: usize\n      }),\n      p: pvCo,\n      toString: function toString() {\n        return 'L: ' + this.L.toString() + '\\nU: ' + this.U.toString() + '\\nP: ' + this.p;\n      }\n    };\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/decomposition/lup.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/decomposition/qr.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/decomposition/qr.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createQr\": () => (/* binding */ createQr)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'qr';\nvar dependencies = ['typed', 'matrix', 'zeros', 'identity', 'isZero', 'equal', 'sign', 'sqrt', 'conj', 'unaryMinus', 'addScalar', 'divideScalar', 'multiplyScalar', 'subtract', 'complex'];\nvar createQr = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    zeros,\n    identity,\n    isZero,\n    equal,\n    sign,\n    sqrt,\n    conj,\n    unaryMinus,\n    addScalar,\n    divideScalar,\n    multiplyScalar,\n    subtract,\n    complex\n  } = _ref;\n  /**\n   * Calculate the Matrix QR decomposition. Matrix `A` is decomposed in\n   * two matrices (`Q`, `R`) where `Q` is an\n   * orthogonal matrix and `R` is an upper triangular matrix.\n   *\n   * Syntax:\n   *\n   *    math.qr(A)\n   *\n   * Example:\n   *\n   *    const m = [\n   *      [1, -1,  4],\n   *      [1,  4, -2],\n   *      [1,  4,  2],\n   *      [1,  -1, 0]\n   *    ]\n   *    const result = math.qr(m)\n   *    // r = {\n   *    //   Q: [\n   *    //     [0.5, -0.5,   0.5],\n   *    //     [0.5,  0.5,  -0.5],\n   *    //     [0.5,  0.5,   0.5],\n   *    //     [0.5, -0.5,  -0.5],\n   *    //   ],\n   *    //   R: [\n   *    //     [2, 3,  2],\n   *    //     [0, 5, -2],\n   *    //     [0, 0,  4],\n   *    //     [0, 0,  0]\n   *    //   ]\n   *    // }\n   *\n   * See also:\n   *\n   *    lup, lusolve\n   *\n   * @param {Matrix | Array} A    A two dimensional matrix or array\n   * for which to get the QR decomposition.\n   *\n   * @return {{Q: Array | Matrix, R: Array | Matrix}} Q: the orthogonal\n   * matrix and R: the upper triangular matrix\n   */\n\n  return (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__.default)(typed(name, {\n    DenseMatrix: function DenseMatrix(m) {\n      return _denseQR(m);\n    },\n    SparseMatrix: function SparseMatrix(m) {\n      return _sparseQR(m);\n    },\n    Array: function Array(a) {\n      // create dense matrix from array\n      var m = matrix(a); // lup, use matrix implementation\n\n      var r = _denseQR(m); // result\n\n\n      return {\n        Q: r.Q.valueOf(),\n        R: r.R.valueOf()\n      };\n    }\n  }), {\n    _denseQRimpl\n  });\n\n  function _denseQRimpl(m) {\n    // rows & columns (m x n)\n    var rows = m._size[0]; // m\n\n    var cols = m._size[1]; // n\n\n    var Q = identity([rows], 'dense');\n    var Qdata = Q._data;\n    var R = m.clone();\n    var Rdata = R._data; // vars\n\n    var i, j, k;\n    var w = zeros([rows], '');\n\n    for (k = 0; k < Math.min(cols, rows); ++k) {\n      /*\n       * **k-th Household matrix**\n       *\n       * The matrix I - 2*v*transpose(v)\n       * x     = first column of A\n       * x1    = first element of x\n       * alpha = x1 / |x1| * |x|\n       * e1    = tranpose([1, 0, 0, ...])\n       * u     = x - alpha * e1\n       * v     = u / |u|\n       *\n       * Household matrix = I - 2 * v * tranpose(v)\n       *\n       *  * Initially Q = I and R = A.\n       *  * Household matrix is a reflection in a plane normal to v which\n       *    will zero out all but the top right element in R.\n       *  * Appplying reflection to both Q and R will not change product.\n       *  * Repeat this process on the (1,1) minor to get R as an upper\n       *    triangular matrix.\n       *  * Reflections leave the magnitude of the columns of Q unchanged\n       *    so Q remains othoganal.\n       *\n       */\n      var pivot = Rdata[k][k];\n      var sgn = unaryMinus(equal(pivot, 0) ? 1 : sign(pivot));\n      var conjSgn = conj(sgn);\n      var alphaSquared = 0;\n\n      for (i = k; i < rows; i++) {\n        alphaSquared = addScalar(alphaSquared, multiplyScalar(Rdata[i][k], conj(Rdata[i][k])));\n      }\n\n      var alpha = multiplyScalar(sgn, sqrt(alphaSquared));\n\n      if (!isZero(alpha)) {\n        // first element in vector u\n        var u1 = subtract(pivot, alpha); // w = v * u1 / |u|    (only elements k to (rows-1) are used)\n\n        w[k] = 1;\n\n        for (i = k + 1; i < rows; i++) {\n          w[i] = divideScalar(Rdata[i][k], u1);\n        } // tau = - conj(u1 / alpha)\n\n\n        var tau = unaryMinus(conj(divideScalar(u1, alpha)));\n        var s = void 0;\n        /*\n         * tau and w have been choosen so that\n         *\n         * 2 * v * tranpose(v) = tau * w * tranpose(w)\n         */\n\n        /*\n         * -- calculate R = R - tau * w * tranpose(w) * R --\n         * Only do calculation with rows k to (rows-1)\n         * Additionally columns 0 to (k-1) will not be changed by this\n         *   multiplication so do not bother recalculating them\n         */\n\n        for (j = k; j < cols; j++) {\n          s = 0.0; // calculate jth element of [tranpose(w) * R]\n\n          for (i = k; i < rows; i++) {\n            s = addScalar(s, multiplyScalar(conj(w[i]), Rdata[i][j]));\n          } // calculate the jth element of [tau * transpose(w) * R]\n\n\n          s = multiplyScalar(s, tau);\n\n          for (i = k; i < rows; i++) {\n            Rdata[i][j] = multiplyScalar(subtract(Rdata[i][j], multiplyScalar(w[i], s)), conjSgn);\n          }\n        }\n        /*\n         * -- calculate Q = Q - tau * Q * w * transpose(w) --\n         * Q is a square matrix (rows x rows)\n         * Only do calculation with columns k to (rows-1)\n         * Additionally rows 0 to (k-1) will not be changed by this\n         *   multiplication so do not bother recalculating them\n         */\n\n\n        for (i = 0; i < rows; i++) {\n          s = 0.0; // calculate ith element of [Q * w]\n\n          for (j = k; j < rows; j++) {\n            s = addScalar(s, multiplyScalar(Qdata[i][j], w[j]));\n          } // calculate the ith element of [tau * Q * w]\n\n\n          s = multiplyScalar(s, tau);\n\n          for (j = k; j < rows; ++j) {\n            Qdata[i][j] = divideScalar(subtract(Qdata[i][j], multiplyScalar(s, conj(w[j]))), conjSgn);\n          }\n        }\n      }\n    } // return matrices\n\n\n    return {\n      Q: Q,\n      R: R,\n      toString: function toString() {\n        return 'Q: ' + this.Q.toString() + '\\nR: ' + this.R.toString();\n      }\n    };\n  }\n\n  function _denseQR(m) {\n    var ret = _denseQRimpl(m);\n\n    var Rdata = ret.R._data;\n\n    if (m._data.length > 0) {\n      var zero = Rdata[0][0].type === 'Complex' ? complex(0) : 0;\n\n      for (var i = 0; i < Rdata.length; ++i) {\n        for (var j = 0; j < i && j < (Rdata[0] || []).length; ++j) {\n          Rdata[i][j] = zero;\n        }\n      }\n    }\n\n    return ret;\n  }\n\n  function _sparseQR(m) {\n    throw new Error('qr not implemented for sparse matrices yet');\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/decomposition/qr.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/decomposition/slu.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/decomposition/slu.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSlu\": () => (/* binding */ createSlu)\n/* harmony export */ });\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _sparse_csSqr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sparse/csSqr.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csSqr.js\");\n/* harmony import */ var _sparse_csLu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sparse/csLu.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csLu.js\");\n\n\n\n\nvar name = 'slu';\nvar dependencies = ['typed', 'abs', 'add', 'multiply', 'transpose', 'divideScalar', 'subtract', 'larger', 'largerEq', 'SparseMatrix'];\nvar createSlu = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    abs,\n    add,\n    multiply,\n    transpose,\n    divideScalar,\n    subtract,\n    larger,\n    largerEq,\n    SparseMatrix\n  } = _ref;\n  var csSqr = (0,_sparse_csSqr_js__WEBPACK_IMPORTED_MODULE_1__.createCsSqr)({\n    add,\n    multiply,\n    transpose\n  });\n  var csLu = (0,_sparse_csLu_js__WEBPACK_IMPORTED_MODULE_2__.createCsLu)({\n    abs,\n    divideScalar,\n    multiply,\n    subtract,\n    larger,\n    largerEq,\n    SparseMatrix\n  });\n  /**\n   * Calculate the Sparse Matrix LU decomposition with full pivoting. Sparse Matrix `A` is decomposed in two matrices (`L`, `U`) and two permutation vectors (`pinv`, `q`) where\n   *\n   * `P * A * Q = L * U`\n   *\n   * Syntax:\n   *\n   *    math.slu(A, order, threshold)\n   *\n   * Examples:\n   *\n   *    const A = math.sparse([[4,3], [6, 3]])\n   *    math.slu(A, 1, 0.001)\n   *    // returns:\n   *    // {\n   *    //   L: [[1, 0], [1.5, 1]]\n   *    //   U: [[4, 3], [0, -1.5]]\n   *    //   p: [0, 1]\n   *    //   q: [0, 1]\n   *    // }\n   *\n   * See also:\n   *\n   *    lup, lsolve, usolve, lusolve\n   *\n   * @param {SparseMatrix} A              A two dimensional sparse matrix for which to get the LU decomposition.\n   * @param {Number}       order          The Symbolic Ordering and Analysis order:\n   *                                       0 - Natural ordering, no permutation vector q is returned\n   *                                       1 - Matrix must be square, symbolic ordering and analisis is performed on M = A + A'\n   *                                       2 - Symbolic ordering and analisis is performed on M = A' * A. Dense columns from A' are dropped, A recreated from A'.\n   *                                           This is appropriatefor LU factorization of unsymmetric matrices.\n   *                                       3 - Symbolic ordering and analisis is performed on M = A' * A. This is best used for LU factorization is matrix M has no dense rows.\n   *                                           A dense row is a row with more than 10*sqr(columns) entries.\n   * @param {Number}       threshold       Partial pivoting threshold (1 for partial pivoting)\n   *\n   * @return {Object} The lower triangular matrix, the upper triangular matrix and the permutation vectors.\n   */\n\n  return typed(name, {\n    'SparseMatrix, number, number': function SparseMatrixNumberNumber(a, order, threshold) {\n      // verify order\n      if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_3__.isInteger)(order) || order < 0 || order > 3) {\n        throw new Error('Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]');\n      } // verify threshold\n\n\n      if (threshold < 0 || threshold > 1) {\n        throw new Error('Partial pivoting threshold must be a number from 0 to 1');\n      } // perform symbolic ordering and analysis\n\n\n      var s = csSqr(order, a, false); // perform lu decomposition\n\n      var f = csLu(a, s, threshold); // return decomposition\n\n      return {\n        L: f.L,\n        U: f.U,\n        p: f.pinv,\n        q: s.q,\n        toString: function toString() {\n          return 'L: ' + this.L.toString() + '\\nU: ' + this.U.toString() + '\\np: ' + this.p.toString() + (this.q ? '\\nq: ' + this.q.toString() : '') + '\\n';\n        }\n      };\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/decomposition/slu.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/solver/lsolve.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/solver/lsolve.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLsolve\": () => (/* binding */ createLsolve)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/solveValidation.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js\");\n\n\nvar name = 'lsolve';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];\nvar createLsolve = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    divideScalar,\n    multiplyScalar,\n    subtract,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var solveValidation = (0,_utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__.createSolveValidation)({\n    DenseMatrix\n  });\n  /**\n   * Finds one solution of a linear equation system by forwards substitution. Matrix must be a lower triangular matrix. Throws an error if there's no solution.\n   *\n   * `L * x = b`\n   *\n   * Syntax:\n   *\n   *    math.lsolve(L, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = lsolve(a, b)  // [[-5.5], [20]]\n   *\n   * See also:\n   *\n   *    lsolveAll, lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} L       A N x N matrix or array (L)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix | Array}  A column vector with the linear system solution (x)\n   */\n\n  return typed(name, {\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {\n      return _sparseForwardSubstitution(m, b);\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {\n      return _denseForwardSubstitution(m, b);\n    },\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      var m = matrix(a);\n\n      var r = _denseForwardSubstitution(m, b);\n\n      return r.valueOf();\n    }\n  });\n\n  function _denseForwardSubstitution(m, b) {\n    // validate matrix and vector, return copy of column vector b\n    b = solveValidation(m, b, true);\n    var bdata = b._data;\n    var rows = m._size[0];\n    var columns = m._size[1]; // result\n\n    var x = [];\n    var mdata = m._data; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      var bj = bdata[j][0] || 0;\n      var xj = void 0;\n\n      if (!equalScalar(bj, 0)) {\n        // non-degenerate row, find solution\n        var vjj = mdata[j][j];\n\n        if (equalScalar(vjj, 0)) {\n          throw new Error('Linear system cannot be solved since matrix is singular');\n        }\n\n        xj = divideScalar(bj, vjj); // loop rows\n\n        for (var i = j + 1; i < rows; i++) {\n          bdata[i] = [subtract(bdata[i][0] || 0, multiplyScalar(xj, mdata[i][j]))];\n        }\n      } else {\n        // degenerate row, we can choose any value\n        xj = 0;\n      }\n\n      x[j] = [xj];\n    }\n\n    return new DenseMatrix({\n      data: x,\n      size: [rows, 1]\n    });\n  }\n\n  function _sparseForwardSubstitution(m, b) {\n    // validate matrix and vector, return copy of column vector b\n    b = solveValidation(m, b, true);\n    var bdata = b._data;\n    var rows = m._size[0];\n    var columns = m._size[1];\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // result\n\n    var x = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      var bj = bdata[j][0] || 0;\n\n      if (!equalScalar(bj, 0)) {\n        // non-degenerate row, find solution\n        var vjj = 0; // matrix values & indices (column j)\n\n        var jValues = [];\n        var jIndices = []; // first and last index in the column\n\n        var firstIndex = ptr[j];\n        var lastIndex = ptr[j + 1]; // values in column, find value at [j, j]\n\n        for (var k = firstIndex; k < lastIndex; k++) {\n          var i = index[k]; // check row (rows are not sorted!)\n\n          if (i === j) {\n            vjj = values[k];\n          } else if (i > j) {\n            // store lower triangular\n            jValues.push(values[k]);\n            jIndices.push(i);\n          }\n        } // at this point we must have a value in vjj\n\n\n        if (equalScalar(vjj, 0)) {\n          throw new Error('Linear system cannot be solved since matrix is singular');\n        }\n\n        var xj = divideScalar(bj, vjj);\n\n        for (var _k = 0, l = jIndices.length; _k < l; _k++) {\n          var _i = jIndices[_k];\n          bdata[_i] = [subtract(bdata[_i][0] || 0, multiplyScalar(xj, jValues[_k]))];\n        }\n\n        x[j] = [xj];\n      } else {\n        // degenerate row, we can choose any value\n        x[j] = [0];\n      }\n    }\n\n    return new DenseMatrix({\n      data: x,\n      size: [rows, 1]\n    });\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/solver/lsolve.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/solver/lsolveAll.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/solver/lsolveAll.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLsolveAll\": () => (/* binding */ createLsolveAll)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/solveValidation.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js\");\n\n\nvar name = 'lsolveAll';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];\nvar createLsolveAll = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    divideScalar,\n    multiplyScalar,\n    subtract,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var solveValidation = (0,_utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__.createSolveValidation)({\n    DenseMatrix\n  });\n  /**\n   * Finds all solutions of a linear equation system by forwards substitution. Matrix must be a lower triangular matrix.\n   *\n   * `L * x = b`\n   *\n   * Syntax:\n   *\n   *    math.lsolveAll(L, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = lsolveAll(a, b)  // [ [[-5.5], [20]] ]\n   *\n   * See also:\n   *\n   *    lsolve, lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} L       A N x N matrix or array (L)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix[] | Array[]}  An array of affine-independent column vectors (x) that solve the linear system\n   */\n\n  return typed(name, {\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {\n      return _sparseForwardSubstitution(m, b);\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {\n      return _denseForwardSubstitution(m, b);\n    },\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      var m = matrix(a);\n\n      var R = _denseForwardSubstitution(m, b);\n\n      return R.map(r => r.valueOf());\n    }\n  });\n\n  function _denseForwardSubstitution(m, b_) {\n    // the algorithm is derived from\n    // https://www.overleaf.com/read/csvgqdxggyjv\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(e => e[0])];\n    var M = m._data;\n    var rows = m._size[0];\n    var columns = m._size[1]; // loop columns\n\n    for (var i = 0; i < columns; i++) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k];\n\n        if (!equalScalar(M[i][i], 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], M[i][i]);\n\n          for (var j = i + 1; j < columns; j++) {\n            // b[j] -= b[i] * M[j,i]\n            b[j] = subtract(b[j], multiplyScalar(b[i], M[j][i]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = [...b];\n          bNew[i] = 1;\n\n          for (var _j = i + 1; _j < columns; _j++) {\n            bNew[_j] = subtract(bNew[_j], M[_j][i]);\n          }\n\n          B.push(bNew);\n        }\n      }\n    }\n\n    return B.map(x => new DenseMatrix({\n      data: x.map(e => [e]),\n      size: [rows, 1]\n    }));\n  }\n\n  function _sparseForwardSubstitution(m, b_) {\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(e => e[0])];\n    var rows = m._size[0];\n    var columns = m._size[1];\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop columns\n\n    for (var i = 0; i < columns; i++) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k]; // values & indices (column i)\n\n        var iValues = [];\n        var iIndices = []; // first & last indeces in column\n\n        var firstIndex = ptr[i];\n        var lastIndex = ptr[i + 1]; // find the value at [i, i]\n\n        var Mii = 0;\n\n        for (var j = firstIndex; j < lastIndex; j++) {\n          var J = index[j]; // check row\n\n          if (J === i) {\n            Mii = values[j];\n          } else if (J > i) {\n            // store lower triangular\n            iValues.push(values[j]);\n            iIndices.push(J);\n          }\n        }\n\n        if (!equalScalar(Mii, 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], Mii);\n\n          for (var _j2 = 0, _lastIndex = iIndices.length; _j2 < _lastIndex; _j2++) {\n            var _J = iIndices[_j2];\n            b[_J] = subtract(b[_J], multiplyScalar(b[i], iValues[_j2]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = [...b];\n          bNew[i] = 1;\n\n          for (var _j3 = 0, _lastIndex2 = iIndices.length; _j3 < _lastIndex2; _j3++) {\n            var _J2 = iIndices[_j3];\n            bNew[_J2] = subtract(bNew[_J2], iValues[_j3]);\n          }\n\n          B.push(bNew);\n        }\n      }\n    }\n\n    return B.map(x => new DenseMatrix({\n      data: x.map(e => [e]),\n      size: [rows, 1]\n    }));\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/solver/lsolveAll.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/solver/lusolve.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/solver/lusolve.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLusolve\": () => (/* binding */ createLusolve)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/solveValidation.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js\");\n/* harmony import */ var _sparse_csIpvec_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sparse/csIpvec.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csIpvec.js\");\n\n\n\n\nvar name = 'lusolve';\nvar dependencies = ['typed', 'matrix', 'lup', 'slu', 'usolve', 'lsolve', 'DenseMatrix'];\nvar createLusolve = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    lup,\n    slu,\n    usolve,\n    lsolve,\n    DenseMatrix\n  } = _ref;\n  var solveValidation = (0,_utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__.createSolveValidation)({\n    DenseMatrix\n  });\n  /**\n   * Solves the linear system `A * x = b` where `A` is an [n x n] matrix and `b` is a [n] column vector.\n   *\n   * Syntax:\n   *\n   *    math.lusolve(A, b)     // returns column vector with the solution to the linear system A * x = b\n   *    math.lusolve(lup, b)   // returns column vector with the solution to the linear system A * x = b, lup = math.lup(A)\n   *\n   * Examples:\n   *\n   *    const m = [[1, 0, 0, 0], [0, 2, 0, 0], [0, 0, 3, 0], [0, 0, 0, 4]]\n   *\n   *    const x = math.lusolve(m, [-1, -1, -1, -1])        // x = [[-1], [-0.5], [-1/3], [-0.25]]\n   *\n   *    const f = math.lup(m)\n   *    const x1 = math.lusolve(f, [-1, -1, -1, -1])       // x1 = [[-1], [-0.5], [-1/3], [-0.25]]\n   *    const x2 = math.lusolve(f, [1, 2, 1, -1])          // x2 = [[1], [1], [1/3], [-0.25]]\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = math.lusolve(a, b)  // [[2], [5]]\n   *\n   * See also:\n   *\n   *    lup, slu, lsolve, usolve\n   *\n   * @param {Matrix | Array | Object} A      Invertible Matrix or the Matrix LU decomposition\n   * @param {Matrix | Array} b               Column Vector\n   * @param {number} [order]                 The Symbolic Ordering and Analysis order, see slu for details. Matrix must be a SparseMatrix\n   * @param {Number} [threshold]             Partial pivoting threshold (1 for partial pivoting), see slu for details. Matrix must be a SparseMatrix.\n   *\n   * @return {DenseMatrix | Array}           Column vector with the solution to the linear system A * x = b\n   */\n\n  return typed(name, {\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      a = matrix(a);\n      var d = lup(a);\n\n      var x = _lusolve(d.L, d.U, d.p, null, b);\n\n      return x.valueOf();\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(a, b) {\n      var d = lup(a);\n      return _lusolve(d.L, d.U, d.p, null, b);\n    },\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(a, b) {\n      var d = lup(a);\n      return _lusolve(d.L, d.U, d.p, null, b);\n    },\n    'SparseMatrix, Array | Matrix, number, number': function SparseMatrixArrayMatrixNumberNumber(a, b, order, threshold) {\n      var d = slu(a, order, threshold);\n      return _lusolve(d.L, d.U, d.p, d.q, b);\n    },\n    'Object, Array | Matrix': function ObjectArrayMatrix(d, b) {\n      return _lusolve(d.L, d.U, d.p, d.q, b);\n    }\n  });\n\n  function _toMatrix(a) {\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMatrix)(a)) {\n      return a;\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isArray)(a)) {\n      return matrix(a);\n    }\n\n    throw new TypeError('Invalid Matrix LU decomposition');\n  }\n\n  function _lusolve(l, u, p, q, b) {\n    // verify decomposition\n    l = _toMatrix(l);\n    u = _toMatrix(u); // apply row permutations if needed (b is a DenseMatrix)\n\n    if (p) {\n      b = solveValidation(l, b, true);\n      b._data = (0,_sparse_csIpvec_js__WEBPACK_IMPORTED_MODULE_3__.csIpvec)(p, b._data);\n    } // use forward substitution to resolve L * y = b\n\n\n    var y = lsolve(l, b); // use backward substitution to resolve U * x = y\n\n    var x = usolve(u, y); // apply column permutations if needed (x is a DenseMatrix)\n\n    if (q) {\n      x._data = (0,_sparse_csIpvec_js__WEBPACK_IMPORTED_MODULE_3__.csIpvec)(q, x._data);\n    }\n\n    return x;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/solver/lusolve.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/solver/usolve.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/solver/usolve.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUsolve\": () => (/* binding */ createUsolve)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/solveValidation.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js\");\n\n\nvar name = 'usolve';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];\nvar createUsolve = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    divideScalar,\n    multiplyScalar,\n    subtract,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var solveValidation = (0,_utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__.createSolveValidation)({\n    DenseMatrix\n  });\n  /**\n   * Finds one solution of a linear equation system by backward substitution. Matrix must be an upper triangular matrix. Throws an error if there's no solution.\n   *\n   * `U * x = b`\n   *\n   * Syntax:\n   *\n   *    math.usolve(U, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = usolve(a, b)  // [[8], [9]]\n   *\n   * See also:\n   *\n   *    usolveAll, lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} U       A N x N matrix or array (U)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix | Array}  A column vector with the linear system solution (x)\n   */\n\n  return typed(name, {\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {\n      return _sparseBackwardSubstitution(m, b);\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {\n      return _denseBackwardSubstitution(m, b);\n    },\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      var m = matrix(a);\n\n      var r = _denseBackwardSubstitution(m, b);\n\n      return r.valueOf();\n    }\n  });\n\n  function _denseBackwardSubstitution(m, b) {\n    // make b into a column vector\n    b = solveValidation(m, b, true);\n    var bdata = b._data;\n    var rows = m._size[0];\n    var columns = m._size[1]; // result\n\n    var x = [];\n    var mdata = m._data; // loop columns backwards\n\n    for (var j = columns - 1; j >= 0; j--) {\n      // b[j]\n      var bj = bdata[j][0] || 0; // x[j]\n\n      var xj = void 0;\n\n      if (!equalScalar(bj, 0)) {\n        // value at [j, j]\n        var vjj = mdata[j][j];\n\n        if (equalScalar(vjj, 0)) {\n          // system cannot be solved\n          throw new Error('Linear system cannot be solved since matrix is singular');\n        }\n\n        xj = divideScalar(bj, vjj); // loop rows\n\n        for (var i = j - 1; i >= 0; i--) {\n          // update copy of b\n          bdata[i] = [subtract(bdata[i][0] || 0, multiplyScalar(xj, mdata[i][j]))];\n        }\n      } else {\n        // zero value at j\n        xj = 0;\n      } // update x\n\n\n      x[j] = [xj];\n    }\n\n    return new DenseMatrix({\n      data: x,\n      size: [rows, 1]\n    });\n  }\n\n  function _sparseBackwardSubstitution(m, b) {\n    // make b into a column vector\n    b = solveValidation(m, b, true);\n    var bdata = b._data;\n    var rows = m._size[0];\n    var columns = m._size[1];\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // result\n\n    var x = []; // loop columns backwards\n\n    for (var j = columns - 1; j >= 0; j--) {\n      var bj = bdata[j][0] || 0;\n\n      if (!equalScalar(bj, 0)) {\n        // non-degenerate row, find solution\n        var vjj = 0; // upper triangular matrix values & index (column j)\n\n        var jValues = [];\n        var jIndices = []; // first & last indeces in column\n\n        var firstIndex = ptr[j];\n        var lastIndex = ptr[j + 1]; // values in column, find value at [j, j], loop backwards\n\n        for (var k = lastIndex - 1; k >= firstIndex; k--) {\n          var i = index[k]; // check row (rows are not sorted!)\n\n          if (i === j) {\n            vjj = values[k];\n          } else if (i < j) {\n            // store upper triangular\n            jValues.push(values[k]);\n            jIndices.push(i);\n          }\n        } // at this point we must have a value in vjj\n\n\n        if (equalScalar(vjj, 0)) {\n          throw new Error('Linear system cannot be solved since matrix is singular');\n        }\n\n        var xj = divideScalar(bj, vjj);\n\n        for (var _k = 0, _lastIndex = jIndices.length; _k < _lastIndex; _k++) {\n          var _i = jIndices[_k];\n          bdata[_i] = [subtract(bdata[_i][0], multiplyScalar(xj, jValues[_k]))];\n        }\n\n        x[j] = [xj];\n      } else {\n        // degenerate row, we can choose any value\n        x[j] = [0];\n      }\n    }\n\n    return new DenseMatrix({\n      data: x,\n      size: [rows, 1]\n    });\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/solver/usolve.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/solver/usolveAll.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/solver/usolveAll.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUsolveAll\": () => (/* binding */ createUsolveAll)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/solveValidation.js */ \"./node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js\");\n\n\nvar name = 'usolveAll';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'multiplyScalar', 'subtract', 'equalScalar', 'DenseMatrix'];\nvar createUsolveAll = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    divideScalar,\n    multiplyScalar,\n    subtract,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var solveValidation = (0,_utils_solveValidation_js__WEBPACK_IMPORTED_MODULE_1__.createSolveValidation)({\n    DenseMatrix\n  });\n  /**\n   * Finds all solutions of a linear equation system by backward substitution. Matrix must be an upper triangular matrix.\n   *\n   * `U * x = b`\n   *\n   * Syntax:\n   *\n   *    math.usolveAll(U, b)\n   *\n   * Examples:\n   *\n   *    const a = [[-2, 3], [2, 1]]\n   *    const b = [11, 9]\n   *    const x = usolveAll(a, b)  // [ [[8], [9]] ]\n   *\n   * See also:\n   *\n   *    usolve, lup, slu, usolve, lusolve\n   *\n   * @param {Matrix, Array} U       A N x N matrix or array (U)\n   * @param {Matrix, Array} b       A column vector with the b values\n   *\n   * @return {DenseMatrix[] | Array[]}  An array of affine-independent column vectors (x) that solve the linear system\n   */\n\n  return typed(name, {\n    'SparseMatrix, Array | Matrix': function SparseMatrixArrayMatrix(m, b) {\n      return _sparseBackwardSubstitution(m, b);\n    },\n    'DenseMatrix, Array | Matrix': function DenseMatrixArrayMatrix(m, b) {\n      return _denseBackwardSubstitution(m, b);\n    },\n    'Array, Array | Matrix': function ArrayArrayMatrix(a, b) {\n      var m = matrix(a);\n\n      var R = _denseBackwardSubstitution(m, b);\n\n      return R.map(r => r.valueOf());\n    }\n  });\n\n  function _denseBackwardSubstitution(m, b_) {\n    // the algorithm is derived from\n    // https://www.overleaf.com/read/csvgqdxggyjv\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(e => e[0])];\n    var M = m._data;\n    var rows = m._size[0];\n    var columns = m._size[1]; // loop columns backwards\n\n    for (var i = columns - 1; i >= 0; i--) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k];\n\n        if (!equalScalar(M[i][i], 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], M[i][i]);\n\n          for (var j = i - 1; j >= 0; j--) {\n            // b[j] -= b[i] * M[j,i]\n            b[j] = subtract(b[j], multiplyScalar(b[i], M[j][i]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = [...b];\n          bNew[i] = 1;\n\n          for (var _j = i - 1; _j >= 0; _j--) {\n            bNew[_j] = subtract(bNew[_j], M[_j][i]);\n          }\n\n          B.push(bNew);\n        }\n      }\n    }\n\n    return B.map(x => new DenseMatrix({\n      data: x.map(e => [e]),\n      size: [rows, 1]\n    }));\n  }\n\n  function _sparseBackwardSubstitution(m, b_) {\n    // array of right-hand sides\n    var B = [solveValidation(m, b_, true)._data.map(e => e[0])];\n    var rows = m._size[0];\n    var columns = m._size[1];\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop columns backwards\n\n    for (var i = columns - 1; i >= 0; i--) {\n      var L = B.length; // loop right-hand sides\n\n      for (var k = 0; k < L; k++) {\n        var b = B[k]; // values & indices (column i)\n\n        var iValues = [];\n        var iIndices = []; // first & last indeces in column\n\n        var firstIndex = ptr[i];\n        var lastIndex = ptr[i + 1]; // find the value at [i, i]\n\n        var Mii = 0;\n\n        for (var j = lastIndex - 1; j >= firstIndex; j--) {\n          var J = index[j]; // check row\n\n          if (J === i) {\n            Mii = values[j];\n          } else if (J < i) {\n            // store upper triangular\n            iValues.push(values[j]);\n            iIndices.push(J);\n          }\n        }\n\n        if (!equalScalar(Mii, 0)) {\n          // non-singular row\n          b[i] = divideScalar(b[i], Mii); // loop upper triangular\n\n          for (var _j2 = 0, _lastIndex = iIndices.length; _j2 < _lastIndex; _j2++) {\n            var _J = iIndices[_j2];\n            b[_J] = subtract(b[_J], multiplyScalar(b[i], iValues[_j2]));\n          }\n        } else if (!equalScalar(b[i], 0)) {\n          // singular row, nonzero RHS\n          if (k === 0) {\n            // There is no valid solution\n            return [];\n          } else {\n            // This RHS is invalid but other solutions may still exist\n            B.splice(k, 1);\n            k -= 1;\n            L -= 1;\n          }\n        } else if (k === 0) {\n          // singular row, RHS is zero\n          var bNew = [...b];\n          bNew[i] = 1; // loop upper triangular\n\n          for (var _j3 = 0, _lastIndex2 = iIndices.length; _j3 < _lastIndex2; _j3++) {\n            var _J2 = iIndices[_j3];\n            bNew[_J2] = subtract(bNew[_J2], iValues[_j3]);\n          }\n\n          B.push(bNew);\n        }\n      }\n    }\n\n    return B.map(x => new DenseMatrix({\n      data: x.map(e => [e]),\n      size: [rows, 1]\n    }));\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/solver/usolveAll.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSolveValidation\": () => (/* binding */ createSolveValidation)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n\n\n\nfunction createSolveValidation(_ref) {\n  var {\n    DenseMatrix\n  } = _ref;\n  /**\n   * Validates matrix and column vector b for backward/forward substitution algorithms.\n   *\n   * @param {Matrix} m            An N x N matrix\n   * @param {Array | Matrix} b    A column vector\n   * @param {Boolean} copy        Return a copy of vector b\n   *\n   * @return {DenseMatrix}        Dense column vector b\n   */\n\n  return function solveValidation(m, b, copy) {\n    var mSize = m.size();\n\n    if (mSize.length !== 2) {\n      throw new RangeError('Matrix must be two dimensional (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_0__.format)(mSize) + ')');\n    }\n\n    var rows = mSize[0];\n    var columns = mSize[1];\n\n    if (rows !== columns) {\n      throw new RangeError('Matrix must be square (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_0__.format)(mSize) + ')');\n    }\n\n    var data = [];\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(b)) {\n      var bSize = b.size();\n      var bdata = b._data; // 1-dim vector\n\n      if (bSize.length === 1) {\n        if (bSize[0] !== rows) {\n          throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');\n        }\n\n        for (var i = 0; i < rows; i++) {\n          data[i] = [bdata[i]];\n        }\n\n        return new DenseMatrix({\n          data: data,\n          size: [rows, 1],\n          datatype: b._datatype\n        });\n      } // 2-dim column\n\n\n      if (bSize.length === 2) {\n        if (bSize[0] !== rows || bSize[1] !== 1) {\n          throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');\n        }\n\n        if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isDenseMatrix)(b)) {\n          if (copy) {\n            data = [];\n\n            for (var _i = 0; _i < rows; _i++) {\n              data[_i] = [bdata[_i][0]];\n            }\n\n            return new DenseMatrix({\n              data: data,\n              size: [rows, 1],\n              datatype: b._datatype\n            });\n          }\n\n          return b;\n        }\n\n        if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isSparseMatrix)(b)) {\n          for (var _i2 = 0; _i2 < rows; _i2++) {\n            data[_i2] = [0];\n          }\n\n          var values = b._values;\n          var index = b._index;\n          var ptr = b._ptr;\n\n          for (var k1 = ptr[1], k = ptr[0]; k < k1; k++) {\n            var _i3 = index[k];\n            data[_i3][0] = values[k];\n          }\n\n          return new DenseMatrix({\n            data: data,\n            size: [rows, 1],\n            datatype: b._datatype\n          });\n        }\n      }\n\n      throw new RangeError('Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.');\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(b)) {\n      var bsize = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_2__.arraySize)(b);\n\n      if (bsize.length === 1) {\n        if (bsize[0] !== rows) {\n          throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');\n        }\n\n        for (var _i4 = 0; _i4 < rows; _i4++) {\n          data[_i4] = [b[_i4]];\n        }\n\n        return new DenseMatrix({\n          data: data,\n          size: [rows, 1]\n        });\n      }\n\n      if (bsize.length === 2) {\n        if (bsize[0] !== rows || bsize[1] !== 1) {\n          throw new RangeError('Dimension mismatch. Matrix columns must match vector length.');\n        }\n\n        for (var _i5 = 0; _i5 < rows; _i5++) {\n          data[_i5] = [b[_i5][0]];\n        }\n\n        return new DenseMatrix({\n          data: data,\n          size: [rows, 1]\n        });\n      }\n\n      throw new RangeError('Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.');\n    }\n  };\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csAmd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csAmd.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCsAmd\": () => (/* binding */ createCsAmd)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _csFkeep_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csFkeep.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csFkeep.js\");\n/* harmony import */ var _csFlip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csFlip.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csFlip.js\");\n/* harmony import */ var _csTdfs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./csTdfs.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csTdfs.js\");\n\n\n\n\nvar name = 'csAmd';\nvar dependencies = ['add', 'multiply', 'transpose'];\nvar createCsAmd = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    add,\n    multiply,\n    transpose\n  } = _ref;\n  /**\n   * Approximate minimum degree ordering. The minimum degree algorithm is a widely used\n   * heuristic for finding a permutation P so that P*A*P' has fewer nonzeros in its factorization\n   * than A. It is a gready method that selects the sparsest pivot row and column during the course\n   * of a right looking sparse Cholesky factorization.\n   *\n   * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n   *\n   * @param {Number} order    0: Natural, 1: Cholesky, 2: LU, 3: QR\n   * @param {Matrix} m        Sparse Matrix\n   */\n\n  return function csAmd(order, a) {\n    // check input parameters\n    if (!a || order <= 0 || order > 3) {\n      return null;\n    } // a matrix arrays\n\n\n    var asize = a._size; // rows and columns\n\n    var m = asize[0];\n    var n = asize[1]; // initialize vars\n\n    var lemax = 0; // dense threshold\n\n    var dense = Math.max(16, 10 * Math.sqrt(n));\n    dense = Math.min(n - 2, dense); // create target matrix C\n\n    var cm = _createTargetMatrix(order, a, m, n, dense); // drop diagonal entries\n\n\n    (0,_csFkeep_js__WEBPACK_IMPORTED_MODULE_1__.csFkeep)(cm, _diag, null); // C matrix arrays\n\n    var cindex = cm._index;\n    var cptr = cm._ptr; // number of nonzero elements in C\n\n    var cnz = cptr[n]; // allocate result (n+1)\n\n    var P = []; // create workspace (8 * (n + 1))\n\n    var W = [];\n    var len = 0; // first n + 1 entries\n\n    var nv = n + 1; // next n + 1 entries\n\n    var next = 2 * (n + 1); // next n + 1 entries\n\n    var head = 3 * (n + 1); // next n + 1 entries\n\n    var elen = 4 * (n + 1); // next n + 1 entries\n\n    var degree = 5 * (n + 1); // next n + 1 entries\n\n    var w = 6 * (n + 1); // next n + 1 entries\n\n    var hhead = 7 * (n + 1); // last n + 1 entries\n    // use P as workspace for last\n\n    var last = P; // initialize quotient graph\n\n    var mark = _initializeQuotientGraph(n, cptr, W, len, head, last, next, hhead, nv, w, elen, degree); // initialize degree lists\n\n\n    var nel = _initializeDegreeLists(n, cptr, W, degree, elen, w, dense, nv, head, last, next); // minimum degree node\n\n\n    var mindeg = 0; // vars\n\n    var i, j, k, k1, k2, e, pj, ln, nvi, pk, eln, p1, p2, pn, h, d; // while (selecting pivots) do\n\n    while (nel < n) {\n      // select node of minimum approximate degree. amd() is now ready to start eliminating the graph. It first\n      // finds a node k of minimum degree and removes it from its degree list. The variable nel keeps track of thow\n      // many nodes have been eliminated.\n      for (k = -1; mindeg < n && (k = W[head + mindeg]) === -1; mindeg++) {\n        ;\n      }\n\n      if (W[next + k] !== -1) {\n        last[W[next + k]] = -1;\n      } // remove k from degree list\n\n\n      W[head + mindeg] = W[next + k]; // elenk = |Ek|\n\n      var elenk = W[elen + k]; // # of nodes k represents\n\n      var nvk = W[nv + k]; // W[nv + k] nodes of A eliminated\n\n      nel += nvk; // Construct a new element. The new element Lk is constructed in place if |Ek| = 0. nv[i] is\n      // negated for all nodes i in Lk to flag them as members of this set. Each node i is removed from the\n      // degree lists. All elements e in Ek are absorved into element k.\n\n      var dk = 0; // flag k as in Lk\n\n      W[nv + k] = -nvk;\n      var p = cptr[k]; // do in place if W[elen + k] === 0\n\n      var pk1 = elenk === 0 ? p : cnz;\n      var pk2 = pk1;\n\n      for (k1 = 1; k1 <= elenk + 1; k1++) {\n        if (k1 > elenk) {\n          // search the nodes in k\n          e = k; // list of nodes starts at cindex[pj]\n\n          pj = p; // length of list of nodes in k\n\n          ln = W[len + k] - elenk;\n        } else {\n          // search the nodes in e\n          e = cindex[p++];\n          pj = cptr[e]; // length of list of nodes in e\n\n          ln = W[len + e];\n        }\n\n        for (k2 = 1; k2 <= ln; k2++) {\n          i = cindex[pj++]; // check  node i dead, or seen\n\n          if ((nvi = W[nv + i]) <= 0) {\n            continue;\n          } // W[degree + Lk] += size of node i\n\n\n          dk += nvi; // negate W[nv + i] to denote i in Lk\n\n          W[nv + i] = -nvi; // place i in Lk\n\n          cindex[pk2++] = i;\n\n          if (W[next + i] !== -1) {\n            last[W[next + i]] = last[i];\n          } // check we need to remove i from degree list\n\n\n          if (last[i] !== -1) {\n            W[next + last[i]] = W[next + i];\n          } else {\n            W[head + W[degree + i]] = W[next + i];\n          }\n        }\n\n        if (e !== k) {\n          // absorb e into k\n          cptr[e] = (0,_csFlip_js__WEBPACK_IMPORTED_MODULE_2__.csFlip)(k); // e is now a dead element\n\n          W[w + e] = 0;\n        }\n      } // cindex[cnz...nzmax] is free\n\n\n      if (elenk !== 0) {\n        cnz = pk2;\n      } // external degree of k - |Lk\\i|\n\n\n      W[degree + k] = dk; // element k is in cindex[pk1..pk2-1]\n\n      cptr[k] = pk1;\n      W[len + k] = pk2 - pk1; // k is now an element\n\n      W[elen + k] = -2; // Find set differences. The scan1 function now computes the set differences |Le \\ Lk| for all elements e. At the start of the\n      // scan, no entry in the w array is greater than or equal to mark.\n      // clear w if necessary\n\n      mark = _wclear(mark, lemax, W, w, n); // scan 1: find |Le\\Lk|\n\n      for (pk = pk1; pk < pk2; pk++) {\n        i = cindex[pk]; // check if W[elen + i] empty, skip it\n\n        if ((eln = W[elen + i]) <= 0) {\n          continue;\n        } // W[nv + i] was negated\n\n\n        nvi = -W[nv + i];\n        var wnvi = mark - nvi; // scan Ei\n\n        for (p = cptr[i], p1 = cptr[i] + eln - 1; p <= p1; p++) {\n          e = cindex[p];\n\n          if (W[w + e] >= mark) {\n            // decrement |Le\\Lk|\n            W[w + e] -= nvi;\n          } else if (W[w + e] !== 0) {\n            // ensure e is a live element, 1st time e seen in scan 1\n            W[w + e] = W[degree + e] + wnvi;\n          }\n        }\n      } // degree update\n      // The second pass computes the approximate degree di, prunes the sets Ei and Ai, and computes a hash\n      // function h(i) for all nodes in Lk.\n      // scan2: degree update\n\n\n      for (pk = pk1; pk < pk2; pk++) {\n        // consider node i in Lk\n        i = cindex[pk];\n        p1 = cptr[i];\n        p2 = p1 + W[elen + i] - 1;\n        pn = p1; // scan Ei\n\n        for (h = 0, d = 0, p = p1; p <= p2; p++) {\n          e = cindex[p]; // check e is an unabsorbed element\n\n          if (W[w + e] !== 0) {\n            // dext = |Le\\Lk|\n            var dext = W[w + e] - mark;\n\n            if (dext > 0) {\n              // sum up the set differences\n              d += dext; // keep e in Ei\n\n              cindex[pn++] = e; // compute the hash of node i\n\n              h += e;\n            } else {\n              // aggressive absorb. e->k\n              cptr[e] = (0,_csFlip_js__WEBPACK_IMPORTED_MODULE_2__.csFlip)(k); // e is a dead element\n\n              W[w + e] = 0;\n            }\n          }\n        } // W[elen + i] = |Ei|\n\n\n        W[elen + i] = pn - p1 + 1;\n        var p3 = pn;\n        var p4 = p1 + W[len + i]; // prune edges in Ai\n\n        for (p = p2 + 1; p < p4; p++) {\n          j = cindex[p]; // check node j dead or in Lk\n\n          var nvj = W[nv + j];\n\n          if (nvj <= 0) {\n            continue;\n          } // degree(i) += |j|\n\n\n          d += nvj; // place j in node list of i\n\n          cindex[pn++] = j; // compute hash for node i\n\n          h += j;\n        } // check for mass elimination\n\n\n        if (d === 0) {\n          // absorb i into k\n          cptr[i] = (0,_csFlip_js__WEBPACK_IMPORTED_MODULE_2__.csFlip)(k);\n          nvi = -W[nv + i]; // |Lk| -= |i|\n\n          dk -= nvi; // |k| += W[nv + i]\n\n          nvk += nvi;\n          nel += nvi;\n          W[nv + i] = 0; // node i is dead\n\n          W[elen + i] = -1;\n        } else {\n          // update degree(i)\n          W[degree + i] = Math.min(W[degree + i], d); // move first node to end\n\n          cindex[pn] = cindex[p3]; // move 1st el. to end of Ei\n\n          cindex[p3] = cindex[p1]; // add k as 1st element in of Ei\n\n          cindex[p1] = k; // new len of adj. list of node i\n\n          W[len + i] = pn - p1 + 1; // finalize hash of i\n\n          h = (h < 0 ? -h : h) % n; // place i in hash bucket\n\n          W[next + i] = W[hhead + h];\n          W[hhead + h] = i; // save hash of i in last[i]\n\n          last[i] = h;\n        }\n      } // finalize |Lk|\n\n\n      W[degree + k] = dk;\n      lemax = Math.max(lemax, dk); // clear w\n\n      mark = _wclear(mark + lemax, lemax, W, w, n); // Supernode detection. Supernode detection relies on the hash function h(i) computed for each node i.\n      // If two nodes have identical adjacency lists, their hash functions wil be identical.\n\n      for (pk = pk1; pk < pk2; pk++) {\n        i = cindex[pk]; // check i is dead, skip it\n\n        if (W[nv + i] >= 0) {\n          continue;\n        } // scan hash bucket of node i\n\n\n        h = last[i];\n        i = W[hhead + h]; // hash bucket will be empty\n\n        W[hhead + h] = -1;\n\n        for (; i !== -1 && W[next + i] !== -1; i = W[next + i], mark++) {\n          ln = W[len + i];\n          eln = W[elen + i];\n\n          for (p = cptr[i] + 1; p <= cptr[i] + ln - 1; p++) {\n            W[w + cindex[p]] = mark;\n          }\n\n          var jlast = i; // compare i with all j\n\n          for (j = W[next + i]; j !== -1;) {\n            var ok = W[len + j] === ln && W[elen + j] === eln;\n\n            for (p = cptr[j] + 1; ok && p <= cptr[j] + ln - 1; p++) {\n              // compare i and j\n              if (W[w + cindex[p]] !== mark) {\n                ok = 0;\n              }\n            } // check i and j are identical\n\n\n            if (ok) {\n              // absorb j into i\n              cptr[j] = (0,_csFlip_js__WEBPACK_IMPORTED_MODULE_2__.csFlip)(i);\n              W[nv + i] += W[nv + j];\n              W[nv + j] = 0; // node j is dead\n\n              W[elen + j] = -1; // delete j from hash bucket\n\n              j = W[next + j];\n              W[next + jlast] = j;\n            } else {\n              // j and i are different\n              jlast = j;\n              j = W[next + j];\n            }\n          }\n        }\n      } // Finalize new element. The elimination of node k is nearly complete. All nodes i in Lk are scanned one last time.\n      // Node i is removed from Lk if it is dead. The flagged status of nv[i] is cleared.\n\n\n      for (p = pk1, pk = pk1; pk < pk2; pk++) {\n        i = cindex[pk]; // check  i is dead, skip it\n\n        if ((nvi = -W[nv + i]) <= 0) {\n          continue;\n        } // restore W[nv + i]\n\n\n        W[nv + i] = nvi; // compute external degree(i)\n\n        d = W[degree + i] + dk - nvi;\n        d = Math.min(d, n - nel - nvi);\n\n        if (W[head + d] !== -1) {\n          last[W[head + d]] = i;\n        } // put i back in degree list\n\n\n        W[next + i] = W[head + d];\n        last[i] = -1;\n        W[head + d] = i; // find new minimum degree\n\n        mindeg = Math.min(mindeg, d);\n        W[degree + i] = d; // place i in Lk\n\n        cindex[p++] = i;\n      } // # nodes absorbed into k\n\n\n      W[nv + k] = nvk; // length of adj list of element k\n\n      if ((W[len + k] = p - pk1) === 0) {\n        // k is a root of the tree\n        cptr[k] = -1; // k is now a dead element\n\n        W[w + k] = 0;\n      }\n\n      if (elenk !== 0) {\n        // free unused space in Lk\n        cnz = p;\n      }\n    } // Postordering. The elimination is complete, but no permutation has been computed. All that is left\n    // of the graph is the assembly tree (ptr) and a set of dead nodes and elements (i is a dead node if\n    // nv[i] is zero and a dead element if nv[i] > 0). It is from this information only that the final permutation\n    // is computed. The tree is restored by unflipping all of ptr.\n    // fix assembly tree\n\n\n    for (i = 0; i < n; i++) {\n      cptr[i] = (0,_csFlip_js__WEBPACK_IMPORTED_MODULE_2__.csFlip)(cptr[i]);\n    }\n\n    for (j = 0; j <= n; j++) {\n      W[head + j] = -1;\n    } // place unordered nodes in lists\n\n\n    for (j = n; j >= 0; j--) {\n      // skip if j is an element\n      if (W[nv + j] > 0) {\n        continue;\n      } // place j in list of its parent\n\n\n      W[next + j] = W[head + cptr[j]];\n      W[head + cptr[j]] = j;\n    } // place elements in lists\n\n\n    for (e = n; e >= 0; e--) {\n      // skip unless e is an element\n      if (W[nv + e] <= 0) {\n        continue;\n      }\n\n      if (cptr[e] !== -1) {\n        // place e in list of its parent\n        W[next + e] = W[head + cptr[e]];\n        W[head + cptr[e]] = e;\n      }\n    } // postorder the assembly tree\n\n\n    for (k = 0, i = 0; i <= n; i++) {\n      if (cptr[i] === -1) {\n        k = (0,_csTdfs_js__WEBPACK_IMPORTED_MODULE_3__.csTdfs)(i, k, W, head, next, P, w);\n      }\n    } // remove last item in array\n\n\n    P.splice(P.length - 1, 1); // return P\n\n    return P;\n  };\n  /**\n   * Creates the matrix that will be used by the approximate minimum degree ordering algorithm. The function accepts the matrix M as input and returns a permutation\n   * vector P. The amd algorithm operates on a symmetrix matrix, so one of three symmetric matrices is formed.\n   *\n   * Order: 0\n   *   A natural ordering P=null matrix is returned.\n   *\n   * Order: 1\n   *   Matrix must be square. This is appropriate for a Cholesky or LU factorization.\n   *   P = M + M'\n   *\n   * Order: 2\n   *   Dense columns from M' are dropped, M recreated from M'. This is appropriatefor LU factorization of unsymmetric matrices.\n   *   P = M' * M\n   *\n   * Order: 3\n   *   This is best used for QR factorization or LU factorization is matrix M has no dense rows. A dense row is a row with more than 10*sqr(columns) entries.\n   *   P = M' * M\n   */\n\n  function _createTargetMatrix(order, a, m, n, dense) {\n    // compute A'\n    var at = transpose(a); // check order = 1, matrix must be square\n\n    if (order === 1 && n === m) {\n      // C = A + A'\n      return add(a, at);\n    } // check order = 2, drop dense columns from M'\n\n\n    if (order === 2) {\n      // transpose arrays\n      var tindex = at._index;\n      var tptr = at._ptr; // new column index\n\n      var p2 = 0; // loop A' columns (rows)\n\n      for (var j = 0; j < m; j++) {\n        // column j of AT starts here\n        var p = tptr[j]; // new column j starts here\n\n        tptr[j] = p2; // skip dense col j\n\n        if (tptr[j + 1] - p > dense) {\n          continue;\n        } // map rows in column j of A\n\n\n        for (var p1 = tptr[j + 1]; p < p1; p++) {\n          tindex[p2++] = tindex[p];\n        }\n      } // finalize AT\n\n\n      tptr[m] = p2; // recreate A from new transpose matrix\n\n      a = transpose(at); // use A' * A\n\n      return multiply(at, a);\n    } // use A' * A, square or rectangular matrix\n\n\n    return multiply(at, a);\n  }\n  /**\n   * Initialize quotient graph. There are four kind of nodes and elements that must be represented:\n   *\n   *  - A live node is a node i (or a supernode) that has not been selected as a pivot nad has not been merged into another supernode.\n   *  - A dead node i is one that has been removed from the graph, having been absorved into r = flip(ptr[i]).\n   *  - A live element e is one that is in the graph, having been formed when node e was selected as the pivot.\n   *  - A dead element e is one that has benn absorved into a subsequent element s = flip(ptr[e]).\n   */\n\n\n  function _initializeQuotientGraph(n, cptr, W, len, head, last, next, hhead, nv, w, elen, degree) {\n    // Initialize quotient graph\n    for (var k = 0; k < n; k++) {\n      W[len + k] = cptr[k + 1] - cptr[k];\n    }\n\n    W[len + n] = 0; // initialize workspace\n\n    for (var i = 0; i <= n; i++) {\n      // degree list i is empty\n      W[head + i] = -1;\n      last[i] = -1;\n      W[next + i] = -1; // hash list i is empty\n\n      W[hhead + i] = -1; // node i is just one node\n\n      W[nv + i] = 1; // node i is alive\n\n      W[w + i] = 1; // Ek of node i is empty\n\n      W[elen + i] = 0; // degree of node i\n\n      W[degree + i] = W[len + i];\n    } // clear w\n\n\n    var mark = _wclear(0, 0, W, w, n); // n is a dead element\n\n\n    W[elen + n] = -2; // n is a root of assembly tree\n\n    cptr[n] = -1; // n is a dead element\n\n    W[w + n] = 0; // return mark\n\n    return mark;\n  }\n  /**\n   * Initialize degree lists. Each node is placed in its degree lists. Nodes of zero degree are eliminated immediately. Nodes with\n   * degree >= dense are alsol eliminated and merged into a placeholder node n, a dead element. Thes nodes will appera last in the\n   * output permutation p.\n   */\n\n\n  function _initializeDegreeLists(n, cptr, W, degree, elen, w, dense, nv, head, last, next) {\n    // result\n    var nel = 0; // loop columns\n\n    for (var i = 0; i < n; i++) {\n      // degree @ i\n      var d = W[degree + i]; // check node i is empty\n\n      if (d === 0) {\n        // element i is dead\n        W[elen + i] = -2;\n        nel++; // i is a root of assembly tree\n\n        cptr[i] = -1;\n        W[w + i] = 0;\n      } else if (d > dense) {\n        // absorb i into element n\n        W[nv + i] = 0; // node i is dead\n\n        W[elen + i] = -1;\n        nel++;\n        cptr[i] = (0,_csFlip_js__WEBPACK_IMPORTED_MODULE_2__.csFlip)(n);\n        W[nv + n]++;\n      } else {\n        var h = W[head + d];\n\n        if (h !== -1) {\n          last[h] = i;\n        } // put node i in degree list d\n\n\n        W[next + i] = W[head + d];\n        W[head + d] = i;\n      }\n    }\n\n    return nel;\n  }\n\n  function _wclear(mark, lemax, W, w, n) {\n    if (mark < 2 || mark + lemax < 0) {\n      for (var k = 0; k < n; k++) {\n        if (W[w + k] !== 0) {\n          W[w + k] = 1;\n        }\n      }\n\n      mark = 2;\n    } // at this point, W [0..n-1] < mark holds\n\n\n    return mark;\n  }\n\n  function _diag(i, j) {\n    return i !== j;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csAmd.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csCounts.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csCounts.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCsCounts\": () => (/* binding */ createCsCounts)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _csLeaf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csLeaf.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csLeaf.js\");\n\n\nvar name = 'csCounts';\nvar dependencies = ['transpose'];\nvar createCsCounts = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    transpose\n  } = _ref;\n  /**\n   * Computes the column counts using the upper triangular part of A.\n   * It transposes A internally, none of the input parameters are modified.\n   *\n   * @param {Matrix} a           The sparse matrix A\n   *\n   * @param {Matrix} ata         Count the columns of A'A instead\n   *\n   * @return                     An array of size n of the column counts or null on error\n   *\n   * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n   */\n\n  return function (a, parent, post, ata) {\n    // check inputs\n    if (!a || !parent || !post) {\n      return null;\n    } // a matrix arrays\n\n\n    var asize = a._size; // rows and columns\n\n    var m = asize[0];\n    var n = asize[1]; // variables\n\n    var i, j, k, J, p, p0, p1; // workspace size\n\n    var s = 4 * n + (ata ? n + m + 1 : 0); // allocate workspace\n\n    var w = []; // (s)\n\n    var ancestor = 0; // first n entries\n\n    var maxfirst = n; // next n entries\n\n    var prevleaf = 2 * n; // next n entries\n\n    var first = 3 * n; // next n entries\n\n    var head = 4 * n; // next n + 1 entries (used when ata is true)\n\n    var next = 5 * n + 1; // last entries in workspace\n    // clear workspace w[0..s-1]\n\n    for (k = 0; k < s; k++) {\n      w[k] = -1;\n    } // allocate result\n\n\n    var colcount = []; // (n)\n    // AT = A'\n\n    var at = transpose(a); // at arrays\n\n    var tindex = at._index;\n    var tptr = at._ptr; // find w[first + j]\n\n    for (k = 0; k < n; k++) {\n      j = post[k]; // colcount[j]=1 if j is a leaf\n\n      colcount[j] = w[first + j] === -1 ? 1 : 0;\n\n      for (; j !== -1 && w[first + j] === -1; j = parent[j]) {\n        w[first + j] = k;\n      }\n    } // initialize ata if needed\n\n\n    if (ata) {\n      // invert post\n      for (k = 0; k < n; k++) {\n        w[post[k]] = k;\n      } // loop rows (columns in AT)\n\n\n      for (i = 0; i < m; i++) {\n        // values in column i of AT\n        for (k = n, p0 = tptr[i], p1 = tptr[i + 1], p = p0; p < p1; p++) {\n          k = Math.min(k, w[tindex[p]]);\n        } // place row i in linked list k\n\n\n        w[next + i] = w[head + k];\n        w[head + k] = i;\n      }\n    } // each node in its own set\n\n\n    for (i = 0; i < n; i++) {\n      w[ancestor + i] = i;\n    }\n\n    for (k = 0; k < n; k++) {\n      // j is the kth node in postordered etree\n      j = post[k]; // check j is not a root\n\n      if (parent[j] !== -1) {\n        colcount[parent[j]]--;\n      } // J=j for LL'=A case\n\n\n      for (J = ata ? w[head + k] : j; J !== -1; J = ata ? w[next + J] : -1) {\n        for (p = tptr[J]; p < tptr[J + 1]; p++) {\n          i = tindex[p];\n          var r = (0,_csLeaf_js__WEBPACK_IMPORTED_MODULE_1__.csLeaf)(i, j, w, first, maxfirst, prevleaf, ancestor); // check A(i,j) is in skeleton\n\n          if (r.jleaf >= 1) {\n            colcount[j]++;\n          } // check account for overlap in q\n\n\n          if (r.jleaf === 2) {\n            colcount[r.q]--;\n          }\n        }\n      }\n\n      if (parent[j] !== -1) {\n        w[ancestor + j] = parent[j];\n      }\n    } // sum up colcount's of each child\n\n\n    for (j = 0; j < n; j++) {\n      if (parent[j] !== -1) {\n        colcount[parent[j]] += colcount[j];\n      }\n    }\n\n    return colcount;\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csCounts.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csDfs.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csDfs.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csDfs\": () => (/* binding */ csDfs)\n/* harmony export */ });\n/* harmony import */ var _csMarked_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csMarked.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csMarked.js\");\n/* harmony import */ var _csMark_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csMark.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csMark.js\");\n/* harmony import */ var _csUnflip_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csUnflip.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csUnflip.js\");\n\n\n\n/**\n * Depth-first search computes the nonzero pattern xi of the directed graph G (Matrix) starting\n * at nodes in B (see csReach()).\n *\n * @param {Number}  j               The starting node for the DFS algorithm\n * @param {Matrix}  g               The G matrix to search, ptr array modified, then restored\n * @param {Number}  top             Start index in stack xi[top..n-1]\n * @param {Number}  k               The kth column in B\n * @param {Array}   xi              The nonzero pattern xi[top] .. xi[n - 1], an array of size = 2 * n\n *                                  The first n entries is the nonzero pattern, the last n entries is the stack\n * @param {Array}   pinv            The inverse row permutation vector, must be null for L * x = b\n *\n * @return {Number}                 New value of top\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\n\nfunction csDfs(j, g, top, xi, pinv) {\n  // g arrays\n  var index = g._index;\n  var ptr = g._ptr;\n  var size = g._size; // columns\n\n  var n = size[1]; // vars\n\n  var i, p, p2; // initialize head\n\n  var head = 0; // initialize the recursion stack\n\n  xi[0] = j; // loop\n\n  while (head >= 0) {\n    // get j from the top of the recursion stack\n    j = xi[head]; // apply permutation vector\n\n    var jnew = pinv ? pinv[j] : j; // check node j is marked\n\n    if (!(0,_csMarked_js__WEBPACK_IMPORTED_MODULE_0__.csMarked)(ptr, j)) {\n      // mark node j as visited\n      (0,_csMark_js__WEBPACK_IMPORTED_MODULE_1__.csMark)(ptr, j); // update stack (last n entries in xi)\n\n      xi[n + head] = jnew < 0 ? 0 : (0,_csUnflip_js__WEBPACK_IMPORTED_MODULE_2__.csUnflip)(ptr[jnew]);\n    } // node j done if no unvisited neighbors\n\n\n    var done = 1; // examine all neighbors of j, stack (last n entries in xi)\n\n    for (p = xi[n + head], p2 = jnew < 0 ? 0 : (0,_csUnflip_js__WEBPACK_IMPORTED_MODULE_2__.csUnflip)(ptr[jnew + 1]); p < p2; p++) {\n      // consider neighbor node i\n      i = index[p]; // check we have visited node i, skip it\n\n      if ((0,_csMarked_js__WEBPACK_IMPORTED_MODULE_0__.csMarked)(ptr, i)) {\n        continue;\n      } // pause depth-first search of node j, update stack (last n entries in xi)\n\n\n      xi[n + head] = p; // start dfs at node i\n\n      xi[++head] = i; // node j is not done\n\n      done = 0; // break, to start dfs(i)\n\n      break;\n    } // check depth-first search at node j is done\n\n\n    if (done) {\n      // remove j from the recursion stack\n      head--; // and place in the output stack\n\n      xi[--top] = j;\n    }\n  }\n\n  return top;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csDfs.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csEtree.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csEtree.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csEtree\": () => (/* binding */ csEtree)\n/* harmony export */ });\n/**\n * Computes the elimination tree of Matrix A (using triu(A)) or the\n * elimination tree of A'A without forming A'A.\n *\n * @param {Matrix}  a               The A Matrix\n * @param {boolean} ata             A value of true the function computes the etree of A'A\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csEtree(a, ata) {\n  // check inputs\n  if (!a) {\n    return null;\n  } // a arrays\n\n\n  var aindex = a._index;\n  var aptr = a._ptr;\n  var asize = a._size; // rows & columns\n\n  var m = asize[0];\n  var n = asize[1]; // allocate result\n\n  var parent = []; // (n)\n  // allocate workspace\n\n  var w = []; // (n + (ata ? m : 0))\n\n  var ancestor = 0; // first n entries in w\n\n  var prev = n; // last m entries (ata = true)\n\n  var i, inext; // check we are calculating A'A\n\n  if (ata) {\n    // initialize workspace\n    for (i = 0; i < m; i++) {\n      w[prev + i] = -1;\n    }\n  } // loop columns\n\n\n  for (var k = 0; k < n; k++) {\n    // node k has no parent yet\n    parent[k] = -1; // nor does k have an ancestor\n\n    w[ancestor + k] = -1; // values in column k\n\n    for (var p0 = aptr[k], p1 = aptr[k + 1], p = p0; p < p1; p++) {\n      // row\n      var r = aindex[p]; // node\n\n      i = ata ? w[prev + r] : r; // traverse from i to k\n\n      for (; i !== -1 && i < k; i = inext) {\n        // inext = ancestor of i\n        inext = w[ancestor + i]; // path compression\n\n        w[ancestor + i] = k; // check no anc., parent is k\n\n        if (inext === -1) {\n          parent[i] = k;\n        }\n      }\n\n      if (ata) {\n        w[prev + r] = k;\n      }\n    }\n  }\n\n  return parent;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csEtree.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csFkeep.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csFkeep.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csFkeep\": () => (/* binding */ csFkeep)\n/* harmony export */ });\n/**\n * Keeps entries in the matrix when the callback function returns true, removes the entry otherwise\n *\n * @param {Matrix}   a              The sparse matrix\n * @param {function} callback       The callback function, function will be invoked with the following args:\n *                                    - The entry row\n *                                    - The entry column\n *                                    - The entry value\n *                                    - The state parameter\n * @param {any}      other          The state\n *\n * @return                          The number of nonzero elements in the matrix\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csFkeep(a, callback, other) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr;\n  var asize = a._size; // columns\n\n  var n = asize[1]; // nonzero items\n\n  var nz = 0; // loop columns\n\n  for (var j = 0; j < n; j++) {\n    // get current location of col j\n    var p = aptr[j]; // record new location of col j\n\n    aptr[j] = nz;\n\n    for (; p < aptr[j + 1]; p++) {\n      // check we need to keep this item\n      if (callback(aindex[p], j, avalues ? avalues[p] : 1, other)) {\n        // keep A(i,j)\n        aindex[nz] = aindex[p]; // check we need to process values (pattern only)\n\n        if (avalues) {\n          avalues[nz] = avalues[p];\n        } // increment nonzero items\n\n\n        nz++;\n      }\n    }\n  } // finalize A\n\n\n  aptr[n] = nz; // trim arrays\n\n  aindex.splice(nz, aindex.length - nz); // check we need to process values (pattern only)\n\n  if (avalues) {\n    avalues.splice(nz, avalues.length - nz);\n  } // return number of nonzero items\n\n\n  return nz;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csFkeep.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csFlip.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csFlip.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csFlip\": () => (/* binding */ csFlip)\n/* harmony export */ });\n/**\n * This function \"flips\" its input about the integer -1.\n *\n * @param {Number}  i               The value to flip\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csFlip(i) {\n  // flip the value\n  return -i - 2;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csFlip.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csIpvec.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csIpvec.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csIpvec\": () => (/* binding */ csIpvec)\n/* harmony export */ });\n/**\n * Permutes a vector; x = P'b. In MATLAB notation, x(p)=b.\n *\n * @param {Array} p           The permutation vector of length n. null value denotes identity\n * @param {Array} b           The input vector\n *\n * @return {Array}            The output vector x = P'b\n */\nfunction csIpvec(p, b) {\n  // vars\n  var k;\n  var n = b.length;\n  var x = []; // check permutation vector was provided, p = null denotes identity\n\n  if (p) {\n    // loop vector\n    for (k = 0; k < n; k++) {\n      // apply permutation\n      x[p[k]] = b[k];\n    }\n  } else {\n    // loop vector\n    for (k = 0; k < n; k++) {\n      // x[i] = b[i]\n      x[k] = b[k];\n    }\n  }\n\n  return x;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csIpvec.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csLeaf.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csLeaf.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csLeaf\": () => (/* binding */ csLeaf)\n/* harmony export */ });\n/**\n * This function determines if j is a leaf of the ith row subtree.\n * Consider A(i,j), node j in ith row subtree and return lca(jprev,j)\n *\n * @param {Number}  i               The ith row subtree\n * @param {Number}  j               The node to test\n * @param {Array}   w               The workspace array\n * @param {Number}  first           The index offset within the workspace for the first array\n * @param {Number}  maxfirst        The index offset within the workspace for the maxfirst array\n * @param {Number}  prevleaf        The index offset within the workspace for the prevleaf array\n * @param {Number}  ancestor        The index offset within the workspace for the ancestor array\n *\n * @return {Object}\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csLeaf(i, j, w, first, maxfirst, prevleaf, ancestor) {\n  var s, sparent; // our result\n\n  var jleaf = 0;\n  var q; // check j is a leaf\n\n  if (i <= j || w[first + j] <= w[maxfirst + i]) {\n    return -1;\n  } // update max first[j] seen so far\n\n\n  w[maxfirst + i] = w[first + j]; // jprev = previous leaf of ith subtree\n\n  var jprev = w[prevleaf + i];\n  w[prevleaf + i] = j; // check j is first or subsequent leaf\n\n  if (jprev === -1) {\n    // 1st leaf, q = root of ith subtree\n    jleaf = 1;\n    q = i;\n  } else {\n    // update jleaf\n    jleaf = 2; // q = least common ancester (jprev,j)\n\n    for (q = jprev; q !== w[ancestor + q]; q = w[ancestor + q]) {\n      ;\n    }\n\n    for (s = jprev; s !== q; s = sparent) {\n      // path compression\n      sparent = w[ancestor + s];\n      w[ancestor + s] = q;\n    }\n  }\n\n  return {\n    jleaf: jleaf,\n    q: q\n  };\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csLeaf.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csLu.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csLu.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCsLu\": () => (/* binding */ createCsLu)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _csSpsolve_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csSpsolve.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csSpsolve.js\");\n\n\nvar name = 'csLu';\nvar dependencies = ['abs', 'divideScalar', 'multiply', 'subtract', 'larger', 'largerEq', 'SparseMatrix'];\nvar createCsLu = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    abs,\n    divideScalar,\n    multiply,\n    subtract,\n    larger,\n    largerEq,\n    SparseMatrix\n  } = _ref;\n  var csSpsolve = (0,_csSpsolve_js__WEBPACK_IMPORTED_MODULE_1__.createCsSpsolve)({\n    divideScalar,\n    multiply,\n    subtract\n  });\n  /**\n   * Computes the numeric LU factorization of the sparse matrix A. Implements a Left-looking LU factorization\n   * algorithm that computes L and U one column at a tume. At the kth step, it access columns 1 to k-1 of L\n   * and column k of A. Given the fill-reducing column ordering q (see parameter s) computes L, U and pinv so\n   * L * U = A(p, q), where p is the inverse of pinv.\n   *\n   * @param {Matrix}  m               The A Matrix to factorize\n   * @param {Object}  s               The symbolic analysis from csSqr(). Provides the fill-reducing\n   *                                  column ordering q\n   * @param {Number}  tol             Partial pivoting threshold (1 for partial pivoting)\n   *\n   * @return {Number}                 The numeric LU factorization of A or null\n   *\n   * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n   */\n\n  return function csLu(m, s, tol) {\n    // validate input\n    if (!m) {\n      return null;\n    } // m arrays\n\n\n    var size = m._size; // columns\n\n    var n = size[1]; // symbolic analysis result\n\n    var q;\n    var lnz = 100;\n    var unz = 100; // update symbolic analysis parameters\n\n    if (s) {\n      q = s.q;\n      lnz = s.lnz || lnz;\n      unz = s.unz || unz;\n    } // L arrays\n\n\n    var lvalues = []; // (lnz)\n\n    var lindex = []; // (lnz)\n\n    var lptr = []; // (n + 1)\n    // L\n\n    var L = new SparseMatrix({\n      values: lvalues,\n      index: lindex,\n      ptr: lptr,\n      size: [n, n]\n    }); // U arrays\n\n    var uvalues = []; // (unz)\n\n    var uindex = []; // (unz)\n\n    var uptr = []; // (n + 1)\n    // U\n\n    var U = new SparseMatrix({\n      values: uvalues,\n      index: uindex,\n      ptr: uptr,\n      size: [n, n]\n    }); // inverse of permutation vector\n\n    var pinv = []; // (n)\n    // vars\n\n    var i, p; // allocate arrays\n\n    var x = []; // (n)\n\n    var xi = []; // (2 * n)\n    // initialize variables\n\n    for (i = 0; i < n; i++) {\n      // clear workspace\n      x[i] = 0; // no rows pivotal yet\n\n      pinv[i] = -1; // no cols of L yet\n\n      lptr[i + 1] = 0;\n    } // reset number of nonzero elements in L and U\n\n\n    lnz = 0;\n    unz = 0; // compute L(:,k) and U(:,k)\n\n    for (var k = 0; k < n; k++) {\n      // update ptr\n      lptr[k] = lnz;\n      uptr[k] = unz; // apply column permutations if needed\n\n      var col = q ? q[k] : k; // solve triangular system, x = L\\A(:,col)\n\n      var top = csSpsolve(L, m, col, xi, x, pinv, 1); // find pivot\n\n      var ipiv = -1;\n      var a = -1; // loop xi[] from top -> n\n\n      for (p = top; p < n; p++) {\n        // x[i] is nonzero\n        i = xi[p]; // check row i is not yet pivotal\n\n        if (pinv[i] < 0) {\n          // absolute value of x[i]\n          var xabs = abs(x[i]); // check absoulte value is greater than pivot value\n\n          if (larger(xabs, a)) {\n            // largest pivot candidate so far\n            a = xabs;\n            ipiv = i;\n          }\n        } else {\n          // x(i) is the entry U(pinv[i],k)\n          uindex[unz] = pinv[i];\n          uvalues[unz++] = x[i];\n        }\n      } // validate we found a valid pivot\n\n\n      if (ipiv === -1 || a <= 0) {\n        return null;\n      } // update actual pivot column, give preference to diagonal value\n\n\n      if (pinv[col] < 0 && largerEq(abs(x[col]), multiply(a, tol))) {\n        ipiv = col;\n      } // the chosen pivot\n\n\n      var pivot = x[ipiv]; // last entry in U(:,k) is U(k,k)\n\n      uindex[unz] = k;\n      uvalues[unz++] = pivot; // ipiv is the kth pivot row\n\n      pinv[ipiv] = k; // first entry in L(:,k) is L(k,k) = 1\n\n      lindex[lnz] = ipiv;\n      lvalues[lnz++] = 1; // L(k+1:n,k) = x / pivot\n\n      for (p = top; p < n; p++) {\n        // row\n        i = xi[p]; // check x(i) is an entry in L(:,k)\n\n        if (pinv[i] < 0) {\n          // save unpermuted row in L\n          lindex[lnz] = i; // scale pivot column\n\n          lvalues[lnz++] = divideScalar(x[i], pivot);\n        } // x[0..n-1] = 0 for next k\n\n\n        x[i] = 0;\n      }\n    } // update ptr\n\n\n    lptr[n] = lnz;\n    uptr[n] = unz; // fix row indices of L for final pinv\n\n    for (p = 0; p < lnz; p++) {\n      lindex[p] = pinv[lindex[p]];\n    } // trim arrays\n\n\n    lvalues.splice(lnz, lvalues.length - lnz);\n    lindex.splice(lnz, lindex.length - lnz);\n    uvalues.splice(unz, uvalues.length - unz);\n    uindex.splice(unz, uindex.length - unz); // return LU factor\n\n    return {\n      L: L,\n      U: U,\n      pinv: pinv\n    };\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csLu.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csMark.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csMark.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csMark\": () => (/* binding */ csMark)\n/* harmony export */ });\n/* harmony import */ var _csFlip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csFlip.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csFlip.js\");\n\n/**\n * Marks the node at w[j]\n *\n * @param {Array}   w               The array\n * @param {Number}  j               The array index\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\n\nfunction csMark(w, j) {\n  // mark w[j]\n  w[j] = (0,_csFlip_js__WEBPACK_IMPORTED_MODULE_0__.csFlip)(w[j]);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csMark.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csMarked.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csMarked.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csMarked\": () => (/* binding */ csMarked)\n/* harmony export */ });\n/**\n * Checks if the node at w[j] is marked\n *\n * @param {Array}   w               The array\n * @param {Number}  j               The array index\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csMarked(w, j) {\n  // check node is marked\n  return w[j] < 0;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csMarked.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csPermute.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csPermute.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csPermute\": () => (/* binding */ csPermute)\n/* harmony export */ });\n/**\n * Permutes a sparse matrix C = P * A * Q\n *\n * @param {SparseMatrix}  a         The Matrix A\n * @param {Array}   pinv            The row permutation vector\n * @param {Array}   q               The column permutation vector\n * @param {boolean} values          Create a pattern matrix (false), values and pattern otherwise\n *\n * @return {Matrix}                 C = P * A * Q, null on error\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csPermute(a, pinv, q, values) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr;\n  var asize = a._size;\n  var adt = a._datatype; // rows & columns\n\n  var m = asize[0];\n  var n = asize[1]; // c arrays\n\n  var cvalues = values && a._values ? [] : null;\n  var cindex = []; // (aptr[n])\n\n  var cptr = []; // (n + 1)\n  // initialize vars\n\n  var nz = 0; // loop columns\n\n  for (var k = 0; k < n; k++) {\n    // column k of C is column q[k] of A\n    cptr[k] = nz; // apply column permutation\n\n    var j = q ? q[k] : k; // loop values in column j of A\n\n    for (var t0 = aptr[j], t1 = aptr[j + 1], t = t0; t < t1; t++) {\n      // row i of A is row pinv[i] of C\n      var r = pinv ? pinv[aindex[t]] : aindex[t]; // index\n\n      cindex[nz] = r; // check we need to populate values\n\n      if (cvalues) {\n        cvalues[nz] = avalues[t];\n      } // increment number of nonzero elements\n\n\n      nz++;\n    }\n  } // finalize the last column of C\n\n\n  cptr[n] = nz; // return C matrix\n\n  return a.createSparseMatrix({\n    values: cvalues,\n    index: cindex,\n    ptr: cptr,\n    size: [m, n],\n    datatype: adt\n  });\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csPermute.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csPost.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csPost.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csPost\": () => (/* binding */ csPost)\n/* harmony export */ });\n/* harmony import */ var _csTdfs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csTdfs.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csTdfs.js\");\n\n/**\n * Post order a tree of forest\n *\n * @param {Array}   parent          The tree or forest\n * @param {Number}  n               Number of columns\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\n\nfunction csPost(parent, n) {\n  // check inputs\n  if (!parent) {\n    return null;\n  } // vars\n\n\n  var k = 0;\n  var j; // allocate result\n\n  var post = []; // (n)\n  // workspace, head: first n entries, next: next n entries, stack: last n entries\n\n  var w = []; // (3 * n)\n\n  var head = 0;\n  var next = n;\n  var stack = 2 * n; // initialize workspace\n\n  for (j = 0; j < n; j++) {\n    // empty linked lists\n    w[head + j] = -1;\n  } // traverse nodes in reverse order\n\n\n  for (j = n - 1; j >= 0; j--) {\n    // check j is a root\n    if (parent[j] === -1) {\n      continue;\n    } // add j to list of its parent\n\n\n    w[next + j] = w[head + parent[j]];\n    w[head + parent[j]] = j;\n  } // loop nodes\n\n\n  for (j = 0; j < n; j++) {\n    // skip j if it is not a root\n    if (parent[j] !== -1) {\n      continue;\n    } // depth-first search\n\n\n    k = (0,_csTdfs_js__WEBPACK_IMPORTED_MODULE_0__.csTdfs)(j, k, w, head, next, post, stack);\n  }\n\n  return post;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csPost.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csReach.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csReach.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csReach\": () => (/* binding */ csReach)\n/* harmony export */ });\n/* harmony import */ var _csMarked_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csMarked.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csMarked.js\");\n/* harmony import */ var _csMark_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csMark.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csMark.js\");\n/* harmony import */ var _csDfs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csDfs.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csDfs.js\");\n\n\n\n/**\n * The csReach function computes X = Reach(B), where B is the nonzero pattern of the n-by-1\n * sparse column of vector b. The function returns the set of nodes reachable from any node in B. The\n * nonzero pattern xi of the solution x to the sparse linear system Lx=b is given by X=Reach(B).\n *\n * @param {Matrix}  g               The G matrix\n * @param {Matrix}  b               The B matrix\n * @param {Number}  k               The kth column in B\n * @param {Array}   xi              The nonzero pattern xi[top] .. xi[n - 1], an array of size = 2 * n\n *                                  The first n entries is the nonzero pattern, the last n entries is the stack\n * @param {Array}   pinv            The inverse row permutation vector\n *\n * @return {Number}                 The index for the nonzero pattern\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\n\nfunction csReach(g, b, k, xi, pinv) {\n  // g arrays\n  var gptr = g._ptr;\n  var gsize = g._size; // b arrays\n\n  var bindex = b._index;\n  var bptr = b._ptr; // columns\n\n  var n = gsize[1]; // vars\n\n  var p, p0, p1; // initialize top\n\n  var top = n; // loop column indeces in B\n\n  for (p0 = bptr[k], p1 = bptr[k + 1], p = p0; p < p1; p++) {\n    // node i\n    var i = bindex[p]; // check node i is marked\n\n    if (!(0,_csMarked_js__WEBPACK_IMPORTED_MODULE_0__.csMarked)(gptr, i)) {\n      // start a dfs at unmarked node i\n      top = (0,_csDfs_js__WEBPACK_IMPORTED_MODULE_1__.csDfs)(i, g, top, xi, pinv);\n    }\n  } // loop columns from top -> n - 1\n\n\n  for (p = top; p < n; p++) {\n    // restore G\n    (0,_csMark_js__WEBPACK_IMPORTED_MODULE_2__.csMark)(gptr, xi[p]);\n  }\n\n  return top;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csReach.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csSpsolve.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csSpsolve.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCsSpsolve\": () => (/* binding */ createCsSpsolve)\n/* harmony export */ });\n/* harmony import */ var _csReach_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csReach.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csReach.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'csSpsolve';\nvar dependencies = ['divideScalar', 'multiply', 'subtract'];\nvar createCsSpsolve = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    divideScalar,\n    multiply,\n    subtract\n  } = _ref;\n  /**\n   * The function csSpsolve() computes the solution to G * x = bk, where bk is the\n   * kth column of B. When lo is true, the function assumes G = L is lower triangular with the\n   * diagonal entry as the first entry in each column. When lo is true, the function assumes G = U\n   * is upper triangular with the diagonal entry as the last entry in each column.\n   *\n   * @param {Matrix}  g               The G matrix\n   * @param {Matrix}  b               The B matrix\n   * @param {Number}  k               The kth column in B\n   * @param {Array}   xi              The nonzero pattern xi[top] .. xi[n - 1], an array of size = 2 * n\n   *                                  The first n entries is the nonzero pattern, the last n entries is the stack\n   * @param {Array}   x               The soluton to the linear system G * x = b\n   * @param {Array}   pinv            The inverse row permutation vector, must be null for L * x = b\n   * @param {boolean} lo              The lower (true) upper triangular (false) flag\n   *\n   * @return {Number}                 The index for the nonzero pattern\n   *\n   * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n   */\n\n  return function csSpsolve(g, b, k, xi, x, pinv, lo) {\n    // g arrays\n    var gvalues = g._values;\n    var gindex = g._index;\n    var gptr = g._ptr;\n    var gsize = g._size; // columns\n\n    var n = gsize[1]; // b arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr; // vars\n\n    var p, p0, p1, q; // xi[top..n-1] = csReach(B(:,k))\n\n    var top = (0,_csReach_js__WEBPACK_IMPORTED_MODULE_1__.csReach)(g, b, k, xi, pinv); // clear x\n\n    for (p = top; p < n; p++) {\n      x[xi[p]] = 0;\n    } // scatter b\n\n\n    for (p0 = bptr[k], p1 = bptr[k + 1], p = p0; p < p1; p++) {\n      x[bindex[p]] = bvalues[p];\n    } // loop columns\n\n\n    for (var px = top; px < n; px++) {\n      // x array index for px\n      var j = xi[px]; // apply permutation vector (U x = b), j maps to column J of G\n\n      var J = pinv ? pinv[j] : j; // check column J is empty\n\n      if (J < 0) {\n        continue;\n      } // column value indeces in G, p0 <= p < p1\n\n\n      p0 = gptr[J];\n      p1 = gptr[J + 1]; // x(j) /= G(j,j)\n\n      x[j] = divideScalar(x[j], gvalues[lo ? p0 : p1 - 1]); // first entry L(j,j)\n\n      p = lo ? p0 + 1 : p0;\n      q = lo ? p1 : p1 - 1; // loop\n\n      for (; p < q; p++) {\n        // row\n        var i = gindex[p]; // x(i) -= G(i,j) * x(j)\n\n        x[i] = subtract(x[i], multiply(gvalues[p], x[j]));\n      }\n    } // return top of stack\n\n\n    return top;\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csSpsolve.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csSqr.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csSqr.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCsSqr\": () => (/* binding */ createCsSqr)\n/* harmony export */ });\n/* harmony import */ var _csPermute_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./csPermute.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csPermute.js\");\n/* harmony import */ var _csPost_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./csPost.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csPost.js\");\n/* harmony import */ var _csEtree_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./csEtree.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csEtree.js\");\n/* harmony import */ var _csAmd_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./csAmd.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csAmd.js\");\n/* harmony import */ var _csCounts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./csCounts.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csCounts.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\n\n\nvar name = 'csSqr';\nvar dependencies = ['add', 'multiply', 'transpose'];\nvar createCsSqr = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    add,\n    multiply,\n    transpose\n  } = _ref;\n  var csAmd = (0,_csAmd_js__WEBPACK_IMPORTED_MODULE_1__.createCsAmd)({\n    add,\n    multiply,\n    transpose\n  });\n  var csCounts = (0,_csCounts_js__WEBPACK_IMPORTED_MODULE_2__.createCsCounts)({\n    transpose\n  });\n  /**\n   * Symbolic ordering and analysis for QR and LU decompositions.\n   *\n   * @param {Number}  order           The ordering strategy (see csAmd for more details)\n   * @param {Matrix}  a               The A matrix\n   * @param {boolean} qr              Symbolic ordering and analysis for QR decomposition (true) or\n   *                                  symbolic ordering and analysis for LU decomposition (false)\n   *\n   * @return {Object}                 The Symbolic ordering and analysis for matrix A\n   *\n   * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n   */\n\n  return function csSqr(order, a, qr) {\n    // a arrays\n    var aptr = a._ptr;\n    var asize = a._size; // columns\n\n    var n = asize[1]; // vars\n\n    var k; // symbolic analysis result\n\n    var s = {}; // fill-reducing ordering\n\n    s.q = csAmd(order, a); // validate results\n\n    if (order && !s.q) {\n      return null;\n    } // QR symbolic analysis\n\n\n    if (qr) {\n      // apply permutations if needed\n      var c = order ? (0,_csPermute_js__WEBPACK_IMPORTED_MODULE_3__.csPermute)(a, null, s.q, 0) : a; // etree of C'*C, where C=A(:,q)\n\n      s.parent = (0,_csEtree_js__WEBPACK_IMPORTED_MODULE_4__.csEtree)(c, 1); // post order elimination tree\n\n      var post = (0,_csPost_js__WEBPACK_IMPORTED_MODULE_5__.csPost)(s.parent, n); // col counts chol(C'*C)\n\n      s.cp = csCounts(c, s.parent, post, 1); // check we have everything needed to calculate number of nonzero elements\n\n      if (c && s.parent && s.cp && _vcount(c, s)) {\n        // calculate number of nonzero elements\n        for (s.unz = 0, k = 0; k < n; k++) {\n          s.unz += s.cp[k];\n        }\n      }\n    } else {\n      // for LU factorization only, guess nnz(L) and nnz(U)\n      s.unz = 4 * aptr[n] + n;\n      s.lnz = s.unz;\n    } // return result S\n\n\n    return s;\n  };\n  /**\n   * Compute nnz(V) = s.lnz, s.pinv, s.leftmost, s.m2 from A and s.parent\n   */\n\n  function _vcount(a, s) {\n    // a arrays\n    var aptr = a._ptr;\n    var aindex = a._index;\n    var asize = a._size; // rows & columns\n\n    var m = asize[0];\n    var n = asize[1]; // initialize s arrays\n\n    s.pinv = []; // (m + n)\n\n    s.leftmost = []; // (m)\n    // vars\n\n    var parent = s.parent;\n    var pinv = s.pinv;\n    var leftmost = s.leftmost; // workspace, next: first m entries, head: next n entries, tail: next n entries, nque: next n entries\n\n    var w = []; // (m + 3 * n)\n\n    var next = 0;\n    var head = m;\n    var tail = m + n;\n    var nque = m + 2 * n; // vars\n\n    var i, k, p, p0, p1; // initialize w\n\n    for (k = 0; k < n; k++) {\n      // queue k is empty\n      w[head + k] = -1;\n      w[tail + k] = -1;\n      w[nque + k] = 0;\n    } // initialize row arrays\n\n\n    for (i = 0; i < m; i++) {\n      leftmost[i] = -1;\n    } // loop columns backwards\n\n\n    for (k = n - 1; k >= 0; k--) {\n      // values & index for column k\n      for (p0 = aptr[k], p1 = aptr[k + 1], p = p0; p < p1; p++) {\n        // leftmost[i] = min(find(A(i,:)))\n        leftmost[aindex[p]] = k;\n      }\n    } // scan rows in reverse order\n\n\n    for (i = m - 1; i >= 0; i--) {\n      // row i is not yet ordered\n      pinv[i] = -1;\n      k = leftmost[i]; // check row i is empty\n\n      if (k === -1) {\n        continue;\n      } // first row in queue k\n\n\n      if (w[nque + k]++ === 0) {\n        w[tail + k] = i;\n      } // put i at head of queue k\n\n\n      w[next + i] = w[head + k];\n      w[head + k] = i;\n    }\n\n    s.lnz = 0;\n    s.m2 = m; // find row permutation and nnz(V)\n\n    for (k = 0; k < n; k++) {\n      // remove row i from queue k\n      i = w[head + k]; // count V(k,k) as nonzero\n\n      s.lnz++; // add a fictitious row\n\n      if (i < 0) {\n        i = s.m2++;\n      } // associate row i with V(:,k)\n\n\n      pinv[i] = k; // skip if V(k+1:m,k) is empty\n\n      if (--nque[k] <= 0) {\n        continue;\n      } // nque[k] is nnz (V(k+1:m,k))\n\n\n      s.lnz += w[nque + k]; // move all rows to parent of k\n\n      var pa = parent[k];\n\n      if (pa !== -1) {\n        if (w[nque + pa] === 0) {\n          w[tail + pa] = w[tail + k];\n        }\n\n        w[next + w[tail + k]] = w[head + pa];\n        w[head + pa] = w[next + i];\n        w[nque + pa] += w[nque + k];\n      }\n    }\n\n    for (i = 0; i < m; i++) {\n      if (pinv[i] < 0) {\n        pinv[i] = k++;\n      }\n    }\n\n    return true;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csSqr.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csTdfs.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csTdfs.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csTdfs\": () => (/* binding */ csTdfs)\n/* harmony export */ });\n/**\n * Depth-first search and postorder of a tree rooted at node j\n *\n * @param {Number}  j               The tree node\n * @param {Number}  k\n * @param {Array}   w               The workspace array\n * @param {Number}  head            The index offset within the workspace for the head array\n * @param {Number}  next            The index offset within the workspace for the next array\n * @param {Array}   post            The post ordering array\n * @param {Number}  stack           The index offset within the workspace for the stack array\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csTdfs(j, k, w, head, next, post, stack) {\n  // variables\n  var top = 0; // place j on the stack\n\n  w[stack] = j; // while (stack is not empty)\n\n  while (top >= 0) {\n    // p = top of stack\n    var p = w[stack + top]; // i = youngest child of p\n\n    var i = w[head + p];\n\n    if (i === -1) {\n      // p has no unordered children left\n      top--; // node p is the kth postordered node\n\n      post[k++] = p;\n    } else {\n      // remove i from children of p\n      w[head + p] = w[next + i]; // increment top\n\n      ++top; // start dfs on child node i\n\n      w[stack + top] = i;\n    }\n  }\n\n  return k;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csTdfs.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/algebra/sparse/csUnflip.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/algebra/sparse/csUnflip.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"csUnflip\": () => (/* binding */ csUnflip)\n/* harmony export */ });\n/* harmony import */ var _csFlip_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csFlip.js */ \"./node_modules/mathjs/lib/esm/function/algebra/sparse/csFlip.js\");\n\n/**\n * Flips the value if it is negative of returns the same value otherwise.\n *\n * @param {Number}  i               The value to flip\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\n\nfunction csUnflip(i) {\n  // flip the value if it is negative\n  return i < 0 ? (0,_csFlip_js__WEBPACK_IMPORTED_MODULE_0__.csFlip)(i) : i;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/algebra/sparse/csUnflip.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/abs.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/abs.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAbs\": () => (/* binding */ createAbs)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'abs';\nvar dependencies = ['typed'];\nvar createAbs = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the absolute value of a number. For matrices, the function is\n   * evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.abs(x)\n   *\n   * Examples:\n   *\n   *    math.abs(3.5)                // returns number 3.5\n   *    math.abs(-4.2)               // returns number 4.2\n   *\n   *    math.abs([3, -5, -1, 0, 2])  // returns Array [3, 5, 1, 0, 2]\n   *\n   * See also:\n   *\n   *    sign\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x\n   *            A number or matrix for which to get the absolute value\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}\n   *            Absolute value of `x`\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.absNumber,\n    Complex: function Complex(x) {\n      return x.abs();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.abs();\n    },\n    Fraction: function Fraction(x) {\n      return x.abs();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since abs(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    },\n    Unit: function Unit(x) {\n      return x.abs();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/abs.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/add.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/add.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAdd\": () => (/* binding */ createAdd)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js\");\n/* harmony import */ var _type_matrix_utils_algorithm04_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm04.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm04.js\");\n/* harmony import */ var _type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\n\nvar name = 'add';\nvar dependencies = ['typed', 'matrix', 'addScalar', 'equalScalar', 'DenseMatrix', 'SparseMatrix'];\nvar createAdd = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    addScalar,\n    equalScalar,\n    DenseMatrix,\n    SparseMatrix\n  } = _ref;\n  var algorithm01 = (0,_type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm01)({\n    typed\n  });\n  var algorithm04 = (0,_type_matrix_utils_algorithm04_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm04)({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = (0,_type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm10)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Add two or more values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *    math.add(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3)               // returns number 5\n   *    math.add(2, 3, 4)            // returns number 9\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(-4, 1)\n   *    math.add(a, b)               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4)       // returns Array [5, 6, 7]\n   *\n   *    const c = math.unit('5 cm')\n   *    const d = math.unit('2.1 mm')\n   *    math.add(c, d)               // returns Unit 52.1 mm\n   *\n   *    math.add(\"2.3\", \"4\")         // returns number 6.3\n   *\n   * See also:\n   *\n   *    subtract, sum\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n   */\n\n  return typed(name, (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_6__.extend)({\n    // we extend the signatures of addScalar with signatures dealing with matrices\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, addScalar);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, addScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm01(y, x, addScalar, true);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm04(x, y, addScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, addScalar, false);\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, y, addScalar, false);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, addScalar, true);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, addScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, addScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, addScalar, true).valueOf();\n    },\n    'any, any': addScalar,\n    'any, any, ...any': function anyAnyAny(x, y, rest) {\n      var result = this(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = this(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, addScalar.signatures));\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/add.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/addScalar.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/addScalar.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAddScalar\": () => (/* binding */ createAddScalar)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\nvar name = 'addScalar';\nvar dependencies = ['typed'];\nvar createAddScalar = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Sum of `x` and `y`\n   * @private\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.addNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.add(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.plus(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.add(y);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (x.value === null || x.value === undefined) throw new Error('Parameter x contains a unit with undefined value');\n      if (y.value === null || y.value === undefined) throw new Error('Parameter y contains a unit with undefined value');\n      if (!x.equalBase(y)) throw new Error('Units do not match');\n      var res = x.clone();\n      res.value = this(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/addScalar.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/cbrt.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/cbrt.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCbrt\": () => (/* binding */ createCbrt)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\n\nvar name = 'cbrt';\nvar dependencies = ['config', 'typed', 'isNegative', 'unaryMinus', 'matrix', 'Complex', 'BigNumber', 'Fraction'];\nvar createCbrt = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    config,\n    typed,\n    isNegative,\n    unaryMinus,\n    matrix,\n    Complex,\n    BigNumber,\n    Fraction\n  } = _ref;\n  /**\n   * Calculate the cubic root of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cbrt(x)\n   *    math.cbrt(x, allRoots)\n   *\n   * Examples:\n   *\n   *    math.cbrt(27)                  // returns 3\n   *    math.cube(3)                   // returns 27\n   *    math.cbrt(-64)                 // returns -4\n   *    math.cbrt(math.unit('27 m^3')) // returns Unit 3 m\n   *    math.cbrt([27, 64, 125])       // returns [3, 4, 5]\n   *\n   *    const x = math.complex('8i')\n   *    math.cbrt(x)                   // returns Complex 1.7320508075689 + i\n   *    math.cbrt(x, true)             // returns Matrix [\n   *                                    //    1.7320508075689 + i\n   *                                    //   -1.7320508075689 + i\n   *                                    //   -2i\n   *                                    // ]\n   *\n   * See also:\n   *\n   *    square, sqrt, cube\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x\n   *            Value for which to calculate the cubic root.\n   * @param {boolean} [allRoots]  Optional, false by default. Only applicable\n   *            when `x` is a number or complex number. If true, all complex\n   *            roots are returned, if false (default) the principal root is\n   *            returned.\n   * @return {number | BigNumber | Complex | Unit | Array | Matrix}\n   *            Returns the cubic root of `x`\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cbrtNumber,\n    // note: signature 'number, boolean' is also supported,\n    //       created by typed as it knows how to convert number to Complex\n    Complex: _cbrtComplex,\n    'Complex, boolean': _cbrtComplex,\n    BigNumber: function BigNumber(x) {\n      return x.cbrt();\n    },\n    Unit: _cbrtUnit,\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since cbrt(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    }\n  });\n  /**\n   * Calculate the cubic root for a complex number\n   * @param {Complex} x\n   * @param {boolean} [allRoots]   If true, the function will return an array\n   *                               with all three roots. If false or undefined,\n   *                               the principal root is returned.\n   * @returns {Complex | Array.<Complex> | Matrix.<Complex>} Returns the cubic root(s) of x\n   * @private\n   */\n\n  function _cbrtComplex(x, allRoots) {\n    // https://www.wikiwand.com/en/Cube_root#/Complex_numbers\n    var arg3 = x.arg() / 3;\n    var abs = x.abs(); // principal root:\n\n    var principal = new Complex((0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cbrtNumber)(abs), 0).mul(new Complex(0, arg3).exp());\n\n    if (allRoots) {\n      var all = [principal, new Complex((0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cbrtNumber)(abs), 0).mul(new Complex(0, arg3 + Math.PI * 2 / 3).exp()), new Complex((0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cbrtNumber)(abs), 0).mul(new Complex(0, arg3 - Math.PI * 2 / 3).exp())];\n      return config.matrix === 'Array' ? all : matrix(all);\n    } else {\n      return principal;\n    }\n  }\n  /**\n   * Calculate the cubic root for a Unit\n   * @param {Unit} x\n   * @return {Unit} Returns the cubic root of x\n   * @private\n   */\n\n\n  function _cbrtUnit(x) {\n    if (x.value && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isComplex)(x.value)) {\n      var result = x.clone();\n      result.value = 1.0;\n      result = result.pow(1.0 / 3); // Compute the units\n\n      result.value = _cbrtComplex(x.value); // Compute the value\n\n      return result;\n    } else {\n      var negate = isNegative(x.value);\n\n      if (negate) {\n        x.value = unaryMinus(x.value);\n      } // TODO: create a helper function for this\n\n\n      var third;\n\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isBigNumber)(x.value)) {\n        third = new BigNumber(1).div(3);\n      } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isFraction)(x.value)) {\n        third = new Fraction(1, 3);\n      } else {\n        third = 1 / 3;\n      }\n\n      var _result = x.pow(third);\n\n      if (negate) {\n        _result.value = unaryMinus(_result.value);\n      }\n\n      return _result;\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/cbrt.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/ceil.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/ceil.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCeil\": () => (/* binding */ createCeil)\n/* harmony export */ });\n/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js */ \"./node_modules/decimal.js/decimal.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\n\n\nvar name = 'ceil';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nvar createCeil = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    round,\n    matrix,\n    equalScalar\n  } = _ref;\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Round a value towards plus infinity\n   * If `x` is complex, both real and imaginary part are rounded towards plus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.ceil(x)\n   *    math.ceil(x, n)\n   *\n   * Examples:\n   *\n   *    math.ceil(3.2)               // returns number 4\n   *    math.ceil(3.8)               // returns number 4\n   *    math.ceil(-4.2)              // returns number -4\n   *    math.ceil(-4.7)              // returns number -4\n   *\n   *    math.ceil(3.212, 2)          // returns number 3.22\n   *    math.ceil(3.288, 2)          // returns number 3.29\n   *    math.ceil(-4.212, 2)         // returns number -4.21\n   *    math.ceil(-4.782, 2)         // returns number -4.78\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.ceil(c)                 // returns Complex 4 - 2i\n   *    math.ceil(c, 1)              // returns Complex 3.3 - 2.7i\n   *\n   *    math.ceil([3.2, 3.8, -4.7])  // returns Array [4, 4, -4]\n   *    math.ceil([3.21, 3.82, -4.71], 1)  // returns Array [3.3, 3.9, -4.7]\n   *\n   * See also:\n   *\n   *    floor, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('ceil', {\n    number: function number(x) {\n      if ((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_4__.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_5__.ceilNumber)(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if ((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_4__.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var [number, exponent] = \"\".concat(x, \"e\").split('e');\n        var result = Math.ceil(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n        [number, exponent] = \"\".concat(result, \"e\").split('e');\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.ceil();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.ceil(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if ((0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.ceil();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if ((0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), decimal_js__WEBPACK_IMPORTED_MODULE_0__.ROUND_CEIL);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.ceil();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.ceil(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_7__.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_7__.deepMap)(x, i => this(i, n), true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/ceil.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/cube.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/cube.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCube\": () => (/* binding */ createCube)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'cube';\nvar dependencies = ['typed'];\nvar createCube = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Compute the cube of a value, `x * x * x`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cube(x)\n   *\n   * Examples:\n   *\n   *    math.cube(2)            // returns number 8\n   *    math.pow(2, 3)          // returns number 8\n   *    math.cube(4)            // returns number 64\n   *    4 * 4 * 4               // returns number 64\n   *\n   *    math.cube([1, 2, 3, 4]) // returns Array [1, 8, 27, 64]\n   *\n   * See also:\n   *\n   *    multiply, square, pow, cbrt\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x  Number for which to calculate the cube\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} Cube of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cubeNumber,\n    Complex: function Complex(x) {\n      return x.mul(x).mul(x); // Is faster than pow(x, 3)\n    },\n    BigNumber: function BigNumber(x) {\n      return x.times(x).times(x);\n    },\n    Fraction: function Fraction(x) {\n      return x.pow(3); // Is faster than mul()mul()mul()\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since cube(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    },\n    Unit: function Unit(x) {\n      return x.pow(3);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/cube.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/divide.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/divide.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDivide\": () => (/* binding */ createDivide)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\nvar name = 'divide';\nvar dependencies = ['typed', 'matrix', 'multiply', 'equalScalar', 'divideScalar', 'inv'];\nvar createDivide = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    multiply,\n    equalScalar,\n    divideScalar,\n    inv\n  } = _ref;\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Divide two values, `x / y`.\n   * To divide matrices, `x` is multiplied with the inverse of `y`: `x * inv(y)`.\n   *\n   * Syntax:\n   *\n   *    math.divide(x, y)\n   *\n   * Examples:\n   *\n   *    math.divide(2, 3)            // returns number 0.6666666666666666\n   *\n   *    const a = math.complex(5, 14)\n   *    const b = math.complex(4, 1)\n   *    math.divide(a, b)            // returns Complex 2 + 3i\n   *\n   *    const c = [[7, -6], [13, -4]]\n   *    const d = [[1, 2], [4, 3]]\n   *    math.divide(c, d)            // returns Array [[-9, 4], [-11, 6]]\n   *\n   *    const e = math.unit('18 km')\n   *    math.divide(e, 4.5)          // returns Unit 4 km\n   *\n   * See also:\n   *\n   *    multiply\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                      Quotient, `x / y`\n   */\n\n  return typed('divide', (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_3__.extend)({\n    // we extend the signatures of divideScalar with signatures dealing with matrices\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(x, y) {\n      // TODO: implement matrix right division using pseudo inverse\n      // https://www.mathworks.nl/help/matlab/ref/mrdivide.html\n      // https://www.gnu.org/software/octave/doc/interpreter/Arithmetic-Ops.html\n      // https://stackoverflow.com/questions/12263932/how-does-gnu-octave-matrix-division-work-getting-unexpected-behaviour\n      return multiply(x, inv(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, divideScalar, false);\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, divideScalar, false);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, divideScalar, false).valueOf();\n    },\n    'any, Array | Matrix': function anyArrayMatrix(x, y) {\n      return multiply(x, inv(y));\n    }\n  }, divideScalar.signatures));\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/divide.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/divideScalar.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/divideScalar.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDivideScalar\": () => (/* binding */ createDivideScalar)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\nvar name = 'divideScalar';\nvar dependencies = ['typed', 'numeric'];\nvar createDivideScalar = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    numeric\n  } = _ref;\n  /**\n   * Divide two scalar values, `x / y`.\n   * This function is meant for internal use: it is used by the public functions\n   * `divide` and `inv`.\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   Numerator\n   * @param  {number | BigNumber | Fraction | Complex} y          Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Quotient, `x / y`\n   * @private\n   */\n\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x / y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.div(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.div(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.div(y);\n    },\n    'Unit, number | Fraction | BigNumber': function UnitNumberFractionBigNumber(x, y) {\n      var res = x.clone(); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf)(y));\n      res.value = this(res.value === null ? res._normalize(one) : res.value, y);\n      return res;\n    },\n    'number | Fraction | BigNumber, Unit': function numberFractionBigNumberUnit(x, y) {\n      var res = y.clone();\n      res = res.pow(-1); // TODO: move the divide function to Unit.js, it uses internals of Unit\n\n      var one = numeric(1, (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf)(x));\n      res.value = this(x, y.value === null ? y._normalize(one) : y.value);\n      return res;\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return x.divide(y);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/divideScalar.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/dotDivide.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/dotDivide.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDotDivide\": () => (/* binding */ createDotDivide)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\n\n\nvar name = 'dotDivide';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'divideScalar', 'DenseMatrix'];\nvar createDotDivide = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    divideScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Divide two matrices element wise. The function accepts both matrices and\n   * scalar values.\n   *\n   * Syntax:\n   *\n   *    math.dotDivide(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotDivide(2, 4)   // returns 0.5\n   *\n   *    a = [[9, 5], [6, 1]]\n   *    b = [[3, 2], [5, 2]]\n   *\n   *    math.dotDivide(a, b)   // returns [[3, 2.5], [1.2, 0.5]]\n   *    math.divide(a, b)      // returns [[1.75, 0.75], [-1.75, 2.25]]\n   *\n   * See also:\n   *\n   *    divide, multiply, dotMultiply\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Numerator\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Quotient, `x ./ y`\n   */\n\n  return typed(name, {\n    'any, any': divideScalar,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, divideScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, divideScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, divideScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, divideScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, divideScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, divideScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, divideScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, divideScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, divideScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, divideScalar, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/dotDivide.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/dotMultiply.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/dotMultiply.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDotMultiply\": () => (/* binding */ createDotMultiply)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm09_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm09.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm09.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\nvar name = 'dotMultiply';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'multiplyScalar'];\nvar createDotMultiply = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    multiplyScalar\n  } = _ref;\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm09 = (0,_type_matrix_utils_algorithm09_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm09)({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Multiply two matrices element wise. The function accepts both matrices and\n   * scalar values.\n   *\n   * Syntax:\n   *\n   *    math.dotMultiply(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotMultiply(2, 4) // returns 8\n   *\n   *    a = [[9, 5], [6, 1]]\n   *    b = [[3, 2], [5, 2]]\n   *\n   *    math.dotMultiply(a, b) // returns [[27, 10], [30, 2]]\n   *    math.multiply(a, b)    // returns [[52, 28], [23, 14]]\n   *\n   * See also:\n   *\n   *    multiply, divide, dotDivide\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Left hand value\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Right hand value\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Multiplication of `x` and `y`\n   */\n\n  return typed(name, {\n    'any, any': multiplyScalar,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, multiplyScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, multiplyScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, multiplyScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, multiplyScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm11(y, x, multiplyScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, multiplyScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/dotMultiply.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/dotPow.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/dotPow.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDotPow\": () => (/* binding */ createDotPow)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\n\nvar name = 'dotPow';\nvar dependencies = ['typed', 'equalScalar', 'matrix', 'pow', 'DenseMatrix'];\nvar createDotPow = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar,\n    matrix,\n    pow,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Calculates the power of x to y element wise.\n   *\n   * Syntax:\n   *\n   *    math.dotPow(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotPow(2, 3)            // returns number 8\n   *\n   *    const a = [[1, 2], [4, 3]]\n   *    math.dotPow(a, 2)            // returns Array [[1, 4], [16, 9]]\n   *    math.pow(a, 2)               // returns Array [[9, 8], [16, 17]]\n   *\n   * See also:\n   *\n   *    pow, sqrt, multiply\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x  The base\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y  The exponent\n   * @return {number | BigNumber | Complex | Unit | Array | Matrix}                     The value of `x` to the power `y`\n   */\n\n  return typed(name, {\n    'any, any': pow,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, pow, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, pow, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, pow, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, pow);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/dotPow.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/exp.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/exp.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createExp\": () => (/* binding */ createExp)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'exp';\nvar dependencies = ['typed'];\nvar createExp = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the exponent of a value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.exp(x)\n   *\n   * Examples:\n   *\n   *    math.exp(2)                  // returns number 7.3890560989306495\n   *    math.pow(math.e, 2)          // returns number 7.3890560989306495\n   *    math.log(math.exp(2))        // returns number 2\n   *\n   *    math.exp([1, 2, 3])\n   *    // returns Array [\n   *    //   2.718281828459045,\n   *    //   7.3890560989306495,\n   *    //   20.085536923187668\n   *    // ]\n   *\n   * See also:\n   *\n   *    expm1, log, pow\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x  A number or matrix to exponentiate\n   * @return {number | BigNumber | Complex | Array | Matrix} Exponent of `x`\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.expNumber,\n    Complex: function Complex(x) {\n      return x.exp();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.exp();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // TODO: exp(sparse) should return a dense matrix since exp(0)==1\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/exp.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/expm1.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/expm1.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createExpm1\": () => (/* binding */ createExpm1)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'expm1';\nvar dependencies = ['typed', 'Complex'];\nvar createExpm1 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Complex: _Complex\n  } = _ref;\n  /**\n   * Calculate the value of subtracting 1 from the exponential value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.expm1(x)\n   *\n   * Examples:\n   *\n   *    math.expm1(2)                      // returns number 6.38905609893065\n   *    math.pow(math.e, 2) - 1            // returns number 6.3890560989306495\n   *    math.log(math.expm1(2) + 1)        // returns number 2\n   *\n   *    math.expm1([1, 2, 3])\n   *    // returns Array [\n   *    //   1.718281828459045,\n   *    //   6.3890560989306495,\n   *    //   19.085536923187668\n   *    // ]\n   *\n   * See also:\n   *\n   *    exp, log, pow\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x  A number or matrix to apply expm1\n   * @return {number | BigNumber | Complex | Array | Matrix} Exponent of `x`\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.expm1Number,\n    Complex: function Complex(x) {\n      var r = Math.exp(x.re);\n      return new _Complex(r * Math.cos(x.im) - 1, r * Math.sin(x.im));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.exp().minus(1);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/expm1.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/fix.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/fix.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFix\": () => (/* binding */ createFix)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor'];\nvar createFix = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor\n  } = _ref;\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 - 2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n\n  return typed('fix', {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number | BigNumber': function numberNumberBigNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    },\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number | BigNumber': function ComplexNumberBigNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? x.ceil(n) : x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(x, n) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, i => this(i, n), true);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/fix.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/floor.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/floor.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFloor\": () => (/* binding */ createFloor)\n/* harmony export */ });\n/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js */ \"./node_modules/decimal.js/decimal.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\n\nvar name = 'floor';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nvar createFloor = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    round,\n    matrix,\n    equalScalar\n  } = _ref;\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Round a value towards minus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.floor(x)\n   *    math.floor(x, n)\n   *\n   * Examples:\n   *\n   *    math.floor(3.2)              // returns number 3\n   *    math.floor(3.8)              // returns number 3\n   *    math.floor(-4.2)             // returns number -5\n   *    math.floor(-4.7)             // returns number -5\n   *\n   *    math.floor(3.212, 2)          // returns number 3.21\n   *    math.floor(3.288, 2)          // returns number 3.28\n   *    math.floor(-4.212, 2)         // returns number -4.22\n   *    math.floor(-4.782, 2)         // returns number -4.79\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.floor(c)                 // returns Complex 3 - 3i\n   *    math.floor(c, 1)              // returns Complex 3.2 - 2.8i\n   *\n   *    math.floor([3.2, 3.8, -4.7])       // returns Array [3, 3, -5]\n   *    math.floor([3.21, 3.82, -4.71], 1)  // returns Array [3.2, 3.8, -4.8]\n   *\n   * See also:\n   *\n   *    ceil, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('floor', {\n    number: function number(x) {\n      if ((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_4__.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return Math.floor(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if ((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_4__.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var [number, exponent] = \"\".concat(x, \"e\").split('e');\n        var result = Math.floor(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n        [number, exponent] = \"\".concat(result, \"e\").split('e');\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.floor();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.floor(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if ((0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_5__.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.floor();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if ((0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_5__.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), decimal_js__WEBPACK_IMPORTED_MODULE_0__.ROUND_FLOOR);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.floor();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since floor(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_6__.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_6__.deepMap)(x, i => this(i, n), true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/floor.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/gcd.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/gcd.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createGcd\": () => (/* binding */ createGcd)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js\");\n/* harmony import */ var _type_matrix_utils_algorithm04_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm04.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm04.js\");\n/* harmony import */ var _type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\n\n\n\n\nvar name = 'gcd';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nvar createGcd = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    BigNumber,\n    DenseMatrix\n  } = _ref;\n  var algorithm01 = (0,_type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm01)({\n    typed\n  });\n  var algorithm04 = (0,_type_matrix_utils_algorithm04_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm04)({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = (0,_type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm10)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Calculate the greatest common divisor for two or more values or arrays.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.gcd(a, b)\n   *    math.gcd(a, b, c, ...)\n   *\n   * Examples:\n   *\n   *    math.gcd(8, 12)              // returns 4\n   *    math.gcd(-4, 6)              // returns 2\n   *    math.gcd(25, 15, -10)        // returns 5\n   *\n   *    math.gcd([8, -4], [12, 6])   // returns [4, 2]\n   *\n   * See also:\n   *\n   *    lcm, xgcd\n   *\n   * @param {... number | BigNumber | Fraction | Array | Matrix} args  Two or more integer numbers\n   * @return {number | BigNumber | Fraction | Array | Matrix}                           The greatest common divisor\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.gcdNumber,\n    'BigNumber, BigNumber': _gcdBigNumber,\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.gcd(y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm04(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm01(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm10(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      return algorithm10(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    },\n    // TODO: need a smarter notation here\n    'Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber': function ArrayMatrixNumberBigNumberArrayMatrixNumberBigNumberArrayMatrixNumberBigNumber(a, b, args) {\n      var res = this(a, b);\n\n      for (var i = 0; i < args.length; i++) {\n        res = this(res, args[i]);\n      }\n\n      return res;\n    }\n  });\n  /**\n   * Calculate gcd for BigNumbers\n   * @param {BigNumber} a\n   * @param {BigNumber} b\n   * @returns {BigNumber} Returns greatest common denominator of a and b\n   * @private\n   */\n\n  function _gcdBigNumber(a, b) {\n    if (!a.isInt() || !b.isInt()) {\n      throw new Error('Parameters in function gcd must be integer numbers');\n    } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\n\n    var zero = new BigNumber(0);\n\n    while (!b.isZero()) {\n      var r = a.mod(b);\n      a = b;\n      b = r;\n    }\n\n    return a.lt(zero) ? a.neg() : a;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/gcd.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/hypot.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/hypot.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createHypot\": () => (/* binding */ createHypot)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n\n\nvar name = 'hypot';\nvar dependencies = ['typed', 'abs', 'addScalar', 'divideScalar', 'multiplyScalar', 'sqrt', 'smaller', 'isPositive'];\nvar createHypot = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    abs,\n    addScalar,\n    divideScalar,\n    multiplyScalar,\n    sqrt,\n    smaller,\n    isPositive\n  } = _ref;\n  /**\n   * Calculate the hypotenusa of a list with values. The hypotenusa is defined as:\n   *\n   *     hypot(a, b, c, ...) = sqrt(a^2 + b^2 + c^2 + ...)\n   *\n   * For matrix input, the hypotenusa is calculated for all values in the matrix.\n   *\n   * Syntax:\n   *\n   *     math.hypot(a, b, ...)\n   *     math.hypot([a, b, c, ...])\n   *\n   * Examples:\n   *\n   *     math.hypot(3, 4)      // 5\n   *     math.hypot(3, 4, 5)   // 7.0710678118654755\n   *     math.hypot([3, 4, 5]) // 7.0710678118654755\n   *     math.hypot(-2)        // 2\n   *\n   * See also:\n   *\n   *     abs, norm\n   *\n   * @param {... number | BigNumber | Array | Matrix} args    A list with numeric values or an Array or Matrix.\n   *                                                          Matrix and Array input is flattened and returns a\n   *                                                          single number for the whole matrix.\n   * @return {number | BigNumber} Returns the hypothenusa of the input values.\n   */\n\n  return typed(name, {\n    '... number | BigNumber': _hypot,\n    Array: function Array(x) {\n      return this.apply(this, (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(x));\n    },\n    Matrix: function Matrix(x) {\n      return this.apply(this, (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(x.toArray()));\n    }\n  });\n  /**\n   * Calculate the hypotenusa for an Array with values\n   * @param {Array.<number | BigNumber>} args\n   * @return {number | BigNumber} Returns the result\n   * @private\n   */\n\n  function _hypot(args) {\n    // code based on `hypot` from es6-shim:\n    // https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1619-L1633\n    var result = 0;\n    var largest = 0;\n\n    for (var i = 0; i < args.length; i++) {\n      var value = abs(args[i]);\n\n      if (smaller(largest, value)) {\n        result = multiplyScalar(result, multiplyScalar(divideScalar(largest, value), divideScalar(largest, value)));\n        result = addScalar(result, 1);\n        largest = value;\n      } else {\n        result = addScalar(result, isPositive(value) ? multiplyScalar(divideScalar(value, largest), divideScalar(value, largest)) : value);\n      }\n    }\n\n    return multiplyScalar(largest, sqrt(result));\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/hypot.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/lcm.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/lcm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLcm\": () => (/* binding */ createLcm)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm06_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm06.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm06.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\n\n\n\n\nvar name = 'lcm';\nvar dependencies = ['typed', 'matrix', 'equalScalar'];\nvar createLcm = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar\n  } = _ref;\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm06 = (0,_type_matrix_utils_algorithm06_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm06)({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Calculate the least common multiple for two or more values or arrays.\n   *\n   * lcm is defined as:\n   *\n   *     lcm(a, b) = abs(a * b) / gcd(a, b)\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.lcm(a, b)\n   *    math.lcm(a, b, c, ...)\n   *\n   * Examples:\n   *\n   *    math.lcm(4, 6)               // returns 12\n   *    math.lcm(6, 21)              // returns 42\n   *    math.lcm(6, 21, 5)           // returns 210\n   *\n   *    math.lcm([4, 6], [6, 21])    // returns [12, 42]\n   *\n   * See also:\n   *\n   *    gcd, xgcd\n   *\n   * @param {... number | BigNumber | Array | Matrix} args  Two or more integer numbers\n   * @return {number | BigNumber | Array | Matrix}                           The least common multiple\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.lcmNumber,\n    'BigNumber, BigNumber': _lcmBigNumber,\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.lcm(y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm06(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      return algorithm11(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    },\n    // TODO: need a smarter notation here\n    'Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber': function ArrayMatrixNumberBigNumberArrayMatrixNumberBigNumberArrayMatrixNumberBigNumber(a, b, args) {\n      var res = this(a, b);\n\n      for (var i = 0; i < args.length; i++) {\n        res = this(res, args[i]);\n      }\n\n      return res;\n    }\n  });\n  /**\n   * Calculate lcm for two BigNumbers\n   * @param {BigNumber} a\n   * @param {BigNumber} b\n   * @returns {BigNumber} Returns the least common multiple of a and b\n   * @private\n   */\n\n  function _lcmBigNumber(a, b) {\n    if (!a.isInt() || !b.isInt()) {\n      throw new Error('Parameters in function lcm must be integer numbers');\n    }\n\n    if (a.isZero()) {\n      return a;\n    }\n\n    if (b.isZero()) {\n      return b;\n    } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n    // evaluate lcm here inline to reduce overhead\n\n\n    var prod = a.times(b);\n\n    while (!b.isZero()) {\n      var t = b;\n      b = a.mod(t);\n      a = t;\n    }\n\n    return prod.div(a).abs();\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/lcm.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/log.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/log.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLog\": () => (/* binding */ createLog)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'log';\nvar dependencies = ['config', 'typed', 'divideScalar', 'Complex'];\nvar createLog = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    divideScalar,\n    Complex\n  } = _ref;\n  /**\n   * Calculate the logarithm of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.log(x)\n   *    math.log(x, base)\n   *\n   * Examples:\n   *\n   *    math.log(3.5)                  // returns 1.252762968495368\n   *    math.exp(math.log(2.4))        // returns 2.4\n   *\n   *    math.pow(10, 4)                // returns 10000\n   *    math.log(10000, 10)            // returns 4\n   *    math.log(10000) / math.log(10) // returns 4\n   *\n   *    math.log(1024, 2)              // returns 10\n   *    math.pow(2, 10)                // returns 1024\n   *\n   * See also:\n   *\n   *    exp, log2, log10, log1p\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            Value for which to calculate the logarithm.\n   * @param {number | BigNumber | Complex} [base=e]\n   *            Optional base for the logarithm. If not provided, the natural\n   *            logarithm of `x` is calculated.\n   * @return {number | BigNumber | Complex | Array | Matrix}\n   *            Returns the logarithm of `x`\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x >= 0 || config.predictable) {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.logNumber)(x);\n      } else {\n        // negative value -> complex value computation\n        return new Complex(x, 0).log();\n      }\n    },\n    Complex: function Complex(x) {\n      return x.log();\n    },\n    BigNumber: function BigNumber(x) {\n      if (!x.isNegative() || config.predictable) {\n        return x.ln();\n      } else {\n        // downgrade to number, return Complex valued result\n        return new Complex(x.toNumber(), 0).log();\n      }\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    },\n    'any, any': function anyAny(x, base) {\n      // calculate logarithm for a specified base, log(x, base)\n      return divideScalar(this(x), this(base));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/log.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/log10.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/log10.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLog10\": () => (/* binding */ createLog10)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'log10';\nvar dependencies = ['typed', 'config', 'Complex'];\nvar createLog10 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex: _Complex\n  } = _ref;\n  /**\n   * Calculate the 10-base logarithm of a value. This is the same as calculating `log(x, 10)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.log10(x)\n   *\n   * Examples:\n   *\n   *    math.log10(0.00001)            // returns -5\n   *    math.log10(10000)              // returns 4\n   *    math.log(10000) / math.log(10) // returns 4\n   *    math.pow(10, 4)                // returns 10000\n   *\n   * See also:\n   *\n   *    exp, log, log1p, log2\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            Value for which to calculate the logarithm.\n   * @return {number | BigNumber | Complex | Array | Matrix}\n   *            Returns the 10-base logarithm of `x`\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x >= 0 || config.predictable) {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.log10Number)(x);\n      } else {\n        // negative value -> complex value computation\n        return new _Complex(x, 0).log().div(Math.LN10);\n      }\n    },\n    Complex: function Complex(x) {\n      return new _Complex(x).log().div(Math.LN10);\n    },\n    BigNumber: function BigNumber(x) {\n      if (!x.isNegative() || config.predictable) {\n        return x.log();\n      } else {\n        // downgrade to number, return Complex valued result\n        return new _Complex(x.toNumber(), 0).log().div(Math.LN10);\n      }\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/log10.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/log1p.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/log1p.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLog1p\": () => (/* binding */ createLog1p)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\n\n\nvar name = 'log1p';\nvar dependencies = ['typed', 'config', 'divideScalar', 'log', 'Complex'];\nvar createLog1p = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    divideScalar,\n    log,\n    Complex\n  } = _ref;\n  /**\n   * Calculate the logarithm of a `value+1`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.log1p(x)\n   *    math.log1p(x, base)\n   *\n   * Examples:\n   *\n   *    math.log1p(2.5)                 // returns 1.252762968495368\n   *    math.exp(math.log1p(1.4))       // returns 2.4\n   *\n   *    math.pow(10, 4)                 // returns 10000\n   *    math.log1p(9999, 10)            // returns 4\n   *    math.log1p(9999) / math.log(10) // returns 4\n   *\n   * See also:\n   *\n   *    exp, log, log2, log10\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            Value for which to calculate the logarithm of `x+1`.\n   * @param {number | BigNumber | Complex} [base=e]\n   *            Optional base for the logarithm. If not provided, the natural\n   *            logarithm of `x+1` is calculated.\n   * @return {number | BigNumber | Complex | Array | Matrix}\n   *            Returns the logarithm of `x+1`\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x >= -1 || config.predictable) {\n        return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.log1p)(x);\n      } else {\n        // negative value -> complex value computation\n        return _log1pComplex(new Complex(x, 0));\n      }\n    },\n    Complex: _log1pComplex,\n    BigNumber: function BigNumber(x) {\n      var y = x.plus(1);\n\n      if (!y.isNegative() || config.predictable) {\n        return y.ln();\n      } else {\n        // downgrade to number, return Complex valued result\n        return _log1pComplex(new Complex(x.toNumber(), 0));\n      }\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    },\n    'any, any': function anyAny(x, base) {\n      // calculate logarithm for a specified base, log1p(x, base)\n      return divideScalar(this(x), log(base));\n    }\n  });\n  /**\n   * Calculate the natural logarithm of a complex number + 1\n   * @param {Complex} x\n   * @returns {Complex}\n   * @private\n   */\n\n  function _log1pComplex(x) {\n    var xRe1p = x.re + 1;\n    return new Complex(Math.log(Math.sqrt(xRe1p * xRe1p + x.im * x.im)), Math.atan2(x.im, xRe1p));\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/log1p.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/log2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/log2.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLog2\": () => (/* binding */ createLog2)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'log2';\nvar dependencies = ['typed', 'config', 'Complex'];\nvar createLog2 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex\n  } = _ref;\n  /**\n   * Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.log2(x)\n   *\n   * Examples:\n   *\n   *    math.log2(0.03125)           // returns -5\n   *    math.log2(16)                // returns 4\n   *    math.log2(16) / math.log2(2) // returns 4\n   *    math.pow(2, 4)               // returns 16\n   *\n   * See also:\n   *\n   *    exp, log, log1p, log10\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            Value for which to calculate the logarithm.\n   * @return {number | BigNumber | Complex | Array | Matrix}\n   *            Returns the 2-base logarithm of `x`\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x >= 0 || config.predictable) {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.log2Number)(x);\n      } else {\n        // negative value -> complex value computation\n        return _log2Complex(new Complex(x, 0));\n      }\n    },\n    Complex: _log2Complex,\n    BigNumber: function BigNumber(x) {\n      if (!x.isNegative() || config.predictable) {\n        return x.log(2);\n      } else {\n        // downgrade to number, return Complex valued result\n        return _log2Complex(new Complex(x.toNumber(), 0));\n      }\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n  /**\n   * Calculate log2 for a complex value\n   * @param {Complex} x\n   * @returns {Complex}\n   * @private\n   */\n\n  function _log2Complex(x) {\n    var newX = Math.sqrt(x.re * x.re + x.im * x.im);\n    return new Complex(Math.log2 ? Math.log2(newX) : Math.log(newX) / Math.LN2, Math.atan2(x.im, x.re) / Math.LN2);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/log2.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/mod.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/mod.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMod\": () => (/* binding */ createMod)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm05_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm05.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm05.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\n\n\n\n\n\n\nvar name = 'mod';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nvar createMod = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm03)({\n    typed\n  });\n  var algorithm05 = (0,_type_matrix_utils_algorithm05_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm05)({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Calculates the modulus, the remainder of an integer division.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * The modulus is defined as:\n   *\n   *     x - y * floor(x / y)\n   *\n   * See https://en.wikipedia.org/wiki/Modulo_operation.\n   *\n   * Syntax:\n   *\n   *    math.mod(x, y)\n   *\n   * Examples:\n   *\n   *    math.mod(8, 3)                // returns 2\n   *    math.mod(11, 2)               // returns 1\n   *\n   *    function isOdd(x) {\n   *      return math.mod(x, 2) != 0\n   *    }\n   *\n   *    isOdd(2)                      // returns false\n   *    isOdd(3)                      // returns true\n   *\n   * See also:\n   *\n   *    divide\n   *\n   * @param  {number | BigNumber | Fraction | Array | Matrix} x Dividend\n   * @param  {number | BigNumber | Fraction | Array | Matrix} y Divisor\n   * @return {number | BigNumber | Fraction | Array | Matrix} Returns the remainder of `x` divided by `y`.\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_8__.modNumber,\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      if (y.isNeg()) {\n        throw new Error('Cannot calculate mod for a negative divisor');\n      }\n\n      return y.isZero() ? x : x.mod(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      if (y.compare(0) < 0) {\n        throw new Error('Cannot calculate mod for a negative divisor');\n      } // Workaround suggested in Fraction.js library to calculate correct modulo for negative dividend\n\n\n      return x.compare(0) >= 0 ? x.mod(y) : x.mod(y).add(y).mod(y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm05(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/mod.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/multiply.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/multiply.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMultiply\": () => (/* binding */ createMultiply)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\nvar name = 'multiply';\nvar dependencies = ['typed', 'matrix', 'addScalar', 'multiplyScalar', 'equalScalar', 'dot'];\nvar createMultiply = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    addScalar,\n    multiplyScalar,\n    equalScalar,\n    dot\n  } = _ref;\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm14)({\n    typed\n  });\n\n  function _validateMatrixDimensions(size1, size2) {\n    // check left operand dimensions\n    switch (size1.length) {\n      case 1:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Vector x Vector\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length');\n            }\n\n            break;\n\n          case 2:\n            // Vector x Matrix\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vector length (' + size1[0] + ') must match Matrix rows (' + size2[0] + ')');\n            }\n\n            break;\n\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n\n        break;\n\n      case 2:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Matrix x Vector\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix columns (' + size1[1] + ') must match Vector length (' + size2[0] + ')');\n            }\n\n            break;\n\n          case 2:\n            // Matrix x Matrix\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix A columns (' + size1[1] + ') must match Matrix B rows (' + size2[0] + ')');\n            }\n\n            break;\n\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n\n        break;\n\n      default:\n        throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix A has ' + size1.length + ' dimensions)');\n    }\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (N)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {number}             Scalar value\n   */\n\n\n  function _multiplyVectorVector(a, b, n) {\n    // check empty vector\n    if (n === 0) {\n      throw new Error('Cannot multiply two empty vectors');\n    }\n\n    return dot(a, b);\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Matrix         (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n\n\n  function _multiplyVectorMatrix(a, b) {\n    // process storage\n    if (b.storage() !== 'dense') {\n      throw new Error('Support for SparseMatrix not implemented');\n    }\n\n    return _multiplyVectorDenseMatrix(a, b);\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Dense Matrix   (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n\n\n  function _multiplyVectorDenseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // rows & columns\n\n    var alength = asize[0];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix columns\n\n    for (var j = 0; j < bcolumns; j++) {\n      // sum (do not initialize it with zero)\n      var sum = mf(adata[0], bdata[0][j]); // loop vector\n\n      for (var i = 1; i < alength; i++) {\n        // multiply & accumulate\n        sum = af(sum, mf(adata[i], bdata[i][j]));\n      }\n\n      c[j] = sum;\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [bcolumns],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {Matrix}             Dense Vector   (M)\n   */\n\n\n  var _multiplyMatrixVector = typed('_multiplyMatrixVector', {\n    'DenseMatrix, any': _multiplyDenseMatrixVector,\n    'SparseMatrix, any': _multiplySparseMatrixVector\n  });\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Matrix         (NxC)\n   *\n   * @return {Matrix}             Matrix         (MxC)\n   */\n\n\n  var _multiplyMatrixMatrix = typed('_multiplyMatrixMatrix', {\n    'DenseMatrix, DenseMatrix': _multiplyDenseMatrixDenseMatrix,\n    'DenseMatrix, SparseMatrix': _multiplyDenseMatrixSparseMatrix,\n    'SparseMatrix, DenseMatrix': _multiplySparseMatrixDenseMatrix,\n    'SparseMatrix, SparseMatrix': _multiplySparseMatrixSparseMatrix\n  });\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix  (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             Dense Vector (M)\n   */\n\n\n  function _multiplyDenseMatrixVector(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = asize[0];\n    var acolumns = asize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix a rows\n\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i]; // sum (do not initialize it with zero)\n\n      var sum = mf(row[0], bdata[0]); // loop matrix a columns\n\n      for (var j = 1; j < acolumns; j++) {\n        // multiply & accumulate\n        sum = af(sum, mf(row[j], bdata[j]));\n      }\n\n      c[i] = sum;\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            DenseMatrix    (NxC)\n   *\n   * @return {Matrix}             DenseMatrix    (MxC)\n   */\n\n\n  function _multiplyDenseMatrixDenseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b dense\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = asize[0];\n    var acolumns = asize[1];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var c = []; // loop matrix a rows\n\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i]; // initialize row array\n\n      c[i] = []; // loop matrix b columns\n\n      for (var j = 0; j < bcolumns; j++) {\n        // sum (avoid initializing sum to zero)\n        var sum = mf(row[0], bdata[0][j]); // loop matrix a columns\n\n        for (var x = 1; x < acolumns; x++) {\n          // multiply & accumulate\n          sum = af(sum, mf(row[x], bdata[x][j]));\n        }\n\n        c[i][j] = sum;\n      }\n    } // return matrix\n\n\n    return a.createDenseMatrix({\n      data: c,\n      size: [arows, bcolumns],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            SparseMatrix   (NxC)\n   *\n   * @return {Matrix}             SparseMatrix   (MxC)\n   */\n\n\n  function _multiplyDenseMatrixSparseMatrix(a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b sparse\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate b matrix\n\n    if (!bvalues) {\n      throw new Error('Cannot multiply Dense Matrix times Pattern only Matrix');\n    } // rows & columns\n\n\n    var arows = asize[0];\n    var bcolumns = bsize[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // result\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = b.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // indeces in column jb\n\n      var kb0 = bptr[jb];\n      var kb1 = bptr[jb + 1]; // do not process column jb if no data exists\n\n      if (kb1 > kb0) {\n        // last row mark processed\n        var last = 0; // loop a rows\n\n        for (var i = 0; i < arows; i++) {\n          // column mark\n          var mark = i + 1; // C[i, jb]\n\n          var cij = void 0; // values in b column j\n\n          for (var kb = kb0; kb < kb1; kb++) {\n            // row\n            var ib = bindex[kb]; // check value has been initialized\n\n            if (last !== mark) {\n              // first value in column jb\n              cij = mf(adata[i][ib], bvalues[kb]); // update mark\n\n              last = mark;\n            } else {\n              // accumulate value\n              cij = af(cij, mf(adata[i][ib], bvalues[kb]));\n            }\n          } // check column has been processed and value != 0\n\n\n          if (last === mark && !eq(cij, zero)) {\n            // push row & value\n            cindex.push(i);\n            cvalues.push(cij);\n          }\n        }\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix    (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             SparseMatrix    (M, 1)\n   */\n\n\n  function _multiplySparseMatrixVector(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // validate a matrix\n\n    if (!avalues) {\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    } // b dense\n\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var brows = b._size[0]; // result\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // workspace\n\n\n    var x = []; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // update ptr\n\n    cptr[0] = 0; // rows in b\n\n    for (var ib = 0; ib < brows; ib++) {\n      // b[ib]\n      var vbi = bdata[ib]; // check b[ib] != 0, avoid loops\n\n      if (!eq(vbi, zero)) {\n        // A values & index in ib column\n        for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n          // a row\n          var ia = aindex[ka]; // check value exists in current j\n\n          if (!w[ia]) {\n            // ia is new entry in j\n            w[ia] = true; // add i to pattern of C\n\n            cindex.push(ia); // x(ia) = A\n\n            x[ia] = mf(vbi, avalues[ka]);\n          } else {\n            // i exists in C already\n            x[ia] = af(x[ia], mf(vbi, avalues[ka]));\n          }\n        }\n      }\n    } // copy values from x to column jb of c\n\n\n    for (var p1 = cindex.length, p = 0; p < p1; p++) {\n      // row\n      var ic = cindex[p]; // copy value\n\n      cvalues[p] = x[ic];\n    } // update ptr\n\n\n    cptr[1] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, 1],\n      datatype: dt\n    });\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            DenseMatrix       (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n\n\n  function _multiplySparseMatrixDenseMatrix(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // validate a matrix\n\n    if (!avalues) {\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    } // b dense\n\n\n    var bdata = b._data;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var brows = b._size[0];\n    var bcolumns = b._size[1]; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // equalScalar signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt);\n    } // result\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // workspace\n\n    var x = []; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // mark in workspace for current column\n\n      var mark = jb + 1; // rows in jb\n\n      for (var ib = 0; ib < brows; ib++) {\n        // b[ib, jb]\n        var vbij = bdata[ib][jb]; // check b[ib, jb] != 0, avoid loops\n\n        if (!eq(vbij, zero)) {\n          // A values & index in ib column\n          for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // a row\n            var ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia); // x(ia) = A\n\n              x[ia] = mf(vbij, avalues[ka]);\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(vbij, avalues[ka]));\n            }\n          }\n        }\n      } // copy values from x to column jb of c\n\n\n      for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n        // row\n        var ic = cindex[p]; // copy value\n\n        cvalues[p] = x[ic];\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            SparseMatrix      (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n\n\n  function _multiplySparseMatrixSparseMatrix(a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype; // b sparse\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bdt = b._datatype; // rows & columns\n\n    var arows = a._size[0];\n    var bcolumns = b._size[1]; // flag indicating both matrices (a & b) contain data\n\n    var values = avalues && bvalues; // datatype\n\n    var dt; // addScalar signature to use\n\n    var af = addScalar; // multiplyScalar signature to use\n\n    var mf = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signatures that matches (dt, dt)\n\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    } // result\n\n\n    var cvalues = values ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // c matrix\n\n    var c = a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    }); // workspace\n\n    var x = values ? [] : undefined; // vector with marks indicating a value x[i] exists in a given column\n\n    var w = []; // variables\n\n    var ka, ka0, ka1, kb, kb0, kb1, ia, ib; // loop b columns\n\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length; // mark in workspace for current column\n\n      var mark = jb + 1; // B values & index in j\n\n      for (kb0 = bptr[jb], kb1 = bptr[jb + 1], kb = kb0; kb < kb1; kb++) {\n        // b row\n        ib = bindex[kb]; // check we need to process values\n\n        if (values) {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia); // x(ia) = A\n\n              x[ia] = mf(bvalues[kb], avalues[ka]);\n            } else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(bvalues[kb], avalues[ka]));\n            }\n          }\n        } else {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka]; // check value exists in current j\n\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark; // add i to pattern of C\n\n              cindex.push(ia);\n            }\n          }\n        }\n      } // check we need to process matrix values (pattern matrix)\n\n\n      if (values) {\n        // copy values from x to column jb of c\n        for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n          // row\n          var ic = cindex[p]; // copy value\n\n          cvalues[p] = x[ic];\n        }\n      }\n    } // update ptr\n\n\n    cptr[bcolumns] = cindex.length; // return sparse matrix\n\n    return c;\n  }\n  /**\n   * Multiply two or more values, `x * y`.\n   * For matrices, the matrix product is calculated.\n   *\n   * Syntax:\n   *\n   *    math.multiply(x, y)\n   *    math.multiply(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.multiply(4, 5.2)        // returns number 20.8\n   *    math.multiply(2, 3, 4)       // returns number 24\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.multiply(a, b)          // returns Complex 5 + 14i\n   *\n   *    const c = [[1, 2], [4, 3]]\n   *    const d = [[1, 2, 3], [3, -4, 7]]\n   *    math.multiply(c, d)          // returns Array [[7, -6, 17], [13, -4, 33]]\n   *\n   *    const e = math.unit('2.1 km')\n   *    math.multiply(3, e)          // returns Unit 6.3 km\n   *\n   * See also:\n   *\n   *    divide, prod, cross, dot\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Multiplication of `x` and `y`\n   */\n\n\n  return typed(name, (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_3__.extend)({\n    // we extend the signatures of multiplyScalar with signatures dealing with matrices\n    'Array, Array': function ArrayArray(x, y) {\n      // check dimensions\n      _validateMatrixDimensions((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_4__.arraySize)(x), (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_4__.arraySize)(y)); // use dense matrix implementation\n\n\n      var m = this(matrix(x), matrix(y)); // return array or scalar\n\n      return (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_5__.isMatrix)(m) ? m.valueOf() : m;\n    },\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      // dimensions\n      var xsize = x.size();\n      var ysize = y.size(); // check dimensions\n\n      _validateMatrixDimensions(xsize, ysize); // process dimensions\n\n\n      if (xsize.length === 1) {\n        // process y dimensions\n        if (ysize.length === 1) {\n          // Vector * Vector\n          return _multiplyVectorVector(x, y, xsize[0]);\n        } // Vector * Matrix\n\n\n        return _multiplyVectorMatrix(x, y);\n      } // process y dimensions\n\n\n      if (ysize.length === 1) {\n        // Matrix * Vector\n        return _multiplyMatrixVector(x, y);\n      } // Matrix * Matrix\n\n\n      return _multiplyMatrixMatrix(x, y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use Matrix * Matrix implementation\n      return this(x, matrix(y));\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use Matrix * Matrix implementation\n      return this(matrix(x, y.storage()), y);\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, multiplyScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm11(y, x, multiplyScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, multiplyScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();\n    },\n    'any, any': multiplyScalar,\n    'any, any, ...any': function anyAnyAny(x, y, rest) {\n      var result = this(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = this(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, multiplyScalar.signatures));\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/multiply.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/multiplyScalar.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/multiplyScalar.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMultiplyScalar\": () => (/* binding */ createMultiplyScalar)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\nvar name = 'multiplyScalar';\nvar dependencies = ['typed'];\nvar createMultiplyScalar = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Multiply two scalar values, `x * y`.\n   * This function is meant for internal use: it is used by the public function\n   * `multiply`\n   *\n   * This function does not support collections (Array or Matrix).\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit}     Multiplication of `x` and `y`\n   * @private\n   */\n\n  return typed('multiplyScalar', {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.multiplyNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.mul(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.times(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.mul(y);\n    },\n    'number | Fraction | BigNumber | Complex, Unit': function numberFractionBigNumberComplexUnit(x, y) {\n      var res = y.clone();\n      res.value = res.value === null ? res._normalize(x) : this(res.value, x);\n      return res;\n    },\n    'Unit, number | Fraction | BigNumber | Complex': function UnitNumberFractionBigNumberComplex(x, y) {\n      var res = x.clone();\n      res.value = res.value === null ? res._normalize(y) : this(res.value, y);\n      return res;\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return x.multiply(y);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/multiplyScalar.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/norm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/norm.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNorm\": () => (/* binding */ createNorm)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'norm';\nvar dependencies = ['typed', 'abs', 'add', 'pow', 'conj', 'sqrt', 'multiply', 'equalScalar', 'larger', 'smaller', 'matrix', 'ctranspose', 'eigs'];\nvar createNorm = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    abs,\n    add,\n    pow,\n    conj,\n    sqrt,\n    multiply,\n    equalScalar,\n    larger,\n    smaller,\n    matrix,\n    ctranspose,\n    eigs\n  } = _ref;\n  /**\n   * Calculate the norm of a number, vector or matrix.\n   *\n   * The second parameter p is optional. If not provided, it defaults to 2.\n   *\n   * Syntax:\n   *\n   *    math.norm(x)\n   *    math.norm(x, p)\n   *\n   * Examples:\n   *\n   *    math.abs(-3.5)                         // returns 3.5\n   *    math.norm(-3.5)                        // returns 3.5\n   *\n   *    math.norm(math.complex(3, -4))         // returns 5\n   *\n   *    math.norm([1, 2, -3], Infinity)        // returns 3\n   *    math.norm([1, 2, -3], -Infinity)       // returns 1\n   *\n   *    math.norm([3, 4], 2)                   // returns 5\n   *\n   *    math.norm([[1, 2], [3, 4]], 1)          // returns 6\n   *    math.norm([[1, 2], [3, 4]], 'inf')     // returns 7\n   *    math.norm([[1, 2], [3, 4]], 'fro')     // returns 5.477225575051661\n   *\n   * See also:\n   *\n   *    abs, hypot\n   *\n   * @param  {number | BigNumber | Complex | Array | Matrix} x\n   *            Value for which to calculate the norm\n   * @param  {number | BigNumber | string} [p=2]\n   *            Vector space.\n   *            Supported numbers include Infinity and -Infinity.\n   *            Supported strings are: 'inf', '-inf', and 'fro' (The Frobenius norm)\n   * @return {number | BigNumber} the p-norm\n   */\n\n  return typed(name, {\n    number: Math.abs,\n    Complex: function Complex(x) {\n      return x.abs();\n    },\n    BigNumber: function BigNumber(x) {\n      // norm(x) = abs(x)\n      return x.abs();\n    },\n    boolean: function boolean(x) {\n      // norm(x) = abs(x)\n      return Math.abs(x);\n    },\n    Array: function Array(x) {\n      return _norm(matrix(x), 2);\n    },\n    Matrix: function Matrix(x) {\n      return _norm(x, 2);\n    },\n    'number | Complex | BigNumber | boolean, number | BigNumber | string': function numberComplexBigNumberBooleanNumberBigNumberString(x) {\n      // ignore second parameter, TODO: remove the option of second parameter for these types\n      return this(x);\n    },\n    'Array, number | BigNumber | string': function ArrayNumberBigNumberString(x, p) {\n      return _norm(matrix(x), p);\n    },\n    'Matrix, number | BigNumber | string': function MatrixNumberBigNumberString(x, p) {\n      return _norm(x, p);\n    }\n  });\n  /**\n   * Calculate the plus infinity norm for a vector\n   * @param {Matrix} x\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n  function _vectorNormPlusInfinity(x) {\n    // norm(x, Infinity) = max(abs(x))\n    var pinf = 0; // skip zeros since abs(0) === 0\n\n    x.forEach(function (value) {\n      var v = abs(value);\n\n      if (larger(v, pinf)) {\n        pinf = v;\n      }\n    }, true);\n    return pinf;\n  }\n  /**\n   * Calculate the minus infinity norm for a vector\n   * @param {Matrix} x\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n\n  function _vectorNormMinusInfinity(x) {\n    // norm(x, -Infinity) = min(abs(x))\n    var ninf; // skip zeros since abs(0) === 0\n\n    x.forEach(function (value) {\n      var v = abs(value);\n\n      if (!ninf || smaller(v, ninf)) {\n        ninf = v;\n      }\n    }, true);\n    return ninf || 0;\n  }\n  /**\n   * Calculate the norm for a vector\n   * @param {Matrix} x\n   * @param {number | string} p\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n\n  function _vectorNorm(x, p) {\n    // check p\n    if (p === Number.POSITIVE_INFINITY || p === 'inf') {\n      return _vectorNormPlusInfinity(x);\n    }\n\n    if (p === Number.NEGATIVE_INFINITY || p === '-inf') {\n      return _vectorNormMinusInfinity(x);\n    }\n\n    if (p === 'fro') {\n      return _norm(x, 2);\n    }\n\n    if (typeof p === 'number' && !isNaN(p)) {\n      // check p != 0\n      if (!equalScalar(p, 0)) {\n        // norm(x, p) = sum(abs(xi) ^ p) ^ 1/p\n        var n = 0; // skip zeros since abs(0) === 0\n\n        x.forEach(function (value) {\n          n = add(pow(abs(value), p), n);\n        }, true);\n        return pow(n, 1 / p);\n      }\n\n      return Number.POSITIVE_INFINITY;\n    } // invalid parameter value\n\n\n    throw new Error('Unsupported parameter value');\n  }\n  /**\n   * Calculate the Frobenius norm for a matrix\n   * @param {Matrix} x\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n\n  function _matrixNormFrobenius(x) {\n    // norm(x) = sqrt(sum(diag(x'x)))\n    var fro = 0;\n    x.forEach(function (value, index) {\n      fro = add(fro, multiply(value, conj(value)));\n    });\n    return abs(sqrt(fro));\n  }\n  /**\n   * Calculate the norm L1 for a matrix\n   * @param {Matrix} x\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n\n  function _matrixNormOne(x) {\n    // norm(x) = the largest column sum\n    var c = []; // result\n\n    var maxc = 0; // skip zeros since abs(0) == 0\n\n    x.forEach(function (value, index) {\n      var j = index[1];\n      var cj = add(c[j] || 0, abs(value));\n\n      if (larger(cj, maxc)) {\n        maxc = cj;\n      }\n\n      c[j] = cj;\n    }, true);\n    return maxc;\n  }\n  /**\n   * Calculate the norm L2 for a matrix\n   * @param {Matrix} x\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n\n  function _matrixNormTwo(x) {\n    // norm(x) = sqrt( max eigenvalue of A*.A)\n    var sizeX = x.size();\n\n    if (sizeX[0] !== sizeX[1]) {\n      throw new RangeError('Invalid matrix dimensions');\n    }\n\n    var tx = ctranspose(x);\n    var squaredX = multiply(tx, x);\n    var eigenVals = eigs(squaredX).values.toArray();\n    var rho = eigenVals[eigenVals.length - 1];\n    return abs(sqrt(rho));\n  }\n  /**\n   * Calculate the infinity norm for a matrix\n   * @param {Matrix} x\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n\n  function _matrixNormInfinity(x) {\n    // norm(x) = the largest row sum\n    var r = []; // result\n\n    var maxr = 0; // skip zeros since abs(0) == 0\n\n    x.forEach(function (value, index) {\n      var i = index[0];\n      var ri = add(r[i] || 0, abs(value));\n\n      if (larger(ri, maxr)) {\n        maxr = ri;\n      }\n\n      r[i] = ri;\n    }, true);\n    return maxr;\n  }\n  /**\n   * Calculate the norm for a 2D Matrix (M*N)\n   * @param {Matrix} x\n   * @param {number | string} p\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n\n  function _matrixNorm(x, p) {\n    // check p\n    if (p === 1) {\n      return _matrixNormOne(x);\n    }\n\n    if (p === Number.POSITIVE_INFINITY || p === 'inf') {\n      return _matrixNormInfinity(x);\n    }\n\n    if (p === 'fro') {\n      return _matrixNormFrobenius(x);\n    }\n\n    if (p === 2) {\n      return _matrixNormTwo(x);\n    } // invalid parameter value\n\n\n    throw new Error('Unsupported parameter value ' + p);\n  }\n  /**\n   * Calculate the norm for an array\n   * @param {Matrix} x\n   * @param {number | string} p\n   * @returns {number} Returns the norm\n   * @private\n   */\n\n\n  function _norm(x, p) {\n    // size\n    var sizeX = x.size(); // check if it is a vector\n\n    if (sizeX.length === 1) {\n      return _vectorNorm(x, p);\n    } // MxN matrix\n\n\n    if (sizeX.length === 2) {\n      if (sizeX[0] && sizeX[1]) {\n        return _matrixNorm(x, p);\n      } else {\n        throw new RangeError('Invalid matrix dimensions');\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/norm.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/nthRoot.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/nthRoot.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNthRoot\": () => (/* binding */ createNthRoot),\n/* harmony export */   \"createNthRootNumber\": () => (/* binding */ createNthRootNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js\");\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm06_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm06.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm06.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\n\n\n\n\n\nvar name = 'nthRoot';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber'];\nvar createNthRoot = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    BigNumber: _BigNumber\n  } = _ref;\n  var algorithm01 = (0,_type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm01)({\n    typed\n  });\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm06 = (0,_type_matrix_utils_algorithm06_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm06)({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Calculate the nth root of a value.\n   * The principal nth root of a positive real number A, is the positive real\n   * solution of the equation\n   *\n   *     x^root = A\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *     math.nthRoot(a)\n   *     math.nthRoot(a, root)\n   *\n   * Examples:\n   *\n   *     math.nthRoot(9, 2)    // returns 3, as 3^2 == 9\n   *     math.sqrt(9)          // returns 3, as 3^2 == 9\n   *     math.nthRoot(64, 3)   // returns 4, as 4^3 == 64\n   *\n   * See also:\n   *\n   *     sqrt, pow\n   *\n   * @param {number | BigNumber | Array | Matrix | Complex} a\n   *              Value for which to calculate the nth root\n   * @param {number | BigNumber} [root=2]    The root.\n   * @return {number | Complex | Array | Matrix} Returns the nth root of `a`\n   */\n\n  var complexErr = '' + 'Complex number not supported in function nthRoot. ' + 'Use nthRoots instead.';\n  return typed(name, {\n    number: function number(x) {\n      return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_7__.nthRootNumber)(x, 2);\n    },\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_7__.nthRootNumber,\n    BigNumber: function BigNumber(x) {\n      return _bigNthRoot(x, new _BigNumber(2));\n    },\n    Complex: function Complex(x) {\n      throw new Error(complexErr);\n    },\n    'Complex, number': function ComplexNumber(x, y) {\n      throw new Error(complexErr);\n    },\n    'BigNumber, BigNumber': _bigNthRoot,\n    'Array | Matrix': function ArrayMatrix(x) {\n      return this(x, 2);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // sparse + sparse\n        return algorithm06(x, y, this);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // dense + sparse\n        return algorithm01(x, y, this, false);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // sparse - scalar\n        return algorithm11(y, x, this, true);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n  /**\n   * Calculate the nth root of a for BigNumbers, solve x^root == a\n   * https://rosettacode.org/wiki/Nth_root#JavaScript\n   * @param {BigNumber} a\n   * @param {BigNumber} root\n   * @private\n   */\n\n  function _bigNthRoot(a, root) {\n    var precision = _BigNumber.precision;\n\n    var Big = _BigNumber.clone({\n      precision: precision + 2\n    });\n\n    var zero = new _BigNumber(0);\n    var one = new Big(1);\n    var inv = root.isNegative();\n\n    if (inv) {\n      root = root.neg();\n    }\n\n    if (root.isZero()) {\n      throw new Error('Root must be non-zero');\n    }\n\n    if (a.isNegative() && !root.abs().mod(2).equals(1)) {\n      throw new Error('Root must be odd when a is negative.');\n    } // edge cases zero and infinity\n\n\n    if (a.isZero()) {\n      return inv ? new Big(Infinity) : 0;\n    }\n\n    if (!a.isFinite()) {\n      return inv ? zero : a;\n    }\n\n    var x = a.abs().pow(one.div(root)); // If a < 0, we require that root is an odd integer,\n    // so (-1) ^ (1/root) = -1\n\n    x = a.isNeg() ? x.neg() : x;\n    return new _BigNumber((inv ? one.div(x) : x).toPrecision(precision));\n  }\n});\nvar createNthRootNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed'], _ref2 => {\n  var {\n    typed\n  } = _ref2;\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_7__.nthRootNumber,\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_7__.nthRootNumber\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/nthRoot.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/nthRoots.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/nthRoots.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNthRoots\": () => (/* binding */ createNthRoots)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'nthRoots';\nvar dependencies = ['config', 'typed', 'divideScalar', 'Complex'];\nvar createNthRoots = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    divideScalar,\n    Complex\n  } = _ref;\n  /**\n   * Each function here returns a real multiple of i as a Complex value.\n   * @param  {number} val\n   * @return {Complex} val, i*val, -val or -i*val for index 0, 1, 2, 3\n   */\n  // This is used to fix float artifacts for zero-valued components.\n\n  var _calculateExactResult = [function realPos(val) {\n    return new Complex(val, 0);\n  }, function imagPos(val) {\n    return new Complex(0, val);\n  }, function realNeg(val) {\n    return new Complex(-val, 0);\n  }, function imagNeg(val) {\n    return new Complex(0, -val);\n  }];\n  /**\n   * Calculate the nth root of a Complex Number a using De Movire's Theorem.\n   * @param  {Complex} a\n   * @param  {number} root\n   * @return {Array} array of n Complex Roots\n   */\n\n  function _nthComplexRoots(a, root) {\n    if (root < 0) throw new Error('Root must be greater than zero');\n    if (root === 0) throw new Error('Root must be non-zero');\n    if (root % 1 !== 0) throw new Error('Root must be an integer');\n    if (a === 0 || a.abs() === 0) return [new Complex(0, 0)];\n    var aIsNumeric = typeof a === 'number';\n    var offset; // determine the offset (argument of a)/(pi/2)\n\n    if (aIsNumeric || a.re === 0 || a.im === 0) {\n      if (aIsNumeric) {\n        offset = 2 * +(a < 0); // numeric value on the real axis\n      } else if (a.im === 0) {\n        offset = 2 * +(a.re < 0); // complex value on the real axis\n      } else {\n        offset = 2 * +(a.im < 0) + 1; // complex value on the imaginary axis\n      }\n    }\n\n    var arg = a.arg();\n    var abs = a.abs();\n    var roots = [];\n    var r = Math.pow(abs, 1 / root);\n\n    for (var k = 0; k < root; k++) {\n      var halfPiFactor = (offset + 4 * k) / root;\n      /**\n       * If (offset + 4*k)/root is an integral multiple of pi/2\n       * then we can produce a more exact result.\n       */\n\n      if (halfPiFactor === Math.round(halfPiFactor)) {\n        roots.push(_calculateExactResult[halfPiFactor % 4](r));\n        continue;\n      }\n\n      roots.push(new Complex({\n        r: r,\n        phi: (arg + 2 * Math.PI * k) / root\n      }));\n    }\n\n    return roots;\n  }\n  /**\n   * Calculate the nth roots of a value.\n   * An nth root of a positive real number A,\n   * is a positive real solution of the equation \"x^root = A\".\n   * This function returns an array of complex values.\n   *\n   * Syntax:\n   *\n   *    math.nthRoots(x)\n   *    math.nthRoots(x, root)\n   *\n   * Examples:\n   *\n   *    math.nthRoots(1)\n   *    // returns [\n   *    //   {re: 1, im: 0},\n   *    //   {re: -1, im: 0}\n   *    // ]\n   *    nthRoots(1, 3)\n   *    // returns [\n   *    //   { re: 1, im: 0 },\n   *    //   { re: -0.4999999999999998, im: 0.8660254037844387 },\n   *    //   { re: -0.5000000000000004, im: -0.8660254037844385 }\n   *    ]\n   *\n   * See also:\n   *\n   *    nthRoot, pow, sqrt\n   *\n   * @param {number | BigNumber | Fraction | Complex} x Number to be rounded\n   * @return {number | BigNumber | Fraction | Complex}            Rounded value\n   */\n\n\n  return typed(name, {\n    Complex: function Complex(x) {\n      return _nthComplexRoots(x, 2);\n    },\n    'Complex, number': _nthComplexRoots\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/nthRoots.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/pow.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/pow.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPow\": () => (/* binding */ createPow)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\n\nvar name = 'pow';\nvar dependencies = ['typed', 'config', 'identity', 'multiply', 'matrix', 'fraction', 'number', 'Complex'];\nvar createPow = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    identity,\n    multiply,\n    matrix,\n    number,\n    fraction,\n    Complex\n  } = _ref;\n  /**\n   * Calculates the power of x to y, `x ^ y`.\n   * Matrix exponentiation is supported for square matrices `x`, and positive\n   * integer exponents `y`.\n   *\n   * For cubic roots of negative numbers, the function returns the principal\n   * root by default. In order to let the function return the real root,\n   * math.js can be configured with `math.config({predictable: true})`.\n   * To retrieve all cubic roots of a value, use `math.cbrt(x, true)`.\n   *\n   * Syntax:\n   *\n   *    math.pow(x, y)\n   *\n   * Examples:\n   *\n   *    math.pow(2, 3)               // returns number 8\n   *\n   *    const a = math.complex(2, 3)\n   *    math.pow(a, 2)                // returns Complex -5 + 12i\n   *\n   *    const b = [[1, 2], [4, 3]]\n   *    math.pow(b, 2)               // returns Array [[9, 8], [16, 17]]\n   *\n   * See also:\n   *\n   *    multiply, sqrt, cbrt, nthRoot\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x  The base\n   * @param  {number | BigNumber | Complex} y                          The exponent\n   * @return {number | BigNumber | Complex | Array | Matrix} The value of `x` to the power `y`\n   */\n\n  return typed(name, {\n    'number, number': _pow,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.pow(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      if (y.isInteger() || x >= 0 || config.predictable) {\n        return x.pow(y);\n      } else {\n        return new Complex(x.toNumber(), 0).pow(y.toNumber(), 0);\n      }\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      var result = x.pow(y);\n\n      if (result != null) {\n        return result;\n      }\n\n      if (config.predictable) {\n        throw new Error('Result of pow is non-rational and cannot be expressed as a fraction');\n      } else {\n        return _pow(x.valueOf(), y.valueOf());\n      }\n    },\n    'Array, number': _powArray,\n    'Array, BigNumber': function ArrayBigNumber(x, y) {\n      return _powArray(x, y.toNumber());\n    },\n    'Matrix, number': _powMatrix,\n    'Matrix, BigNumber': function MatrixBigNumber(x, y) {\n      return _powMatrix(x, y.toNumber());\n    },\n    'Unit, number | BigNumber': function UnitNumberBigNumber(x, y) {\n      return x.pow(y);\n    }\n  });\n  /**\n   * Calculates the power of x to y, x^y, for two numbers.\n   * @param {number} x\n   * @param {number} y\n   * @return {number | Complex} res\n   * @private\n   */\n\n  function _pow(x, y) {\n    // Alternatively could define a 'realmode' config option or something, but\n    // 'predictable' will work for now\n    if (config.predictable && !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(y) && x < 0) {\n      // Check to see if y can be represented as a fraction\n      try {\n        var yFrac = fraction(y);\n        var yNum = number(yFrac);\n\n        if (y === yNum || Math.abs((y - yNum) / y) < 1e-14) {\n          if (yFrac.d % 2 === 1) {\n            return (yFrac.n % 2 === 0 ? 1 : -1) * Math.pow(-x, y);\n          }\n        }\n      } catch (ex) {// fraction() throws an error if y is Infinity, etc.\n      } // Unable to express y as a fraction, so continue on\n\n    } // **for predictable mode** x^Infinity === NaN if x < -1\n    // N.B. this behavour is different from `Math.pow` which gives\n    // (-2)^Infinity === Infinity\n\n\n    if (config.predictable && (x < -1 && y === Infinity || x > -1 && x < 0 && y === -Infinity)) {\n      return NaN;\n    }\n\n    if ((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(y) || x >= 0 || config.predictable) {\n      return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_2__.powNumber)(x, y);\n    } else {\n      // TODO: the following infinity checks are duplicated from powNumber. Deduplicate this somehow\n      // x^Infinity === 0 if -1 < x < 1\n      // A real number 0 is returned instead of complex(0)\n      if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {\n        return 0;\n      }\n\n      return new Complex(x, 0).pow(y, 0);\n    }\n  }\n  /**\n   * Calculate the power of a 2d array\n   * @param {Array} x     must be a 2 dimensional, square matrix\n   * @param {number} y    a positive, integer value\n   * @returns {Array}\n   * @private\n   */\n\n\n  function _powArray(x, y) {\n    if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(y) || y < 0) {\n      throw new TypeError('For A^b, b must be a positive integer (value is ' + y + ')');\n    } // verify that A is a 2 dimensional square matrix\n\n\n    var s = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.arraySize)(x);\n\n    if (s.length !== 2) {\n      throw new Error('For A^b, A must be 2 dimensional (A has ' + s.length + ' dimensions)');\n    }\n\n    if (s[0] !== s[1]) {\n      throw new Error('For A^b, A must be square (size is ' + s[0] + 'x' + s[1] + ')');\n    }\n\n    var res = identity(s[0]).valueOf();\n    var px = x;\n\n    while (y >= 1) {\n      if ((y & 1) === 1) {\n        res = multiply(px, res);\n      }\n\n      y >>= 1;\n      px = multiply(px, px);\n    }\n\n    return res;\n  }\n  /**\n   * Calculate the power of a 2d matrix\n   * @param {Matrix} x     must be a 2 dimensional, square matrix\n   * @param {number} y    a positive, integer value\n   * @returns {Matrix}\n   * @private\n   */\n\n\n  function _powMatrix(x, y) {\n    return matrix(_powArray(x.valueOf(), y));\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/pow.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/round.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/round.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRound\": () => (/* binding */ createRound),\n/* harmony export */   \"createRoundNumber\": () => (/* binding */ createRoundNumber)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n\n\n\n\n\n\n\nvar NO_INT = 'Number of decimals in function round must be an integer';\nvar name = 'round';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'BigNumber', 'DenseMatrix'];\nvar createRound = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    zeros,\n    BigNumber,\n    DenseMatrix\n  } = _ref;\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Round a value towards the nearest integer.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.round(x)\n   *    math.round(x, n)\n   *\n   * Examples:\n   *\n   *    math.round(3.22)             // returns number 3\n   *    math.round(3.82)             // returns number 4\n   *    math.round(-4.2)             // returns number -4\n   *    math.round(-4.7)             // returns number -5\n   *    math.round(3.22, 1)          // returns number 3.2\n   *    math.round(3.88, 1)          // returns number 3.9\n   *    math.round(-4.21, 1)         // returns number -4.2\n   *    math.round(-4.71, 1)         // returns number -4.7\n   *    math.round(math.pi, 3)       // returns number 3.142\n   *    math.round(123.45678, 2)     // returns number 123.46\n   *\n   *    const c = math.complex(3.2, -2.7)\n   *    math.round(c)                // returns Complex 3 - 3i\n   *\n   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, floor\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed(name, _objectSpread(_objectSpread({}, roundNumberSignatures), {}, {\n    Complex: function Complex(x) {\n      return x.round();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      var _n = n.toNumber();\n\n      return x.round(_n);\n    },\n    'number, BigNumber': function numberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return new BigNumber(x).toDecimalPlaces(n.toNumber());\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toDecimalPlaces(0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.toDecimalPlaces(n.toNumber());\n    },\n    Fraction: function Fraction(x) {\n      return x.round();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since round(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_5__.deepMap)(x, this, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, SparseMatrix': function numberComplexBigNumberSparseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm12(y, x, this, true);\n    },\n    'number | Complex | BigNumber, DenseMatrix': function numberComplexBigNumberDenseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  }));\n});\nvar roundNumberSignatures = {\n  number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.roundNumber,\n  'number, number': function numberNumber(x, n) {\n    if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_7__.isInteger)(n)) {\n      throw new TypeError(NO_INT);\n    }\n\n    if (n < 0 || n > 15) {\n      throw new Error('Number of decimals in function round must be in the range of 0-15');\n    }\n\n    return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.roundNumber)(x, n);\n  }\n};\nvar createRoundNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, ['typed'], _ref2 => {\n  var {\n    typed\n  } = _ref2;\n  return typed(name, roundNumberSignatures);\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/round.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/sign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/sign.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSign\": () => (/* binding */ createSign)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'sign';\nvar dependencies = ['typed', 'BigNumber', 'Fraction', 'complex'];\nvar createSign = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber,\n    complex,\n    Fraction: _Fraction\n  } = _ref;\n  /**\n   * Compute the sign of a value. The sign of a value x is:\n   *\n   * -  1 when x > 0\n   * - -1 when x < 0\n   * -  0 when x == 0\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sign(x)\n   *\n   * Examples:\n   *\n   *    math.sign(3.5)               // returns 1\n   *    math.sign(-4.2)              // returns -1\n   *    math.sign(0)                 // returns 0\n   *\n   *    math.sign([3, 5, -2, 0, 2])  // returns [1, 1, -1, 0, 1]\n   *\n   * See also:\n   *\n   *    abs\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x\n   *            The number for which to determine the sign\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}e\n   *            The sign of `x`\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.signNumber,\n    Complex: function Complex(x) {\n      return x.im === 0 ? complex((0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.signNumber)(x.re)) : x.sign();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(x.cmp(0));\n    },\n    Fraction: function Fraction(x) {\n      return new _Fraction(x.s, 1);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since sign(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    },\n    Unit: function Unit(x) {\n      return this(x.value);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/sign.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/sqrt.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/sqrt.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSqrt\": () => (/* binding */ createSqrt)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'sqrt';\nvar dependencies = ['config', 'typed', 'Complex'];\nvar createSqrt = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    config,\n    typed,\n    Complex\n  } = _ref;\n  /**\n   * Calculate the square root of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sqrt(x)\n   *\n   * Examples:\n   *\n   *    math.sqrt(25)                // returns 5\n   *    math.square(5)               // returns 25\n   *    math.sqrt(-4)                // returns Complex 2i\n   *\n   * See also:\n   *\n   *    square, multiply, cube, cbrt, sqrtm\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix | Unit} x\n   *            Value for which to calculate the square root.\n   * @return {number | BigNumber | Complex | Array | Matrix | Unit}\n   *            Returns the square root of `x`\n   */\n\n  return typed('sqrt', {\n    number: _sqrtNumber,\n    Complex: function Complex(x) {\n      return x.sqrt();\n    },\n    BigNumber: function BigNumber(x) {\n      if (!x.isNegative() || config.predictable) {\n        return x.sqrt();\n      } else {\n        // negative value -> downgrade to number to do complex value computation\n        return _sqrtNumber(x.toNumber());\n      }\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since sqrt(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this, true);\n    },\n    Unit: function Unit(x) {\n      // Someday will work for complex units when they are implemented\n      return x.pow(0.5);\n    }\n  });\n  /**\n   * Calculate sqrt for a number\n   * @param {number} x\n   * @returns {number | Complex} Returns the square root of x\n   * @private\n   */\n\n  function _sqrtNumber(x) {\n    if (isNaN(x)) {\n      return NaN;\n    } else if (x >= 0 || config.predictable) {\n      return Math.sqrt(x);\n    } else {\n      return new Complex(x, 0).sqrt();\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/sqrt.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/square.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/square.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSquare\": () => (/* binding */ createSquare)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'square';\nvar dependencies = ['typed'];\nvar createSquare = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Compute the square of a value, `x * x`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.square(x)\n   *\n   * Examples:\n   *\n   *    math.square(2)           // returns number 4\n   *    math.square(3)           // returns number 9\n   *    math.pow(3, 2)           // returns number 9\n   *    math.multiply(3, 3)      // returns number 9\n   *\n   *    math.square([1, 2, 3, 4])  // returns Array [1, 4, 9, 16]\n   *\n   * See also:\n   *\n   *    multiply, cube, sqrt, pow\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix | Unit} x\n   *            Number for which to calculate the square\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix | Unit}\n   *            Squared value\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.squareNumber,\n    Complex: function Complex(x) {\n      return x.mul(x);\n    },\n    BigNumber: function BigNumber(x) {\n      return x.times(x);\n    },\n    Fraction: function Fraction(x) {\n      return x.mul(x);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since square(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    },\n    Unit: function Unit(x) {\n      return x.pow(2);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/square.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/subtract.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/subtract.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSubtract\": () => (/* binding */ createSubtract)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n/* harmony import */ var _type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm05_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm05.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm05.js\");\n/* harmony import */ var _type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\n\n\nvar name = 'subtract';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'addScalar', 'unaryMinus', 'DenseMatrix'];\nvar createSubtract = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    addScalar,\n    unaryMinus,\n    DenseMatrix\n  } = _ref; // TODO: split function subtract in two: subtract and subtractScalar\n\n  var algorithm01 = (0,_type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm01)({\n    typed\n  });\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm03)({\n    typed\n  });\n  var algorithm05 = (0,_type_matrix_utils_algorithm05_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm05)({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = (0,_type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm10)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Subtract two values, `x - y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.subtract(x, y)\n   *\n   * Examples:\n   *\n   *    math.subtract(5.3, 2)        // returns number 3.3\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.subtract(a, b)          // returns Complex -2 + 2i\n   *\n   *    math.subtract([5, 7, 4], 4)  // returns Array [1, 3, 0]\n   *\n   *    const c = math.unit('2.1 km')\n   *    const d = math.unit('500m')\n   *    math.subtract(c, d)          // returns Unit 1.6 km\n   *\n   * See also:\n   *\n   *    add\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x\n   *            Initial value\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y\n   *            Value to subtract from `x`\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}\n   *            Subtraction of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x - y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.sub(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.minus(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.sub(y);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (x.value === null) {\n        throw new Error('Parameter x contains a unit with undefined value');\n      }\n\n      if (y.value === null) {\n        throw new Error('Parameter y contains a unit with undefined value');\n      }\n\n      if (!x.equalBase(y)) {\n        throw new Error('Units do not match');\n      }\n\n      var res = x.clone();\n      res.value = this(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm05(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, unaryMinus(y), addScalar);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n/**\n * Check whether matrix x and y have the same number of dimensions.\n * Throws a DimensionError when dimensions are not equal\n * @param {Matrix} x\n * @param {Matrix} y\n */\n\nfunction checkEqualDimensions(x, y) {\n  var xsize = x.size();\n  var ysize = y.size();\n\n  if (xsize.length !== ysize.length) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_7__.DimensionError(xsize.length, ysize.length);\n  }\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/subtract.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/unaryMinus.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/unaryMinus.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUnaryMinus\": () => (/* binding */ createUnaryMinus)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'unaryMinus';\nvar dependencies = ['typed'];\nvar createUnaryMinus = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Inverse the sign of a value, apply a unary minus operation.\n   *\n   * For matrices, the function is evaluated element wise. Boolean values and\n   * strings will be converted to a number. For complex numbers, both real and\n   * complex value are inverted.\n   *\n   * Syntax:\n   *\n   *    math.unaryMinus(x)\n   *\n   * Examples:\n   *\n   *    math.unaryMinus(3.5)      // returns -3.5\n   *    math.unaryMinus(-4.2)     // returns 4.2\n   *\n   * See also:\n   *\n   *    add, subtract, unaryPlus\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Number to be inverted.\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Returns the value with inverted sign.\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.unaryMinusNumber,\n    Complex: function Complex(x) {\n      return x.neg();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.neg();\n    },\n    Fraction: function Fraction(x) {\n      return x.neg();\n    },\n    Unit: function Unit(x) {\n      var res = x.clone();\n      res.value = this(x.value);\n      return res;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since unaryMinus(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    } // TODO: add support for string\n\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/unaryMinus.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/unaryPlus.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/unaryPlus.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUnaryPlus\": () => (/* binding */ createUnaryPlus)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\n\nvar name = 'unaryPlus';\nvar dependencies = ['typed', 'config', 'BigNumber'];\nvar createUnaryPlus = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    BigNumber\n  } = _ref;\n  /**\n   * Unary plus operation.\n   * Boolean values and strings will be converted to a number, numeric values will be returned as is.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.unaryPlus(x)\n   *\n   * Examples:\n   *\n   *    math.unaryPlus(3.5)      // returns 3.5\n   *    math.unaryPlus(1)     // returns 1\n   *\n   * See also:\n   *\n   *    unaryMinus, add, subtract\n   *\n   * @param  {number | BigNumber | Fraction | string | Complex | Unit | Array | Matrix} x\n   *            Input value\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}\n   *            Returns the input value when numeric, converts to a number when input is non-numeric.\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.unaryPlusNumber,\n    Complex: function Complex(x) {\n      return x; // complex numbers are immutable\n    },\n    BigNumber: function BigNumber(x) {\n      return x; // bignumbers are immutable\n    },\n    Fraction: function Fraction(x) {\n      return x; // fractions are immutable\n    },\n    Unit: function Unit(x) {\n      return x.clone();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since unaryPlus(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    },\n    'boolean | string': function booleanString(x) {\n      // convert to a number or bignumber\n      return config.number === 'BigNumber' ? new BigNumber(+x) : +x;\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/unaryPlus.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/arithmetic/xgcd.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/arithmetic/xgcd.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createXgcd\": () => (/* binding */ createXgcd)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/arithmetic.js\");\n\n\nvar name = 'xgcd';\nvar dependencies = ['typed', 'config', 'matrix', 'BigNumber'];\nvar createXgcd = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    BigNumber\n  } = _ref;\n  /**\n   * Calculate the extended greatest common divisor for two values.\n   * See https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm.\n   *\n   * Syntax:\n   *\n   *    math.xgcd(a, b)\n   *\n   * Examples:\n   *\n   *    math.xgcd(8, 12)             // returns [4, -1, 1]\n   *    math.gcd(8, 12)              // returns 4\n   *    math.xgcd(36163, 21199)      // returns [1247, -7, 12]\n   *\n   * See also:\n   *\n   *    gcd, lcm\n   *\n   * @param {number | BigNumber} a  An integer number\n   * @param {number | BigNumber} b  An integer number\n   * @return {Array}              Returns an array containing 3 integers `[div, m, n]`\n   *                              where `div = gcd(a, b)` and `a*m + b*n = div`\n   */\n\n  return typed(name, {\n    'number, number': function numberNumber(a, b) {\n      var res = (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.xgcdNumber)(a, b);\n      return config.matrix === 'Array' ? res : matrix(res);\n    },\n    'BigNumber, BigNumber': _xgcdBigNumber // TODO: implement support for Fraction\n\n  });\n  /**\n   * Calculate xgcd for two BigNumbers\n   * @param {BigNumber} a\n   * @param {BigNumber} b\n   * @return {BigNumber[]} result\n   * @private\n   */\n\n  function _xgcdBigNumber(a, b) {\n    // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n    var // used to swap two variables\n    t;\n    var // quotient\n    q;\n    var // remainder\n    r;\n    var zero = new BigNumber(0);\n    var one = new BigNumber(1);\n    var x = zero;\n    var lastx = one;\n    var y = one;\n    var lasty = zero;\n\n    if (!a.isInt() || !b.isInt()) {\n      throw new Error('Parameters in function xgcd must be integer numbers');\n    }\n\n    while (!b.isZero()) {\n      q = a.div(b).floor();\n      r = a.mod(b);\n      t = x;\n      x = lastx.minus(q.times(x));\n      lastx = t;\n      t = y;\n      y = lasty.minus(q.times(y));\n      lasty = t;\n      a = b;\n      b = r;\n    }\n\n    var res;\n\n    if (a.lt(zero)) {\n      res = [a.neg(), lastx.neg(), lasty.neg()];\n    } else {\n      res = [a, !a.isZero() ? lastx : 0, lasty];\n    }\n\n    return config.matrix === 'Array' ? res : matrix(res);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/arithmetic/xgcd.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/bitwise/bitAnd.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/bitwise/bitAnd.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBitAnd\": () => (/* binding */ createBitAnd)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/bitwise.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js\");\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm06_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm06.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm06.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/bitwise.js\");\n\n\n\n\n\n\n\n\nvar name = 'bitAnd';\nvar dependencies = ['typed', 'matrix', 'equalScalar'];\nvar createBitAnd = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar\n  } = _ref;\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm06 = (0,_type_matrix_utils_algorithm06_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm06)({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Bitwise AND two values, `x & y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.bitAnd(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitAnd(53, 131)               // returns number 1\n   *\n   *    math.bitAnd([1, 12, 31], 42)       // returns Array [0, 8, 10]\n   *\n   * See also:\n   *\n   *    bitNot, bitOr, bitXor, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x First value to and\n   * @param  {number | BigNumber | Array | Matrix} y Second value to and\n   * @return {number | BigNumber | Array | Matrix} AND of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.bitAndNumber,\n    'BigNumber, BigNumber': _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_7__.bitAndBigNumber,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm06(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm11(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/bitwise/bitAnd.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/bitwise/bitNot.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/bitwise/bitNot.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBitNot\": () => (/* binding */ createBitNot)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/bignumber/bitwise.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/bitwise.js\");\n\n\n\n\nvar name = 'bitNot';\nvar dependencies = ['typed'];\nvar createBitNot = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Bitwise NOT value, `~x`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.bitNot(x)\n   *\n   * Examples:\n   *\n   *    math.bitNot(1)               // returns number -2\n   *\n   *    math.bitNot([2, -3, 4])      // returns Array [-3, 2, 5]\n   *\n   * See also:\n   *\n   *    bitAnd, bitOr, bitXor, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x Value to not\n   * @return {number | BigNumber | Array | Matrix} NOT of `x`\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.bitNotNumber,\n    BigNumber: _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_2__.bitNotBigNumber,\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_3__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/bitwise/bitNot.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/bitwise/bitOr.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/bitwise/bitOr.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBitOr\": () => (/* binding */ createBitOr)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/bitwise.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js\");\n/* harmony import */ var _type_matrix_utils_algorithm04_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm04.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm04.js\");\n/* harmony import */ var _type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/bitwise.js\");\n\n\n\n\n\n\n\n\nvar name = 'bitOr';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nvar createBitOr = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm01 = (0,_type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm01)({\n    typed\n  });\n  var algorithm04 = (0,_type_matrix_utils_algorithm04_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm04)({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = (0,_type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm10)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Bitwise OR two values, `x | y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the lowest print base.\n   *\n   * Syntax:\n   *\n   *    math.bitOr(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitOr(1, 2)               // returns number 3\n   *\n   *    math.bitOr([1, 2, 3], 4)       // returns Array [5, 6, 7]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitXor, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x First value to or\n   * @param  {number | BigNumber | Array | Matrix} y Second value to or\n   * @return {number | BigNumber | Array | Matrix} OR of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.bitOrNumber,\n    'BigNumber, BigNumber': _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_7__.bitOrBigNumber,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm04(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm01(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/bitwise/bitOr.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/bitwise/bitXor.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/bitwise/bitXor.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBitXor\": () => (/* binding */ createBitXor)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/bitwise.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/bitwise.js\");\n\n\n\n\n\n\n\n\nvar name = 'bitXor';\nvar dependencies = ['typed', 'matrix', 'DenseMatrix'];\nvar createBitXor = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Bitwise XOR two values, `x ^ y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.bitXor(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitXor(1, 2)               // returns number 3\n   *\n   *    math.bitXor([2, 3, 4], 4)       // returns Array [6, 7, 0]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x First value to xor\n   * @param  {number | BigNumber | Array | Matrix} y Second value to xor\n   * @return {number | BigNumber | Array | Matrix} XOR of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.bitXorNumber,\n    'BigNumber, BigNumber': _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_7__.bitXor,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/bitwise/bitXor.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/bitwise/leftShift.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/bitwise/leftShift.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLeftShift\": () => (/* binding */ createLeftShift)\n/* harmony export */ });\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js\");\n/* harmony import */ var _type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js\");\n/* harmony import */ var _type_matrix_utils_algorithm08_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm08.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm08.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/bitwise.js\");\n/* harmony import */ var _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/bignumber/bitwise.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js\");\n\n\n\n\n\n\n\n\n\n\nvar name = 'leftShift';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];\nvar createLeftShift = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    zeros,\n    DenseMatrix\n  } = _ref;\n  var algorithm01 = (0,_type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm01)({\n    typed\n  });\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm08 = (0,_type_matrix_utils_algorithm08_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm08)({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = (0,_type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm10)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Bitwise left logical shift of a value x by y number of bits, `x << y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.leftShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.leftShift(1, 2)               // returns number 4\n   *\n   *    math.leftShift([1, 2, 3], 4)       // returns Array [16, 32, 64]\n   *\n   * See also:\n   *\n   *    leftShift, bitNot, bitOr, bitXor, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x Value to be shifted\n   * @param  {number | BigNumber} y Amount of shifts\n   * @return {number | BigNumber | Array | Matrix} `x` shifted left `y` times\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_8__.leftShiftNumber,\n    'BigNumber, BigNumber': _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_9__.leftShiftBigNumber,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm08(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm10(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/bitwise/leftShift.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/bitwise/rightArithShift.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/bitwise/rightArithShift.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRightArithShift\": () => (/* binding */ createRightArithShift)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/bignumber/bitwise.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js\");\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js\");\n/* harmony import */ var _type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js\");\n/* harmony import */ var _type_matrix_utils_algorithm08_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm08.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm08.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/bitwise.js\");\n\n\n\n\n\n\n\n\n\n\nvar name = 'rightArithShift';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];\nvar createRightArithShift = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    zeros,\n    DenseMatrix\n  } = _ref;\n  var algorithm01 = (0,_type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm01)({\n    typed\n  });\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm08 = (0,_type_matrix_utils_algorithm08_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm08)({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = (0,_type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm10)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Bitwise right arithmetic shift of a value x by y number of bits, `x >> y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.rightArithShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.rightArithShift(4, 2)               // returns number 1\n   *\n   *    math.rightArithShift([16, -32, 64], 4)   // returns Array [1, -2, 3]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, bitXor, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x Value to be shifted\n   * @param  {number | BigNumber} y Amount of shifts\n   * @return {number | BigNumber | Array | Matrix} `x` sign-filled shifted right `y` times\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_8__.rightArithShiftNumber,\n    'BigNumber, BigNumber': _utils_bignumber_bitwise_js__WEBPACK_IMPORTED_MODULE_9__.rightArithShiftBigNumber,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm08(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm10(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/bitwise/rightArithShift.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/bitwise/rightLogShift.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/bitwise/rightLogShift.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRightLogShift\": () => (/* binding */ createRightLogShift)\n/* harmony export */ });\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm01.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js\");\n/* harmony import */ var _type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm10.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js\");\n/* harmony import */ var _type_matrix_utils_algorithm08_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm08.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm08.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/bitwise.js\");\n\n\n\n\n\n\n\n\n\nvar name = 'rightLogShift';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'DenseMatrix'];\nvar createRightLogShift = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    zeros,\n    DenseMatrix\n  } = _ref;\n  var algorithm01 = (0,_type_matrix_utils_algorithm01_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm01)({\n    typed\n  });\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm08 = (0,_type_matrix_utils_algorithm08_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm08)({\n    typed,\n    equalScalar\n  });\n  var algorithm10 = (0,_type_matrix_utils_algorithm10_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm10)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Bitwise right logical shift of value x by y number of bits, `x >>> y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.rightLogShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.rightLogShift(4, 2)               // returns number 1\n   *\n   *    math.rightLogShift([16, -32, 64], 4)   // returns Array [1, 2, 3]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, bitXor, leftShift, rightLogShift\n   *\n   * @param  {number | Array | Matrix} x Value to be shifted\n   * @param  {number} y Amount of shifts\n   * @return {number | Array | Matrix} `x` zero-filled shifted right `y` times\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_8__.rightLogShiftNumber,\n    // 'BigNumber, BigNumber': ..., // TODO: implement BigNumber support for rightLogShift\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm08(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      // check scalar\n      if (equalScalar(y, 0)) {\n        return x.clone();\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm10(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // check scalar\n      if (equalScalar(x, 0)) {\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/bitwise/rightLogShift.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/combinatorics/bellNumbers.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/combinatorics/bellNumbers.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBellNumbers\": () => (/* binding */ createBellNumbers)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'bellNumbers';\nvar dependencies = ['typed', 'addScalar', 'isNegative', 'isInteger', 'stirlingS2'];\nvar createBellNumbers = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    addScalar,\n    isNegative,\n    isInteger,\n    stirlingS2\n  } = _ref;\n  /**\n   * The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S.\n   * bellNumbers only takes integer arguments.\n   * The following condition must be enforced: n >= 0\n   *\n   * Syntax:\n   *\n   *   math.bellNumbers(n)\n   *\n   * Examples:\n   *\n   *    math.bellNumbers(3) // returns 5\n   *    math.bellNumbers(8) // returns 4140\n   *\n   * See also:\n   *\n   *    stirlingS2\n   *\n   * @param {Number | BigNumber} n    Total number of objects in the set\n   * @return {Number | BigNumber}     B(n)\n   */\n\n  return typed(name, {\n    'number | BigNumber': function numberBigNumber(n) {\n      if (!isInteger(n) || isNegative(n)) {\n        throw new TypeError('Non-negative integer value expected in function bellNumbers');\n      } // Sum (k=0, n) S(n,k).\n\n\n      var result = 0;\n\n      for (var i = 0; i <= n; i++) {\n        result = addScalar(result, stirlingS2(n, i));\n      }\n\n      return result;\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/combinatorics/bellNumbers.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/combinatorics/catalan.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/combinatorics/catalan.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCatalan\": () => (/* binding */ createCatalan)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'catalan';\nvar dependencies = ['typed', 'addScalar', 'divideScalar', 'multiplyScalar', 'combinations', 'isNegative', 'isInteger'];\nvar createCatalan = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    addScalar,\n    divideScalar,\n    multiplyScalar,\n    combinations,\n    isNegative,\n    isInteger\n  } = _ref;\n  /**\n   * The Catalan Numbers enumerate combinatorial structures of many different types.\n   * catalan only takes integer arguments.\n   * The following condition must be enforced: n >= 0\n   *\n   * Syntax:\n   *\n   *   math.catalan(n)\n   *\n   * Examples:\n   *\n   *    math.catalan(3) // returns 5\n   *    math.catalan(8) // returns 1430\n   *\n   * See also:\n   *\n   *    bellNumbers\n   *\n   * @param {Number | BigNumber} n    nth Catalan number\n   * @return {Number | BigNumber}     Cn(n)\n   */\n\n  return typed(name, {\n    'number | BigNumber': function numberBigNumber(n) {\n      if (!isInteger(n) || isNegative(n)) {\n        throw new TypeError('Non-negative integer value expected in function catalan');\n      }\n\n      return divideScalar(combinations(multiplyScalar(n, 2), n), addScalar(n, 1));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/combinatorics/catalan.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/combinatorics/composition.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/combinatorics/composition.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createComposition\": () => (/* binding */ createComposition)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'composition';\nvar dependencies = ['typed', 'addScalar', 'combinations', 'isNegative', 'isPositive', 'isInteger', 'larger'];\nvar createComposition = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    addScalar,\n    combinations,\n    isPositive,\n    isNegative,\n    isInteger,\n    larger\n  } = _ref;\n  /**\n   * The composition counts of n into k parts.\n   *\n   * composition only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   * Syntax:\n   *\n   *   math.composition(n, k)\n   *\n   * Examples:\n   *\n   *    math.composition(5, 3) // returns 6\n   *\n   * See also:\n   *\n   *    combinations\n   *\n   * @param {Number | BigNumber} n    Total number of objects in the set\n   * @param {Number | BigNumber} k    Number of objects in the subset\n   * @return {Number | BigNumber}     Returns the composition counts of n into k parts.\n   */\n\n  return typed(name, {\n    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(n, k) {\n      if (!isInteger(n) || !isPositive(n) || !isInteger(k) || !isPositive(k)) {\n        throw new TypeError('Positive integer value expected in function composition');\n      } else if (larger(k, n)) {\n        throw new TypeError('k must be less than or equal to n in function composition');\n      }\n\n      return combinations(addScalar(n, -1), addScalar(k, -1));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/combinatorics/composition.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/combinatorics/stirlingS2.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/combinatorics/stirlingS2.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createStirlingS2\": () => (/* binding */ createStirlingS2)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'stirlingS2';\nvar dependencies = ['typed', 'addScalar', 'subtract', 'multiplyScalar', 'divideScalar', 'pow', 'factorial', 'combinations', 'isNegative', 'isInteger', 'larger'];\nvar createStirlingS2 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    addScalar,\n    subtract,\n    multiplyScalar,\n    divideScalar,\n    pow,\n    factorial,\n    combinations,\n    isNegative,\n    isInteger,\n    larger\n  } = _ref;\n  /**\n   * The Stirling numbers of the second kind, counts the number of ways to partition\n   * a set of n labelled objects into k nonempty unlabelled subsets.\n   * stirlingS2 only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   *  If n = k or k = 1, then s(n,k) = 1\n   *\n   * Syntax:\n   *\n   *   math.stirlingS2(n, k)\n   *\n   * Examples:\n   *\n   *    math.stirlingS2(5, 3) //returns 25\n   *\n   * See also:\n   *\n   *    bellNumbers\n   *\n   * @param {Number | BigNumber} n    Total number of objects in the set\n   * @param {Number | BigNumber} k    Number of objects in the subset\n   * @return {Number | BigNumber}     S(n,k)\n   */\n\n  return typed(name, {\n    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(n, k) {\n      if (!isInteger(n) || isNegative(n) || !isInteger(k) || isNegative(k)) {\n        throw new TypeError('Non-negative integer value expected in function stirlingS2');\n      } else if (larger(k, n)) {\n        throw new TypeError('k must be less than or equal to n in function stirlingS2');\n      } // 1/k! Sum(i=0 -> k) [(-1)^(k-i)*C(k,j)* i^n]\n\n\n      var kFactorial = factorial(k);\n      var result = 0;\n\n      for (var i = 0; i <= k; i++) {\n        var negativeOne = pow(-1, subtract(k, i));\n        var kChooseI = combinations(k, i);\n        var iPower = pow(i, n);\n        result = addScalar(result, multiplyScalar(multiplyScalar(kChooseI, iPower), negativeOne));\n      }\n\n      return divideScalar(result, kFactorial);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/combinatorics/stirlingS2.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/complex/arg.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/complex/arg.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createArg\": () => (/* binding */ createArg)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'arg';\nvar dependencies = ['typed'];\nvar createArg = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Compute the argument of a complex value.\n   * For a complex number `a + bi`, the argument is computed as `atan2(b, a)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.arg(x)\n   *\n   * Examples:\n   *\n   *    const a = math.complex(2, 2)\n   *    math.arg(a) / math.pi          // returns number 0.25\n   *\n   *    const b = math.complex('2 + 3i')\n   *    math.arg(b)                    // returns number 0.982793723247329\n   *    math.atan2(3, 2)               // returns number 0.982793723247329\n   *\n   * See also:\n   *\n   *    re, im, conj, abs\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            A complex number or array with complex numbers\n   * @return {number | BigNumber | Array | Matrix} The argument of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      return Math.atan2(0, x);\n    },\n    BigNumber: function BigNumber(x) {\n      return x.constructor.atan2(0, x);\n    },\n    Complex: function Complex(x) {\n      return x.arg();\n    },\n    // TODO: implement BigNumber support for function arg\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/complex/arg.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/complex/conj.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/complex/conj.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createConj\": () => (/* binding */ createConj)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'conj';\nvar dependencies = ['typed'];\nvar createConj = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Compute the complex conjugate of a complex value.\n   * If `x = a+bi`, the complex conjugate of `x` is `a - bi`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.conj(x)\n   *\n   * Examples:\n   *\n   *    math.conj(math.complex('2 + 3i'))  // returns Complex 2 - 3i\n   *    math.conj(math.complex('2 - 3i'))  // returns Complex 2 + 3i\n   *    math.conj(math.complex('-5.2i'))  // returns Complex 5.2i\n   *\n   * See also:\n   *\n   *    re, im, arg, abs\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            A complex number or array with complex numbers\n   * @return {number | BigNumber | Complex | Array | Matrix}\n   *            The complex conjugate of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      return x;\n    },\n    BigNumber: function BigNumber(x) {\n      return x;\n    },\n    Complex: function Complex(x) {\n      return x.conjugate();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/complex/conj.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/complex/im.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/complex/im.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIm\": () => (/* binding */ createIm)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'im';\nvar dependencies = ['typed'];\nvar createIm = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Get the imaginary part of a complex number.\n   * For a complex number `a + bi`, the function returns `b`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.im(x)\n   *\n   * Examples:\n   *\n   *    const a = math.complex(2, 3)\n   *    math.re(a)                     // returns number 2\n   *    math.im(a)                     // returns number 3\n   *\n   *    math.re(math.complex('-5.2i')) // returns number -5.2\n   *    math.re(math.complex(2.4))     // returns number 0\n   *\n   * See also:\n   *\n   *    re, conj, abs, arg\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            A complex number or array with complex numbers\n   * @return {number | BigNumber | Array | Matrix} The imaginary part of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      return 0;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.mul(0);\n    },\n    Fraction: function Fraction(x) {\n      return x.mul(0);\n    },\n    Complex: function Complex(x) {\n      return x.im;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/complex/im.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/complex/re.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/complex/re.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRe\": () => (/* binding */ createRe)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 're';\nvar dependencies = ['typed'];\nvar createRe = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Get the real part of a complex number.\n   * For a complex number `a + bi`, the function returns `a`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.re(x)\n   *\n   * Examples:\n   *\n   *    const a = math.complex(2, 3)\n   *    math.re(a)                     // returns number 2\n   *    math.im(a)                     // returns number 3\n   *\n   *    math.re(math.complex('-5.2i')) // returns number 0\n   *    math.re(math.complex(2.4))     // returns number 2.4\n   *\n   * See also:\n   *\n   *    im, conj, abs, arg\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x\n   *            A complex number or array with complex numbers\n   * @return {number | BigNumber | Array | Matrix} The real part of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      return x;\n    },\n    BigNumber: function BigNumber(x) {\n      return x;\n    },\n    Fraction: function Fraction(x) {\n      return x;\n    },\n    Complex: function Complex(x) {\n      return x.re;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/complex/re.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/geometry/distance.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/geometry/distance.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDistance\": () => (/* binding */ createDistance)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'distance';\nvar dependencies = ['typed', 'addScalar', 'subtract', 'divideScalar', 'multiplyScalar', 'unaryMinus', 'sqrt', 'abs'];\nvar createDistance = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    addScalar,\n    subtract,\n    multiplyScalar,\n    divideScalar,\n    unaryMinus,\n    sqrt,\n    abs\n  } = _ref;\n  /**\n    * Calculates:\n    *    The eucledian distance between two points in N-dimensional spaces.\n    *    Distance between point and a line in 2 and 3 dimensional spaces.\n    *    Pairwise distance between a set of 2D or 3D points\n    * NOTE:\n    *    When substituting coefficients of a line(a, b and c), use ax + by + c = 0 instead of ax + by = c\n    *    For parametric equation of a 3D line, x0, y0, z0, a, b, c are from: (x−x0, y−y0, z−z0) = t(a, b, c)\n    *\n    * Syntax:\n    *    math.distance([x1, y1], [x2, y2])\n    *-   math.distance({pointOneX: 4, pointOneY: 5}, {pointTwoX: 2, pointTwoY: 7})\n    *    math.distance([x1, y1, z1], [x2, y2, z2])\n    *    math.distance({pointOneX: 4, pointOneY: 5, pointOneZ: 8}, {pointTwoX: 2, pointTwoY: 7, pointTwoZ: 9})\n    *    math.distance([x1, y1, ... , N1], [x2, y2, ... , N2])\n    *    math.distance([[A], [B], [C]...])\n    *    math.distance([x1, y1], [LinePtX1, LinePtY1], [LinePtX2, LinePtY2])\n    *    math.distance({pointX: 1, pointY: 4}, {lineOnePtX: 6, lineOnePtY: 3}, {lineTwoPtX: 2, lineTwoPtY: 8})\n    *    math.distance([x1, y1, z1], [LinePtX1, LinePtY1, LinePtZ1], [LinePtX2, LinePtY2, LinePtZ2])\n    *    math.distance({pointX: 1, pointY: 4, pointZ: 7}, {lineOnePtX: 6, lineOnePtY: 3, lineOnePtZ: 4}, {lineTwoPtX: 2, lineTwoPtY: 8, lineTwoPtZ: 5})\n    *    math.distance([x1, y1], [xCoeffLine, yCoeffLine, constant])\n    *    math.distance({pointX: 10, pointY: 10}, {xCoeffLine: 8, yCoeffLine: 1, constant: 3})\n    *    math.distance([x1, y1, z1], [x0, y0, z0, a-tCoeff, b-tCoeff, c-tCoeff]) point and parametric equation of 3D line\n    *    math.distance([x, y, z], [x0, y0, z0, a, b, c])\n    *    math.distance({pointX: 2, pointY: 5, pointZ: 9}, {x0: 4, y0: 6, z0: 3, a: 4, b: 2, c: 0})\n    *\n    * Examples:\n    *    math.distance([0,0], [4,4])                     // Returns 5.6569\n    *    math.distance(\n    *     {pointOneX: 0, pointOneY: 0},\n    *     {pointTwoX: 10, pointTwoY: 10})                // Returns 14.142135623730951\n    *    math.distance([1, 0, 1], [4, -2, 2])            // Returns 3.74166\n    *    math.distance(\n    *     {pointOneX: 4, pointOneY: 5, pointOneZ: 8},\n    *     {pointTwoX: 2, pointTwoY: 7, pointTwoZ: 9})    // Returns 3\n    *    math.distance([1, 0, 1, 0], [0, -1, 0, -1])     // Returns 2\n    *    math.distance([[1, 2], [1, 2], [1, 3]])         // Returns [0, 1, 1]\n    *    math.distance([[1,2,4], [1,2,6], [8,1,3]])      // Returns [2, 7.14142842854285, 7.681145747868608]\n    *    math.distance([10, 10], [8, 1, 3])              // Returns 11.535230316796387\n    *    math.distance([10, 10], [2, 3], [-8, 0])        // Returns 8.759953130362847\n    *    math.distance(\n    *     {pointX: 1, pointY: 4},\n    *     {lineOnePtX: 6, lineOnePtY: 3},\n    *     {lineTwoPtX: 2, lineTwoPtY: 8})                // Returns 2.720549372624744\n    *    math.distance([2, 3, 1], [1, 1, 2, 5, 0, 1])    // Returns 2.3204774044612857\n    *    math.distance(\n    *     {pointX: 2, pointY: 3, pointZ: 1},\n    *     {x0: 1, y0: 1, z0: 2, a: 5, b: 0, c: 1}        // Returns 2.3204774044612857\n    *\n    * @param {Array | Matrix | Object} x    Co-ordinates of first point\n    * @param {Array | Matrix | Object} y    Co-ordinates of second point\n    * @return {Number | BigNumber} Returns the distance from two/three points\n  */\n\n  return typed(name, {\n    'Array, Array, Array': function ArrayArrayArray(x, y, z) {\n      // Point to Line 2D (x=Point, y=LinePoint1, z=LinePoint2)\n      if (x.length === 2 && y.length === 2 && z.length === 2) {\n        if (!_2d(x)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_2d(y)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');\n        }\n\n        if (!_2d(z)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');\n        }\n\n        var m = divideScalar(subtract(z[1], z[0]), subtract(y[1], y[0]));\n        var xCoeff = multiplyScalar(multiplyScalar(m, m), y[0]);\n        var yCoeff = unaryMinus(multiplyScalar(m, y[0]));\n        var constant = x[1];\n        return _distancePointLine2D(x[0], x[1], xCoeff, yCoeff, constant);\n      } else {\n        throw new TypeError('Invalid Arguments: Try again');\n      }\n    },\n    'Object, Object, Object': function ObjectObjectObject(x, y, z) {\n      if (Object.keys(x).length === 2 && Object.keys(y).length === 2 && Object.keys(z).length === 2) {\n        if (!_2d(x)) {\n          throw new TypeError('Values of pointX and pointY should be numbers or BigNumbers');\n        }\n\n        if (!_2d(y)) {\n          throw new TypeError('Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers');\n        }\n\n        if (!_2d(z)) {\n          throw new TypeError('Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers');\n        }\n\n        if ('pointX' in x && 'pointY' in x && 'lineOnePtX' in y && 'lineOnePtY' in y && 'lineTwoPtX' in z && 'lineTwoPtY' in z) {\n          var m = divideScalar(subtract(z.lineTwoPtY, z.lineTwoPtX), subtract(y.lineOnePtY, y.lineOnePtX));\n          var xCoeff = multiplyScalar(multiplyScalar(m, m), y.lineOnePtX);\n          var yCoeff = unaryMinus(multiplyScalar(m, y.lineOnePtX));\n          var constant = x.pointX;\n          return _distancePointLine2D(x.pointX, x.pointY, xCoeff, yCoeff, constant);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else {\n        throw new TypeError('Invalid Arguments: Try again');\n      }\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // Point to Line 2D (x=[pointX, pointY], y=[x-coeff, y-coeff, const])\n      if (x.length === 2 && y.length === 3) {\n        if (!_2d(x)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_3d(y)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\n        }\n\n        return _distancePointLine2D(x[0], x[1], y[0], y[1], y[2]);\n      } else if (x.length === 3 && y.length === 6) {\n        // Point to Line 3D\n        if (!_3d(x)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_parametricLine(y)) {\n          throw new TypeError('Array with 6 numbers or BigNumbers expected for second argument');\n        }\n\n        return _distancePointLine3D(x[0], x[1], x[2], y[0], y[1], y[2], y[3], y[4], y[5]);\n      } else if (x.length === y.length && x.length > 0) {\n        // Point to Point N-dimensions\n        if (!_containsOnlyNumbers(x)) {\n          throw new TypeError('All values of an array should be numbers or BigNumbers');\n        }\n\n        if (!_containsOnlyNumbers(y)) {\n          throw new TypeError('All values of an array should be numbers or BigNumbers');\n        }\n\n        return _euclideanDistance(x, y);\n      } else {\n        throw new TypeError('Invalid Arguments: Try again');\n      }\n    },\n    'Object, Object': function ObjectObject(x, y) {\n      if (Object.keys(x).length === 2 && Object.keys(y).length === 3) {\n        if (!_2d(x)) {\n          throw new TypeError('Values of pointX and pointY should be numbers or BigNumbers');\n        }\n\n        if (!_3d(y)) {\n          throw new TypeError('Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers');\n        }\n\n        if ('pointX' in x && 'pointY' in x && 'xCoeffLine' in y && 'yCoeffLine' in y && 'constant' in y) {\n          return _distancePointLine2D(x.pointX, x.pointY, y.xCoeffLine, y.yCoeffLine, y.constant);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else if (Object.keys(x).length === 3 && Object.keys(y).length === 6) {\n        // Point to Line 3D\n        if (!_3d(x)) {\n          throw new TypeError('Values of pointX, pointY and pointZ should be numbers or BigNumbers');\n        }\n\n        if (!_parametricLine(y)) {\n          throw new TypeError('Values of x0, y0, z0, a, b and c should be numbers or BigNumbers');\n        }\n\n        if ('pointX' in x && 'pointY' in x && 'x0' in y && 'y0' in y && 'z0' in y && 'a' in y && 'b' in y && 'c' in y) {\n          return _distancePointLine3D(x.pointX, x.pointY, x.pointZ, y.x0, y.y0, y.z0, y.a, y.b, y.c);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else if (Object.keys(x).length === 2 && Object.keys(y).length === 2) {\n        // Point to Point 2D\n        if (!_2d(x)) {\n          throw new TypeError('Values of pointOneX and pointOneY should be numbers or BigNumbers');\n        }\n\n        if (!_2d(y)) {\n          throw new TypeError('Values of pointTwoX and pointTwoY should be numbers or BigNumbers');\n        }\n\n        if ('pointOneX' in x && 'pointOneY' in x && 'pointTwoX' in y && 'pointTwoY' in y) {\n          return _euclideanDistance([x.pointOneX, x.pointOneY], [y.pointTwoX, y.pointTwoY]);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else if (Object.keys(x).length === 3 && Object.keys(y).length === 3) {\n        // Point to Point 3D\n        if (!_3d(x)) {\n          throw new TypeError('Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers');\n        }\n\n        if (!_3d(y)) {\n          throw new TypeError('Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers');\n        }\n\n        if ('pointOneX' in x && 'pointOneY' in x && 'pointOneZ' in x && 'pointTwoX' in y && 'pointTwoY' in y && 'pointTwoZ' in y) {\n          return _euclideanDistance([x.pointOneX, x.pointOneY, x.pointOneZ], [y.pointTwoX, y.pointTwoY, y.pointTwoZ]);\n        } else {\n          throw new TypeError('Key names do not match');\n        }\n      } else {\n        throw new TypeError('Invalid Arguments: Try again');\n      }\n    },\n    Array: function Array(arr) {\n      if (!_pairwise(arr)) {\n        throw new TypeError('Incorrect array format entered for pairwise distance calculation');\n      }\n\n      return _distancePairwise(arr);\n    }\n  });\n\n  function _isNumber(a) {\n    // distance supports numbers and bignumbers\n    return typeof a === 'number' || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(a);\n  }\n\n  function _2d(a) {\n    // checks if the number of arguments are correct in count and are valid (should be numbers)\n    if (a.constructor !== Array) {\n      a = _objectToArray(a);\n    }\n\n    return _isNumber(a[0]) && _isNumber(a[1]);\n  }\n\n  function _3d(a) {\n    // checks if the number of arguments are correct in count and are valid (should be numbers)\n    if (a.constructor !== Array) {\n      a = _objectToArray(a);\n    }\n\n    return _isNumber(a[0]) && _isNumber(a[1]) && _isNumber(a[2]);\n  }\n\n  function _containsOnlyNumbers(a) {\n    // checks if the number of arguments are correct in count and are valid (should be numbers)\n    if (!Array.isArray(a)) {\n      a = _objectToArray(a);\n    }\n\n    return a.every(_isNumber);\n  }\n\n  function _parametricLine(a) {\n    if (a.constructor !== Array) {\n      a = _objectToArray(a);\n    }\n\n    return _isNumber(a[0]) && _isNumber(a[1]) && _isNumber(a[2]) && _isNumber(a[3]) && _isNumber(a[4]) && _isNumber(a[5]);\n  }\n\n  function _objectToArray(o) {\n    var keys = Object.keys(o);\n    var a = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      a.push(o[keys[i]]);\n    }\n\n    return a;\n  }\n\n  function _pairwise(a) {\n    // checks for valid arguments passed to _distancePairwise(Array)\n    if (a[0].length === 2 && _isNumber(a[0][0]) && _isNumber(a[0][1])) {\n      if (a.some(aI => aI.length !== 2 || !_isNumber(aI[0]) || !_isNumber(aI[1]))) {\n        return false;\n      }\n    } else if (a[0].length === 3 && _isNumber(a[0][0]) && _isNumber(a[0][1]) && _isNumber(a[0][2])) {\n      if (a.some(aI => aI.length !== 3 || !_isNumber(aI[0]) || !_isNumber(aI[1]) || !_isNumber(aI[2]))) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n\n    return true;\n  }\n\n  function _distancePointLine2D(x, y, a, b, c) {\n    var num = abs(addScalar(addScalar(multiplyScalar(a, x), multiplyScalar(b, y)), c));\n    var den = sqrt(addScalar(multiplyScalar(a, a), multiplyScalar(b, b)));\n    return divideScalar(num, den);\n  }\n\n  function _distancePointLine3D(x, y, z, x0, y0, z0, a, b, c) {\n    var num = [subtract(multiplyScalar(subtract(y0, y), c), multiplyScalar(subtract(z0, z), b)), subtract(multiplyScalar(subtract(z0, z), a), multiplyScalar(subtract(x0, x), c)), subtract(multiplyScalar(subtract(x0, x), b), multiplyScalar(subtract(y0, y), a))];\n    num = sqrt(addScalar(addScalar(multiplyScalar(num[0], num[0]), multiplyScalar(num[1], num[1])), multiplyScalar(num[2], num[2])));\n    var den = sqrt(addScalar(addScalar(multiplyScalar(a, a), multiplyScalar(b, b)), multiplyScalar(c, c)));\n    return divideScalar(num, den);\n  }\n\n  function _euclideanDistance(x, y) {\n    var vectorSize = x.length;\n    var result = 0;\n    var diff = 0;\n\n    for (var i = 0; i < vectorSize; i++) {\n      diff = subtract(x[i], y[i]);\n      result = addScalar(multiplyScalar(diff, diff), result);\n    }\n\n    return sqrt(result);\n  }\n\n  function _distancePairwise(a) {\n    var result = [];\n    var pointA = [];\n    var pointB = [];\n\n    for (var i = 0; i < a.length - 1; i++) {\n      for (var j = i + 1; j < a.length; j++) {\n        if (a[0].length === 2) {\n          pointA = [a[i][0], a[i][1]];\n          pointB = [a[j][0], a[j][1]];\n        } else if (a[0].length === 3) {\n          pointA = [a[i][0], a[i][1], a[i][2]];\n          pointB = [a[j][0], a[j][1], a[j][2]];\n        }\n\n        result.push(_euclideanDistance(pointA, pointB));\n      }\n    }\n\n    return result;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/geometry/distance.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/geometry/intersect.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/geometry/intersect.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIntersect\": () => (/* binding */ createIntersect)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'intersect';\nvar dependencies = ['typed', 'config', 'abs', 'add', 'addScalar', 'matrix', 'multiply', 'multiplyScalar', 'divideScalar', 'subtract', 'smaller', 'equalScalar', 'flatten'];\nvar createIntersect = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    abs,\n    add,\n    addScalar,\n    matrix,\n    multiply,\n    multiplyScalar,\n    divideScalar,\n    subtract,\n    smaller,\n    equalScalar,\n    flatten\n  } = _ref;\n  /**\n   * Calculates the point of intersection of two lines in two or three dimensions\n   * and of a line and a plane in three dimensions. The inputs are in the form of\n   * arrays or 1 dimensional matrices. The line intersection functions return null\n   * if the lines do not meet.\n   *\n   * Note: Fill the plane coefficients as `x + y + z = c` and not as `x + y + z + c = 0`.\n   *\n   * Syntax:\n   *\n   *    math.intersect(endPoint1Line1, endPoint2Line1, endPoint1Line2, endPoint2Line2)\n   *    math.intersect(endPoint1, endPoint2, planeCoefficients)\n   *\n   * Examples:\n   *\n   *    math.intersect([0, 0], [10, 10], [10, 0], [0, 10])              // Returns [5, 5]\n   *    math.intersect([0, 0, 0], [10, 10, 0], [10, 0, 0], [0, 10, 0])  // Returns [5, 5, 0]\n   *    math.intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])            // Returns [7, -4, 3]\n   *\n   * @param  {Array | Matrix} w   Co-ordinates of first end-point of first line\n   * @param  {Array | Matrix} x   Co-ordinates of second end-point of first line\n   * @param  {Array | Matrix} y   Co-ordinates of first end-point of second line\n   *                              OR Co-efficients of the plane's equation\n   * @param  {Array | Matrix} z   Co-ordinates of second end-point of second line\n   *                              OR undefined if the calculation is for line and plane\n   * @return {Array}              Returns the point of intersection of lines/lines-planes\n   */\n\n  return typed('intersect', {\n    'Array, Array, Array': _AAA,\n    'Array, Array, Array, Array': _AAAA,\n    'Matrix, Matrix, Matrix': function MatrixMatrixMatrix(x, y, plane) {\n      var arr = _AAA(x.valueOf(), y.valueOf(), plane.valueOf());\n\n      return arr === null ? null : matrix(arr);\n    },\n    'Matrix, Matrix, Matrix, Matrix': function MatrixMatrixMatrixMatrix(w, x, y, z) {\n      // TODO: output matrix type should match input matrix type\n      var arr = _AAAA(w.valueOf(), x.valueOf(), y.valueOf(), z.valueOf());\n\n      return arr === null ? null : matrix(arr);\n    }\n  });\n\n  function _AAA(x, y, plane) {\n    x = _coerceArr(x);\n    y = _coerceArr(y);\n    plane = _coerceArr(plane);\n\n    if (!_3d(x)) {\n      throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\n    }\n\n    if (!_3d(y)) {\n      throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\n    }\n\n    if (!_4d(plane)) {\n      throw new TypeError('Array with 4 numbers expected as third argument');\n    }\n\n    return _intersectLinePlane(x[0], x[1], x[2], y[0], y[1], y[2], plane[0], plane[1], plane[2], plane[3]);\n  }\n\n  function _AAAA(w, x, y, z) {\n    w = _coerceArr(w);\n    x = _coerceArr(x);\n    y = _coerceArr(y);\n    z = _coerceArr(z);\n\n    if (w.length === 2) {\n      if (!_2d(w)) {\n        throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\n      }\n\n      if (!_2d(x)) {\n        throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');\n      }\n\n      if (!_2d(y)) {\n        throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');\n      }\n\n      if (!_2d(z)) {\n        throw new TypeError('Array with 2 numbers or BigNumbers expected for fourth argument');\n      }\n\n      return _intersect2d(w, x, y, z);\n    } else if (w.length === 3) {\n      if (!_3d(w)) {\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\n      }\n\n      if (!_3d(x)) {\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\n      }\n\n      if (!_3d(y)) {\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for third argument');\n      }\n\n      if (!_3d(z)) {\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for fourth argument');\n      }\n\n      return _intersect3d(w[0], w[1], w[2], x[0], x[1], x[2], y[0], y[1], y[2], z[0], z[1], z[2]);\n    } else {\n      throw new TypeError('Arrays with two or thee dimensional points expected');\n    }\n  }\n  /** Coerce row and column 2-dim arrays to 1-dim array */\n\n\n  function _coerceArr(arr) {\n    // row matrix\n    if (arr.length === 1) return arr[0]; // column matrix\n\n    if (arr.length > 1 && Array.isArray(arr[0])) {\n      if (arr.every(el => Array.isArray(el) && el.length === 1)) return flatten(arr);\n    }\n\n    return arr;\n  }\n\n  function _isNumeric(a) {\n    // intersect supports numbers and bignumbers\n    return typeof a === 'number' || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(a);\n  }\n\n  function _2d(x) {\n    return x.length === 2 && _isNumeric(x[0]) && _isNumeric(x[1]);\n  }\n\n  function _3d(x) {\n    return x.length === 3 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]);\n  }\n\n  function _4d(x) {\n    return x.length === 4 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]) && _isNumeric(x[3]);\n  }\n\n  function _intersect2d(p1a, p1b, p2a, p2b) {\n    var o1 = p1a;\n    var o2 = p2a;\n    var d1 = subtract(o1, p1b);\n    var d2 = subtract(o2, p2b);\n    var det = subtract(multiplyScalar(d1[0], d2[1]), multiplyScalar(d2[0], d1[1]));\n\n    if (smaller(abs(det), config.epsilon)) {\n      return null;\n    }\n\n    var d20o11 = multiplyScalar(d2[0], o1[1]);\n    var d21o10 = multiplyScalar(d2[1], o1[0]);\n    var d20o21 = multiplyScalar(d2[0], o2[1]);\n    var d21o20 = multiplyScalar(d2[1], o2[0]);\n    var t = divideScalar(addScalar(subtract(subtract(d20o11, d21o10), d20o21), d21o20), det);\n    return add(multiply(d1, t), o1);\n  }\n\n  function _intersect3dHelper(a, b, c, d, e, f, g, h, i, j, k, l) {\n    // (a - b)*(c - d) + (e - f)*(g - h) + (i - j)*(k - l)\n    var add1 = multiplyScalar(subtract(a, b), subtract(c, d));\n    var add2 = multiplyScalar(subtract(e, f), subtract(g, h));\n    var add3 = multiplyScalar(subtract(i, j), subtract(k, l));\n    return addScalar(addScalar(add1, add2), add3);\n  }\n\n  function _intersect3d(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4) {\n    var d1343 = _intersect3dHelper(x1, x3, x4, x3, y1, y3, y4, y3, z1, z3, z4, z3);\n\n    var d4321 = _intersect3dHelper(x4, x3, x2, x1, y4, y3, y2, y1, z4, z3, z2, z1);\n\n    var d1321 = _intersect3dHelper(x1, x3, x2, x1, y1, y3, y2, y1, z1, z3, z2, z1);\n\n    var d4343 = _intersect3dHelper(x4, x3, x4, x3, y4, y3, y4, y3, z4, z3, z4, z3);\n\n    var d2121 = _intersect3dHelper(x2, x1, x2, x1, y2, y1, y2, y1, z2, z1, z2, z1);\n\n    var ta = divideScalar(subtract(multiplyScalar(d1343, d4321), multiplyScalar(d1321, d4343)), subtract(multiplyScalar(d2121, d4343), multiplyScalar(d4321, d4321)));\n    var tb = divideScalar(addScalar(d1343, multiplyScalar(ta, d4321)), d4343);\n    var pax = addScalar(x1, multiplyScalar(ta, subtract(x2, x1)));\n    var pay = addScalar(y1, multiplyScalar(ta, subtract(y2, y1)));\n    var paz = addScalar(z1, multiplyScalar(ta, subtract(z2, z1)));\n    var pbx = addScalar(x3, multiplyScalar(tb, subtract(x4, x3)));\n    var pby = addScalar(y3, multiplyScalar(tb, subtract(y4, y3)));\n    var pbz = addScalar(z3, multiplyScalar(tb, subtract(z4, z3)));\n\n    if (equalScalar(pax, pbx) && equalScalar(pay, pby) && equalScalar(paz, pbz)) {\n      return [pax, pay, paz];\n    } else {\n      return null;\n    }\n  }\n\n  function _intersectLinePlane(x1, y1, z1, x2, y2, z2, x, y, z, c) {\n    var x1x = multiplyScalar(x1, x);\n    var x2x = multiplyScalar(x2, x);\n    var y1y = multiplyScalar(y1, y);\n    var y2y = multiplyScalar(y2, y);\n    var z1z = multiplyScalar(z1, z);\n    var z2z = multiplyScalar(z2, z);\n    var numerator = subtract(subtract(subtract(c, x1x), y1y), z1z);\n    var denominator = subtract(subtract(subtract(addScalar(addScalar(x2x, y2y), z2z), x1x), y1y), z1z);\n    var t = divideScalar(numerator, denominator);\n    var px = addScalar(x1, multiplyScalar(t, subtract(x2, x1)));\n    var py = addScalar(y1, multiplyScalar(t, subtract(y2, y1)));\n    var pz = addScalar(z1, multiplyScalar(t, subtract(z2, z1)));\n    return [px, py, pz]; // TODO: Add cases when line is parallel to the plane:\n    //       (a) no intersection,\n    //       (b) line contained in plane\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/geometry/intersect.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/logical/and.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/logical/and.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAnd\": () => (/* binding */ createAnd)\n/* harmony export */ });\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm06_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm06.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm06.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/logical.js\");\n\n\n\n\n\n\n\nvar name = 'and';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'not'];\nvar createAnd = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    zeros,\n    not\n  } = _ref;\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm06 = (0,_type_matrix_utils_algorithm06_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm06)({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.and(x, y)\n   *\n   * Examples:\n   *\n   *    math.and(2, 4)   // returns true\n   *\n   *    a = [2, 0, 0]\n   *    b = [3, 7, 0]\n   *    c = 0\n   *\n   *    math.and(a, b)   // returns [true, false, false]\n   *    math.and(a, c)   // returns [false, false, false]\n   *\n   * See also:\n   *\n   *    not, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when both inputs are defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.andNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm06(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      // check scalar\n      if (not(y)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm11(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      // check scalar\n      if (not(x)) {\n        // return zero matrix\n        return zeros(x.size(), x.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/logical/and.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/logical/not.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/logical/not.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNot\": () => (/* binding */ createNot)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/logical.js\");\n\n\n\nvar name = 'not';\nvar dependencies = ['typed'];\nvar createNot = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Logical `not`. Flips boolean value of a given parameter.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.not(x)\n   *\n   * Examples:\n   *\n   *    math.not(2)      // returns false\n   *    math.not(0)      // returns true\n   *    math.not(true)   // returns false\n   *\n   *    a = [2, -7, 0]\n   *    math.not(a)      // returns [false, false, true]\n   *\n   * See also:\n   *\n   *    and, or, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when input is a zero or empty value.\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.notNumber,\n    Complex: function Complex(x) {\n      return x.re === 0 && x.im === 0;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isZero() || x.isNaN();\n    },\n    Unit: function Unit(x) {\n      return x.value !== null ? this(x.value) : true;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/logical/not.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/logical/or.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/logical/or.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createOr\": () => (/* binding */ createOr)\n/* harmony export */ });\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm05_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm05.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm05.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/logical.js\");\n\n\n\n\n\n\n\nvar name = 'or';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nvar createOr = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm05 = (0,_type_matrix_utils_algorithm05_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm05)({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Logical `or`. Test if at least one value is defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.or(x, y)\n   *\n   * Examples:\n   *\n   *    math.or(2, 4)   // returns true\n   *\n   *    a = [2, 5, 0]\n   *    b = [0, 22, 0]\n   *    c = 0\n   *\n   *    math.or(a, b)   // returns [true, true, false]\n   *    math.or(b, c)   // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    and, not, xor\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when one of the inputs is defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.orNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.re !== 0 || x.im !== 0 || y.re !== 0 || y.im !== 0;\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return !x.isZero() && !x.isNaN() || !y.isZero() && !y.isNaN();\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm05(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/logical/or.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/logical/xor.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/logical/xor.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createXor\": () => (/* binding */ createXor)\n/* harmony export */ });\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/logical.js\");\n\n\n\n\n\n\n\nvar name = 'xor';\nvar dependencies = ['typed', 'matrix', 'DenseMatrix'];\nvar createXor = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Logical `xor`. Test whether one and only one value is defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.xor(x, y)\n   *\n   * Examples:\n   *\n   *    math.xor(2, 4)   // returns false\n   *\n   *    a = [2, 0, 0]\n   *    b = [2, 7, 0]\n   *    c = 0\n   *\n   *    math.xor(a, b)   // returns [false, true, false]\n   *    math.xor(a, c)   // returns [true, false, false]\n   *\n   * See also:\n   *\n   *    and, not, or\n   *\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} x First value to check\n   * @param  {number | BigNumber | Complex | Unit | Array | Matrix} y Second value to check\n   * @return {boolean | Array | Matrix}\n   *            Returns true when one and only one input is defined with a nonzero/nonempty value.\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_index_js__WEBPACK_IMPORTED_MODULE_6__.xorNumber,\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (x.re !== 0 || x.im !== 0) !== (y.re !== 0 || y.im !== 0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return (!x.isZero() && !x.isNaN()) !== (!y.isZero() && !y.isNaN());\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      return this(x.value || 0, y.value || 0);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/logical/xor.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/apply.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/apply.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createApply\": () => (/* binding */ createApply)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _error_IndexError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/IndexError.js */ \"./node_modules/mathjs/lib/esm/error/IndexError.js\");\n\n\n\n\nvar name = 'apply';\nvar dependencies = ['typed', 'isInteger'];\nvar createApply = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    isInteger\n  } = _ref;\n  /**\n   * Apply a function that maps an array to a scalar\n   * along a given axis of a matrix or array.\n   * Returns a new matrix or array with one less dimension than the input.\n   *\n   * Syntax:\n   *\n   *     math.apply(A, dim, callback)\n   *\n   * Where:\n   *\n   * - `dim: number` is a zero-based dimension over which to concatenate the matrices.\n   *\n   * Examples:\n   *\n   *    const A = [[1, 2], [3, 4]]\n   *    const sum = math.sum\n   *\n   *    math.apply(A, 0, sum)             // returns [4, 6]\n   *    math.apply(A, 1, sum)             // returns [3, 7]\n   *\n   * See also:\n   *\n   *    map, filter, forEach\n   *\n   * @param {Array | Matrix} array   The input Matrix\n   * @param {number} dim             The dimension along which the callback is applied\n   * @param {Function} callback      The callback function that is applied. This Function\n   *                                 should take an array or 1-d matrix as an input and\n   *                                 return a number.\n   * @return {Array | Matrix} res    The residual matrix with the function applied over some dimension.\n   */\n\n  return typed(name, {\n    'Array | Matrix, number | BigNumber, function': function ArrayMatrixNumberBigNumberFunction(mat, dim, callback) {\n      if (!isInteger(dim)) {\n        throw new TypeError('Integer number expected for dimension');\n      }\n\n      var size = Array.isArray(mat) ? (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(mat) : mat.size();\n\n      if (dim < 0 || dim >= size.length) {\n        throw new _error_IndexError_js__WEBPACK_IMPORTED_MODULE_2__.IndexError(dim, size.length);\n      }\n\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isMatrix)(mat)) {\n        return mat.create(_apply(mat.valueOf(), dim, callback));\n      } else {\n        return _apply(mat, dim, callback);\n      }\n    }\n  });\n});\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\n\nfunction _apply(mat, dim, callback) {\n  var i, ret, tran;\n\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      return callback(mat);\n    } else {\n      tran = _switch(mat);\n      ret = [];\n\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _apply(tran[i], dim - 1, callback);\n      }\n\n      return ret;\n    }\n  } else {\n    ret = [];\n\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _apply(mat[i], dim - 1, callback);\n    }\n\n    return ret;\n  }\n}\n/**\n * Transpose a matrix\n * @param {Array} mat\n * @returns {Array} ret\n * @private\n */\n\n\nfunction _switch(mat) {\n  var I = mat.length;\n  var J = mat[0].length;\n  var i, j;\n  var ret = [];\n\n  for (j = 0; j < J; j++) {\n    var tmp = [];\n\n    for (i = 0; i < I; i++) {\n      tmp.push(mat[i][j]);\n    }\n\n    ret.push(tmp);\n  }\n\n  return ret;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/apply.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/column.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/column.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createColumn\": () => (/* binding */ createColumn)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n\n\n\nvar name = 'column';\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\nvar createColumn = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Index,\n    matrix,\n    range\n  } = _ref;\n  /**\n   * Return a column from a Matrix.\n   *\n   * Syntax:\n   *\n   *     math.column(value, index)\n   *\n   * Example:\n   *\n   *     // get a column\n   *     const d = [[1, 2], [3, 4]]\n   *     math.column(d, 1) // returns [[2], [4]]\n   *\n   * See also:\n   *\n   *     row\n   *\n   * @param {Array | Matrix } value   An array or matrix\n   * @param {number} column           The index of the column\n   * @return {Array | Matrix}         The retrieved column\n   */\n\n  return typed(name, {\n    'Matrix, number': _column,\n    'Array, number': function ArrayNumber(value, column) {\n      return _column(matrix((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(value)), column).valueOf();\n    }\n  });\n  /**\n   * Retrieve a column of a matrix\n   * @param {Matrix } value  A matrix\n   * @param {number} column  The index of the column\n   * @return {Matrix}        The retrieved column\n   */\n\n  function _column(value, column) {\n    // check dimensions\n    if (value.size().length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_2__.validateIndex)(column, value.size()[1]);\n    var rowRange = range(0, value.size()[0]);\n    var index = new Index(rowRange, column);\n    return value.subset(index);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/column.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/concat.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/concat.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createConcat\": () => (/* binding */ createConcat)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _error_IndexError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../error/IndexError.js */ \"./node_modules/mathjs/lib/esm/error/IndexError.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\n\n\nvar name = 'concat';\nvar dependencies = ['typed', 'matrix', 'isInteger'];\nvar createConcat = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    isInteger\n  } = _ref;\n  /**\n   * Concatenate two or more matrices.\n   *\n   * Syntax:\n   *\n   *     math.concat(A, B, C, ...)\n   *     math.concat(A, B, C, ..., dim)\n   *\n   * Where:\n   *\n   * - `dim: number` is a zero-based dimension over which to concatenate the matrices.\n   *   By default the last dimension of the matrices.\n   *\n   * Examples:\n   *\n   *    const A = [[1, 2], [5, 6]]\n   *    const B = [[3, 4], [7, 8]]\n   *\n   *    math.concat(A, B)                  // returns [[1, 2, 3, 4], [5, 6, 7, 8]]\n   *    math.concat(A, B, 0)               // returns [[1, 2], [5, 6], [3, 4], [7, 8]]\n   *    math.concat('hello', ' ', 'world') // returns 'hello world'\n   *\n   * See also:\n   *\n   *    size, squeeze, subset, transpose\n   *\n   * @param {... Array | Matrix} args     Two or more matrices\n   * @return {Array | Matrix} Concatenated matrix\n   */\n\n  return typed(name, {\n    // TODO: change signature to '...Array | Matrix, dim?' when supported\n    '...Array | Matrix | number | BigNumber': function ArrayMatrixNumberBigNumber(args) {\n      var i;\n      var len = args.length;\n      var dim = -1; // zero-based dimension\n\n      var prevDim;\n      var asMatrix = false;\n      var matrices = []; // contains multi dimensional arrays\n\n      for (i = 0; i < len; i++) {\n        var arg = args[i]; // test whether we need to return a Matrix (if not we return an Array)\n\n        if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(arg)) {\n          asMatrix = true;\n        }\n\n        if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(arg) || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(arg)) {\n          if (i !== len - 1) {\n            throw new Error('Dimension must be specified as last argument');\n          } // last argument contains the dimension on which to concatenate\n\n\n          prevDim = dim;\n          dim = arg.valueOf(); // change BigNumber to number\n\n          if (!isInteger(dim)) {\n            throw new TypeError('Integer number expected for dimension');\n          }\n\n          if (dim < 0 || i > 0 && dim > prevDim) {\n            // TODO: would be more clear when throwing a DimensionError here\n            throw new _error_IndexError_js__WEBPACK_IMPORTED_MODULE_2__.IndexError(dim, prevDim + 1);\n          }\n        } else {\n          // this is a matrix or array\n          var m = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_3__.clone)(arg).valueOf();\n          var size = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_4__.arraySize)(m);\n          matrices[i] = m;\n          prevDim = dim;\n          dim = size.length - 1; // verify whether each of the matrices has the same number of dimensions\n\n          if (i > 0 && dim !== prevDim) {\n            throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_5__.DimensionError(prevDim + 1, dim + 1);\n          }\n        }\n      }\n\n      if (matrices.length === 0) {\n        throw new SyntaxError('At least one matrix expected');\n      }\n\n      var res = matrices.shift();\n\n      while (matrices.length) {\n        res = _concat(res, matrices.shift(), dim, 0);\n      }\n\n      return asMatrix ? matrix(res) : res;\n    },\n    '...string': function string(args) {\n      return args.join('');\n    }\n  });\n});\n/**\n * Recursively concatenate two matrices.\n * The contents of the matrices is not cloned.\n * @param {Array} a             Multi dimensional array\n * @param {Array} b             Multi dimensional array\n * @param {number} concatDim    The dimension on which to concatenate (zero-based)\n * @param {number} dim          The current dim (zero-based)\n * @return {Array} c            The concatenated matrix\n * @private\n */\n\nfunction _concat(a, b, concatDim, dim) {\n  if (dim < concatDim) {\n    // recurse into next dimension\n    if (a.length !== b.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_5__.DimensionError(a.length, b.length);\n    }\n\n    var c = [];\n\n    for (var i = 0; i < a.length; i++) {\n      c[i] = _concat(a[i], b[i], concatDim, dim + 1);\n    }\n\n    return c;\n  } else {\n    // concatenate this dimension\n    return a.concat(b);\n  }\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/concat.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/count.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/count.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCount\": () => (/* binding */ createCount)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'count';\nvar dependencies = ['typed', 'size', 'prod'];\nvar createCount = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    prod\n  } = _ref;\n  /**\n   * Count the number of elements of a matrix, array or string.\n   *\n   * Syntax:\n   *\n   *     math.count(x)\n   *\n   * Examples:\n   *\n   *     math.count('hello world')        // returns 11\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.count(A)                    // returns 6\n   *     math.count(math.range(1,6))      // returns 5\n   *\n   * See also:\n   *\n   *     size\n   *\n   * @param {string | Array | Matrix} x  A matrix or string\n   * @return {number} An integer with the elements in `x`.\n   */\n\n  return typed(name, {\n    string: function string(x) {\n      return x.length;\n    },\n    'Matrix | Array': function MatrixArray(x) {\n      return prod(size(x));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/count.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/cross.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/cross.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCross\": () => (/* binding */ createCross)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'cross';\nvar dependencies = ['typed', 'matrix', 'subtract', 'multiply'];\nvar createCross = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    subtract,\n    multiply\n  } = _ref;\n  /**\n   * Calculate the cross product for two vectors in three dimensional space.\n   * The cross product of `A = [a1, a2, a3]` and `B = [b1, b2, b3]` is defined\n   * as:\n   *\n   *    cross(A, B) = [\n   *      a2 * b3 - a3 * b2,\n   *      a3 * b1 - a1 * b3,\n   *      a1 * b2 - a2 * b1\n   *    ]\n   *\n   * If one of the input vectors has a dimension greater than 1, the output\n   * vector will be a 1x3 (2-dimensional) matrix.\n   *\n   * Syntax:\n   *\n   *    math.cross(x, y)\n   *\n   * Examples:\n   *\n   *    math.cross([1, 1, 0],   [0, 1, 1])       // Returns [1, -1, 1]\n   *    math.cross([3, -3, 1],  [4, 9, 2])       // Returns [-15, -2, 39]\n   *    math.cross([2, 3, 4],   [5, 6, 7])       // Returns [-3, 6, -3]\n   *    math.cross([[1, 2, 3]], [[4], [5], [6]]) // Returns [[-3, 6, -3]]\n   *\n   * See also:\n   *\n   *    dot, multiply\n   *\n   * @param  {Array | Matrix} x   First vector\n   * @param  {Array | Matrix} y   Second vector\n   * @return {Array | Matrix}     Returns the cross product of `x` and `y`\n   */\n\n  return typed(name, {\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      return matrix(_cross(x.toArray(), y.toArray()));\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return matrix(_cross(x.toArray(), y));\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return matrix(_cross(x, y.toArray()));\n    },\n    'Array, Array': _cross\n  });\n  /**\n   * Calculate the cross product for two arrays\n   * @param {Array} x  First vector\n   * @param {Array} y  Second vector\n   * @returns {Array} Returns the cross product of x and y\n   * @private\n   */\n\n  function _cross(x, y) {\n    var highestDimension = Math.max((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(x).length, (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(y).length);\n    x = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.squeeze)(x);\n    y = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.squeeze)(y);\n    var xSize = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(x);\n    var ySize = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(y);\n\n    if (xSize.length !== 1 || ySize.length !== 1 || xSize[0] !== 3 || ySize[0] !== 3) {\n      throw new RangeError('Vectors with length 3 expected ' + '(Size A = [' + xSize.join(', ') + '], B = [' + ySize.join(', ') + '])');\n    }\n\n    var product = [subtract(multiply(x[1], y[2]), multiply(x[2], y[1])), subtract(multiply(x[2], y[0]), multiply(x[0], y[2])), subtract(multiply(x[0], y[1]), multiply(x[1], y[0]))];\n\n    if (highestDimension > 1) {\n      return [product];\n    } else {\n      return product;\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/cross.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/ctranspose.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/ctranspose.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCtranspose\": () => (/* binding */ createCtranspose)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'ctranspose';\nvar dependencies = ['typed', 'transpose', 'conj'];\nvar createCtranspose = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    transpose,\n    conj\n  } = _ref;\n  /**\n   * Transpose and complex conjugate a matrix. All values of the matrix are\n   * reflected over its main diagonal and then the complex conjugate is\n   * taken. This is equivalent to complex conjugation for scalars and\n   * vectors.\n   *\n   * Syntax:\n   *\n   *     math.ctranspose(x)\n   *\n   * Examples:\n   *\n   *     const A = [[1, 2, 3], [4, 5, math.complex(6,7)]]\n   *     math.ctranspose(A)               // returns [[1, 4], [2, 5], [3, {re:6,im:7}]]\n   *\n   * See also:\n   *\n   *     transpose, diag, inv, subset, squeeze\n   *\n   * @param {Array | Matrix} x  Matrix to be ctransposed\n   * @return {Array | Matrix}   The ctransposed matrix\n   */\n\n  return typed(name, {\n    any: function any(x) {\n      return conj(transpose(x));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/ctranspose.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/det.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/det.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDet\": () => (/* binding */ createDet)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'det';\nvar dependencies = ['typed', 'matrix', 'subtract', 'multiply', 'unaryMinus', 'lup'];\nvar createDet = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    subtract,\n    multiply,\n    unaryMinus,\n    lup\n  } = _ref;\n  /**\n   * Calculate the determinant of a matrix.\n   *\n   * Syntax:\n   *\n   *    math.det(x)\n   *\n   * Examples:\n   *\n   *    math.det([[1, 2], [3, 4]]) // returns -2\n   *\n   *    const A = [\n   *      [-2, 2, 3],\n   *      [-1, 1, 3],\n   *      [2, 0, -1]\n   *    ]\n   *    math.det(A) // returns 6\n   *\n   * See also:\n   *\n   *    inv\n   *\n   * @param {Array | Matrix} x  A matrix\n   * @return {number} The determinant of `x`\n   */\n\n  return typed(name, {\n    any: function any(x) {\n      return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(x);\n    },\n    'Array | Matrix': function det(x) {\n      var size;\n\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMatrix)(x)) {\n        size = x.size();\n      } else if (Array.isArray(x)) {\n        x = matrix(x);\n        size = x.size();\n      } else {\n        // a scalar\n        size = [];\n      }\n\n      switch (size.length) {\n        case 0:\n          // scalar\n          return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(x);\n\n        case 1:\n          // vector\n          if (size[0] === 1) {\n            return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(x.valueOf()[0]);\n          } else {\n            throw new RangeError('Matrix must be square ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n          }\n\n        case 2:\n          {\n            // two dimensional array\n            var rows = size[0];\n            var cols = size[1];\n\n            if (rows === cols) {\n              return _det(x.clone().valueOf(), rows, cols);\n            } else {\n              throw new RangeError('Matrix must be square ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n            }\n          }\n\n        default:\n          // multi dimensional array\n          throw new RangeError('Matrix must be two dimensional ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n      }\n    }\n  });\n  /**\n   * Calculate the determinant of a matrix\n   * @param {Array[]} matrix  A square, two dimensional matrix\n   * @param {number} rows     Number of rows of the matrix (zero-based)\n   * @param {number} cols     Number of columns of the matrix (zero-based)\n   * @returns {number} det\n   * @private\n   */\n\n  function _det(matrix, rows, cols) {\n    if (rows === 1) {\n      // this is a 1 x 1 matrix\n      return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(matrix[0][0]);\n    } else if (rows === 2) {\n      // this is a 2 x 2 matrix\n      // the determinant of [a11,a12;a21,a22] is det = a11*a22-a21*a12\n      return subtract(multiply(matrix[0][0], matrix[1][1]), multiply(matrix[1][0], matrix[0][1]));\n    } else {\n      // Compute the LU decomposition\n      var decomp = lup(matrix); // The determinant is the product of the diagonal entries of U (and those of L, but they are all 1)\n\n      var det = decomp.U[0][0];\n\n      for (var _i = 1; _i < rows; _i++) {\n        det = multiply(det, decomp.U[_i][_i]);\n      } // The determinant will be multiplied by 1 or -1 depending on the parity of the permutation matrix.\n      // This can be determined by counting the cycles. This is roughly a linear time algorithm.\n\n\n      var evenCycles = 0;\n      var i = 0;\n      var visited = [];\n\n      while (true) {\n        while (visited[i]) {\n          i++;\n        }\n\n        if (i >= rows) break;\n        var j = i;\n        var cycleLen = 0;\n\n        while (!visited[decomp.p[j]]) {\n          visited[decomp.p[j]] = true;\n          j = decomp.p[j];\n          cycleLen++;\n        }\n\n        if (cycleLen % 2 === 0) {\n          evenCycles++;\n        }\n      }\n\n      return evenCycles % 2 === 0 ? det : unaryMinus(det);\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/det.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/diag.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/diag.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDiag\": () => (/* binding */ createDiag)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'diag';\nvar dependencies = ['typed', 'matrix', 'DenseMatrix', 'SparseMatrix'];\nvar createDiag = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    DenseMatrix,\n    SparseMatrix\n  } = _ref;\n  /**\n   * Create a diagonal matrix or retrieve the diagonal of a matrix\n   *\n   * When `x` is a vector, a matrix with vector `x` on the diagonal will be returned.\n   * When `x` is a two dimensional matrix, the matrixes `k`th diagonal will be returned as vector.\n   * When k is positive, the values are placed on the super diagonal.\n   * When k is negative, the values are placed on the sub diagonal.\n   *\n   * Syntax:\n   *\n   *     math.diag(X)\n   *     math.diag(X, format)\n   *     math.diag(X, k)\n   *     math.diag(X, k, format)\n   *\n   * Examples:\n   *\n   *     // create a diagonal matrix\n   *     math.diag([1, 2, 3])      // returns [[1, 0, 0], [0, 2, 0], [0, 0, 3]]\n   *     math.diag([1, 2, 3], 1)   // returns [[0, 1, 0, 0], [0, 0, 2, 0], [0, 0, 0, 3]]\n   *     math.diag([1, 2, 3], -1)  // returns [[0, 0, 0], [1, 0, 0], [0, 2, 0], [0, 0, 3]]\n   *\n   *    // retrieve the diagonal from a matrix\n   *    const a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n   *    math.diag(a)   // returns [1, 5, 9]\n   *\n   * See also:\n   *\n   *     ones, zeros, identity\n   *\n   * @param {Matrix | Array} x          A two dimensional matrix or a vector\n   * @param {number | BigNumber} [k=0]  The diagonal where the vector will be filled\n   *                                    in or retrieved.\n   * @param {string} [format='dense']   The matrix storage format.\n   *\n   * @returns {Matrix | Array} Diagonal matrix from input vector, or diagonal from input matrix.\n   */\n\n  return typed(name, {\n    // FIXME: simplify this huge amount of signatures as soon as typed-function supports optional arguments\n    Array: function Array(x) {\n      return _diag(x, 0, (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(x), null);\n    },\n    'Array, number': function ArrayNumber(x, k) {\n      return _diag(x, k, (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(x), null);\n    },\n    'Array, BigNumber': function ArrayBigNumber(x, k) {\n      return _diag(x, k.toNumber(), (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(x), null);\n    },\n    'Array, string': function ArrayString(x, format) {\n      return _diag(x, 0, (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(x), format);\n    },\n    'Array, number, string': function ArrayNumberString(x, k, format) {\n      return _diag(x, k, (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(x), format);\n    },\n    'Array, BigNumber, string': function ArrayBigNumberString(x, k, format) {\n      return _diag(x, k.toNumber(), (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(x), format);\n    },\n    Matrix: function Matrix(x) {\n      return _diag(x, 0, x.size(), x.storage());\n    },\n    'Matrix, number': function MatrixNumber(x, k) {\n      return _diag(x, k, x.size(), x.storage());\n    },\n    'Matrix, BigNumber': function MatrixBigNumber(x, k) {\n      return _diag(x, k.toNumber(), x.size(), x.storage());\n    },\n    'Matrix, string': function MatrixString(x, format) {\n      return _diag(x, 0, x.size(), format);\n    },\n    'Matrix, number, string': function MatrixNumberString(x, k, format) {\n      return _diag(x, k, x.size(), format);\n    },\n    'Matrix, BigNumber, string': function MatrixBigNumberString(x, k, format) {\n      return _diag(x, k.toNumber(), x.size(), format);\n    }\n  });\n  /**\n   * Creeate diagonal matrix from a vector or vice versa\n   * @param {Array | Matrix} x\n   * @param {number} k\n   * @param {string} format Storage format for matrix. If null,\n   *                          an Array is returned\n   * @returns {Array | Matrix}\n   * @private\n   */\n\n  function _diag(x, k, size, format) {\n    if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.isInteger)(k)) {\n      throw new TypeError('Second parameter in function diag must be an integer');\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // check dimensions\n\n    switch (size.length) {\n      case 1:\n        return _createDiagonalMatrix(x, k, format, size[0], kSub, kSuper);\n\n      case 2:\n        return _getDiagonal(x, k, format, size, kSub, kSuper);\n    }\n\n    throw new RangeError('Matrix for function diag must be 2 dimensional');\n  }\n\n  function _createDiagonalMatrix(x, k, format, l, kSub, kSuper) {\n    // matrix size\n    var ms = [l + kSub, l + kSuper];\n\n    if (format && format !== 'sparse' && format !== 'dense') {\n      throw new TypeError(\"Unknown matrix type \".concat(format, \"\\\"\"));\n    } // create diagonal matrix\n\n\n    var m = format === 'sparse' ? SparseMatrix.diagonal(ms, x, k) : DenseMatrix.diagonal(ms, x, k); // check we need to return a matrix\n\n    return format !== null ? m : m.valueOf();\n  }\n\n  function _getDiagonal(x, k, format, s, kSub, kSuper) {\n    // check x is a Matrix\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isMatrix)(x)) {\n      // get diagonal matrix\n      var dm = x.diagonal(k); // check we need to return a matrix\n\n      if (format !== null) {\n        // check we need to change matrix format\n        if (format !== dm.storage()) {\n          return matrix(dm, format);\n        }\n\n        return dm;\n      }\n\n      return dm.valueOf();\n    } // vector size\n\n\n    var n = Math.min(s[0] - kSub, s[1] - kSuper); // diagonal values\n\n    var vector = []; // loop diagonal\n\n    for (var i = 0; i < n; i++) {\n      vector[i] = x[i + kSub][i + kSuper];\n    } // check we need to return a matrix\n\n\n    return format !== null ? matrix(vector) : vector;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/diag.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/diff.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/diff.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDiff\": () => (/* binding */ createDiff)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\n\nvar name = 'diff';\nvar dependencies = ['typed', 'matrix', 'subtract', 'number'];\nvar createDiff = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    subtract,\n    number\n  } = _ref;\n  /**\n   * Create a new matrix or array of the difference between elements of the given array\n   * The optional dim parameter lets you specify the dimension to evaluate the difference of\n   * If no dimension parameter is passed it is assumed as dimension 0\n   *\n   * Dimension is zero-based in javascript and one-based in the parser and can be a number or bignumber\n   * Arrays must be 'rectangular' meaning arrays like [1, 2]\n   * If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays\n   *\n   * Syntax:\n   *\n   *     math.diff(arr)\n   *     math.diff(arr, dim)\n   *\n   * Examples:\n   *\n   *     const arr = [1, 2, 4, 7, 0]\n   *     math.diff(arr) // returns [1, 2, 3, -7] (no dimension passed so 0 is assumed)\n   *     math.diff(math.matrix(arr)) // returns math.matrix([1, 2, 3, -7])\n   *\n   *     const arr = [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [9, 8, 7, 6, 4]]\n   *     math.diff(arr) // returns [[0, 0, 0, 0, 0], [8, 6, 4, 2, -1]]\n   *     math.diff(arr, 0) // returns [[0, 0, 0, 0, 0], [8, 6, 4, 2, -1]]\n   *     math.diff(arr, 1) // returns [[1, 1, 1, 1], [1, 1, 1, 1], [-1, -1, -1, -2]]\n   *     math.diff(arr, math.bignumber(1)) // returns [[1, 1, 1, 1], [1, 1, 1, 1], [-1, -1, -1, -2]]\n   *\n   *     math.diff(arr, 2) // throws RangeError as arr is 2 dimensional not 3\n   *     math.diff(arr, -1) // throws RangeError as negative dimensions are not allowed\n   *\n   *     // These will all produce the same result\n   *     math.diff([[1, 2], [3, 4]])\n   *     math.diff([math.matrix([1, 2]), math.matrix([3, 4])])\n   *     math.diff([[1, 2], math.matrix([3, 4])])\n   *     math.diff([math.matrix([1, 2]), [3, 4]])\n   *     // They do not produce the same result as  math.diff(math.matrix([[1, 2], [3, 4]])) as this returns a matrix\n   *\n   * See Also:\n   *\n   *      sum\n   *      subtract\n   *      partitionSelect\n   *\n   * @param {Array | Matrix} arr    An array or matrix\n   * @param {number} dim            Dimension\n   * @return {Array | Matrix}       Difference between array elements in given dimension\n   */\n\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(arr) {\n      // No dimension specified => assume dimension 0\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(arr)) {\n        return matrix(_diff(arr.toArray()));\n      } else {\n        return _diff(arr);\n      }\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(arr, dim) {\n      if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.isInteger)(dim)) throw new RangeError('Dimension must be a whole number');\n\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(arr)) {\n        return matrix(_recursive(arr.toArray(), dim));\n      } else {\n        return _recursive(arr, dim);\n      }\n    },\n    'Array | Matrix, BigNumber': function ArrayMatrixBigNumber(arr, dim) {\n      return this(arr, number(dim));\n    }\n  });\n  /**\n   * Recursively find the correct dimension in the array/matrix\n   * Then Apply _diff to that dimension\n   *\n   * @param {Array} arr      The array\n   * @param {number} dim     Dimension\n   * @return {Array}         resulting array\n   */\n\n  function _recursive(arr, dim) {\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(arr)) {\n      arr = arr.toArray(); // Makes sure arrays like [ matrix([0, 1]), matrix([1, 0]) ] are processed properly\n    }\n\n    if (!Array.isArray(arr)) {\n      throw RangeError('Array/Matrix does not have that many dimensions');\n    }\n\n    if (dim > 0) {\n      var result = [];\n      arr.forEach(element => {\n        result.push(_recursive(element, dim - 1));\n      });\n      return result;\n    } else if (dim === 0) {\n      return _diff(arr);\n    } else {\n      throw RangeError('Cannot have negative dimension');\n    }\n  }\n  /**\n   * Difference between elements in the array\n   *\n   * @param {Array} arr      An array\n   * @return {Array}         resulting array\n   */\n\n\n  function _diff(arr) {\n    var result = [];\n    var size = arr.length;\n\n    if (size < 2) {\n      return arr;\n    }\n\n    for (var i = 1; i < size; i++) {\n      result.push(_ElementDiff(arr[i - 1], arr[i]));\n    }\n\n    return result;\n  }\n  /**\n   * Difference between 2 objects\n   *\n   * @param {Object} obj1    First object\n   * @param {Object} obj2    Second object\n   * @return {Array}         resulting array\n   */\n\n\n  function _ElementDiff(obj1, obj2) {\n    // Convert matrices to arrays\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(obj1)) obj1 = obj1.toArray();\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(obj2)) obj2 = obj2.toArray();\n    var obj1IsArray = Array.isArray(obj1);\n    var obj2IsArray = Array.isArray(obj2);\n\n    if (obj1IsArray && obj2IsArray) {\n      return _ArrayDiff(obj1, obj2);\n    }\n\n    if (!obj1IsArray && !obj2IsArray) {\n      return subtract(obj2, obj1); // Difference is (second - first) NOT (first - second)\n    }\n\n    throw TypeError('Cannot calculate difference between 1 array and 1 non-array');\n  }\n  /**\n   * Difference of elements in 2 arrays\n   *\n   * @param {Array} arr1     Array 1\n   * @param {Array} arr2     Array 2\n   * @return {Array}         resulting array\n   */\n\n\n  function _ArrayDiff(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      throw RangeError('Not all sub-arrays have the same length');\n    }\n\n    var result = [];\n    var size = arr1.length;\n\n    for (var i = 0; i < size; i++) {\n      result.push(_ElementDiff(arr1[i], arr2[i]));\n    }\n\n    return result;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/diff.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/dot.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/dot.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDot\": () => (/* binding */ createDot)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\nvar name = 'dot';\nvar dependencies = ['typed', 'addScalar', 'multiplyScalar', 'conj', 'size'];\nvar createDot = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    addScalar,\n    multiplyScalar,\n    conj,\n    size\n  } = _ref;\n  /**\n   * Calculate the dot product of two vectors. The dot product of\n   * `A = [a1, a2, ..., an]` and `B = [b1, b2, ..., bn]` is defined as:\n   *\n   *    dot(A, B) = conj(a1) * b1 + conj(a2) * b2 + ... + conj(an) * bn\n   *\n   * Syntax:\n   *\n   *    math.dot(x, y)\n   *\n   * Examples:\n   *\n   *    math.dot([2, 4, 1], [2, 2, 3])       // returns number 15\n   *    math.multiply([2, 4, 1], [2, 2, 3])  // returns number 15\n   *\n   * See also:\n   *\n   *    multiply, cross\n   *\n   * @param  {Array | Matrix} x     First vector\n   * @param  {Array | Matrix} y     Second vector\n   * @return {number}               Returns the dot product of `x` and `y`\n   */\n\n  return typed(name, {\n    'Array | DenseMatrix, Array | DenseMatrix': _denseDot,\n    'SparseMatrix, SparseMatrix': _sparseDot\n  });\n\n  function _validateDim(x, y) {\n    var xSize = _size(x);\n\n    var ySize = _size(y);\n\n    var xLen, yLen;\n\n    if (xSize.length === 1) {\n      xLen = xSize[0];\n    } else if (xSize.length === 2 && xSize[1] === 1) {\n      xLen = xSize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + xSize.join(', ') + ')');\n    }\n\n    if (ySize.length === 1) {\n      yLen = ySize[0];\n    } else if (ySize.length === 2 && ySize[1] === 1) {\n      yLen = ySize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + ySize.join(', ') + ')');\n    }\n\n    if (xLen !== yLen) throw new RangeError('Vectors must have equal length (' + xLen + ' != ' + yLen + ')');\n    if (xLen === 0) throw new RangeError('Cannot calculate the dot product of empty vectors');\n    return xLen;\n  }\n\n  function _denseDot(a, b) {\n    var N = _validateDim(a, b);\n\n    var adata = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(a) ? a._data : a;\n    var adt = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(a) ? a._datatype : undefined;\n    var bdata = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(b) ? b._data : b;\n    var bdt = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(b) ? b._datatype : undefined; // are these 2-dimensional column vectors? (as opposed to 1-dimensional vectors)\n\n    var aIsColumn = _size(a).length === 2;\n    var bIsColumn = _size(b).length === 2;\n    var add = addScalar;\n    var mul = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      var dt = adt; // find signatures that matches (dt, dt)\n\n      add = typed.find(addScalar, [dt, dt]);\n      mul = typed.find(multiplyScalar, [dt, dt]);\n    } // both vectors 1-dimensional\n\n\n    if (!aIsColumn && !bIsColumn) {\n      var c = mul(conj(adata[0]), bdata[0]);\n\n      for (var i = 1; i < N; i++) {\n        c = add(c, mul(conj(adata[i]), bdata[i]));\n      }\n\n      return c;\n    } // a is 1-dim, b is column\n\n\n    if (!aIsColumn && bIsColumn) {\n      var _c = mul(conj(adata[0]), bdata[0][0]);\n\n      for (var _i = 1; _i < N; _i++) {\n        _c = add(_c, mul(conj(adata[_i]), bdata[_i][0]));\n      }\n\n      return _c;\n    } // a is column, b is 1-dim\n\n\n    if (aIsColumn && !bIsColumn) {\n      var _c2 = mul(conj(adata[0][0]), bdata[0]);\n\n      for (var _i2 = 1; _i2 < N; _i2++) {\n        _c2 = add(_c2, mul(conj(adata[_i2][0]), bdata[_i2]));\n      }\n\n      return _c2;\n    } // both vectors are column\n\n\n    if (aIsColumn && bIsColumn) {\n      var _c3 = mul(conj(adata[0][0]), bdata[0][0]);\n\n      for (var _i3 = 1; _i3 < N; _i3++) {\n        _c3 = add(_c3, mul(conj(adata[_i3][0]), bdata[_i3][0]));\n      }\n\n      return _c3;\n    }\n  }\n\n  function _sparseDot(x, y) {\n    _validateDim(x, y);\n\n    var xindex = x._index;\n    var xvalues = x._values;\n    var yindex = y._index;\n    var yvalues = y._values; // TODO optimize add & mul using datatype\n\n    var c = 0;\n    var add = addScalar;\n    var mul = multiplyScalar;\n    var i = 0;\n    var j = 0;\n\n    while (i < xindex.length && j < yindex.length) {\n      var I = xindex[i];\n      var J = yindex[j];\n\n      if (I < J) {\n        i++;\n        continue;\n      }\n\n      if (I > J) {\n        j++;\n        continue;\n      }\n\n      if (I === J) {\n        c = add(c, mul(xvalues[i], yvalues[j]));\n        i++;\n        j++;\n      }\n    }\n\n    return c;\n  } // TODO remove this once #1771 is fixed\n\n\n  function _size(x) {\n    return (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(x) ? x.size() : size(x);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/dot.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/eigs.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/eigs.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEigs\": () => (/* binding */ createEigs)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _eigs_complexEigs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./eigs/complexEigs.js */ \"./node_modules/mathjs/lib/esm/function/matrix/eigs/complexEigs.js\");\n/* harmony import */ var _eigs_realSymetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./eigs/realSymetric.js */ \"./node_modules/mathjs/lib/esm/function/matrix/eigs/realSymetric.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\n\n\n\nvar name = 'eigs'; // The absolute state of math.js's dependency system:\n\nvar dependencies = ['config', 'typed', 'matrix', 'addScalar', 'equal', 'subtract', 'abs', 'atan', 'cos', 'sin', 'multiplyScalar', 'divideScalar', 'inv', 'bignumber', 'multiply', 'add', 'larger', 'column', 'flatten', 'number', 'complex', 'sqrt', 'diag', 'qr', 'usolve', 'usolveAll', 'im', 're', 'smaller', 'matrixFromColumns', 'dot'];\nvar createEigs = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    config,\n    typed,\n    matrix,\n    addScalar,\n    subtract,\n    equal,\n    abs,\n    atan,\n    cos,\n    sin,\n    multiplyScalar,\n    divideScalar,\n    inv,\n    bignumber,\n    multiply,\n    add,\n    larger,\n    column,\n    flatten,\n    number,\n    complex,\n    sqrt,\n    diag,\n    qr,\n    usolve,\n    usolveAll,\n    im,\n    re,\n    smaller,\n    matrixFromColumns,\n    dot\n  } = _ref;\n  var doRealSymetric = (0,_eigs_realSymetric_js__WEBPACK_IMPORTED_MODULE_1__.createRealSymmetric)({\n    config,\n    addScalar,\n    subtract,\n    column,\n    flatten,\n    equal,\n    abs,\n    atan,\n    cos,\n    sin,\n    multiplyScalar,\n    inv,\n    bignumber,\n    complex,\n    multiply,\n    add\n  });\n  var doComplexEigs = (0,_eigs_complexEigs_js__WEBPACK_IMPORTED_MODULE_2__.createComplexEigs)({\n    config,\n    addScalar,\n    subtract,\n    multiply,\n    multiplyScalar,\n    flatten,\n    divideScalar,\n    sqrt,\n    abs,\n    bignumber,\n    diag,\n    qr,\n    inv,\n    usolve,\n    usolveAll,\n    equal,\n    complex,\n    larger,\n    smaller,\n    matrixFromColumns,\n    dot\n  });\n  /**\n   * Compute eigenvalues and eigenvectors of a matrix. The eigenvalues are sorted by their absolute value, ascending.\n   * An eigenvalue with multiplicity k will be listed k times. The eigenvectors are returned as columns of a matrix –\n   * the eigenvector that belongs to the j-th eigenvalue in the list (eg. `values[j]`) is the j-th column (eg. `column(vectors, j)`).\n   * If the algorithm fails to converge, it will throw an error – in that case, however, you may still find useful information\n   * in `err.values` and `err.vectors`.\n   *\n   * Syntax:\n   *\n   *     math.eigs(x, [prec])\n   *\n   * Examples:\n   *\n   *     const { eigs, multiply, column, transpose } = math\n   *     const H = [[5, 2.3], [2.3, 1]]\n   *     const ans = eigs(H) // returns {values: [E1,E2...sorted], vectors: [v1,v2.... corresponding vectors as columns]}\n   *     const E = ans.values\n   *     const U = ans.vectors\n   *     multiply(H, column(U, 0)) // returns multiply(E[0], column(U, 0))\n   *     const UTxHxU = multiply(transpose(U), H, U) // diagonalizes H\n   *     E[0] == UTxHxU[0][0]  // returns true\n   *\n   * See also:\n   *\n   *     inv\n   *\n   * @param {Array | Matrix} x  Matrix to be diagonalized\n   *\n   * @param {number | BigNumber} [prec] Precision, default value: 1e-15\n   * @return {{values: Array|Matrix, vectors: Array|Matrix}} Object containing an array of eigenvalues and a matrix with eigenvectors as columns.\n   *\n   */\n\n  return typed('eigs', {\n    Array: function Array(x) {\n      var mat = matrix(x);\n      return computeValuesAndVectors(mat);\n    },\n    'Array, number|BigNumber': function ArrayNumberBigNumber(x, prec) {\n      var mat = matrix(x);\n      return computeValuesAndVectors(mat, prec);\n    },\n    Matrix: function Matrix(mat) {\n      var {\n        values,\n        vectors\n      } = computeValuesAndVectors(mat);\n      return {\n        values: matrix(values),\n        vectors: matrix(vectors)\n      };\n    },\n    'Matrix, number|BigNumber': function MatrixNumberBigNumber(mat, prec) {\n      var {\n        values,\n        vectors\n      } = computeValuesAndVectors(mat, prec);\n      return {\n        values: matrix(values),\n        vectors: matrix(vectors)\n      };\n    }\n  });\n\n  function computeValuesAndVectors(mat, prec) {\n    if (prec === undefined) {\n      prec = config.epsilon;\n    }\n\n    var size = mat.size();\n\n    if (size.length !== 2 || size[0] !== size[1]) {\n      throw new RangeError('Matrix must be square (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n    }\n\n    var arr = mat.toArray();\n    var N = size[0];\n\n    if (isReal(arr, N, prec)) {\n      coerceReal(arr, N);\n\n      if (isSymmetric(arr, N, prec)) {\n        var _type = coerceTypes(mat, arr, N);\n\n        return doRealSymetric(arr, N, prec, _type);\n      }\n    }\n\n    var type = coerceTypes(mat, arr, N);\n    return doComplexEigs(arr, N, prec, type);\n  }\n  /** @return {boolean} */\n\n\n  function isSymmetric(arr, N, prec) {\n    for (var i = 0; i < N; i++) {\n      for (var j = i; j < N; j++) {\n        // TODO proper comparison of bignum and frac\n        if (larger(bignumber(abs(subtract(arr[i][j], arr[j][i]))), prec)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n  /** @return {boolean} */\n\n\n  function isReal(arr, N, prec) {\n    for (var i = 0; i < N; i++) {\n      for (var j = 0; j < N; j++) {\n        // TODO proper comparison of bignum and frac\n        if (larger(bignumber(abs(im(arr[i][j]))), prec)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function coerceReal(arr, N) {\n    for (var i = 0; i < N; i++) {\n      for (var j = 0; j < N; j++) {\n        arr[i][j] = re(arr[i][j]);\n      }\n    }\n  }\n  /** @return {'number' | 'BigNumber' | 'Complex'} */\n\n\n  function coerceTypes(mat, arr, N) {\n    /** @type {string} */\n    var type = mat.datatype();\n\n    if (type === 'number' || type === 'BigNumber' || type === 'Complex') {\n      return type;\n    }\n\n    var hasNumber = false;\n    var hasBig = false;\n    var hasComplex = false;\n\n    for (var i = 0; i < N; i++) {\n      for (var j = 0; j < N; j++) {\n        var el = arr[i][j];\n\n        if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_4__.isNumber)(el) || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_4__.isFraction)(el)) {\n          hasNumber = true;\n        } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_4__.isBigNumber)(el)) {\n          hasBig = true;\n        } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_4__.isComplex)(el)) {\n          hasComplex = true;\n        } else {\n          throw TypeError('Unsupported type in Matrix: ' + (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_4__.typeOf)(el));\n        }\n      }\n    }\n\n    if (hasBig && hasComplex) {\n      console.warn('Complex BigNumbers not supported, this operation will lose precission.');\n    }\n\n    if (hasComplex) {\n      for (var _i = 0; _i < N; _i++) {\n        for (var _j = 0; _j < N; _j++) {\n          arr[_i][_j] = complex(arr[_i][_j]);\n        }\n      }\n\n      return 'Complex';\n    }\n\n    if (hasBig) {\n      for (var _i2 = 0; _i2 < N; _i2++) {\n        for (var _j2 = 0; _j2 < N; _j2++) {\n          arr[_i2][_j2] = bignumber(arr[_i2][_j2]);\n        }\n      }\n\n      return 'BigNumber';\n    }\n\n    if (hasNumber) {\n      for (var _i3 = 0; _i3 < N; _i3++) {\n        for (var _j3 = 0; _j3 < N; _j3++) {\n          arr[_i3][_j3] = number(arr[_i3][_j3]);\n        }\n      }\n\n      return 'number';\n    } else {\n      throw TypeError('Matrix contains unsupported types only.');\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/eigs.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/eigs/complexEigs.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/eigs/complexEigs.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createComplexEigs\": () => (/* binding */ createComplexEigs)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n\nfunction createComplexEigs(_ref) {\n  var {\n    addScalar,\n    subtract,\n    flatten,\n    multiply,\n    multiplyScalar,\n    divideScalar,\n    sqrt,\n    abs,\n    bignumber,\n    diag,\n    inv,\n    qr,\n    usolve,\n    usolveAll,\n    equal,\n    complex,\n    larger,\n    smaller,\n    matrixFromColumns,\n    dot\n  } = _ref;\n  /**\n   * @param {number[][]} arr the matrix to find eigenvalues of\n   * @param {number} N size of the matrix\n   * @param {number|BigNumber} prec precision, anything lower will be considered zero\n   * @param {'number'|'BigNumber'|'Complex'} type\n   * @param {boolean} findVectors should we find eigenvectors?\n   *\n   * @returns {{ values: number[], vectors: number[][] }}\n   */\n\n  function complexEigs(arr, N, prec, type, findVectors) {\n    if (findVectors === undefined) {\n      findVectors = true;\n    } // TODO check if any row/col are zero except the diagonal\n    // make sure corresponding rows and columns have similar magnitude\n    // important because of numerical stability\n\n\n    var R = balance(arr, N, prec, type, findVectors); // R is the row transformation matrix\n    // A' = R A R⁻¹, A is the original matrix\n    // (if findVectors is false, R is undefined)\n    // TODO if magnitudes of elements vary over many orders,\n    // move greatest elements to the top left corner\n    // using similarity transformations, reduce the matrix\n    // to Hessenberg form (upper triangular plus one subdiagonal row)\n    // updates the transformation matrix R with new row operationsq\n\n    reduceToHessenberg(arr, N, prec, type, findVectors, R); // find eigenvalues\n\n    var {\n      values,\n      C\n    } = iterateUntilTriangular(arr, N, prec, type, findVectors); // values is the list of eigenvalues, C is the column\n    // transformation matrix that transforms the hessenberg\n    // matrix to upper triangular\n    // compose transformations A → hess. and hess. → triang.\n\n    C = multiply(inv(R), C);\n    var vectors;\n\n    if (findVectors) {\n      vectors = findEigenvectors(arr, N, C, values, prec, type);\n      vectors = matrixFromColumns(...vectors);\n    }\n\n    return {\n      values,\n      vectors\n    };\n  }\n  /**\n   * @param {number[][]} arr\n   * @param {number} N\n   * @param {number} prec\n   * @param {'number'|'BigNumber'|'Complex'} type\n   * @returns {number[][]}\n   */\n\n\n  function balance(arr, N, prec, type, findVectors) {\n    var big = type === 'BigNumber';\n    var cplx = type === 'Complex';\n    var zero = big ? bignumber(0) : cplx ? complex(0) : 0;\n    var one = big ? bignumber(1) : cplx ? complex(1) : 1; // base of the floating-point arithmetic\n\n    var radix = big ? bignumber(10) : 2;\n    var radixSq = multiplyScalar(radix, radix); // the diagonal transformation matrix R\n\n    var Rdiag;\n\n    if (findVectors) {\n      Rdiag = Array(N).fill(one);\n    } // this isn't the only time we loop thru the matrix...\n\n\n    var last = false;\n\n    while (!last) {\n      // ...haha I'm joking! unless...\n      last = true;\n\n      for (var i = 0; i < N; i++) {\n        // compute the taxicab norm of i-th column and row\n        // TODO optimize for complex numbers\n        var colNorm = zero;\n        var rowNorm = zero;\n\n        for (var j = 0; j < N; j++) {\n          if (i === j) continue;\n          var c = abs(arr[i][j]);\n          colNorm = addScalar(colNorm, c);\n          rowNorm = addScalar(rowNorm, c);\n        }\n\n        if (!equal(colNorm, 0) && !equal(rowNorm, 0)) {\n          // find integer power closest to balancing the matrix\n          // (we want to scale only by integer powers of radix,\n          // so that we don't lose any precision due to round-off)\n          var f = one;\n          var _c = colNorm;\n          var rowDivRadix = divideScalar(rowNorm, radix);\n          var rowMulRadix = multiplyScalar(rowNorm, radix);\n\n          while (smaller(_c, rowDivRadix)) {\n            _c = multiplyScalar(_c, radixSq);\n            f = multiplyScalar(f, radix);\n          }\n\n          while (larger(_c, rowMulRadix)) {\n            _c = divideScalar(_c, radixSq);\n            f = divideScalar(f, radix);\n          } // check whether balancing is needed\n          // condition = (c + rowNorm) / f < 0.95 * (colNorm + rowNorm)\n\n\n          var condition = smaller(divideScalar(addScalar(_c, rowNorm), f), multiplyScalar(addScalar(colNorm, rowNorm), 0.95)); // apply balancing similarity transformation\n\n          if (condition) {\n            // we should loop once again to check whether\n            // another rebalancing is needed\n            last = false;\n            var g = divideScalar(1, f);\n\n            for (var _j = 0; _j < N; _j++) {\n              if (i === _j) {\n                continue;\n              }\n\n              arr[i][_j] = multiplyScalar(arr[i][_j], f);\n              arr[_j][i] = multiplyScalar(arr[_j][i], g);\n            } // keep track of transformations\n\n\n            if (findVectors) {\n              Rdiag[i] = multiplyScalar(Rdiag[i], f);\n            }\n          }\n        }\n      }\n    } // return the diagonal row transformation matrix\n\n\n    return diag(Rdiag);\n  }\n  /**\n   * @param {number[][]} arr\n   * @param {number} N\n   * @param {number} prec\n   * @param {'number'|'BigNumber'|'Complex'} type\n   * @param {boolean} findVectors\n   * @param {number[][]} R the row transformation matrix that will be modified\n   */\n\n\n  function reduceToHessenberg(arr, N, prec, type, findVectors, R) {\n    var big = type === 'BigNumber';\n    var cplx = type === 'Complex';\n    var zero = big ? bignumber(0) : cplx ? complex(0) : 0;\n\n    if (big) {\n      prec = bignumber(prec);\n    }\n\n    for (var i = 0; i < N - 2; i++) {\n      // Find the largest subdiag element in the i-th col\n      var maxIndex = 0;\n      var max = zero;\n\n      for (var j = i + 1; j < N; j++) {\n        var el = arr[j][i];\n\n        if (smaller(abs(max), abs(el))) {\n          max = el;\n          maxIndex = j;\n        }\n      } // This col is pivoted, no need to do anything\n\n\n      if (smaller(abs(max), prec)) {\n        continue;\n      }\n\n      if (maxIndex !== i + 1) {\n        // Interchange maxIndex-th and (i+1)-th row\n        var tmp1 = arr[maxIndex];\n        arr[maxIndex] = arr[i + 1];\n        arr[i + 1] = tmp1; // Interchange maxIndex-th and (i+1)-th column\n\n        for (var _j2 = 0; _j2 < N; _j2++) {\n          var tmp2 = arr[_j2][maxIndex];\n          arr[_j2][maxIndex] = arr[_j2][i + 1];\n          arr[_j2][i + 1] = tmp2;\n        } // keep track of transformations\n\n\n        if (findVectors) {\n          var tmp3 = R[maxIndex];\n          R[maxIndex] = R[i + 1];\n          R[i + 1] = tmp3;\n        }\n      } // Reduce following rows and columns\n\n\n      for (var _j3 = i + 2; _j3 < N; _j3++) {\n        var n = divideScalar(arr[_j3][i], max);\n\n        if (n === 0) {\n          continue;\n        } // from j-th row subtract n-times (i+1)th row\n\n\n        for (var k = 0; k < N; k++) {\n          arr[_j3][k] = subtract(arr[_j3][k], multiplyScalar(n, arr[i + 1][k]));\n        } // to (i+1)th column add n-times j-th column\n\n\n        for (var _k = 0; _k < N; _k++) {\n          arr[_k][i + 1] = addScalar(arr[_k][i + 1], multiplyScalar(n, arr[_k][_j3]));\n        } // keep track of transformations\n\n\n        if (findVectors) {\n          for (var _k2 = 0; _k2 < N; _k2++) {\n            R[_j3][_k2] = subtract(R[_j3][_k2], multiplyScalar(n, R[i + 1][_k2]));\n          }\n        }\n      }\n    }\n\n    return R;\n  }\n  /**\n   * @returns {{values: values, C: Matrix}}\n   * @see Press, Wiliams: Numerical recipes in Fortran 77\n   * @see https://en.wikipedia.org/wiki/QR_algorithm\n   */\n\n\n  function iterateUntilTriangular(A, N, prec, type, findVectors) {\n    var big = type === 'BigNumber';\n    var cplx = type === 'Complex';\n    var one = big ? bignumber(1) : cplx ? complex(1) : 1;\n\n    if (big) {\n      prec = bignumber(prec);\n    } // The Francis Algorithm\n    // The core idea of this algorithm is that doing successive\n    // A' = Q⁺AQ transformations will eventually converge to block-\n    // upper-triangular with diagonal blocks either 1x1 or 2x2.\n    // The Q here is the one from the QR decomposition, A = QR.\n    // Since the eigenvalues of a block-upper-triangular matrix are\n    // the eigenvalues of its diagonal blocks and we know how to find\n    // eigenvalues of a 2x2 matrix, we know the eigenvalues of A.\n\n\n    var arr = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone)(A); // the list of converged eigenvalues\n\n    var lambdas = []; // size of arr, which will get smaller as eigenvalues converge\n\n    var n = N; // the diagonal of the block-diagonal matrix that turns\n    // converged 2x2 matrices into upper triangular matrices\n\n    var Sdiag = []; // N×N matrix describing the overall transformation done during the QR algorithm\n\n    var Qtotal = findVectors ? diag(Array(N).fill(one)) : undefined; // n×n matrix describing the QR transformations done since last convergence\n\n    var Qpartial = findVectors ? diag(Array(n).fill(one)) : undefined; // last eigenvalue converged before this many steps\n\n    var lastConvergenceBefore = 0;\n\n    while (lastConvergenceBefore <= 100) {\n      lastConvergenceBefore += 1; // TODO if the convergence is slow, do something clever\n      // Perform the factorization\n\n      var k = 0; // TODO set close to an eigenvalue\n\n      for (var i = 0; i < n; i++) {\n        arr[i][i] = subtract(arr[i][i], k);\n      } // TODO do an implicit QR transformation\n\n\n      var {\n        Q,\n        R\n      } = qr(arr);\n      arr = multiply(R, Q);\n\n      for (var _i = 0; _i < n; _i++) {\n        arr[_i][_i] = addScalar(arr[_i][_i], k);\n      } // keep track of transformations\n\n\n      if (findVectors) {\n        Qpartial = multiply(Qpartial, Q);\n      } // The rightmost diagonal element converged to an eigenvalue\n\n\n      if (n === 1 || smaller(abs(arr[n - 1][n - 2]), prec)) {\n        lastConvergenceBefore = 0;\n        lambdas.push(arr[n - 1][n - 1]); // keep track of transformations\n\n        if (findVectors) {\n          Sdiag.unshift([[1]]);\n          inflateMatrix(Qpartial, N);\n          Qtotal = multiply(Qtotal, Qpartial);\n\n          if (n > 1) {\n            Qpartial = diag(Array(n - 1).fill(one));\n          }\n        } // reduce the matrix size\n\n\n        n -= 1;\n        arr.pop();\n\n        for (var _i2 = 0; _i2 < n; _i2++) {\n          arr[_i2].pop();\n        } // The rightmost diagonal 2x2 block converged\n\n      } else if (n === 2 || smaller(abs(arr[n - 2][n - 3]), prec)) {\n        lastConvergenceBefore = 0;\n        var ll = eigenvalues2x2(arr[n - 2][n - 2], arr[n - 2][n - 1], arr[n - 1][n - 2], arr[n - 1][n - 1]);\n        lambdas.push(...ll); // keep track of transformations\n\n        if (findVectors) {\n          Sdiag.unshift(jordanBase2x2(arr[n - 2][n - 2], arr[n - 2][n - 1], arr[n - 1][n - 2], arr[n - 1][n - 1], ll[0], ll[1], prec, type));\n          inflateMatrix(Qpartial, N);\n          Qtotal = multiply(Qtotal, Qpartial);\n\n          if (n > 2) {\n            Qpartial = diag(Array(n - 2).fill(one));\n          }\n        } // reduce the matrix size\n\n\n        n -= 2;\n        arr.pop();\n        arr.pop();\n\n        for (var _i3 = 0; _i3 < n; _i3++) {\n          arr[_i3].pop();\n\n          arr[_i3].pop();\n        }\n      }\n\n      if (n === 0) {\n        break;\n      }\n    } // standard sorting\n\n\n    lambdas.sort((a, b) => +subtract(abs(a), abs(b))); // the algorithm didn't converge\n\n    if (lastConvergenceBefore > 100) {\n      var err = Error('The eigenvalues failed to converge. Only found these eigenvalues: ' + lambdas.join(', '));\n      err.values = lambdas;\n      err.vectors = [];\n      throw err;\n    } // combine the overall QR transformation Qtotal with the subsequent\n    // transformation S that turns the diagonal 2x2 blocks to upper triangular\n\n\n    var C = findVectors ? multiply(Qtotal, blockDiag(Sdiag, N)) : undefined;\n    return {\n      values: lambdas,\n      C\n    };\n  }\n  /**\n   * @param {Matrix} A original matrix\n   * @param {number} N size of A\n   * @param {Matrix} C column transformation matrix that turns A into upper triangular\n   * @param {number[]} values array of eigenvalues of A\n   * @param {'number'|'BigNumber'|'Complex'} type\n   * @returns {number[][]} eigenvalues\n   */\n\n\n  function findEigenvectors(A, N, C, values, prec, type) {\n    var Cinv = inv(C);\n    var U = multiply(Cinv, A, C);\n    var big = type === 'BigNumber';\n    var cplx = type === 'Complex';\n    var zero = big ? bignumber(0) : cplx ? complex(0) : 0;\n    var one = big ? bignumber(1) : cplx ? complex(1) : 1; // turn values into a kind of \"multiset\"\n    // this way it is easier to find eigenvectors\n\n    var uniqueValues = [];\n    var multiplicities = [];\n\n    for (var λ of values) {\n      var i = indexOf(uniqueValues, λ, equal);\n\n      if (i === -1) {\n        uniqueValues.push(λ);\n        multiplicities.push(1);\n      } else {\n        multiplicities[i] += 1;\n      }\n    } // find eigenvectors by solving U − λE = 0\n    // TODO replace with an iterative eigenvector algorithm\n    // (this one might fail for imprecise eigenvalues)\n\n\n    var vectors = [];\n    var len = uniqueValues.length;\n    var b = Array(N).fill(zero);\n    var E = diag(Array(N).fill(one)); // eigenvalues for which usolve failed (due to numerical error)\n\n    var failedLambdas = [];\n\n    for (var _i4 = 0; _i4 < len; _i4++) {\n      var _λ = uniqueValues[_i4];\n\n      var _A = subtract(U, multiply(_λ, E)); // the characteristic matrix\n\n\n      var solutions = usolveAll(_A, b);\n      solutions = solutions.map(v => multiply(C, v));\n      solutions.shift(); // ignore the null vector\n      // looks like we missed something, try inverse iteration\n\n      while (solutions.length < multiplicities[_i4]) {\n        var approxVec = inverseIterate(_A, N, solutions, prec, type);\n\n        if (approxVec == null) {\n          // no more vectors were found\n          failedLambdas.push(_λ);\n          break;\n        }\n\n        solutions.push(approxVec);\n      }\n\n      vectors.push(...solutions.map(v => flatten(v)));\n    }\n\n    if (failedLambdas.length !== 0) {\n      var err = new Error('Failed to find eigenvectors for the following eigenvalues: ' + failedLambdas.join(', '));\n      err.values = values;\n      err.vectors = vectors;\n      throw err;\n    }\n\n    return vectors;\n  }\n  /**\n   * Compute the eigenvalues of an 2x2 matrix\n   * @return {[number,number]}\n   */\n\n\n  function eigenvalues2x2(a, b, c, d) {\n    // λ± = ½ trA ± ½ √( tr²A - 4 detA )\n    var trA = addScalar(a, d);\n    var detA = subtract(multiplyScalar(a, d), multiplyScalar(b, c));\n    var x = multiplyScalar(trA, 0.5);\n    var y = multiplyScalar(sqrt(subtract(multiplyScalar(trA, trA), multiplyScalar(4, detA))), 0.5);\n    return [addScalar(x, y), subtract(x, y)];\n  }\n  /**\n   * For an 2x2 matrix compute the transformation matrix S,\n   * so that SAS⁻¹ is an upper triangular matrix\n   * @return {[[number,number],[number,number]]}\n   * @see https://math.berkeley.edu/~ogus/old/Math_54-05/webfoils/jordan.pdf\n   * @see http://people.math.harvard.edu/~knill/teaching/math21b2004/exhibits/2dmatrices/index.html\n   */\n\n\n  function jordanBase2x2(a, b, c, d, l1, l2, prec, type) {\n    var big = type === 'BigNumber';\n    var cplx = type === 'Complex';\n    var zero = big ? bignumber(0) : cplx ? complex(0) : 0;\n    var one = big ? bignumber(1) : cplx ? complex(1) : 1; // matrix is already upper triangular\n    // return an identity matrix\n\n    if (smaller(abs(c), prec)) {\n      return [[one, zero], [zero, one]];\n    } // matrix is diagonalizable\n    // return its eigenvectors as columns\n\n\n    if (larger(abs(subtract(l1, l2)), prec)) {\n      return [[subtract(l1, d), subtract(l2, d)], [c, c]];\n    } // matrix is not diagonalizable\n    // compute off-diagonal elements of N = A - λI\n    // N₁₂ = 0 ⇒ S = ( N⃗₁, I⃗₁ )\n    // N₁₂ ≠ 0 ⇒ S = ( N⃗₂, I⃗₂ )\n\n\n    var na = subtract(a, l1);\n    var nb = subtract(b, l1);\n    var nc = subtract(c, l1);\n    var nd = subtract(d, l1);\n\n    if (smaller(abs(nb), prec)) {\n      return [[na, one], [nc, zero]];\n    } else {\n      return [[nb, zero], [nd, one]];\n    }\n  }\n  /**\n   * Enlarge the matrix from n×n to N×N, setting the new\n   * elements to 1 on diagonal and 0 elsewhere\n   */\n\n\n  function inflateMatrix(arr, N) {\n    // add columns\n    for (var i = 0; i < arr.length; i++) {\n      arr[i].push(...Array(N - arr[i].length).fill(0));\n    } // add rows\n\n\n    for (var _i5 = arr.length; _i5 < N; _i5++) {\n      arr.push(Array(N).fill(0));\n      arr[_i5][_i5] = 1;\n    }\n\n    return arr;\n  }\n  /**\n   * Create a block-diagonal matrix with the given square matrices on the diagonal\n   * @param {Matrix[] | number[][][]} arr array of matrices to be placed on the diagonal\n   * @param {number} N the size of the resulting matrix\n   */\n\n\n  function blockDiag(arr, N) {\n    var M = [];\n\n    for (var i = 0; i < N; i++) {\n      M[i] = Array(N).fill(0);\n    }\n\n    var I = 0;\n\n    for (var sub of arr) {\n      var n = sub.length;\n\n      for (var _i6 = 0; _i6 < n; _i6++) {\n        for (var j = 0; j < n; j++) {\n          M[I + _i6][I + j] = sub[_i6][j];\n        }\n      }\n\n      I += n;\n    }\n\n    return M;\n  }\n  /**\n   * Finds the index of an element in an array using a custom equality function\n   * @template T\n   * @param {Array<T>} arr array in which to search\n   * @param {T} el the element to find\n   * @param {function(T, T): boolean} fn the equality function, first argument is an element of `arr`, the second is always `el`\n   * @returns {number} the index of `el`, or -1 when it's not in `arr`\n   */\n\n\n  function indexOf(arr, el, fn) {\n    for (var i = 0; i < arr.length; i++) {\n      if (fn(arr[i], el)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Provided a near-singular upper-triangular matrix A and a list of vectors,\n   * finds an eigenvector of A with the smallest eigenvalue, which is orthogonal\n   * to each vector in the list\n   * @template T\n   * @param {T[][]} A near-singular square matrix\n   * @param {number} N dimension\n   * @param {T[][]} orthog list of vectors\n   * @param {number} prec epsilon\n   * @param {'number'|'BigNumber'|'Complex'} type\n   * @return {T[] | null} eigenvector\n   *\n   * @see Numerical Recipes for Fortran 77 – 11.7 Eigenvalues or Eigenvectors by Inverse Iteration\n   */\n\n\n  function inverseIterate(A, N, orthog, prec, type) {\n    var largeNum = type === 'BigNumber' ? bignumber(1000) : 1000;\n    var b; // the vector\n    // you better choose a random vector before I count to five\n\n    var i = 0;\n\n    while (true) {\n      b = randomOrthogonalVector(N, orthog, type);\n      b = usolve(A, b);\n\n      if (larger(norm(b), largeNum)) {\n        break;\n      }\n\n      if (++i >= 5) {\n        return null;\n      }\n    } // you better converge before I count to ten\n\n\n    i = 0;\n\n    while (true) {\n      var c = usolve(A, b);\n\n      if (smaller(norm(orthogonalComplement(b, [c])), prec)) {\n        break;\n      }\n\n      if (++i >= 10) {\n        return null;\n      }\n\n      b = normalize(c);\n    }\n\n    return b;\n  }\n  /**\n   * Generates a random unit vector of dimension N, orthogonal to each vector in the list\n   * @template T\n   * @param {number} N dimension\n   * @param {T[][]} orthog list of vectors\n   * @param {'number'|'BigNumber'|'Complex'} type\n   * @returns {T[]} random vector\n   */\n\n\n  function randomOrthogonalVector(N, orthog, type) {\n    var big = type === 'BigNumber';\n    var cplx = type === 'Complex'; // generate random vector with the correct type\n\n    var v = Array(N).fill(0).map(_ => 2 * Math.random() - 1);\n\n    if (big) {\n      v = v.map(n => bignumber(n));\n    }\n\n    if (cplx) {\n      v = v.map(n => complex(n));\n    } // project to orthogonal complement\n\n\n    v = orthogonalComplement(v, orthog); // normalize\n\n    return normalize(v, type);\n  }\n  /**\n   * Project vector v to the orthogonal complement of an array of vectors\n   */\n\n\n  function orthogonalComplement(v, orthog) {\n    for (var w of orthog) {\n      // v := v − (w, v)/∥w∥² w\n      v = subtract(v, multiply(divideScalar(dot(w, v), dot(w, w)), w));\n    }\n\n    return v;\n  }\n  /**\n   * Calculate the norm of a vector.\n   * We can't use math.norm because factory can't handle circular dependency.\n   * Seriously, I'm really fed up with factory.\n   */\n\n\n  function norm(v) {\n    return abs(sqrt(dot(v, v)));\n  }\n  /**\n   * Normalize a vector\n   * @template T\n   * @param {T[]} v\n   * @param {'number'|'BigNumber'|'Complex'} type\n   * @returns {T[]} normalized vec\n   */\n\n\n  function normalize(v, type) {\n    var big = type === 'BigNumber';\n    var cplx = type === 'Complex';\n    var one = big ? bignumber(1) : cplx ? complex(1) : 1;\n    return multiply(divideScalar(one, norm(v)), v);\n  }\n\n  return complexEigs;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/eigs/complexEigs.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/eigs/realSymetric.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/eigs/realSymetric.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRealSymmetric\": () => (/* binding */ createRealSymmetric)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n\nfunction createRealSymmetric(_ref) {\n  var {\n    config,\n    addScalar,\n    subtract,\n    abs,\n    atan,\n    cos,\n    sin,\n    multiplyScalar,\n    inv,\n    bignumber,\n    multiply,\n    add\n  } = _ref;\n  /**\n   * @param {number[] | BigNumber[]} arr\n   * @param {number} N\n   * @param {number} prec\n   * @param {'number' | 'BigNumber'} type\n   */\n\n  function main(arr, N) {\n    var prec = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : config.epsilon;\n    var type = arguments.length > 3 ? arguments[3] : undefined;\n\n    if (type === 'number') {\n      return diag(arr, prec);\n    }\n\n    if (type === 'BigNumber') {\n      return diagBig(arr, prec);\n    }\n\n    throw TypeError('Unsupported data type: ' + type);\n  } // diagonalization implementation for number (efficient)\n\n\n  function diag(x, precision) {\n    var N = x.length;\n    var e0 = Math.abs(precision / N);\n    var psi;\n    var Sij = new Array(N); // Sij is Identity Matrix\n\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    } // initial error\n\n\n    var Vab = getAij(x);\n\n    while (Math.abs(Vab[1]) >= Math.abs(e0)) {\n      var _i = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getTheta(x[_i][_i], x[j][j], x[_i][j]);\n      x = x1(x, psi, _i, j);\n      Sij = Sij1(Sij, psi, _i, j);\n      Vab = getAij(x);\n    }\n\n    var Ei = createArray(N, 0); // eigenvalues\n\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      Ei[_i2] = x[_i2][_i2];\n    }\n\n    return sorting((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone)(Ei), (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone)(Sij));\n  } // diagonalization implementation for bigNumber\n\n\n  function diagBig(x, precision) {\n    var N = x.length;\n    var e0 = abs(precision / N);\n    var psi;\n    var Sij = new Array(N); // Sij is Identity Matrix\n\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    } // initial error\n\n\n    var Vab = getAijBig(x);\n\n    while (abs(Vab[1]) >= abs(e0)) {\n      var _i3 = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getThetaBig(x[_i3][_i3], x[j][j], x[_i3][j]);\n      x = x1Big(x, psi, _i3, j);\n      Sij = Sij1Big(Sij, psi, _i3, j);\n      Vab = getAijBig(x);\n    }\n\n    var Ei = createArray(N, 0); // eigenvalues\n\n    for (var _i4 = 0; _i4 < N; _i4++) {\n      Ei[_i4] = x[_i4][_i4];\n    } // return [clone(Ei), clone(Sij)]\n\n\n    return sorting((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone)(Ei), (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_0__.clone)(Sij));\n  } // get angle\n\n\n  function getTheta(aii, ajj, aij) {\n    var denom = ajj - aii;\n\n    if (Math.abs(denom) <= config.epsilon) {\n      return Math.PI / 4.0;\n    } else {\n      return 0.5 * Math.atan(2.0 * aij / (ajj - aii));\n    }\n  } // get angle\n\n\n  function getThetaBig(aii, ajj, aij) {\n    var denom = subtract(ajj, aii);\n\n    if (abs(denom) <= config.epsilon) {\n      return bignumber(-1).acos().div(4);\n    } else {\n      return multiplyScalar(0.5, atan(multiply(2.0, aij, inv(denom))));\n    }\n  } // update eigvec\n\n\n  function Sij1(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var Ski = createArray(N, 0);\n    var Skj = createArray(N, 0);\n\n    for (var k = 0; k < N; k++) {\n      Ski[k] = c * Sij[k][i] - s * Sij[k][j];\n      Skj[k] = s * Sij[k][i] + c * Sij[k][j];\n    }\n\n    for (var _k = 0; _k < N; _k++) {\n      Sij[_k][i] = Ski[_k];\n      Sij[_k][j] = Skj[_k];\n    }\n\n    return Sij;\n  } // update eigvec for overlap\n\n\n  function Sij1Big(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = cos(theta);\n    var s = sin(theta);\n    var Ski = createArray(N, bignumber(0));\n    var Skj = createArray(N, bignumber(0));\n\n    for (var k = 0; k < N; k++) {\n      Ski[k] = subtract(multiplyScalar(c, Sij[k][i]), multiplyScalar(s, Sij[k][j]));\n      Skj[k] = addScalar(multiplyScalar(s, Sij[k][i]), multiplyScalar(c, Sij[k][j]));\n    }\n\n    for (var _k2 = 0; _k2 < N; _k2++) {\n      Sij[_k2][i] = Ski[_k2];\n      Sij[_k2][j] = Skj[_k2];\n    }\n\n    return Sij;\n  } // update matrix\n\n\n  function x1Big(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = bignumber(cos(theta));\n    var s = bignumber(sin(theta));\n    var c2 = multiplyScalar(c, c);\n    var s2 = multiplyScalar(s, s);\n    var Aki = createArray(N, bignumber(0));\n    var Akj = createArray(N, bignumber(0)); // 2cs Hij\n\n    var csHij = multiply(bignumber(2), c, s, Hij[i][j]); //  Aii\n\n    var Aii = addScalar(subtract(multiplyScalar(c2, Hij[i][i]), csHij), multiplyScalar(s2, Hij[j][j]));\n    var Ajj = add(multiplyScalar(s2, Hij[i][i]), csHij, multiplyScalar(c2, Hij[j][j])); // 0  to i\n\n    for (var k = 0; k < N; k++) {\n      Aki[k] = subtract(multiplyScalar(c, Hij[i][k]), multiplyScalar(s, Hij[j][k]));\n      Akj[k] = addScalar(multiplyScalar(s, Hij[i][k]), multiplyScalar(c, Hij[j][k]));\n    } // Modify Hij\n\n\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = bignumber(0);\n    Hij[j][i] = bignumber(0); // 0  to i\n\n    for (var _k3 = 0; _k3 < N; _k3++) {\n      if (_k3 !== i && _k3 !== j) {\n        Hij[i][_k3] = Aki[_k3];\n        Hij[_k3][i] = Aki[_k3];\n        Hij[j][_k3] = Akj[_k3];\n        Hij[_k3][j] = Akj[_k3];\n      }\n    }\n\n    return Hij;\n  } // update matrix\n\n\n  function x1(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var c2 = c * c;\n    var s2 = s * s;\n    var Aki = createArray(N, 0);\n    var Akj = createArray(N, 0); //  Aii\n\n    var Aii = c2 * Hij[i][i] - 2 * c * s * Hij[i][j] + s2 * Hij[j][j];\n    var Ajj = s2 * Hij[i][i] + 2 * c * s * Hij[i][j] + c2 * Hij[j][j]; // 0  to i\n\n    for (var k = 0; k < N; k++) {\n      Aki[k] = c * Hij[i][k] - s * Hij[j][k];\n      Akj[k] = s * Hij[i][k] + c * Hij[j][k];\n    } // Modify Hij\n\n\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = 0;\n    Hij[j][i] = 0; // 0  to i\n\n    for (var _k4 = 0; _k4 < N; _k4++) {\n      if (_k4 !== i && _k4 !== j) {\n        Hij[i][_k4] = Aki[_k4];\n        Hij[_k4][i] = Aki[_k4];\n        Hij[j][_k4] = Akj[_k4];\n        Hij[_k4][j] = Akj[_k4];\n      }\n    }\n\n    return Hij;\n  } // get max off-diagonal value from Upper Diagonal\n\n\n  function getAij(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (Math.abs(maxMij) < Math.abs(Mij[i][j])) {\n          maxMij = Math.abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n\n    return [maxIJ, maxMij];\n  } // get max off-diagonal value from Upper Diagonal\n\n\n  function getAijBig(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (abs(maxMij) < abs(Mij[i][j])) {\n          maxMij = abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n\n    return [maxIJ, maxMij];\n  } // sort results\n\n\n  function sorting(E, S) {\n    var N = E.length;\n    var values = Array(N);\n    var vectors = Array(N);\n\n    for (var k = 0; k < N; k++) {\n      vectors[k] = Array(N);\n    }\n\n    for (var i = 0; i < N; i++) {\n      var minID = 0;\n      var minE = E[0];\n\n      for (var j = 0; j < E.length; j++) {\n        if (abs(E[j]) < abs(minE)) {\n          minID = j;\n          minE = E[minID];\n        }\n      }\n\n      values[i] = E.splice(minID, 1)[0];\n\n      for (var _k5 = 0; _k5 < N; _k5++) {\n        vectors[_k5][i] = S[_k5][minID];\n\n        S[_k5].splice(minID, 1);\n      }\n    }\n\n    return {\n      values,\n      vectors\n    };\n  }\n  /**\n   * Create an array of a certain size and fill all items with an initial value\n   * @param {number} size\n   * @param {number} value\n   * @return {number[]}\n   */\n\n\n  function createArray(size, value) {\n    // TODO: as soon as all browsers support Array.fill, use that instead (IE doesn't support it)\n    var array = new Array(size);\n\n    for (var i = 0; i < size; i++) {\n      array[i] = value;\n    }\n\n    return array;\n  }\n\n  return main;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/eigs/realSymetric.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/expm.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/expm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createExpm\": () => (/* binding */ createExpm)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'expm';\nvar dependencies = ['typed', 'abs', 'add', 'identity', 'inv', 'multiply'];\nvar createExpm = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    abs,\n    add,\n    identity,\n    inv,\n    multiply\n  } = _ref;\n  /**\n   * Compute the matrix exponential, expm(A) = e^A. The matrix must be square.\n   * Not to be confused with exp(a), which performs element-wise\n   * exponentiation.\n   *\n   * The exponential is calculated using the Padé approximant with scaling and\n   * squaring; see \"Nineteen Dubious Ways to Compute the Exponential of a\n   * Matrix,\" by Moler and Van Loan.\n   *\n   * Syntax:\n   *\n   *     math.expm(x)\n   *\n   * Examples:\n   *\n   *     const A = [[0,2],[0,0]]\n   *     math.expm(A)        // returns [[1,2],[0,1]]\n   *\n   * See also:\n   *\n   *     exp\n   *\n   * @param {Matrix} x  A square Matrix\n   * @return {Matrix}   The exponential of x\n   */\n\n  return typed(name, {\n    Matrix: function Matrix(A) {\n      // Check matrix size\n      var size = A.size();\n\n      if (size.length !== 2 || size[0] !== size[1]) {\n        throw new RangeError('Matrix must be square ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_1__.format)(size) + ')');\n      }\n\n      var n = size[0]; // Desired accuracy of the approximant (The actual accuracy\n      // will be affected by round-off error)\n\n      var eps = 1e-15; // The Padé approximant is not so accurate when the values of A\n      // are \"large\", so scale A by powers of two. Then compute the\n      // exponential, and square the result repeatedly according to\n      // the identity e^A = (e^(A/m))^m\n      // Compute infinity-norm of A, ||A||, to see how \"big\" it is\n\n      var infNorm = infinityNorm(A); // Find the optimal scaling factor and number of terms in the\n      // Padé approximant to reach the desired accuracy\n\n      var params = findParams(infNorm, eps);\n      var q = params.q;\n      var j = params.j; // The Pade approximation to e^A is:\n      // Rqq(A) = Dqq(A) ^ -1 * Nqq(A)\n      // where\n      // Nqq(A) = sum(i=0, q, (2q-i)!p! / [ (2q)!i!(q-i)! ] A^i\n      // Dqq(A) = sum(i=0, q, (2q-i)!q! / [ (2q)!i!(q-i)! ] (-A)^i\n      // Scale A by 1 / 2^j\n\n      var Apos = multiply(A, Math.pow(2, -j)); // The i=0 term is just the identity matrix\n\n      var N = identity(n);\n      var D = identity(n); // Initialization (i=0)\n\n      var factor = 1; // Initialization (i=1)\n\n      var AposToI = Apos; // Cloning not necessary\n\n      var alternate = -1;\n\n      for (var i = 1; i <= q; i++) {\n        if (i > 1) {\n          AposToI = multiply(AposToI, Apos);\n          alternate = -alternate;\n        }\n\n        factor = factor * (q - i + 1) / ((2 * q - i + 1) * i);\n        N = add(N, multiply(factor, AposToI));\n        D = add(D, multiply(factor * alternate, AposToI));\n      }\n\n      var R = multiply(inv(D), N); // Square j times\n\n      for (var _i = 0; _i < j; _i++) {\n        R = multiply(R, R);\n      }\n\n      return (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isSparseMatrix)(A) ? A.createSparseMatrix(R) : R;\n    }\n  });\n\n  function infinityNorm(A) {\n    var n = A.size()[0];\n    var infNorm = 0;\n\n    for (var i = 0; i < n; i++) {\n      var rowSum = 0;\n\n      for (var j = 0; j < n; j++) {\n        rowSum += abs(A.get([i, j]));\n      }\n\n      infNorm = Math.max(rowSum, infNorm);\n    }\n\n    return infNorm;\n  }\n  /**\n   * Find the best parameters for the Pade approximant given\n   * the matrix norm and desired accuracy. Returns the first acceptable\n   * combination in order of increasing computational load.\n   */\n\n\n  function findParams(infNorm, eps) {\n    var maxSearchSize = 30;\n\n    for (var k = 0; k < maxSearchSize; k++) {\n      for (var q = 0; q <= k; q++) {\n        var j = k - q;\n\n        if (errorEstimate(infNorm, q, j) < eps) {\n          return {\n            q: q,\n            j: j\n          };\n        }\n      }\n    }\n\n    throw new Error('Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)');\n  }\n  /**\n   * Returns the estimated error of the Pade approximant for the given\n   * parameters.\n   */\n\n\n  function errorEstimate(infNorm, q, j) {\n    var qfac = 1;\n\n    for (var i = 2; i <= q; i++) {\n      qfac *= i;\n    }\n\n    var twoqfac = qfac;\n\n    for (var _i2 = q + 1; _i2 <= 2 * q; _i2++) {\n      twoqfac *= _i2;\n    }\n\n    var twoqp1fac = twoqfac * (2 * q + 1);\n    return 8.0 * Math.pow(infNorm / Math.pow(2, j), 2 * q) * qfac * qfac / (twoqfac * twoqp1fac);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/expm.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/filter.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/filter.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFilter\": () => (/* binding */ createFilter)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_function_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/function.js */ \"./node_modules/mathjs/lib/esm/utils/function.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'filter';\nvar dependencies = ['typed'];\nvar createFilter = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Filter the items in an array or one dimensional matrix.\n   *\n   * Syntax:\n   *\n   *    math.filter(x, test)\n   *\n   * Examples:\n   *\n   *    function isPositive (x) {\n   *      return x > 0\n   *    }\n   *    math.filter([6, -2, -1, 4, 3], isPositive) // returns [6, 4, 3]\n   *\n   *    math.filter([\"23\", \"foo\", \"100\", \"55\", \"bar\"], /[0-9]+/) // returns [\"23\", \"100\", \"55\"]\n   *\n   * See also:\n   *\n   *    forEach, map, sort\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to filter\n   * @param {Function | RegExp} test\n   *        A function or regular expression to test items.\n   *        All entries for which `test` returns true are returned.\n   *        When `test` is a function, it is invoked with three parameters:\n   *        the value of the element, the index of the element, and the\n   *        matrix/array being traversed. The function must return a boolean.\n   * @return {Matrix | Array} Returns the filtered matrix.\n   */\n\n  return typed('filter', {\n    'Array, function': _filterCallback,\n    'Matrix, function': function MatrixFunction(x, test) {\n      return x.create(_filterCallback(x.toArray(), test));\n    },\n    'Array, RegExp': _utils_array_js__WEBPACK_IMPORTED_MODULE_1__.filterRegExp,\n    'Matrix, RegExp': function MatrixRegExp(x, test) {\n      return x.create((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.filterRegExp)(x.toArray(), test));\n    }\n  });\n});\n/**\n * Filter values in a callback given a callback function\n * @param {Array} x\n * @param {Function} callback\n * @return {Array} Returns the filtered array\n * @private\n */\n\nfunction _filterCallback(x, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0,_utils_function_js__WEBPACK_IMPORTED_MODULE_2__.maxArgumentCount)(callback);\n  return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.filter)(x, function (value, index, array) {\n    // invoke the callback function with the right number of arguments\n    if (args === 1) {\n      return callback(value);\n    } else if (args === 2) {\n      return callback(value, [index]);\n    } else {\n      // 3 or -1\n      return callback(value, [index], array);\n    }\n  });\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/filter.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/flatten.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/flatten.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFlatten\": () => (/* binding */ createFlatten)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'flatten';\nvar dependencies = ['typed', 'matrix'];\nvar createFlatten = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  /**\n   * Flatten a multi dimensional matrix into a single dimensional matrix.\n   * It is guaranteed to always return a clone of the argument.\n   *\n   * Syntax:\n   *\n   *    math.flatten(x)\n   *\n   * Examples:\n   *\n   *    math.flatten([[1,2], [3,4]])   // returns [1, 2, 3, 4]\n   *\n   * See also:\n   *\n   *    concat, resize, size, squeeze\n   *\n   * @param {Matrix | Array} x   Matrix to be flattened\n   * @return {Matrix | Array} Returns the flattened matrix\n   */\n\n  return typed(name, {\n    Array: function Array(x) {\n      return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(x));\n    },\n    Matrix: function Matrix(x) {\n      var flat = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(x.toArray())); // TODO: return the same matrix type as x\n\n      return matrix(flat);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/flatten.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/forEach.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/forEach.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createForEach\": () => (/* binding */ createForEach)\n/* harmony export */ });\n/* harmony import */ var _utils_function_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/function.js */ \"./node_modules/mathjs/lib/esm/utils/function.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'forEach';\nvar dependencies = ['typed'];\nvar createForEach = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Iterate over all elements of a matrix/array, and executes the given callback function.\n   *\n   * Syntax:\n   *\n   *    math.forEach(x, callback)\n   *\n   * Examples:\n   *\n   *    math.forEach([1, 2, 3], function(value) {\n   *      console.log(value)\n   *    })\n   *    // outputs 1, 2, 3\n   *\n   * See also:\n   *\n   *    filter, map, sort\n   *\n   * @param {Matrix | Array} x    The matrix to iterate on.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix/array being traversed.\n   */\n\n  return typed(name, {\n    'Array, function': _forEach,\n    'Matrix, function': function MatrixFunction(x, callback) {\n      return x.forEach(callback);\n    }\n  });\n});\n/**\n * forEach for a multi dimensional array\n * @param {Array} array\n * @param {Function} callback\n * @private\n */\n\nfunction _forEach(array, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0,_utils_function_js__WEBPACK_IMPORTED_MODULE_1__.maxArgumentCount)(callback);\n\n  var recurse = function recurse(value, index) {\n    if (Array.isArray(value)) {\n      (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_2__.forEach)(value, function (child, i) {\n        // we create a copy of the index array and append the new index value\n        recurse(child, index.concat(i));\n      });\n    } else {\n      // invoke the callback function with the right number of arguments\n      if (args === 1) {\n        callback(value);\n      } else if (args === 2) {\n        callback(value, index);\n      } else {\n        // 3 or -1\n        callback(value, index, array);\n      }\n    }\n  };\n\n  recurse(array, []);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/forEach.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createGetMatrixDataType\": () => (/* binding */ createGetMatrixDataType)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\n\nvar name = 'getMatrixDataType';\nvar dependencies = ['typed'];\nvar createGetMatrixDataType = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Find the data type of all elements in a matrix or array,\n   * for example 'number' if all items are a number and 'Complex' if all values\n   * are complex numbers.\n   * If a matrix contains more than one data type, it will return 'mixed'.\n   *\n   * Syntax:\n   *\n   *    math.getMatrixDataType(x)\n   *\n   * Examples:\n   *\n   *    const x = [ [1, 2, 3], [4, 5, 6] ]\n   *    const mixedX = [ [1, true], [2, 3] ]\n   *    const fractionX = [ [math.fraction(1, 3)], [math.fraction(1, 3] ]\n   *    const unitX = [ [math.unit('5cm')], [math.unit('5cm')] ]\n   *    const bigNumberX = [ [math.bignumber(1)], [math.bignumber(0)] ]\n   *    const sparse = math.sparse(x)\n   *    const dense = math.matrix(x)\n   *    math.getMatrixDataType(x)   // returns 'number'\n   *    math.getMatrixDataType(sparse)   // returns 'number'\n   *    math.getMatrixDataType(dense)   // returns 'number'\n   *    math.getMatrixDataType(mixedX) // returns 'mixed'\n   *    math.getMatrixDataType(fractionX) // returns 'Fraction'\n   *    math.getMatrixDataType(unitX) // returns 'Unit'\n   *    math.getMatrixDataType(bigNumberX) // return 'BigNumber'\n   *\n   * See also:\n   *  SparseMatrix, DenseMatrix\n   *\n   * @param {...Matrix | Array} x   The Matrix with values.\n   *\n   * @return {string} A string representation of the matrix type\n   */\n\n  return typed(name, {\n    Array: function Array(x) {\n      return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.getArrayDataType)(x, _utils_is_js__WEBPACK_IMPORTED_MODULE_2__.typeOf);\n    },\n    Matrix: function Matrix(x) {\n      return x.getDataType();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/identity.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/identity.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIdentity\": () => (/* binding */ createIdentity)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'identity';\nvar dependencies = ['typed', 'config', 'matrix', 'BigNumber', 'DenseMatrix', 'SparseMatrix'];\nvar createIdentity = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    BigNumber,\n    DenseMatrix,\n    SparseMatrix\n  } = _ref;\n  /**\n   * Create a 2-dimensional identity matrix with size m x n or n x n.\n   * The matrix has ones on the diagonal and zeros elsewhere.\n   *\n   * Syntax:\n   *\n   *    math.identity(n)\n   *    math.identity(n, format)\n   *    math.identity(m, n)\n   *    math.identity(m, n, format)\n   *    math.identity([m, n])\n   *    math.identity([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.identity(3)                    // returns [[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n   *    math.identity(3, 2)                 // returns [[1, 0], [0, 1], [0, 0]]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.identity(math.size(A))         // returns [[1, 0, 0], [0, 1, 0]]\n   *\n   * See also:\n   *\n   *    diag, ones, zeros, size, range\n   *\n   * @param {...number | Matrix | Array} size   The size for the matrix\n   * @param {string} [format]                   The Matrix storage format\n   *\n   * @return {Matrix | Array | number} A matrix with ones on the diagonal.\n   */\n\n  return typed(name, {\n    '': function _() {\n      return config.matrix === 'Matrix' ? matrix([]) : [];\n    },\n    string: function string(format) {\n      return matrix(format);\n    },\n    'number | BigNumber': function numberBigNumber(rows) {\n      return _identity(rows, rows, config.matrix === 'Matrix' ? 'dense' : undefined);\n    },\n    'number | BigNumber, string': function numberBigNumberString(rows, format) {\n      return _identity(rows, rows, format);\n    },\n    'number | BigNumber, number | BigNumber': function numberBigNumberNumberBigNumber(rows, cols) {\n      return _identity(rows, cols, config.matrix === 'Matrix' ? 'dense' : undefined);\n    },\n    'number | BigNumber, number | BigNumber, string': function numberBigNumberNumberBigNumberString(rows, cols, format) {\n      return _identity(rows, cols, format);\n    },\n    Array: function Array(size) {\n      return _identityVector(size);\n    },\n    'Array, string': function ArrayString(size, format) {\n      return _identityVector(size, format);\n    },\n    Matrix: function Matrix(size) {\n      return _identityVector(size.valueOf(), size.storage());\n    },\n    'Matrix, string': function MatrixString(size, format) {\n      return _identityVector(size.valueOf(), format);\n    }\n  });\n\n  function _identityVector(size, format) {\n    switch (size.length) {\n      case 0:\n        return format ? matrix(format) : [];\n\n      case 1:\n        return _identity(size[0], size[0], format);\n\n      case 2:\n        return _identity(size[0], size[1], format);\n\n      default:\n        throw new Error('Vector containing two values expected');\n    }\n  }\n  /**\n   * Create an identity matrix\n   * @param {number | BigNumber} rows\n   * @param {number | BigNumber} cols\n   * @param {string} [format]\n   * @returns {Matrix}\n   * @private\n   */\n\n\n  function _identity(rows, cols, format) {\n    // BigNumber constructor with the right precision\n    var Big = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(rows) || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(cols) ? BigNumber : null;\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(rows)) rows = rows.toNumber();\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(cols)) cols = cols.toNumber();\n\n    if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.isInteger)(rows) || rows < 1) {\n      throw new Error('Parameters in function identity must be positive integers');\n    }\n\n    if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.isInteger)(cols) || cols < 1) {\n      throw new Error('Parameters in function identity must be positive integers');\n    }\n\n    var one = Big ? new BigNumber(1) : 1;\n    var defaultValue = Big ? new Big(0) : 0;\n    var size = [rows, cols]; // check we need to return a matrix\n\n    if (format) {\n      // create diagonal matrix (use optimized implementation for storage format)\n      if (format === 'sparse') {\n        return SparseMatrix.diagonal(size, one, 0, defaultValue);\n      }\n\n      if (format === 'dense') {\n        return DenseMatrix.diagonal(size, one, 0, defaultValue);\n      }\n\n      throw new TypeError(\"Unknown matrix type \\\"\".concat(format, \"\\\"\"));\n    } // create and resize array\n\n\n    var res = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.resize)([], size, defaultValue); // fill in ones on the diagonal\n\n    var minimum = rows < cols ? rows : cols; // fill diagonal\n\n    for (var d = 0; d < minimum; d++) {\n      res[d][d] = one;\n    }\n\n    return res;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/identity.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/inv.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/inv.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createInv\": () => (/* binding */ createInv)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n\n\n\n\nvar name = 'inv';\nvar dependencies = ['typed', 'matrix', 'divideScalar', 'addScalar', 'multiply', 'unaryMinus', 'det', 'identity', 'abs'];\nvar createInv = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    divideScalar,\n    addScalar,\n    multiply,\n    unaryMinus,\n    det,\n    identity,\n    abs\n  } = _ref;\n  /**\n   * Calculate the inverse of a square matrix.\n   *\n   * Syntax:\n   *\n   *     math.inv(x)\n   *\n   * Examples:\n   *\n   *     math.inv([[1, 2], [3, 4]])  // returns [[-2, 1], [1.5, -0.5]]\n   *     math.inv(4)                 // returns 0.25\n   *     1 / 4                       // returns 0.25\n   *\n   * See also:\n   *\n   *     det, transpose\n   *\n   * @param {number | Complex | Array | Matrix} x     Matrix to be inversed\n   * @return {number | Complex | Array | Matrix} The inverse of `x`.\n   */\n\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(x) {\n      var size = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(x) ? x.size() : (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_2__.arraySize)(x);\n\n      switch (size.length) {\n        case 1:\n          // vector\n          if (size[0] === 1) {\n            if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(x)) {\n              return matrix([divideScalar(1, x.valueOf()[0])]);\n            } else {\n              return [divideScalar(1, x[0])];\n            }\n          } else {\n            throw new RangeError('Matrix must be square ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n          }\n\n        case 2:\n          // two dimensional array\n          {\n            var rows = size[0];\n            var cols = size[1];\n\n            if (rows === cols) {\n              if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(x)) {\n                return matrix(_inv(x.valueOf(), rows, cols), x.storage());\n              } else {\n                // return an Array\n                return _inv(x, rows, cols);\n              }\n            } else {\n              throw new RangeError('Matrix must be square ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n            }\n          }\n\n        default:\n          // multi dimensional array\n          throw new RangeError('Matrix must be two dimensional ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n      }\n    },\n    any: function any(x) {\n      // scalar\n      return divideScalar(1, x); // FIXME: create a BigNumber one when configured for bignumbers\n    }\n  });\n  /**\n   * Calculate the inverse of a square matrix\n   * @param {Array[]} mat     A square matrix\n   * @param {number} rows     Number of rows\n   * @param {number} cols     Number of columns, must equal rows\n   * @return {Array[]} inv    Inverse matrix\n   * @private\n   */\n\n  function _inv(mat, rows, cols) {\n    var r, s, f, value, temp;\n\n    if (rows === 1) {\n      // this is a 1 x 1 matrix\n      value = mat[0][0];\n\n      if (value === 0) {\n        throw Error('Cannot calculate inverse, determinant is zero');\n      }\n\n      return [[divideScalar(1, value)]];\n    } else if (rows === 2) {\n      // this is a 2 x 2 matrix\n      var d = det(mat);\n\n      if (d === 0) {\n        throw Error('Cannot calculate inverse, determinant is zero');\n      }\n\n      return [[divideScalar(mat[1][1], d), divideScalar(unaryMinus(mat[0][1]), d)], [divideScalar(unaryMinus(mat[1][0]), d), divideScalar(mat[0][0], d)]];\n    } else {\n      // this is a matrix of 3 x 3 or larger\n      // calculate inverse using gauss-jordan elimination\n      //      https://en.wikipedia.org/wiki/Gaussian_elimination\n      //      http://mathworld.wolfram.com/MatrixInverse.html\n      //      http://math.uww.edu/~mcfarlat/inverse.htm\n      // make a copy of the matrix (only the arrays, not of the elements)\n      var A = mat.concat();\n\n      for (r = 0; r < rows; r++) {\n        A[r] = A[r].concat();\n      } // create an identity matrix which in the end will contain the\n      // matrix inverse\n\n\n      var B = identity(rows).valueOf(); // loop over all columns, and perform row reductions\n\n      for (var c = 0; c < cols; c++) {\n        // Pivoting: Swap row c with row r, where row r contains the largest element A[r][c]\n        var ABig = abs(A[c][c]);\n        var rBig = c;\n        r = c + 1;\n\n        while (r < rows) {\n          if (abs(A[r][c]) > ABig) {\n            ABig = abs(A[r][c]);\n            rBig = r;\n          }\n\n          r++;\n        }\n\n        if (ABig === 0) {\n          throw Error('Cannot calculate inverse, determinant is zero');\n        }\n\n        r = rBig;\n\n        if (r !== c) {\n          temp = A[c];\n          A[c] = A[r];\n          A[r] = temp;\n          temp = B[c];\n          B[c] = B[r];\n          B[r] = temp;\n        } // eliminate non-zero values on the other rows at column c\n\n\n        var Ac = A[c];\n        var Bc = B[c];\n\n        for (r = 0; r < rows; r++) {\n          var Ar = A[r];\n          var Br = B[r];\n\n          if (r !== c) {\n            // eliminate value at column c and row r\n            if (Ar[c] !== 0) {\n              f = divideScalar(unaryMinus(Ar[c]), Ac[c]); // add (f * row c) to row r to eliminate the value\n              // at column c\n\n              for (s = c; s < cols; s++) {\n                Ar[s] = addScalar(Ar[s], multiply(f, Ac[s]));\n              }\n\n              for (s = 0; s < cols; s++) {\n                Br[s] = addScalar(Br[s], multiply(f, Bc[s]));\n              }\n            }\n          } else {\n            // normalize value at Acc to 1,\n            // divide each value on row r with the value at Acc\n            f = Ac[c];\n\n            for (s = c; s < cols; s++) {\n              Ar[s] = divideScalar(Ar[s], f);\n            }\n\n            for (s = 0; s < cols; s++) {\n              Br[s] = divideScalar(Br[s], f);\n            }\n          }\n        }\n      }\n\n      return B;\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/inv.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/kron.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/kron.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createKron\": () => (/* binding */ createKron)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'kron';\nvar dependencies = ['typed', 'matrix', 'multiplyScalar'];\nvar createKron = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    multiplyScalar\n  } = _ref;\n  /**\n     * Calculates the kronecker product of 2 matrices or vectors.\n     *\n     * NOTE: If a one dimensional vector / matrix is given, it will be\n     * wrapped so its two dimensions.\n     * See the examples.\n     *\n     * Syntax:\n     *\n     *    math.kron(x, y)\n     *\n     * Examples:\n     *\n     *    math.kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])\n     *    // returns [ [ 1, 2, 0, 0 ], [ 3, 4, 0, 0 ], [ 0, 0, 1, 2 ], [ 0, 0, 3, 4 ] ]\n     *\n     *    math.kron([1,1], [2,3,4])\n     *    // returns [ [ 2, 3, 4, 2, 3, 4 ] ]\n     *\n     * See also:\n     *\n     *    multiply, dot, cross\n     *\n     * @param  {Array | Matrix} x     First vector\n     * @param  {Array | Matrix} y     Second vector\n     * @return {Array | Matrix}       Returns the kronecker product of `x` and `y`\n     */\n\n  return typed(name, {\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      return matrix(_kron(x.toArray(), y.toArray()));\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return matrix(_kron(x.toArray(), y));\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return matrix(_kron(x, y.toArray()));\n    },\n    'Array, Array': _kron\n  });\n  /**\n     * Calculate the kronecker product of two matrices / vectors\n     * @param {Array} a  First vector\n     * @param {Array} b  Second vector\n     * @returns {Array} Returns the kronecker product of x and y\n     * @private\n     */\n\n  function _kron(a, b) {\n    // Deal with the dimensions of the matricies.\n    if ((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(a).length === 1) {\n      // Wrap it in a 2D Matrix\n      a = [a];\n    }\n\n    if ((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(b).length === 1) {\n      // Wrap it in a 2D Matrix\n      b = [b];\n    }\n\n    if ((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(a).length > 2 || (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(b).length > 2) {\n      throw new RangeError('Vectors with dimensions greater then 2 are not supported expected ' + '(Size x = ' + JSON.stringify(a.length) + ', y = ' + JSON.stringify(b.length) + ')');\n    }\n\n    var t = [];\n    var r = [];\n    return a.map(function (a) {\n      return b.map(function (b) {\n        r = [];\n        t.push(r);\n        return a.map(function (y) {\n          return b.map(function (x) {\n            return r.push(multiplyScalar(y, x));\n          });\n        });\n      });\n    }) && t;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/kron.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/map.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/map.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMap\": () => (/* binding */ createMap)\n/* harmony export */ });\n/* harmony import */ var _utils_function_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/function.js */ \"./node_modules/mathjs/lib/esm/utils/function.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'map';\nvar dependencies = ['typed'];\nvar createMap = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Create a new matrix or array with the results of the callback function executed on\n   * each entry of the matrix/array.\n   *\n   * Syntax:\n   *\n   *    math.map(x, callback)\n   *\n   * Examples:\n   *\n   *    math.map([1, 2, 3], function(value) {\n   *      return value * value\n   *    })  // returns [1, 4, 9]\n   *\n   * See also:\n   *\n   *    filter, forEach, sort\n   *\n   * @param {Matrix | Array} x    The matrix to iterate on.\n   * @param {Function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the matrix being traversed.\n   * @return {Matrix | array}     Transformed map of x\n   */\n\n  return typed(name, {\n    'Array, function': _map,\n    'Matrix, function': function MatrixFunction(x, callback) {\n      return x.map(callback);\n    }\n  });\n});\n/**\n * Map for a multi dimensional array\n * @param {Array} array\n * @param {Function} callback\n * @return {Array}\n * @private\n */\n\nfunction _map(array, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0,_utils_function_js__WEBPACK_IMPORTED_MODULE_1__.maxArgumentCount)(callback);\n\n  var recurse = function recurse(value, index) {\n    if (Array.isArray(value)) {\n      return value.map(function (child, i) {\n        // we create a copy of the index array and append the new index value\n        return recurse(child, index.concat(i));\n      });\n    } else {\n      // invoke the callback function with the right number of arguments\n      if (args === 1) {\n        return callback(value);\n      } else if (args === 2) {\n        return callback(value, index);\n      } else {\n        // 3 or -1\n        return callback(value, index, array);\n      }\n    }\n  };\n\n  return recurse(array, []);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/map.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/matrixFromColumns.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/matrixFromColumns.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMatrixFromColumns\": () => (/* binding */ createMatrixFromColumns)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'matrixFromColumns';\nvar dependencies = ['typed', 'matrix', 'flatten', 'size'];\nvar createMatrixFromColumns = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    flatten,\n    size\n  } = _ref;\n  /**\n   * Create a dense matrix from vectors as individual columns.\n   * If you pass row vectors, they will be transposed (but not conjugated!)\n   *\n   * Syntax:\n   *\n   *    math.matrixFromColumns(...arr)\n   *    math.matrixFromColumns(col1, col2)\n   *    math.matrixFromColumns(col1, col2, col3)\n   *\n   * Examples:\n   *\n   *    math.matrixFromColumns([1, 2, 3], [[4],[5],[6]])\n   *    math.matrixFromColumns(...vectors)\n   *\n   * See also:\n   *\n   *    matrix, matrixFromRows, matrixFromFunction, zeros\n   *\n   * @param {... Array | Matrix} cols Multiple columns\n   * @return { number[][] | Matrix } if at least one of the arguments is an array, an array will be returned\n   */\n\n  return typed(name, {\n    '...Array': function Array(arr) {\n      return _createArray(arr);\n    },\n    '...Matrix': function Matrix(arr) {\n      return matrix(_createArray(arr.map(m => m.toArray())));\n    } // TODO implement this properly for SparseMatrix\n\n  });\n\n  function _createArray(arr) {\n    if (arr.length === 0) throw new TypeError('At least one column is needed to construct a matrix.');\n    var N = checkVectorTypeAndReturnLength(arr[0]); // create an array with empty rows\n\n    var result = [];\n\n    for (var i = 0; i < N; i++) {\n      result[i] = [];\n    } // loop columns\n\n\n    for (var col of arr) {\n      var colLength = checkVectorTypeAndReturnLength(col);\n\n      if (colLength !== N) {\n        throw new TypeError('The vectors had different length: ' + (N | 0) + ' ≠ ' + (colLength | 0));\n      }\n\n      var f = flatten(col); // push a value to each row\n\n      for (var _i = 0; _i < N; _i++) {\n        result[_i].push(f[_i]);\n      }\n    }\n\n    return result;\n  }\n\n  function checkVectorTypeAndReturnLength(vec) {\n    var s = size(vec);\n\n    if (s.length === 1) {\n      // 1D vector\n      return s[0];\n    } else if (s.length === 2) {\n      // 2D vector\n      if (s[0] === 1) {\n        // row vector\n        return s[1];\n      } else if (s[1] === 1) {\n        // col vector\n        return s[0];\n      } else {\n        throw new TypeError('At least one of the arguments is not a vector.');\n      }\n    } else {\n      throw new TypeError('Only one- or two-dimensional vectors are supported.');\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/matrixFromColumns.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/matrixFromFunction.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/matrixFromFunction.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMatrixFromFunction\": () => (/* binding */ createMatrixFromFunction)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'matrixFromFunction';\nvar dependencies = ['typed', 'matrix', 'isZero'];\nvar createMatrixFromFunction = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    isZero\n  } = _ref;\n  /**\n   * Create a matrix by evaluating a generating function at each index.\n   * The simplest overload returns a multi-dimensional array as long as `size` is an array.\n   * Passing `size` as a Matrix or specifying a `format` will result in returning a Matrix.\n   *\n   * Syntax:\n   *\n   *    math.matrixFromFunction(size, fn)\n   *    math.matrixFromFunction(size, fn, format)\n   *    math.matrixFromFunction(size, fn, format, datatype)\n   *    math.matrixFromFunction(size, format, fn)\n   *    math.matrixFromFunction(size, format, datatype, fn)\n   *\n   * Examples:\n   *\n   *    math.matrixFromFunction([3,3], i => i[0] - i[1]) // an antisymmetric matrix\n   *    math.matrixFromFunction([100, 100], 'sparse', i => i[0] - i[1] === 1 ? 4 : 0) // a sparse subdiagonal matrix\n   *    math.matrixFromFunction([5], i => math.random()) // a random vector\n   *\n   * See also:\n   *\n   *    matrix, zeros\n   *\n   * @param {Array | Matrix} size   The size of the matrix to be created\n   * @param {function} fn           Callback function invoked for every entry in the matrix\n   * @param {string} [format]       The Matrix storage format, either `'dense'` or `'sparse'`\n   * @param {string} [datatype]     Type of the values\n   * @return {Array | Matrix} Returns the created matrix\n   */\n\n  return typed(name, {\n    'Array | Matrix, function, string, string': function ArrayMatrixFunctionStringString(size, fn, format, datatype) {\n      return _create(size, fn, format, datatype);\n    },\n    'Array | Matrix, function, string': function ArrayMatrixFunctionString(size, fn, format) {\n      return _create(size, fn, format);\n    },\n    'Matrix, function': function MatrixFunction(size, fn) {\n      return _create(size, fn, 'dense');\n    },\n    'Array, function': function ArrayFunction(size, fn) {\n      return _create(size, fn, 'dense').toArray();\n    },\n    'Array | Matrix, string, function': function ArrayMatrixStringFunction(size, format, fn) {\n      return _create(size, fn, format);\n    },\n    'Array | Matrix, string, string, function': function ArrayMatrixStringStringFunction(size, format, datatype, fn) {\n      return _create(size, fn, format, datatype);\n    }\n  });\n\n  function _create(size, fn, format, datatype) {\n    var m;\n\n    if (datatype !== undefined) {\n      m = matrix(format, datatype);\n    } else {\n      m = matrix(format);\n    }\n\n    m.resize(size);\n    m.forEach(function (_, index) {\n      var val = fn(index);\n      if (isZero(val)) return;\n      m.set(index, val);\n    });\n    return m;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/matrixFromFunction.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/matrixFromRows.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/matrixFromRows.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMatrixFromRows\": () => (/* binding */ createMatrixFromRows)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'matrixFromRows';\nvar dependencies = ['typed', 'matrix', 'flatten', 'size'];\nvar createMatrixFromRows = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    flatten,\n    size\n  } = _ref;\n  /**\n   * Create a dense matrix from vectors as individual rows.\n   * If you pass column vectors, they will be transposed (but not conjugated!)\n   *\n   * Syntax:\n   *\n   *    math.matrixFromRows(...arr)\n   *    math.matrixFromRows(row1, row2)\n   *    math.matrixFromRows(row1, row2, row3)\n   *\n   * Examples:\n   *\n   *    math.matrixFromRows([1, 2, 3], [[4],[5],[6]])\n   *    math.matrixFromRows(...vectors)\n   *\n   * See also:\n   *\n   *    matrix, matrixFromColumns, matrixFromFunction, zeros\n   *\n   * @param {... Array | Matrix} rows  Multiple rows\n   * @return { number[][] | Matrix } if at least one of the arguments is an array, an array will be returned\n   */\n\n  return typed(name, {\n    '...Array': function Array(arr) {\n      return _createArray(arr);\n    },\n    '...Matrix': function Matrix(arr) {\n      return matrix(_createArray(arr.map(m => m.toArray())));\n    } // TODO implement this properly for SparseMatrix\n\n  });\n\n  function _createArray(arr) {\n    if (arr.length === 0) throw new TypeError('At least one row is needed to construct a matrix.');\n    var N = checkVectorTypeAndReturnLength(arr[0]);\n    var result = [];\n\n    for (var row of arr) {\n      var rowLength = checkVectorTypeAndReturnLength(row);\n\n      if (rowLength !== N) {\n        throw new TypeError('The vectors had different length: ' + (N | 0) + ' ≠ ' + (rowLength | 0));\n      }\n\n      result.push(flatten(row));\n    }\n\n    return result;\n  }\n\n  function checkVectorTypeAndReturnLength(vec) {\n    var s = size(vec);\n\n    if (s.length === 1) {\n      // 1D vector\n      return s[0];\n    } else if (s.length === 2) {\n      // 2D vector\n      if (s[0] === 1) {\n        // row vector\n        return s[1];\n      } else if (s[1] === 1) {\n        // col vector\n        return s[0];\n      } else {\n        throw new TypeError('At least one of the arguments is not a vector.');\n      }\n    } else {\n      throw new TypeError('Only one- or two-dimensional vectors are supported.');\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/matrixFromRows.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/ones.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/ones.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createOnes\": () => (/* binding */ createOnes)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'ones';\nvar dependencies = ['typed', 'config', 'matrix', 'BigNumber'];\nvar createOnes = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    BigNumber\n  } = _ref;\n  /**\n   * Create a matrix filled with ones. The created matrix can have one or\n   * multiple dimensions.\n   *\n   * Syntax:\n   *\n   *    math.ones(m)\n   *    math.ones(m, format)\n   *    math.ones(m, n)\n   *    math.ones(m, n, format)\n   *    math.ones([m, n])\n   *    math.ones([m, n], format)\n   *    math.ones([m, n, p, ...])\n   *    math.ones([m, n, p, ...], format)\n   *\n   * Examples:\n   *\n   *    math.ones(3)                   // returns [1, 1, 1]\n   *    math.ones(3, 2)                // returns [[1, 1], [1, 1], [1, 1]]\n   *    math.ones(3, 2, 'dense')       // returns Dense Matrix [[1, 1], [1, 1], [1, 1]]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.ones(math.size(A))       // returns [[1, 1, 1], [1, 1, 1]]\n   *\n   * See also:\n   *\n   *    zeros, identity, size, range\n   *\n   * @param {...number | Array} size    The size of each dimension of the matrix\n   * @param {string} [format]           The Matrix storage format\n   *\n   * @return {Array | Matrix | number}  A matrix filled with ones\n   */\n\n  return typed('ones', {\n    '': function _() {\n      return config.matrix === 'Array' ? _ones([]) : _ones([], 'default');\n    },\n    // math.ones(m, n, p, ..., format)\n    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this\n    '...number | BigNumber | string': function numberBigNumberString(size) {\n      var last = size[size.length - 1];\n\n      if (typeof last === 'string') {\n        var format = size.pop();\n        return _ones(size, format);\n      } else if (config.matrix === 'Array') {\n        return _ones(size);\n      } else {\n        return _ones(size, 'default');\n      }\n    },\n    Array: _ones,\n    Matrix: function Matrix(size) {\n      var format = size.storage();\n      return _ones(size.valueOf(), format);\n    },\n    'Array | Matrix, string': function ArrayMatrixString(size, format) {\n      return _ones(size.valueOf(), format);\n    }\n  });\n  /**\n   * Create an Array or Matrix with ones\n   * @param {Array} size\n   * @param {string} [format='default']\n   * @return {Array | Matrix}\n   * @private\n   */\n\n  function _ones(size, format) {\n    var hasBigNumbers = _normalize(size);\n\n    var defaultValue = hasBigNumbers ? new BigNumber(1) : 1;\n\n    _validate(size);\n\n    if (format) {\n      // return a matrix\n      var m = matrix(format);\n\n      if (size.length > 0) {\n        return m.resize(size, defaultValue);\n      }\n\n      return m;\n    } else {\n      // return an Array\n      var arr = [];\n\n      if (size.length > 0) {\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.resize)(arr, size, defaultValue);\n      }\n\n      return arr;\n    }\n  } // replace BigNumbers with numbers, returns true if size contained BigNumbers\n\n\n  function _normalize(size) {\n    var hasBigNumbers = false;\n    size.forEach(function (value, index, arr) {\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBigNumber)(value)) {\n        hasBigNumbers = true;\n        arr[index] = value.toNumber();\n      }\n    });\n    return hasBigNumbers;\n  } // validate arguments\n\n\n  function _validate(size) {\n    size.forEach(function (value) {\n      if (typeof value !== 'number' || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_3__.isInteger)(value) || value < 0) {\n        throw new Error('Parameters in function ones must be positive integers');\n      }\n    });\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/ones.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/partitionSelect.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/partitionSelect.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPartitionSelect\": () => (/* binding */ createPartitionSelect)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'partitionSelect';\nvar dependencies = ['typed', 'isNumeric', 'isNaN', 'compare'];\nvar createPartitionSelect = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    isNumeric,\n    isNaN,\n    compare\n  } = _ref;\n  var asc = compare;\n\n  var desc = (a, b) => -compare(a, b);\n  /**\n   * Partition-based selection of an array or 1D matrix.\n   * Will find the kth smallest value, and mutates the input array.\n   * Uses Quickselect.\n   *\n   * Syntax:\n   *\n   *    math.partitionSelect(x, k)\n   *    math.partitionSelect(x, k, compare)\n   *\n   * Examples:\n   *\n   *    math.partitionSelect([5, 10, 1], 2)           // returns 10\n   *    math.partitionSelect(['C', 'B', 'A', 'D'], 1) // returns 'B'\n   *\n   *    function sortByLength (a, b) {\n   *      return a.length - b.length\n   *    }\n   *    math.partitionSelect(['Langdon', 'Tom', 'Sara'], 2, sortByLength) // returns 'Langdon'\n   *\n   * See also:\n   *\n   *    sort\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to sort\n   * @param {Number} k            The kth smallest value to be retrieved zero-based index\n   * @param {Function | 'asc' | 'desc'} [compare='asc']\n   *        An optional comparator function. The function is called as\n   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,\n   *        and 0 when a == b.\n   * @return {*} Returns the kth lowest value.\n   */\n\n\n  return typed(name, {\n    'Array | Matrix, number': function ArrayMatrixNumber(x, k) {\n      return _partitionSelect(x, k, asc);\n    },\n    'Array | Matrix, number, string': function ArrayMatrixNumberString(x, k, compare) {\n      if (compare === 'asc') {\n        return _partitionSelect(x, k, asc);\n      } else if (compare === 'desc') {\n        return _partitionSelect(x, k, desc);\n      } else {\n        throw new Error('Compare string must be \"asc\" or \"desc\"');\n      }\n    },\n    'Array | Matrix, number, function': _partitionSelect\n  });\n\n  function _partitionSelect(x, k, compare) {\n    if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(k) || k < 0) {\n      throw new Error('k must be a non-negative integer');\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMatrix)(x)) {\n      var size = x.size();\n\n      if (size.length > 1) {\n        throw new Error('Only one dimensional matrices supported');\n      }\n\n      return quickSelect(x.valueOf(), k, compare);\n    }\n\n    if (Array.isArray(x)) {\n      return quickSelect(x, k, compare);\n    }\n  }\n  /**\n   * Quickselect algorithm.\n   * Code adapted from:\n   * https://blog.teamleadnet.com/2012/07/quick-select-algorithm-find-kth-element.html\n   *\n   * @param {Array} arr\n   * @param {Number} k\n   * @param {Function} compare\n   * @private\n   */\n\n\n  function quickSelect(arr, k, compare) {\n    if (k >= arr.length) {\n      throw new Error('k out of bounds');\n    } // check for NaN values since these can cause an infinite while loop\n\n\n    for (var i = 0; i < arr.length; i++) {\n      if (isNumeric(arr[i]) && isNaN(arr[i])) {\n        return arr[i]; // return NaN\n      }\n    }\n\n    var from = 0;\n    var to = arr.length - 1; // if from == to we reached the kth element\n\n    while (from < to) {\n      var r = from;\n      var w = to;\n      var pivot = arr[Math.floor(Math.random() * (to - from + 1)) + from]; // stop if the reader and writer meets\n\n      while (r < w) {\n        // arr[r] >= pivot\n        if (compare(arr[r], pivot) >= 0) {\n          // put the large values at the end\n          var tmp = arr[w];\n          arr[w] = arr[r];\n          arr[r] = tmp;\n          --w;\n        } else {\n          // the value is smaller than the pivot, skip\n          ++r;\n        }\n      } // if we stepped up (r++) we need to step one down (arr[r] > pivot)\n\n\n      if (compare(arr[r], pivot) > 0) {\n        --r;\n      } // the r pointer is on the end of the first k elements\n\n\n      if (k <= r) {\n        to = r;\n      } else {\n        from = r + 1;\n      }\n    }\n\n    return arr[k];\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/partitionSelect.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/range.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/range.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRange\": () => (/* binding */ createRange)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/noop.js */ \"./node_modules/mathjs/lib/esm/utils/noop.js\");\n\n\nvar name = 'range';\nvar dependencies = ['typed', 'config', '?matrix', '?bignumber', 'smaller', 'smallerEq', 'larger', 'largerEq'];\nvar createRange = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    bignumber,\n    smaller,\n    smallerEq,\n    larger,\n    largerEq\n  } = _ref;\n  /**\n   * Create an array from a range.\n   * By default, the range end is excluded. This can be customized by providing\n   * an extra parameter `includeEnd`.\n   *\n   * Syntax:\n   *\n   *     math.range(str [, includeEnd])               // Create a range from a string,\n   *                                                  // where the string contains the\n   *                                                  // start, optional step, and end,\n   *                                                  // separated by a colon.\n   *     math.range(start, end [, includeEnd])        // Create a range with start and\n   *                                                  // end and a step size of 1.\n   *     math.range(start, end, step [, includeEnd])  // Create a range with start, step,\n   *                                                  // and end.\n   *\n   * Where:\n   *\n   * - `str: string`\n   *   A string 'start:end' or 'start:step:end'\n   * - `start: {number | BigNumber}`\n   *   Start of the range\n   * - `end: number | BigNumber`\n   *   End of the range, excluded by default, included when parameter includeEnd=true\n   * - `step: number | BigNumber`\n   *   Step size. Default value is 1.\n   * - `includeEnd: boolean`\n   *   Option to specify whether to include the end or not. False by default.\n   *\n   * Examples:\n   *\n   *     math.range(2, 6)        // [2, 3, 4, 5]\n   *     math.range(2, -3, -1)   // [2, 1, 0, -1, -2]\n   *     math.range('2:1:6')     // [2, 3, 4, 5]\n   *     math.range(2, 6, true)  // [2, 3, 4, 5, 6]\n   *\n   * See also:\n   *\n   *     ones, zeros, size, subset\n   *\n   * @param {*} args   Parameters describing the ranges `start`, `end`, and optional `step`.\n   * @return {Array | Matrix} range\n   */\n\n  return typed(name, {\n    // TODO: simplify signatures when typed-function supports default values and optional arguments\n    // TODO: a number or boolean should not be converted to string here\n    string: _strRange,\n    'string, boolean': _strRange,\n    'number, number': function numberNumber(start, end) {\n      return _out(_rangeEx(start, end, 1));\n    },\n    'number, number, number': function numberNumberNumber(start, end, step) {\n      return _out(_rangeEx(start, end, step));\n    },\n    'number, number, boolean': function numberNumberBoolean(start, end, includeEnd) {\n      return includeEnd ? _out(_rangeInc(start, end, 1)) : _out(_rangeEx(start, end, 1));\n    },\n    'number, number, number, boolean': function numberNumberNumberBoolean(start, end, step, includeEnd) {\n      return includeEnd ? _out(_rangeInc(start, end, step)) : _out(_rangeEx(start, end, step));\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(start, end) {\n      var BigNumber = start.constructor;\n      return _out(_bigRangeEx(start, end, new BigNumber(1)));\n    },\n    'BigNumber, BigNumber, BigNumber': function BigNumberBigNumberBigNumber(start, end, step) {\n      return _out(_bigRangeEx(start, end, step));\n    },\n    'BigNumber, BigNumber, boolean': function BigNumberBigNumberBoolean(start, end, includeEnd) {\n      var BigNumber = start.constructor;\n      return includeEnd ? _out(_bigRangeInc(start, end, new BigNumber(1))) : _out(_bigRangeEx(start, end, new BigNumber(1)));\n    },\n    'BigNumber, BigNumber, BigNumber, boolean': function BigNumberBigNumberBigNumberBoolean(start, end, step, includeEnd) {\n      return includeEnd ? _out(_bigRangeInc(start, end, step)) : _out(_bigRangeEx(start, end, step));\n    }\n  });\n\n  function _out(arr) {\n    if (config.matrix === 'Matrix') {\n      return matrix ? matrix(arr) : (0,_utils_noop_js__WEBPACK_IMPORTED_MODULE_1__.noMatrix)();\n    }\n\n    return arr;\n  }\n\n  function _strRange(str, includeEnd) {\n    var r = _parse(str);\n\n    if (!r) {\n      throw new SyntaxError('String \"' + str + '\" is no valid range');\n    }\n\n    var fn;\n\n    if (config.number === 'BigNumber') {\n      if (bignumber === undefined) {\n        (0,_utils_noop_js__WEBPACK_IMPORTED_MODULE_1__.noBignumber)();\n      }\n\n      fn = includeEnd ? _bigRangeInc : _bigRangeEx;\n      return _out(fn(bignumber(r.start), bignumber(r.end), bignumber(r.step)));\n    } else {\n      fn = includeEnd ? _rangeInc : _rangeEx;\n      return _out(fn(r.start, r.end, r.step));\n    }\n  }\n  /**\n   * Create a range with numbers. End is excluded\n   * @param {number} start\n   * @param {number} end\n   * @param {number} step\n   * @returns {Array} range\n   * @private\n   */\n\n\n  function _rangeEx(start, end, step) {\n    var array = [];\n    var x = start;\n\n    if (step > 0) {\n      while (smaller(x, end)) {\n        array.push(x);\n        x += step;\n      }\n    } else if (step < 0) {\n      while (larger(x, end)) {\n        array.push(x);\n        x += step;\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Create a range with numbers. End is included\n   * @param {number} start\n   * @param {number} end\n   * @param {number} step\n   * @returns {Array} range\n   * @private\n   */\n\n\n  function _rangeInc(start, end, step) {\n    var array = [];\n    var x = start;\n\n    if (step > 0) {\n      while (smallerEq(x, end)) {\n        array.push(x);\n        x += step;\n      }\n    } else if (step < 0) {\n      while (largerEq(x, end)) {\n        array.push(x);\n        x += step;\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Create a range with big numbers. End is excluded\n   * @param {BigNumber} start\n   * @param {BigNumber} end\n   * @param {BigNumber} step\n   * @returns {Array} range\n   * @private\n   */\n\n\n  function _bigRangeEx(start, end, step) {\n    var zero = bignumber(0);\n    var array = [];\n    var x = start;\n\n    if (step.gt(zero)) {\n      while (smaller(x, end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    } else if (step.lt(zero)) {\n      while (larger(x, end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Create a range with big numbers. End is included\n   * @param {BigNumber} start\n   * @param {BigNumber} end\n   * @param {BigNumber} step\n   * @returns {Array} range\n   * @private\n   */\n\n\n  function _bigRangeInc(start, end, step) {\n    var zero = bignumber(0);\n    var array = [];\n    var x = start;\n\n    if (step.gt(zero)) {\n      while (smallerEq(x, end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    } else if (step.lt(zero)) {\n      while (largerEq(x, end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    }\n\n    return array;\n  }\n  /**\n   * Parse a string into a range,\n   * The string contains the start, optional step, and end, separated by a colon.\n   * If the string does not contain a valid range, null is returned.\n   * For example str='0:2:11'.\n   * @param {string} str\n   * @return {{start: number, end: number, step: number} | null} range Object containing properties start, end, step\n   * @private\n   */\n\n\n  function _parse(str) {\n    var args = str.split(':'); // number\n\n    var nums = args.map(function (arg) {\n      // use Number and not parseFloat as Number returns NaN on invalid garbage in the string\n      return Number(arg);\n    });\n    var invalid = nums.some(function (num) {\n      return isNaN(num);\n    });\n\n    if (invalid) {\n      return null;\n    }\n\n    switch (nums.length) {\n      case 2:\n        return {\n          start: nums[0],\n          end: nums[1],\n          step: 1\n        };\n\n      case 3:\n        return {\n          start: nums[0],\n          end: nums[2],\n          step: nums[1]\n        };\n\n      default:\n        return null;\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/range.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/reshape.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/reshape.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createReshape\": () => (/* binding */ createReshape)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'reshape';\nvar dependencies = ['typed', 'isInteger', 'matrix'];\nvar createReshape = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    isInteger\n  } = _ref;\n  /**\n   * Reshape a multi dimensional array to fit the specified dimensions\n   *\n   * Syntax:\n   *\n   *     math.reshape(x, sizes)\n   *\n   * Examples:\n   *\n   *     math.reshape([1, 2, 3, 4, 5, 6], [2, 3])\n   *     // returns Array  [[1, 2, 3], [4, 5, 6]]\n   *\n   *     math.reshape([[1, 2], [3, 4]], [1, 4])\n   *     // returns Array  [[1, 2, 3, 4]]\n   *\n   *     math.reshape([[1, 2], [3, 4]], [4])\n   *     // returns Array [1, 2, 3, 4]\n   *\n   *     const x = math.matrix([1, 2, 3, 4, 5, 6, 7, 8])\n   *     math.reshape(x, [2, 2, 2])\n   *     // returns Matrix [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]\n   *\n   *    math.reshape([1, 2, 3, 4], [-1, 2])\n   *    // returns Matrix [[1, 2], [3, 4]]\n   *\n   * See also:\n   *\n   *     size, squeeze, resize\n   *\n   * @param {Array | Matrix | *} x  Matrix to be reshaped\n   * @param {number[]} sizes        One dimensional array with integral sizes for\n   *                                each dimension. One -1 is allowed as wildcard,\n   *                                which calculates this dimension automatically.\n   *\n   * @return {* | Array | Matrix}   A reshaped clone of matrix `x`\n   *\n   * @throws {TypeError}            If `sizes` does not contain solely integers\n   * @throws {DimensionError}       If the product of the new dimension sizes does\n   *                                not equal that of the old ones\n   */\n\n  return typed(name, {\n    'Matrix, Array': function MatrixArray(x, sizes) {\n      return x.reshape(sizes);\n    },\n    'Array, Array': function ArrayArray(x, sizes) {\n      sizes.forEach(function (size) {\n        if (!isInteger(size)) {\n          throw new TypeError('Invalid size for dimension: ' + size);\n        }\n      });\n      return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.reshape)(x, sizes);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/reshape.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/resize.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/resize.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createResize\": () => (/* binding */ createResize)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n/* harmony import */ var _error_ArgumentsError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/ArgumentsError.js */ \"./node_modules/mathjs/lib/esm/error/ArgumentsError.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\n\n\n\n\nvar name = 'resize';\nvar dependencies = ['config', 'matrix'];\nvar createResize = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    config,\n    matrix\n  } = _ref;\n  /**\n   * Resize a matrix\n   *\n   * Syntax:\n   *\n   *     math.resize(x, size)\n   *     math.resize(x, size, defaultValue)\n   *\n   * Examples:\n   *\n   *     math.resize([1, 2, 3, 4, 5], [3]) // returns Array  [1, 2, 3]\n   *     math.resize([1, 2, 3], [5], 0)    // returns Array  [1, 2, 3, 0, 0]\n   *     math.resize(2, [2, 3], 0)         // returns Matrix [[2, 0, 0], [0, 0, 0]]\n   *     math.resize(\"hello\", [8], \"!\")    // returns string 'hello!!!'\n   *\n   * See also:\n   *\n   *     size, squeeze, subset, reshape\n   *\n   * @param {Array | Matrix | *} x             Matrix to be resized\n   * @param {Array | Matrix} size              One dimensional array with numbers\n   * @param {number | string} [defaultValue=0] Zero by default, except in\n   *                                           case of a string, in that case\n   *                                           defaultValue = ' '\n   * @return {* | Array | Matrix} A resized clone of matrix `x`\n   */\n  // TODO: rework resize to a typed-function\n\n  return function resize(x, size, defaultValue) {\n    if (arguments.length !== 2 && arguments.length !== 3) {\n      throw new _error_ArgumentsError_js__WEBPACK_IMPORTED_MODULE_1__.ArgumentsError('resize', arguments.length, 2, 3);\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMatrix)(size)) {\n      size = size.valueOf(); // get Array\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBigNumber)(size[0])) {\n      // convert bignumbers to numbers\n      size = size.map(function (value) {\n        return !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBigNumber)(value) ? value : value.toNumber();\n      });\n    } // check x is a Matrix\n\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMatrix)(x)) {\n      // use optimized matrix implementation, return copy\n      return x.resize(size, defaultValue, true);\n    }\n\n    if (typeof x === 'string') {\n      // resize string\n      return _resizeString(x, size, defaultValue);\n    } // check result should be a matrix\n\n\n    var asMatrix = Array.isArray(x) ? false : config.matrix !== 'Array';\n\n    if (size.length === 0) {\n      // output a scalar\n      while (Array.isArray(x)) {\n        x = x[0];\n      }\n\n      return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_3__.clone)(x);\n    } else {\n      // output an array/matrix\n      if (!Array.isArray(x)) {\n        x = [x];\n      }\n\n      x = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_3__.clone)(x);\n      var res = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_4__.resize)(x, size, defaultValue);\n      return asMatrix ? matrix(res) : res;\n    }\n  };\n  /**\n   * Resize a string\n   * @param {string} str\n   * @param {number[]} size\n   * @param {string} [defaultChar=' ']\n   * @private\n   */\n\n  function _resizeString(str, size, defaultChar) {\n    if (defaultChar !== undefined) {\n      if (typeof defaultChar !== 'string' || defaultChar.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue');\n      }\n    } else {\n      defaultChar = ' ';\n    }\n\n    if (size.length !== 1) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_5__.DimensionError(size.length, 1);\n    }\n\n    var len = size[0];\n\n    if (typeof len !== 'number' || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.isInteger)(len)) {\n      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_7__.format)(size) + ')');\n    }\n\n    if (str.length > len) {\n      return str.substring(0, len);\n    } else if (str.length < len) {\n      var res = str;\n\n      for (var i = 0, ii = len - str.length; i < ii; i++) {\n        res += defaultChar;\n      }\n\n      return res;\n    } else {\n      return str;\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/resize.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/rotate.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/rotate.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRotate\": () => (/* binding */ createRotate)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n\n\nvar name = 'rotate';\nvar dependencies = ['typed', 'multiply', 'rotationMatrix'];\nvar createRotate = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    multiply,\n    rotationMatrix\n  } = _ref;\n  /**\n     * Rotate a vector of size 1x2 counter-clockwise by a given angle\n     * Rotate a vector of size 1x3 counter-clockwise by a given angle around the given axis\n     *\n     * Syntax:\n     *\n     *    math.rotate(w, theta)\n     *    math.rotate(w, theta, v)\n     *\n     * Examples:\n     *\n     *    math.rotate([11, 12], math.pi / 2)                           // returns matrix([-12, 11])\n     *    math.rotate(matrix([11, 12]), math.pi / 2)                   // returns matrix([-12, 11])\n     *\n     *    math.rotate([1, 0, 0], unit('90deg'), [0, 0, 1])             // returns matrix([0, 1, 0])\n     *    math.rotate(matrix([1, 0, 0]), unit('90deg'), [0, 0, 1])     // returns matrix([0, 1, 0])\n     *\n     *    math.rotate([1, 0], math.complex(1 + i))                     // returns matrix([cos(1 + i) - sin(1 + i), sin(1 + i) + cos(1 + i)])\n     *\n     * See also:\n     *\n     *    matrix, rotationMatrix\n     *\n     * @param {Array | Matrix} w                             Vector to rotate\n     * @param {number | BigNumber | Complex | Unit} theta    Rotation angle\n     * @param {Array | Matrix} [v]                           Rotation axis\n     * @return {Array | Matrix}                              Multiplication of the rotation matrix and w\n     */\n\n  return typed(name, {\n    'Array , number | BigNumber | Complex | Unit': function ArrayNumberBigNumberComplexUnit(w, theta) {\n      _validateSize(w, 2);\n\n      var matrixRes = multiply(rotationMatrix(theta), w);\n      return matrixRes.toArray();\n    },\n    'Matrix , number | BigNumber | Complex | Unit': function MatrixNumberBigNumberComplexUnit(w, theta) {\n      _validateSize(w, 2);\n\n      return multiply(rotationMatrix(theta), w);\n    },\n    'Array, number | BigNumber | Complex | Unit, Array | Matrix': function ArrayNumberBigNumberComplexUnitArrayMatrix(w, theta, v) {\n      _validateSize(w, 3);\n\n      var matrixRes = multiply(rotationMatrix(theta, v), w);\n      return matrixRes;\n    },\n    'Matrix, number | BigNumber | Complex | Unit, Array | Matrix': function MatrixNumberBigNumberComplexUnitArrayMatrix(w, theta, v) {\n      _validateSize(w, 3);\n\n      return multiply(rotationMatrix(theta, v), w);\n    }\n  });\n\n  function _validateSize(v, expectedSize) {\n    var actualSize = Array.isArray(v) ? (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(v) : v.size();\n\n    if (actualSize.length > 2) {\n      throw new RangeError(\"Vector must be of dimensions 1x\".concat(expectedSize));\n    }\n\n    if (actualSize.length === 2 && actualSize[1] !== 1) {\n      throw new RangeError(\"Vector must be of dimensions 1x\".concat(expectedSize));\n    }\n\n    if (actualSize[0] !== expectedSize) {\n      throw new RangeError(\"Vector must be of dimensions 1x\".concat(expectedSize));\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/rotate.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/rotationMatrix.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/rotationMatrix.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRotationMatrix\": () => (/* binding */ createRotationMatrix)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'rotationMatrix';\nvar dependencies = ['typed', 'config', 'multiplyScalar', 'addScalar', 'unaryMinus', 'norm', 'matrix', 'BigNumber', 'DenseMatrix', 'SparseMatrix', 'cos', 'sin'];\nvar createRotationMatrix = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    multiplyScalar,\n    addScalar,\n    unaryMinus,\n    norm,\n    BigNumber,\n    matrix,\n    DenseMatrix,\n    SparseMatrix,\n    cos,\n    sin\n  } = _ref;\n  /**\n   * Create a 2-dimensional counter-clockwise rotation matrix (2x2) for a given angle (expressed in radians).\n   * Create a 2-dimensional counter-clockwise rotation matrix (3x3) by a given angle (expressed in radians) around a given axis (1x3).\n   *\n   * Syntax:\n   *\n   *    math.rotationMatrix(theta)\n   *    math.rotationMatrix(theta, format)\n   *    math.rotationMatrix(theta, [v])\n   *    math.rotationMatrix(theta, [v], format)\n   *\n   * Examples:\n   *\n   *    math.rotationMatrix(math.pi / 2)                      // returns [[0, -1], [1, 0]]\n   *    math.rotationMatrix(math.bignumber(1))                // returns [[bignumber(cos(1)), bignumber(-sin(1))], [bignumber(sin(1)), bignumber(cos(1))]]\n   *    math.rotationMatrix(math.complex(1 + i))              // returns [[cos(1 + i), -sin(1 + i)], [sin(1 + i), cos(1 + i)]]\n   *    math.rotationMatrix(math.unit('1rad'))                // returns [[cos(1), -sin(1)], [sin(1), cos(1)]]\n   *\n   *    math.rotationMatrix(math.pi / 2, [0, 1, 0])           // returns [[0, 0, 1], [0, 1, 0], [-1, 0, 0]]\n   *    math.rotationMatrix(math.pi / 2, matrix([0, 1, 0]))   // returns matrix([[0, 0, 1], [0, 1, 0], [-1, 0, 0]])\n   *\n   *\n   * See also:\n   *\n   *    matrix, cos, sin\n   *\n   *\n   * @param {number | BigNumber | Complex | Unit} theta    Rotation angle\n   * @param {Array | Matrix} [v]                           Rotation axis\n   * @param {string} [format]                              Result Matrix storage format\n   * @return {Array | Matrix}                              Rotation matrix\n   */\n\n  return typed(name, {\n    '': function _() {\n      return config.matrix === 'Matrix' ? matrix([]) : [];\n    },\n    string: function string(format) {\n      return matrix(format);\n    },\n    'number | BigNumber | Complex | Unit': function numberBigNumberComplexUnit(theta) {\n      return _rotationMatrix2x2(theta, config.matrix === 'Matrix' ? 'dense' : undefined);\n    },\n    'number | BigNumber | Complex | Unit, string': function numberBigNumberComplexUnitString(theta, format) {\n      return _rotationMatrix2x2(theta, format);\n    },\n    'number | BigNumber | Complex | Unit, Array': function numberBigNumberComplexUnitArray(theta, v) {\n      var matrixV = matrix(v);\n\n      _validateVector(matrixV);\n\n      return _rotationMatrix3x3(theta, matrixV, undefined);\n    },\n    'number | BigNumber | Complex | Unit, Matrix': function numberBigNumberComplexUnitMatrix(theta, v) {\n      _validateVector(v);\n\n      var storageType = v.storage() || (config.matrix === 'Matrix' ? 'dense' : undefined);\n      return _rotationMatrix3x3(theta, v, storageType);\n    },\n    'number | BigNumber | Complex | Unit, Array, string': function numberBigNumberComplexUnitArrayString(theta, v, format) {\n      var matrixV = matrix(v);\n\n      _validateVector(matrixV);\n\n      return _rotationMatrix3x3(theta, matrixV, format);\n    },\n    'number | BigNumber | Complex | Unit, Matrix, string': function numberBigNumberComplexUnitMatrixString(theta, v, format) {\n      _validateVector(v);\n\n      return _rotationMatrix3x3(theta, v, format);\n    }\n  });\n  /**\n   * Returns 2x2 matrix of 2D rotation of angle theta\n   *\n   * @param {number | BigNumber | Complex | Unit} theta  The rotation angle\n   * @param {string} format                              The result Matrix storage format\n   * @returns {Matrix}\n   * @private\n   */\n\n  function _rotationMatrix2x2(theta, format) {\n    var Big = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(theta);\n    var minusOne = Big ? new BigNumber(-1) : -1;\n    var cosTheta = cos(theta);\n    var sinTheta = sin(theta);\n    var data = [[cosTheta, multiplyScalar(minusOne, sinTheta)], [sinTheta, cosTheta]];\n    return _convertToFormat(data, format);\n  }\n\n  function _validateVector(v) {\n    var size = v.size();\n\n    if (size.length < 1 || size[0] !== 3) {\n      throw new RangeError('Vector must be of dimensions 1x3');\n    }\n  }\n\n  function _mul(array) {\n    return array.reduce((p, curr) => multiplyScalar(p, curr));\n  }\n\n  function _convertToFormat(data, format) {\n    if (format) {\n      if (format === 'sparse') {\n        return new SparseMatrix(data);\n      }\n\n      if (format === 'dense') {\n        return new DenseMatrix(data);\n      }\n\n      throw new TypeError(\"Unknown matrix type \\\"\".concat(format, \"\\\"\"));\n    }\n\n    return data;\n  }\n  /**\n   * Returns a 3x3 matrix of rotation of angle theta around vector v\n   *\n   * @param {number | BigNumber | Complex | Unit} theta The rotation angle\n   * @param {Matrix} v                                  The rotation axis vector\n   * @param {string} format                             The storage format of the resulting matrix\n   * @returns {Matrix}\n   * @private\n   */\n\n\n  function _rotationMatrix3x3(theta, v, format) {\n    var normV = norm(v);\n\n    if (normV === 0) {\n      throw new RangeError('Rotation around zero vector');\n    }\n\n    var Big = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(theta) ? BigNumber : null;\n    var one = Big ? new Big(1) : 1;\n    var minusOne = Big ? new Big(-1) : -1;\n    var vx = Big ? new Big(v.get([0]) / normV) : v.get([0]) / normV;\n    var vy = Big ? new Big(v.get([1]) / normV) : v.get([1]) / normV;\n    var vz = Big ? new Big(v.get([2]) / normV) : v.get([2]) / normV;\n    var c = cos(theta);\n    var oneMinusC = addScalar(one, unaryMinus(c));\n    var s = sin(theta);\n    var r11 = addScalar(c, _mul([vx, vx, oneMinusC]));\n    var r12 = addScalar(_mul([vx, vy, oneMinusC]), _mul([minusOne, vz, s]));\n    var r13 = addScalar(_mul([vx, vz, oneMinusC]), _mul([vy, s]));\n    var r21 = addScalar(_mul([vx, vy, oneMinusC]), _mul([vz, s]));\n    var r22 = addScalar(c, _mul([vy, vy, oneMinusC]));\n    var r23 = addScalar(_mul([vy, vz, oneMinusC]), _mul([minusOne, vx, s]));\n    var r31 = addScalar(_mul([vx, vz, oneMinusC]), _mul([minusOne, vy, s]));\n    var r32 = addScalar(_mul([vy, vz, oneMinusC]), _mul([vx, s]));\n    var r33 = addScalar(c, _mul([vz, vz, oneMinusC]));\n    var data = [[r11, r12, r13], [r21, r22, r23], [r31, r32, r33]];\n    return _convertToFormat(data, format);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/rotationMatrix.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/row.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/row.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRow\": () => (/* binding */ createRow)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n\n\n\nvar name = 'row';\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\nvar createRow = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Index,\n    matrix,\n    range\n  } = _ref;\n  /**\n   * Return a row from a Matrix.\n   *\n   * Syntax:\n   *\n   *     math.row(value, index)\n   *\n   * Example:\n   *\n   *     // get a row\n   *     const d = [[1, 2], [3, 4]]\n   *     math.row(d, 1) // returns [[3, 4]]\n   *\n   * See also:\n   *\n   *     column\n   *\n   * @param {Array | Matrix } value   An array or matrix\n   * @param {number} row              The index of the row\n   * @return {Array | Matrix}         The retrieved row\n   */\n\n  return typed(name, {\n    'Matrix, number': _row,\n    'Array, number': function ArrayNumber(value, row) {\n      return _row(matrix((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(value)), row).valueOf();\n    }\n  });\n  /**\n   * Retrieve a row of a matrix\n   * @param {Matrix } value  A matrix\n   * @param {number} row     The index of the row\n   * @return {Matrix}        The retrieved row\n   */\n\n  function _row(value, row) {\n    // check dimensions\n    if (value.size().length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_2__.validateIndex)(row, value.size()[0]);\n    var columnRange = range(0, value.size()[1]);\n    var index = new Index(row, columnRange);\n    return value.subset(index);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/row.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/size.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/size.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSize\": () => (/* binding */ createSize)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_noop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/noop.js */ \"./node_modules/mathjs/lib/esm/utils/noop.js\");\n\n\n\nvar name = 'size';\nvar dependencies = ['typed', 'config', '?matrix'];\nvar createSize = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix\n  } = _ref;\n  /**\n   * Calculate the size of a matrix or scalar.\n   *\n   * Syntax:\n   *\n   *     math.size(x)\n   *\n   * Examples:\n   *\n   *     math.size(2.3)                  // returns []\n   *     math.size('hello world')        // returns [11]\n   *\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.size(A)                    // returns [2, 3]\n   *     math.size(math.range(1,6))      // returns [5]\n   *\n   * See also:\n   *\n   *     count, resize, squeeze, subset\n   *\n   * @param {boolean | number | Complex | Unit | string | Array | Matrix} x  A matrix\n   * @return {Array | Matrix} A vector with size of `x`.\n   */\n\n  return typed(name, {\n    Matrix: function Matrix(x) {\n      return x.create(x.size());\n    },\n    Array: _utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize,\n    string: function string(x) {\n      return config.matrix === 'Array' ? [x.length] : matrix([x.length]);\n    },\n    'number | Complex | BigNumber | Unit | boolean | null': function numberComplexBigNumberUnitBooleanNull(x) {\n      // scalar\n      return config.matrix === 'Array' ? [] : matrix ? matrix([]) : (0,_utils_noop_js__WEBPACK_IMPORTED_MODULE_2__.noMatrix)();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/size.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/sort.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/sort.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSort\": () => (/* binding */ createSort)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'sort';\nvar dependencies = ['typed', 'matrix', 'compare', 'compareNatural'];\nvar createSort = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    compare,\n    compareNatural\n  } = _ref;\n  var compareAsc = compare;\n\n  var compareDesc = (a, b) => -compare(a, b);\n  /**\n   * Sort the items in a matrix.\n   *\n   * Syntax:\n   *\n   *    math.sort(x)\n   *    math.sort(x, compare)\n   *\n   * Examples:\n   *\n   *    math.sort([5, 10, 1]) // returns [1, 5, 10]\n   *    math.sort(['C', 'B', 'A', 'D'], math.compareNatural)\n   *    // returns ['A', 'B', 'C', 'D']\n   *\n   *    function sortByLength (a, b) {\n   *      return a.length - b.length\n   *    }\n   *    math.sort(['Langdon', 'Tom', 'Sara'], sortByLength)\n   *    // returns ['Tom', 'Sara', 'Langdon']\n   *\n   * See also:\n   *\n   *    filter, forEach, map, compare, compareNatural\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to sort\n   * @param {Function | 'asc' | 'desc' | 'natural'} [compare='asc']\n   *        An optional _comparator function or name. The function is called as\n   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,\n   *        and 0 when a == b.\n   * @return {Matrix | Array} Returns the sorted matrix.\n   */\n\n\n  return typed(name, {\n    Array: function Array(x) {\n      _arrayIsVector(x);\n\n      return x.sort(compareAsc);\n    },\n    Matrix: function Matrix(x) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(compareAsc), x.storage());\n    },\n    'Array, function': function ArrayFunction(x, _comparator) {\n      _arrayIsVector(x);\n\n      return x.sort(_comparator);\n    },\n    'Matrix, function': function MatrixFunction(x, _comparator) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(_comparator), x.storage());\n    },\n    'Array, string': function ArrayString(x, order) {\n      _arrayIsVector(x);\n\n      return x.sort(_comparator(order));\n    },\n    'Matrix, string': function MatrixString(x, order) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(_comparator(order)), x.storage());\n    }\n  });\n  /**\n   * Get the comparator for given order ('asc', 'desc', 'natural')\n   * @param {'asc' | 'desc' | 'natural'} order\n   * @return {Function} Returns a _comparator function\n   */\n\n  function _comparator(order) {\n    if (order === 'asc') {\n      return compareAsc;\n    } else if (order === 'desc') {\n      return compareDesc;\n    } else if (order === 'natural') {\n      return compareNatural;\n    } else {\n      throw new Error('String \"asc\", \"desc\", or \"natural\" expected');\n    }\n  }\n  /**\n   * Validate whether an array is one dimensional\n   * Throws an error when this is not the case\n   * @param {Array} array\n   * @private\n   */\n\n\n  function _arrayIsVector(array) {\n    if ((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(array).length !== 1) {\n      throw new Error('One dimensional array expected');\n    }\n  }\n  /**\n   * Validate whether a matrix is one dimensional\n   * Throws an error when this is not the case\n   * @param {Matrix} matrix\n   * @private\n   */\n\n\n  function _matrixIsVector(matrix) {\n    if (matrix.size().length !== 1) {\n      throw new Error('One dimensional matrix expected');\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/sort.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/sqrtm.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/sqrtm.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSqrtm\": () => (/* binding */ createSqrtm)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'sqrtm';\nvar dependencies = ['typed', 'abs', 'add', 'multiply', 'sqrt', 'subtract', 'inv', 'size', 'max', 'identity'];\nvar createSqrtm = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    abs,\n    add,\n    multiply,\n    sqrt,\n    subtract,\n    inv,\n    size,\n    max,\n    identity\n  } = _ref;\n  var _maxIterations = 1e3;\n  var _tolerance = 1e-6;\n  /**\n   * Calculate the principal square root matrix using the Denman–Beavers iterative method\n   *\n   * https://en.wikipedia.org/wiki/Square_root_of_a_matrix#By_Denman–Beavers_iteration\n   *\n   * @param  {Array | Matrix} A   The square matrix `A`\n   * @return {Array | Matrix}     The principal square root of matrix `A`\n   * @private\n   */\n\n  function _denmanBeavers(A) {\n    var error;\n    var iterations = 0;\n    var Y = A;\n    var Z = identity(size(A));\n\n    do {\n      var Yk = Y;\n      Y = multiply(0.5, add(Yk, inv(Z)));\n      Z = multiply(0.5, add(Z, inv(Yk)));\n      error = max(abs(subtract(Y, Yk)));\n\n      if (error > _tolerance && ++iterations > _maxIterations) {\n        throw new Error('computing square root of matrix: iterative method could not converge');\n      }\n    } while (error > _tolerance);\n\n    return Y;\n  }\n  /**\n   * Calculate the principal square root of a square matrix.\n   * The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.\n   *\n   * https://en.wikipedia.org/wiki/Square_root_of_a_matrix\n   *\n   * Syntax:\n   *\n   *     X = math.sqrtm(A)\n   *\n   * Examples:\n   *\n   *     math.sqrtm([[1, 2], [3, 4]]) // returns [[-2, 1], [1.5, -0.5]]\n   *\n   * See also:\n   *\n   *     sqrt, pow\n   *\n   * @param  {Array | Matrix} A   The square matrix `A`\n   * @return {Array | Matrix}     The principal square root of matrix `A`\n   */\n\n\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(A) {\n      var size = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(A) ? A.size() : (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_2__.arraySize)(A);\n\n      switch (size.length) {\n        case 1:\n          // Single element Array | Matrix\n          if (size[0] === 1) {\n            return sqrt(A);\n          } else {\n            throw new RangeError('Matrix must be square ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n          }\n\n        case 2:\n          {\n            // Two-dimensional Array | Matrix\n            var rows = size[0];\n            var cols = size[1];\n\n            if (rows === cols) {\n              return _denmanBeavers(A);\n            } else {\n              throw new RangeError('Matrix must be square ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n            }\n          }\n\n        default:\n          // Multi dimensional array\n          throw new RangeError('Matrix must be at most two dimensional ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_3__.format)(size) + ')');\n      }\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/sqrtm.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/squeeze.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/squeeze.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSqueeze\": () => (/* binding */ createSqueeze)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'squeeze';\nvar dependencies = ['typed', 'matrix'];\nvar createSqueeze = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  /**\n   * Squeeze a matrix, remove inner and outer singleton dimensions from a matrix.\n   *\n   * Syntax:\n   *\n   *     math.squeeze(x)\n   *\n   * Examples:\n   *\n   *     math.squeeze([3])           // returns 3\n   *     math.squeeze([[3]])         // returns 3\n   *\n   *     const A = math.zeros(3, 1)    // returns [[0], [0], [0]] (size 3x1)\n   *     math.squeeze(A)             // returns [0, 0, 0] (size 3)\n   *\n   *     const B = math.zeros(1, 3)    // returns [[0, 0, 0]] (size 1x3)\n   *     math.squeeze(B)             // returns [0, 0, 0] (size 3)\n   *\n   *     // only inner and outer dimensions are removed\n   *     const C = math.zeros(2, 1, 3) // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)\n   *     math.squeeze(C)             // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)\n   *\n   * See also:\n   *\n   *     subset\n   *\n   * @param {Matrix | Array} x      Matrix to be squeezed\n   * @return {Matrix | Array} Squeezed matrix\n   */\n\n  return typed(name, {\n    Array: function Array(x) {\n      return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.squeeze)((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(x));\n    },\n    Matrix: function Matrix(x) {\n      var res = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.squeeze)(x.toArray()); // FIXME: return the same type of matrix as the input\n\n      return Array.isArray(res) ? matrix(res) : res;\n    },\n    any: function any(x) {\n      // scalar\n      return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(x);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/squeeze.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/subset.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/subset.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSubset\": () => (/* binding */ createSubset)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_customs_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/customs.js */ \"./node_modules/mathjs/lib/esm/utils/customs.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\n\n\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix'];\nvar createSubset = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  /**\n   * Get or set a subset of a matrix or string.\n   *\n   * Syntax:\n   *     math.subset(value, index)                                // retrieve a subset\n   *     math.subset(value, index, replacement [, defaultValue])  // replace a subset\n   *\n   * Examples:\n   *\n   *     // get a subset\n   *     const d = [[1, 2], [3, 4]]\n   *     math.subset(d, math.index(1, 0))        // returns 3\n   *     math.subset(d, math.index([0, 1], 1))   // returns [[2], [4]]\n   *\n   *     // replace a subset\n   *     const e = []\n   *     const f = math.subset(e, math.index(0, [0, 2]), [5, 6])  // f = [[5, 6]]\n   *     const g = math.subset(f, math.index(1, 1), 7, 0)         // g = [[5, 6], [0, 7]]\n   *\n   * See also:\n   *\n   *     size, resize, squeeze, index\n   *\n   * @param {Array | Matrix | string} matrix  An array, matrix, or string\n   * @param {Index} index                     An index containing ranges for each\n   *                                          dimension\n   * @param {*} [replacement]                 An array, matrix, or scalar.\n   *                                          If provided, the subset is replaced with replacement.\n   *                                          If not provided, the subset is returned\n   * @param {*} [defaultValue=undefined]      Default value, filled in on new entries when\n   *                                          the matrix is resized. If not provided,\n   *                                          math.matrix elements will be left undefined.\n   * @return {Array | Matrix | string} Either the retrieved subset or the updated matrix.\n   */\n\n  return typed(name, {\n    // get subset\n    'Array, Index': function ArrayIndex(value, index) {\n      var m = matrix(value);\n      var subset = m.subset(index); // returns a Matrix\n\n      return index.isScalar() ? subset : subset.valueOf(); // return an Array (like the input)\n    },\n    'Matrix, Index': function MatrixIndex(value, index) {\n      return value.subset(index);\n    },\n    'Object, Index': _getObjectProperty,\n    'string, Index': _getSubstring,\n    // set subset\n    'Array, Index, any': function ArrayIndexAny(value, index, replacement) {\n      return matrix((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(value)).subset(index, replacement, undefined).valueOf();\n    },\n    'Array, Index, any, any': function ArrayIndexAnyAny(value, index, replacement, defaultValue) {\n      return matrix((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(value)).subset(index, replacement, defaultValue).valueOf();\n    },\n    'Matrix, Index, any': function MatrixIndexAny(value, index, replacement) {\n      return value.clone().subset(index, replacement);\n    },\n    'Matrix, Index, any, any': function MatrixIndexAnyAny(value, index, replacement, defaultValue) {\n      return value.clone().subset(index, replacement, defaultValue);\n    },\n    'string, Index, string': _setSubstring,\n    'string, Index, string, string': _setSubstring,\n    'Object, Index, any': _setObjectProperty\n  });\n});\n/**\n * Retrieve a subset of a string\n * @param {string} str            string from which to get a substring\n * @param {Index} index           An index containing ranges for each dimension\n * @returns {string} substring\n * @private\n */\n\nfunction _getSubstring(str, index) {\n  if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isIndex)(index)) {\n    // TODO: better error message\n    throw new TypeError('Index expected');\n  }\n\n  if (index.size().length !== 1) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_3__.DimensionError(index.size().length, 1);\n  } // validate whether the range is out of range\n\n\n  var strLen = str.length;\n  (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_4__.validateIndex)(index.min()[0], strLen);\n  (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_4__.validateIndex)(index.max()[0], strLen);\n  var range = index.dimension(0);\n  var substr = '';\n  range.forEach(function (v) {\n    substr += str.charAt(v);\n  });\n  return substr;\n}\n/**\n * Replace a substring in a string\n * @param {string} str            string to be replaced\n * @param {Index} index           An index containing ranges for each dimension\n * @param {string} replacement    Replacement string\n * @param {string} [defaultValue] Default value to be uses when resizing\n *                                the string. is ' ' by default\n * @returns {string} result\n * @private\n */\n\n\nfunction _setSubstring(str, index, replacement, defaultValue) {\n  if (!index || index.isIndex !== true) {\n    // TODO: better error message\n    throw new TypeError('Index expected');\n  }\n\n  if (index.size().length !== 1) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_3__.DimensionError(index.size().length, 1);\n  }\n\n  if (defaultValue !== undefined) {\n    if (typeof defaultValue !== 'string' || defaultValue.length !== 1) {\n      throw new TypeError('Single character expected as defaultValue');\n    }\n  } else {\n    defaultValue = ' ';\n  }\n\n  var range = index.dimension(0);\n  var len = range.size()[0];\n\n  if (len !== replacement.length) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_3__.DimensionError(range.size()[0], replacement.length);\n  } // validate whether the range is out of range\n\n\n  var strLen = str.length;\n  (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_4__.validateIndex)(index.min()[0]);\n  (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_4__.validateIndex)(index.max()[0]); // copy the string into an array with characters\n\n  var chars = [];\n\n  for (var i = 0; i < strLen; i++) {\n    chars[i] = str.charAt(i);\n  }\n\n  range.forEach(function (v, i) {\n    chars[v] = replacement.charAt(i[0]);\n  }); // initialize undefined characters with a space\n\n  if (chars.length > strLen) {\n    for (var _i = strLen - 1, _len = chars.length; _i < _len; _i++) {\n      if (!chars[_i]) {\n        chars[_i] = defaultValue;\n      }\n    }\n  }\n\n  return chars.join('');\n}\n/**\n * Retrieve a property from an object\n * @param {Object} object\n * @param {Index} index\n * @return {*} Returns the value of the property\n * @private\n */\n\n\nfunction _getObjectProperty(object, index) {\n  if (index.size().length !== 1) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_3__.DimensionError(index.size(), 1);\n  }\n\n  var key = index.dimension(0);\n\n  if (typeof key !== 'string') {\n    throw new TypeError('String expected as index to retrieve an object property');\n  }\n\n  return (0,_utils_customs_js__WEBPACK_IMPORTED_MODULE_5__.getSafeProperty)(object, key);\n}\n/**\n * Set a property on an object\n * @param {Object} object\n * @param {Index} index\n * @param {*} replacement\n * @return {*} Returns the updated object\n * @private\n */\n\n\nfunction _setObjectProperty(object, index, replacement) {\n  if (index.size().length !== 1) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_3__.DimensionError(index.size(), 1);\n  }\n\n  var key = index.dimension(0);\n\n  if (typeof key !== 'string') {\n    throw new TypeError('String expected as index to retrieve an object property');\n  } // clone the object, and apply the property to the clone\n\n\n  var updated = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(object);\n  (0,_utils_customs_js__WEBPACK_IMPORTED_MODULE_5__.setSafeProperty)(updated, key, replacement);\n  return updated;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/subset.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/trace.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/trace.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTrace\": () => (/* binding */ createTrace)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'trace';\nvar dependencies = ['typed', 'matrix', 'add'];\nvar createTrace = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    add\n  } = _ref;\n  /**\n   * Calculate the trace of a matrix: the sum of the elements on the main\n   * diagonal of a square matrix.\n   *\n   * Syntax:\n   *\n   *    math.trace(x)\n   *\n   * Examples:\n   *\n   *    math.trace([[1, 2], [3, 4]]) // returns 5\n   *\n   *    const A = [\n   *      [1, 2, 3],\n   *      [-1, 2, 3],\n   *      [2, 0, 3]\n   *    ]\n   *    math.trace(A) // returns 6\n   *\n   * See also:\n   *\n   *    diag\n   *\n   * @param {Array | Matrix} x  A matrix\n   *\n   * @return {number} The trace of `x`\n   */\n\n  return typed('trace', {\n    Array: function _arrayTrace(x) {\n      // use dense matrix implementation\n      return _denseTrace(matrix(x));\n    },\n    SparseMatrix: _sparseTrace,\n    DenseMatrix: _denseTrace,\n    any: _utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone\n  });\n\n  function _denseTrace(m) {\n    // matrix size & data\n    var size = m._size;\n    var data = m._data; // process dimensions\n\n    switch (size.length) {\n      case 1:\n        // vector\n        if (size[0] === 1) {\n          // return data[0]\n          return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(data[0]);\n        }\n\n        throw new RangeError('Matrix must be square (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_2__.format)(size) + ')');\n\n      case 2:\n        {\n          // two dimensional\n          var rows = size[0];\n          var cols = size[1];\n\n          if (rows === cols) {\n            // calulate sum\n            var sum = 0; // loop diagonal\n\n            for (var i = 0; i < rows; i++) {\n              sum = add(sum, data[i][i]);\n            } // return trace\n\n\n            return sum;\n          } else {\n            throw new RangeError('Matrix must be square (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_2__.format)(size) + ')');\n          }\n        }\n\n      default:\n        // multi dimensional\n        throw new RangeError('Matrix must be two dimensional (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_2__.format)(size) + ')');\n    }\n  }\n\n  function _sparseTrace(m) {\n    // matrix arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr;\n    var size = m._size; // check dimensions\n\n    var rows = size[0];\n    var columns = size[1]; // matrix must be square\n\n    if (rows === columns) {\n      // calulate sum\n      var sum = 0; // check we have data (avoid looping columns)\n\n      if (values.length > 0) {\n        // loop columns\n        for (var j = 0; j < columns; j++) {\n          // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n          var k0 = ptr[j];\n          var k1 = ptr[j + 1]; // loop k within [k0, k1[\n\n          for (var k = k0; k < k1; k++) {\n            // row index\n            var i = index[k]; // check row\n\n            if (i === j) {\n              // accumulate value\n              sum = add(sum, values[k]); // exit loop\n\n              break;\n            }\n\n            if (i > j) {\n              // exit loop, no value on the diagonal for column j\n              break;\n            }\n          }\n        }\n      } // return trace\n\n\n      return sum;\n    }\n\n    throw new RangeError('Matrix must be square (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_2__.format)(size) + ')');\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/trace.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/transpose.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/transpose.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTranspose\": () => (/* binding */ createTranspose)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'transpose';\nvar dependencies = ['typed', 'matrix'];\nvar createTranspose = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  /**\n   * Transpose a matrix. All values of the matrix are reflected over its\n   * main diagonal. Only applicable to two dimensional matrices containing\n   * a vector (i.e. having size `[1,n]` or `[n,1]`). One dimensional\n   * vectors and scalars return the input unchanged.\n   *\n   * Syntax:\n   *\n   *     math.transpose(x)\n   *\n   * Examples:\n   *\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.transpose(A)               // returns [[1, 4], [2, 5], [3, 6]]\n   *\n   * See also:\n   *\n   *     diag, inv, subset, squeeze\n   *\n   * @param {Array | Matrix} x  Matrix to be transposed\n   * @return {Array | Matrix}   The transposed matrix\n   */\n\n  return typed('transpose', {\n    Array: function Array(x) {\n      // use dense matrix implementation\n      return this(matrix(x)).valueOf();\n    },\n    Matrix: function Matrix(x) {\n      // matrix size\n      var size = x.size(); // result\n\n      var c; // process dimensions\n\n      switch (size.length) {\n        case 1:\n          // vector\n          c = x.clone();\n          break;\n\n        case 2:\n          {\n            // rows and columns\n            var rows = size[0];\n            var columns = size[1]; // check columns\n\n            if (columns === 0) {\n              // throw exception\n              throw new RangeError('Cannot transpose a 2D matrix with no columns (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_1__.format)(size) + ')');\n            } // process storage format\n\n\n            switch (x.storage()) {\n              case 'dense':\n                c = _denseTranspose(x, rows, columns);\n                break;\n\n              case 'sparse':\n                c = _sparseTranspose(x, rows, columns);\n                break;\n            }\n          }\n          break;\n\n        default:\n          // multi dimensional\n          throw new RangeError('Matrix must be a vector or two dimensional (size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_1__.format)(this._size) + ')');\n      }\n\n      return c;\n    },\n    // scalars\n    any: function any(x) {\n      return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(x);\n    }\n  });\n\n  function _denseTranspose(m, rows, columns) {\n    // matrix array\n    var data = m._data; // transposed matrix data\n\n    var transposed = [];\n    var transposedRow; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // initialize row\n      transposedRow = transposed[j] = []; // loop rows\n\n      for (var i = 0; i < rows; i++) {\n        // set data\n        transposedRow[i] = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(data[i][j]);\n      }\n    } // return matrix\n\n\n    return m.createDenseMatrix({\n      data: transposed,\n      size: [columns, rows],\n      datatype: m._datatype\n    });\n  }\n\n  function _sparseTranspose(m, rows, columns) {\n    // matrix arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // result matrices\n\n    var cvalues = values ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // row counts\n\n    var w = [];\n\n    for (var x = 0; x < rows; x++) {\n      w[x] = 0;\n    } // vars\n\n\n    var p, l, j; // loop values in matrix\n\n    for (p = 0, l = index.length; p < l; p++) {\n      // number of values in row\n      w[index[p]]++;\n    } // cumulative sum\n\n\n    var sum = 0; // initialize cptr with the cummulative sum of row counts\n\n    for (var i = 0; i < rows; i++) {\n      // update cptr\n      cptr.push(sum); // update sum\n\n      sum += w[i]; // update w\n\n      w[i] = cptr[i];\n    } // update cptr\n\n\n    cptr.push(sum); // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // values & index in column\n      for (var k0 = ptr[j], k1 = ptr[j + 1], k = k0; k < k1; k++) {\n        // C values & index\n        var q = w[index[k]]++; // C[j, i] = A[i, j]\n\n        cindex[q] = j; // check we need to process values (pattern matrix)\n\n        if (values) {\n          cvalues[q] = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(values[k]);\n        }\n      }\n    } // return matrix\n\n\n    return m.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [columns, rows],\n      datatype: m._datatype\n    });\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/transpose.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/matrix/zeros.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/matrix/zeros.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createZeros\": () => (/* binding */ createZeros)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'zeros';\nvar dependencies = ['typed', 'config', 'matrix', 'BigNumber'];\nvar createZeros = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    BigNumber\n  } = _ref;\n  /**\n   * Create a matrix filled with zeros. The created matrix can have one or\n   * multiple dimensions.\n   *\n   * Syntax:\n   *\n   *    math.zeros(m)\n   *    math.zeros(m, format)\n   *    math.zeros(m, n)\n   *    math.zeros(m, n, format)\n   *    math.zeros([m, n])\n   *    math.zeros([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.zeros(3)                  // returns [0, 0, 0]\n   *    math.zeros(3, 2)               // returns [[0, 0], [0, 0], [0, 0]]\n   *    math.zeros(3, 'dense')         // returns [0, 0, 0]\n   *\n   *    const A = [[1, 2, 3], [4, 5, 6]]\n   *    math.zeros(math.size(A))       // returns [[0, 0, 0], [0, 0, 0]]\n   *\n   * See also:\n   *\n   *    ones, identity, size, range\n   *\n   * @param {...number | Array} size    The size of each dimension of the matrix\n   * @param {string} [format]           The Matrix storage format\n   *\n   * @return {Array | Matrix}           A matrix filled with zeros\n   */\n\n  return typed(name, {\n    '': function _() {\n      return config.matrix === 'Array' ? _zeros([]) : _zeros([], 'default');\n    },\n    // math.zeros(m, n, p, ..., format)\n    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this\n    '...number | BigNumber | string': function numberBigNumberString(size) {\n      var last = size[size.length - 1];\n\n      if (typeof last === 'string') {\n        var format = size.pop();\n        return _zeros(size, format);\n      } else if (config.matrix === 'Array') {\n        return _zeros(size);\n      } else {\n        return _zeros(size, 'default');\n      }\n    },\n    Array: _zeros,\n    Matrix: function Matrix(size) {\n      var format = size.storage();\n      return _zeros(size.valueOf(), format);\n    },\n    'Array | Matrix, string': function ArrayMatrixString(size, format) {\n      return _zeros(size.valueOf(), format);\n    }\n  });\n  /**\n   * Create an Array or Matrix with zeros\n   * @param {Array} size\n   * @param {string} [format='default']\n   * @return {Array | Matrix}\n   * @private\n   */\n\n  function _zeros(size, format) {\n    var hasBigNumbers = _normalize(size);\n\n    var defaultValue = hasBigNumbers ? new BigNumber(0) : 0;\n\n    _validate(size);\n\n    if (format) {\n      // return a matrix\n      var m = matrix(format);\n\n      if (size.length > 0) {\n        return m.resize(size, defaultValue);\n      }\n\n      return m;\n    } else {\n      // return an Array\n      var arr = [];\n\n      if (size.length > 0) {\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.resize)(arr, size, defaultValue);\n      }\n\n      return arr;\n    }\n  } // replace BigNumbers with numbers, returns true if size contained BigNumbers\n\n\n  function _normalize(size) {\n    var hasBigNumbers = false;\n    size.forEach(function (value, index, arr) {\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isBigNumber)(value)) {\n        hasBigNumbers = true;\n        arr[index] = value.toNumber();\n      }\n    });\n    return hasBigNumbers;\n  } // validate arguments\n\n\n  function _validate(size) {\n    size.forEach(function (value) {\n      if (typeof value !== 'number' || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_3__.isInteger)(value) || value < 0) {\n        throw new Error('Parameters in function zeros must be positive integers');\n      }\n    });\n  }\n}); // TODO: zeros contains almost the same code as ones. Reuse this?\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/matrix/zeros.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/combinations.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/combinations.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCombinations\": () => (/* binding */ createCombinations)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_combinations_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/combinations.js */ \"./node_modules/mathjs/lib/esm/plain/number/combinations.js\");\n\n\nvar name = 'combinations';\nvar dependencies = ['typed'];\nvar createCombinations = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Compute the number of ways of picking `k` unordered outcomes from `n`\n   * possibilities.\n   *\n   * Combinations only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   * Syntax:\n   *\n   *     math.combinations(n, k)\n   *\n   * Examples:\n   *\n   *    math.combinations(7, 5) // returns 21\n   *\n   * See also:\n   *\n   *    combinationsWithRep, permutations, factorial\n   *\n   * @param {number | BigNumber} n    Total number of objects in the set\n   * @param {number | BigNumber} k    Number of objects in the subset\n   * @return {number | BigNumber}     Number of possible combinations.\n   */\n\n  return typed(name, {\n    'number, number': _plain_number_combinations_js__WEBPACK_IMPORTED_MODULE_1__.combinationsNumber,\n    'BigNumber, BigNumber': function BigNumberBigNumber(n, k) {\n      var BigNumber = n.constructor;\n      var result, i;\n      var nMinusk = n.minus(k);\n      var one = new BigNumber(1);\n\n      if (!isPositiveInteger(n) || !isPositiveInteger(k)) {\n        throw new TypeError('Positive integer value expected in function combinations');\n      }\n\n      if (k.gt(n)) {\n        throw new TypeError('k must be less than n in function combinations');\n      }\n\n      result = one;\n\n      if (k.lt(nMinusk)) {\n        for (i = one; i.lte(nMinusk); i = i.plus(one)) {\n          result = result.times(k.plus(i)).dividedBy(i);\n        }\n      } else {\n        for (i = one; i.lte(k); i = i.plus(one)) {\n          result = result.times(nMinusk.plus(i)).dividedBy(i);\n        }\n      }\n\n      return result;\n    } // TODO: implement support for collection in combinations\n\n  });\n});\n/**\n * Test whether BigNumber n is a positive integer\n * @param {BigNumber} n\n * @returns {boolean} isPositiveInteger\n */\n\nfunction isPositiveInteger(n) {\n  return n.isInteger() && n.gte(0);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/combinations.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/combinationsWithRep.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/combinationsWithRep.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCombinationsWithRep\": () => (/* binding */ createCombinationsWithRep)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_product_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/product.js */ \"./node_modules/mathjs/lib/esm/utils/product.js\");\n\n\n\nvar name = 'combinationsWithRep';\nvar dependencies = ['typed'];\nvar createCombinationsWithRep = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Compute the number of ways of picking `k` unordered outcomes from `n`\n   * possibilities, allowing individual outcomes to be repeated more than once.\n   *\n   * CombinationsWithRep only takes integer arguments.\n   * The following condition must be enforced: k <= n + k -1.\n   *\n   * Syntax:\n   *\n   *     math.combinationsWithRep(n, k)\n   *\n   * Examples:\n   *\n   *    math.combinationsWithRep(7, 5) // returns 462\n   *\n   * See also:\n   *\n   *    combinations, permutations, factorial\n   *\n   * @param {number | BigNumber} n    Total number of objects in the set\n   * @param {number | BigNumber} k    Number of objects in the subset\n   * @return {number | BigNumber}     Number of possible combinations with replacement.\n   */\n\n  return typed(name, {\n    'number, number': function numberNumber(n, k) {\n      if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(n) || n < 0) {\n        throw new TypeError('Positive integer value expected in function combinationsWithRep');\n      }\n\n      if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(k) || k < 0) {\n        throw new TypeError('Positive integer value expected in function combinationsWithRep');\n      }\n\n      if (n < 1) {\n        throw new TypeError('k must be less than or equal to n + k - 1');\n      }\n\n      if (k < n - 1) {\n        var _prodrange = (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_2__.product)(n, n + k - 1);\n\n        return _prodrange / (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_2__.product)(1, k);\n      }\n\n      var prodrange = (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_2__.product)(k + 1, n + k - 1);\n      return prodrange / (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_2__.product)(1, n - 1);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(n, k) {\n      var BigNumber = n.constructor;\n      var result, i;\n      var one = new BigNumber(1);\n      var nMinusOne = n.minus(one);\n\n      if (!isPositiveInteger(n) || !isPositiveInteger(k)) {\n        throw new TypeError('Positive integer value expected in function combinationsWithRep');\n      }\n\n      if (n.lt(one)) {\n        throw new TypeError('k must be less than or equal to n + k - 1 in function combinationsWithRep');\n      }\n\n      result = one;\n\n      if (k.lt(nMinusOne)) {\n        for (i = one; i.lte(nMinusOne); i = i.plus(one)) {\n          result = result.times(k.plus(i)).dividedBy(i);\n        }\n      } else {\n        for (i = one; i.lte(k); i = i.plus(one)) {\n          result = result.times(nMinusOne.plus(i)).dividedBy(i);\n        }\n      }\n\n      return result;\n    }\n  });\n});\n/**\n * Test whether BigNumber n is a positive integer\n * @param {BigNumber} n\n * @returns {boolean} isPositiveInteger\n */\n\nfunction isPositiveInteger(n) {\n  return n.isInteger() && n.gte(0);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/combinationsWithRep.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/factorial.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/factorial.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFactorial\": () => (/* binding */ createFactorial)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'factorial';\nvar dependencies = ['typed', 'gamma'];\nvar createFactorial = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    gamma\n  } = _ref;\n  /**\n   * Compute the factorial of a value\n   *\n   * Factorial only supports an integer value as argument.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.factorial(n)\n   *\n   * Examples:\n   *\n   *    math.factorial(5)    // returns 120\n   *    math.factorial(3)    // returns 6\n   *\n   * See also:\n   *\n   *    combinations, combinationsWithRep, gamma, permutations\n   *\n   * @param {number | BigNumber | Array | Matrix} n   An integer number\n   * @return {number | BigNumber | Array | Matrix}    The factorial of `n`\n   */\n\n  return typed(name, {\n    number: function number(n) {\n      if (n < 0) {\n        throw new Error('Value must be non-negative');\n      }\n\n      return gamma(n + 1);\n    },\n    BigNumber: function BigNumber(n) {\n      if (n.isNegative()) {\n        throw new Error('Value must be non-negative');\n      }\n\n      return gamma(n.plus(1));\n    },\n    'Array | Matrix': function ArrayMatrix(n) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(n, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/factorial.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/gamma.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/gamma.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createGamma\": () => (/* binding */ createGamma)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/probability.js\");\n\n\n\nvar name = 'gamma';\nvar dependencies = ['typed', 'config', 'multiplyScalar', 'pow', 'BigNumber', 'Complex'];\nvar createGamma = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    multiplyScalar,\n    pow,\n    BigNumber: _BigNumber,\n    Complex: _Complex\n  } = _ref;\n  /**\n   * Compute the gamma function of a value using Lanczos approximation for\n   * small values, and an extended Stirling approximation for large values.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.gamma(n)\n   *\n   * Examples:\n   *\n   *    math.gamma(5)       // returns 24\n   *    math.gamma(-0.5)    // returns -3.5449077018110335\n   *    math.gamma(math.i)  // returns -0.15494982830180973 - 0.49801566811835596i\n   *\n   * See also:\n   *\n   *    combinations, factorial, permutations\n   *\n   * @param {number | Array | Matrix} n   A real or complex number\n   * @return {number | Array | Matrix}    The gamma of `n`\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.gammaNumber,\n    Complex: function Complex(n) {\n      if (n.im === 0) {\n        return this(n.re);\n      }\n\n      n = new _Complex(n.re - 1, n.im);\n      var x = new _Complex(_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.gammaP[0], 0);\n\n      for (var i = 1; i < _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.gammaP.length; ++i) {\n        var real = n.re + i; // x += p[i]/(n+i)\n\n        var den = real * real + n.im * n.im;\n\n        if (den !== 0) {\n          x.re += _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.gammaP[i] * real / den;\n          x.im += -(_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.gammaP[i] * n.im) / den;\n        } else {\n          x.re = _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.gammaP[i] < 0 ? -Infinity : Infinity;\n        }\n      }\n\n      var t = new _Complex(n.re + _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.gammaG + 0.5, n.im);\n      var twoPiSqrt = Math.sqrt(2 * Math.PI);\n      n.re += 0.5;\n      var result = pow(t, n);\n\n      if (result.im === 0) {\n        // sqrt(2*PI)*result\n        result.re *= twoPiSqrt;\n      } else if (result.re === 0) {\n        result.im *= twoPiSqrt;\n      } else {\n        result.re *= twoPiSqrt;\n        result.im *= twoPiSqrt;\n      }\n\n      var r = Math.exp(-t.re); // exp(-t)\n\n      t.re = r * Math.cos(-t.im);\n      t.im = r * Math.sin(-t.im);\n      return multiplyScalar(multiplyScalar(result, t), x);\n    },\n    BigNumber: function BigNumber(n) {\n      if (n.isInteger()) {\n        return n.isNegative() || n.isZero() ? new _BigNumber(Infinity) : bigFactorial(n.minus(1));\n      }\n\n      if (!n.isFinite()) {\n        return new _BigNumber(n.isNegative() ? NaN : Infinity);\n      }\n\n      throw new Error('Integer BigNumber expected');\n    },\n    'Array | Matrix': function ArrayMatrix(n) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(n, this);\n    }\n  });\n  /**\n   * Calculate factorial for a BigNumber\n   * @param {BigNumber} n\n   * @returns {BigNumber} Returns the factorial of n\n   */\n\n  function bigFactorial(n) {\n    if (n < 8) {\n      return new _BigNumber([1, 1, 2, 6, 24, 120, 720, 5040][n]);\n    }\n\n    var precision = config.precision + (Math.log(n.toNumber()) | 0);\n\n    var Big = _BigNumber.clone({\n      precision: precision\n    });\n\n    if (n % 2 === 1) {\n      return n.times(bigFactorial(new _BigNumber(n - 1)));\n    }\n\n    var p = n;\n    var prod = new Big(n);\n    var sum = n.toNumber();\n\n    while (p > 2) {\n      p -= 2;\n      sum += p;\n      prod = prod.times(sum);\n    }\n\n    return new _BigNumber(prod.toPrecision(_BigNumber.precision));\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/gamma.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/kldivergence.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/kldivergence.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createKldivergence\": () => (/* binding */ createKldivergence)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'kldivergence';\nvar dependencies = ['typed', 'matrix', 'divide', 'sum', 'multiply', 'dotDivide', 'log', 'isNumeric'];\nvar createKldivergence = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    divide,\n    sum,\n    multiply,\n    dotDivide,\n    log,\n    isNumeric\n  } = _ref;\n  /**\n     * Calculate the Kullback-Leibler (KL) divergence  between two distributions\n     *\n     * Syntax:\n     *\n     *     math.kldivergence(x, y)\n     *\n     * Examples:\n     *\n     *     math.kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])   //returns 0.24376698773121153\n     *\n     *\n     * @param  {Array | Matrix} q    First vector\n     * @param  {Array | Matrix} p    Second vector\n     * @return {number}              Returns distance between q and p\n     */\n\n  return typed(name, {\n    'Array, Array': function ArrayArray(q, p) {\n      return _kldiv(matrix(q), matrix(p));\n    },\n    'Matrix, Array': function MatrixArray(q, p) {\n      return _kldiv(q, matrix(p));\n    },\n    'Array, Matrix': function ArrayMatrix(q, p) {\n      return _kldiv(matrix(q), p);\n    },\n    'Matrix, Matrix': function MatrixMatrix(q, p) {\n      return _kldiv(q, p);\n    }\n  });\n\n  function _kldiv(q, p) {\n    var plength = p.size().length;\n    var qlength = q.size().length;\n\n    if (plength > 1) {\n      throw new Error('first object must be one dimensional');\n    }\n\n    if (qlength > 1) {\n      throw new Error('second object must be one dimensional');\n    }\n\n    if (plength !== qlength) {\n      throw new Error('Length of two vectors must be equal');\n    } // Before calculation, apply normalization\n\n\n    var sumq = sum(q);\n\n    if (sumq === 0) {\n      throw new Error('Sum of elements in first object must be non zero');\n    }\n\n    var sump = sum(p);\n\n    if (sump === 0) {\n      throw new Error('Sum of elements in second object must be non zero');\n    }\n\n    var qnorm = divide(q, sum(q));\n    var pnorm = divide(p, sum(p));\n    var result = sum(multiply(qnorm, log(dotDivide(qnorm, pnorm))));\n\n    if (isNumeric(result)) {\n      return result;\n    } else {\n      return Number.NaN;\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/kldivergence.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/multinomial.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/multinomial.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMultinomial\": () => (/* binding */ createMultinomial)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'multinomial';\nvar dependencies = ['typed', 'add', 'divide', 'multiply', 'factorial', 'isInteger', 'isPositive'];\nvar createMultinomial = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    divide,\n    multiply,\n    factorial,\n    isInteger,\n    isPositive\n  } = _ref;\n  /**\n   * Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities.\n   *\n   * multinomial takes one array of integers as an argument.\n   * The following condition must be enforced: every ai <= 0\n   *\n   * Syntax:\n   *\n   *     math.multinomial(a) // a is an array type\n   *\n   * Examples:\n   *\n   *    math.multinomial([1,2,1]) // returns 12\n   *\n   * See also:\n   *\n   *    combinations, factorial\n   *\n   * @param {number[] | BigNumber[]} a    Integer numbers of objects in the subset\n   * @return {Number | BigNumber}         Multinomial coefficient.\n   */\n\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(a) {\n      var sum = 0;\n      var denom = 1;\n      (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepForEach)(a, function (ai) {\n        if (!isInteger(ai) || !isPositive(ai)) {\n          throw new TypeError('Positive integer value expected in function multinomial');\n        }\n\n        sum = add(sum, ai);\n        denom = multiply(denom, factorial(ai));\n      });\n      return divide(factorial(sum), denom);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/multinomial.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/permutations.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/permutations.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPermutations\": () => (/* binding */ createPermutations)\n/* harmony export */ });\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_product_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/product.js */ \"./node_modules/mathjs/lib/esm/utils/product.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'permutations';\nvar dependencies = ['typed', 'factorial'];\nvar createPermutations = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    factorial\n  } = _ref;\n  /**\n   * Compute the number of ways of obtaining an ordered subset of `k` elements\n   * from a set of `n` elements.\n   *\n   * Permutations only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   * Syntax:\n   *\n   *     math.permutations(n)\n   *     math.permutations(n, k)\n   *\n   * Examples:\n   *\n   *    math.permutations(5)     // 120\n   *    math.permutations(5, 3)  // 60\n   *\n   * See also:\n   *\n   *    combinations, combinationsWithRep, factorial\n   *\n   * @param {number | BigNumber} n   The number of objects in total\n   * @param {number | BigNumber} [k] The number of objects in the subset\n   * @return {number | BigNumber}    The number of permutations\n   */\n\n  return typed(name, {\n    'number | BigNumber': factorial,\n    'number, number': function numberNumber(n, k) {\n      if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(n) || n < 0) {\n        throw new TypeError('Positive integer value expected in function permutations');\n      }\n\n      if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger)(k) || k < 0) {\n        throw new TypeError('Positive integer value expected in function permutations');\n      }\n\n      if (k > n) {\n        throw new TypeError('second argument k must be less than or equal to first argument n');\n      } // Permute n objects, k at a time\n\n\n      return (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_2__.product)(n - k + 1, n);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(n, k) {\n      var result, i;\n\n      if (!isPositiveInteger(n) || !isPositiveInteger(k)) {\n        throw new TypeError('Positive integer value expected in function permutations');\n      }\n\n      if (k.gt(n)) {\n        throw new TypeError('second argument k must be less than or equal to first argument n');\n      }\n\n      var one = n.mul(0).add(1);\n      result = one;\n\n      for (i = n.minus(k).plus(1); i.lte(n); i = i.plus(1)) {\n        result = result.times(i);\n      }\n\n      return result;\n    } // TODO: implement support for collection in permutations\n\n  });\n});\n/**\n * Test whether BigNumber n is a positive integer\n * @param {BigNumber} n\n * @returns {boolean} isPositiveInteger\n */\n\nfunction isPositiveInteger(n) {\n  return n.isInteger() && n.gte(0);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/permutations.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/pickRandom.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/pickRandom.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPickRandom\": () => (/* binding */ createPickRandom)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/seededRNG.js */ \"./node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js\");\n\n\n\n\nvar name = 'pickRandom';\nvar dependencies = ['typed', 'config', '?on'];\nvar createPickRandom = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    on\n  } = _ref; // seeded pseudo random number generator\n\n  var rng = (0,_util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0,_util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__.createRng)(curr.randomSeed);\n      }\n    });\n  }\n  /**\n   * Random pick one or more values from a one dimensional array.\n   * Array elements are picked using a random function with uniform or weighted distribution.\n   *\n   * Syntax:\n   *\n   *     math.pickRandom(array)\n   *     math.pickRandom(array, number)\n   *     math.pickRandom(array, weights)\n   *     math.pickRandom(array, number, weights)\n   *     math.pickRandom(array, weights, number)\n   *     math.pickRandom(array, { weights, number, elementWise })\n   *\n   * Examples:\n   *\n   *     math.pickRandom([3, 6, 12, 2])                  // returns one of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], 2)               // returns an array of two of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], { number: 2 })   // returns an array of two of the values in the array\n   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1])    // returns one of the values in the array with weighted distribution\n   *     math.pickRandom([3, 6, 12, 2], 2, [1, 3, 2, 1]) // returns an array of two of the values in the array with weighted distribution\n   *     math.pickRandom([3, 6, 12, 2], [1, 3, 2, 1], 2) // returns an array of two of the values in the array with weighted distribution\n   *\n   *     math.pickRandom([{x: 1.0, y: 2.0}, {x: 1.1, y: 2.0}], { elementWise: false })\n   *         // returns one of the items in the array\n   *\n   * See also:\n   *\n   *     random, randomInt\n   *\n   * @param {Array | Matrix} array     A one dimensional array\n   * @param {Int} number               An int or float\n   * @param {Array | Matrix} weights   An array of ints or floats\n   * @return {number | Array}          Returns a single random value from array when number is 1 or undefined.\n   *                                   Returns an array with the configured number of elements when number is > 1.\n   */\n\n\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(possibles) {\n      return _pickRandom(possibles, {});\n    },\n    'Array | Matrix, Object': function ArrayMatrixObject(possibles, options) {\n      return _pickRandom(possibles, options);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(possibles, number) {\n      return _pickRandom(possibles, {\n        number\n      });\n    },\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(possibles, weights) {\n      return _pickRandom(possibles, {\n        weights\n      });\n    },\n    'Array | Matrix, Array | Matrix, number': function ArrayMatrixArrayMatrixNumber(possibles, weights, number) {\n      return _pickRandom(possibles, {\n        number,\n        weights\n      });\n    },\n    'Array | Matrix, number, Array | Matrix': function ArrayMatrixNumberArrayMatrix(possibles, number, weights) {\n      return _pickRandom(possibles, {\n        number,\n        weights\n      });\n    }\n  });\n  /**\n   * @param {Array | Matrix} possibles\n   * @param {{\n   *   number?: number,\n   *   weights?: Array | Matrix,\n   *   elementWise: boolean\n   * }} options\n   * @returns {number | Array}\n   * @private\n   */\n\n  function _pickRandom(possibles, _ref2) {\n    var {\n      number,\n      weights,\n      elementWise = true\n    } = _ref2;\n    var single = typeof number === 'undefined';\n\n    if (single) {\n      number = 1;\n    }\n\n    var createMatrix = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMatrix)(possibles) ? possibles.create : (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isMatrix)(weights) ? weights.create : null;\n    possibles = possibles.valueOf(); // get Array\n\n    if (weights) {\n      weights = weights.valueOf(); // get Array\n    }\n\n    if (elementWise === true) {\n      possibles = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.flatten)(possibles);\n      weights = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.flatten)(weights);\n    }\n\n    var totalWeights = 0;\n\n    if (typeof weights !== 'undefined') {\n      if (weights.length !== possibles.length) {\n        throw new Error('Weights must have the same length as possibles');\n      }\n\n      for (var i = 0, len = weights.length; i < len; i++) {\n        if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isNumber)(weights[i]) || weights[i] < 0) {\n          throw new Error('Weights must be an array of positive numbers');\n        }\n\n        totalWeights += weights[i];\n      }\n    }\n\n    var length = possibles.length;\n    var result = [];\n    var pick;\n\n    while (result.length < number) {\n      if (typeof weights === 'undefined') {\n        pick = possibles[Math.floor(rng() * length)];\n      } else {\n        var randKey = rng() * totalWeights;\n\n        for (var _i = 0, _len = possibles.length; _i < _len; _i++) {\n          randKey -= weights[_i];\n\n          if (randKey < 0) {\n            pick = possibles[_i];\n            break;\n          }\n        }\n      }\n\n      result.push(pick);\n    }\n\n    return single ? result[0] : createMatrix ? createMatrix(result) : result;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/pickRandom.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/random.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/random.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRandom\": () => (/* binding */ createRandom),\n/* harmony export */   \"createRandomNumber\": () => (/* binding */ createRandomNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/seededRNG.js */ \"./node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js\");\n/* harmony import */ var _util_randomMatrix_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/randomMatrix.js */ \"./node_modules/mathjs/lib/esm/function/probability/util/randomMatrix.js\");\n\n\n\n\nvar name = 'random';\nvar dependencies = ['typed', 'config', '?on'];\nvar createRandom = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    on\n  } = _ref; // seeded pseudo random number generator\n\n  var rng = (0,_util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0,_util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__.createRng)(curr.randomSeed);\n      }\n    });\n  }\n  /**\n   * Return a random number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.random()                // generate a random number between 0 and 1\n   *     math.random(max)             // generate a random number between 0 and max\n   *     math.random(min, max)        // generate a random number between min and max\n   *     math.random(size)            // generate a matrix with random numbers between 0 and 1\n   *     math.random(size, max)       // generate a matrix with random numbers between 0 and max\n   *     math.random(size, min, max)  // generate a matrix with random numbers between min and max\n   *\n   * Examples:\n   *\n   *     math.random()       // returns a random number between 0 and 1\n   *     math.random(100)    // returns a random number between 0 and 100\n   *     math.random(30, 40) // returns a random number between 30 and 40\n   *     math.random([2, 3]) // returns a 2x3 matrix with random numbers between 0 and 1\n   *\n   * See also:\n   *\n   *     randomInt, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {number} [min]  Minimum boundary for the random value, included\n   * @param {number} [max]  Maximum boundary for the random value, excluded\n   * @return {number | Array | Matrix} A random number\n   */\n\n\n  return typed(name, {\n    '': () => _random(0, 1),\n    number: max => _random(0, max),\n    'number, number': (min, max) => _random(min, max),\n    'Array | Matrix': size => _randomMatrix(size, 0, 1),\n    'Array | Matrix, number': (size, max) => _randomMatrix(size, 0, max),\n    'Array | Matrix, number, number': (size, min, max) => _randomMatrix(size, min, max)\n  });\n\n  function _randomMatrix(size, min, max) {\n    var res = (0,_util_randomMatrix_js__WEBPACK_IMPORTED_MODULE_2__.randomMatrix)(size.valueOf(), () => _random(min, max));\n    return (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isMatrix)(size) ? size.create(res) : res;\n  }\n\n  function _random(min, max) {\n    return min + rng() * (max - min);\n  }\n}); // number only implementation of random, no matrix support\n// TODO: there is quite some duplicate code in both createRandom and createRandomNumber, can we improve that?\n\nvar createRandomNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'config', '?on'], _ref2 => {\n  var {\n    typed,\n    config,\n    on,\n    matrix\n  } = _ref2; // seeded pseudo random number generator1\n\n  var rng = (0,_util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0,_util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__.createRng)(curr.randomSeed);\n      }\n    });\n  }\n\n  return typed(name, {\n    '': () => _random(0, 1),\n    number: max => _random(0, max),\n    'number, number': (min, max) => _random(min, max)\n  });\n\n  function _random(min, max) {\n    return min + rng() * (max - min);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/random.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/randomInt.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/randomInt.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRandomInt\": () => (/* binding */ createRandomInt)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _util_randomMatrix_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/randomMatrix.js */ \"./node_modules/mathjs/lib/esm/function/probability/util/randomMatrix.js\");\n/* harmony import */ var _util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/seededRNG.js */ \"./node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\n\n\nvar name = 'randomInt';\nvar dependencies = ['typed', 'config', '?on'];\nvar createRandomInt = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    on\n  } = _ref; // seeded pseudo random number generator\n\n  var rng = (0,_util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0,_util_seededRNG_js__WEBPACK_IMPORTED_MODULE_1__.createRng)(curr.randomSeed);\n      }\n    });\n  }\n  /**\n   * Return a random integer number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.randomInt()                // generate a random integer between 0 and 1\n   *     math.randomInt(max)             // generate a random integer between 0 and max\n   *     math.randomInt(min, max)        // generate a random integer between min and max\n   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1\n   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max\n   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max\n   *\n   * Examples:\n   *\n   *     math.randomInt(100)    // returns a random integer between 0 and 100\n   *     math.randomInt(30, 40) // returns a random integer between 30 and 40\n   *     math.randomInt([2, 3]) // returns a 2x3 matrix with random integers between 0 and 1\n   *\n   * See also:\n   *\n   *     random, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {number} [min]  Minimum boundary for the random value, included\n   * @param {number} [max]  Maximum boundary for the random value, excluded\n   * @return {number | Array | Matrix} A random integer value\n   */\n\n\n  return typed(name, {\n    '': () => _randomInt(0, 1),\n    number: max => _randomInt(0, max),\n    'number, number': (min, max) => _randomInt(min, max),\n    'Array | Matrix': size => _randomIntMatrix(size, 0, 1),\n    'Array | Matrix, number': (size, max) => _randomIntMatrix(size, 0, max),\n    'Array | Matrix, number, number': (size, min, max) => _randomIntMatrix(size, min, max)\n  });\n\n  function _randomIntMatrix(size, min, max) {\n    var res = (0,_util_randomMatrix_js__WEBPACK_IMPORTED_MODULE_2__.randomMatrix)(size.valueOf(), () => _randomInt(min, max));\n    return (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isMatrix)(size) ? size.create(res) : res;\n  }\n\n  function _randomInt(min, max) {\n    return Math.floor(min + rng() * (max - min));\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/randomInt.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/util/randomMatrix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/util/randomMatrix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomMatrix\": () => (/* binding */ randomMatrix)\n/* harmony export */ });\n/**\n * This is a util function for generating a random matrix recursively.\n * @param {number[]} size\n * @param {function} random\n * @returns {Array}\n */\nfunction randomMatrix(size, random) {\n  var data = [];\n  size = size.slice(0);\n\n  if (size.length > 1) {\n    for (var i = 0, length = size.shift(); i < length; i++) {\n      data.push(randomMatrix(size, random));\n    }\n  } else {\n    for (var _i = 0, _length = size.shift(); _i < _length; _i++) {\n      data.push(random());\n    }\n  }\n\n  return data;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/util/randomMatrix.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js":
/*!****************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRng\": () => (/* binding */ createRng)\n/* harmony export */ });\n/* harmony import */ var seedrandom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! seedrandom */ \"./node_modules/seedrandom/index.js\");\n\nvar singletonRandom = /* #__PURE__ */seedrandom__WEBPACK_IMPORTED_MODULE_0__(Date.now());\nfunction createRng(randomSeed) {\n  var random; // create a new random generator with given seed\n\n  function setSeed(seed) {\n    random = seed === null ? singletonRandom : seedrandom__WEBPACK_IMPORTED_MODULE_0__(String(seed));\n  } // initialize a seeded pseudo random number generator with config's random seed\n\n\n  setSeed(randomSeed); // wrapper function so the rng can be updated via generator\n\n  function rng() {\n    return random();\n  }\n\n  return rng;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/compare.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/compare.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCompare\": () => (/* binding */ createCompare),\n/* harmony export */   \"createCompareNumber\": () => (/* binding */ createCompareNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm05_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm05.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm05.js\");\n\n\n\n\n\n\n\n\nvar name = 'compare';\nvar dependencies = ['typed', 'config', 'matrix', 'equalScalar', 'BigNumber', 'Fraction', 'DenseMatrix'];\nvar createCompare = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    equalScalar,\n    matrix,\n    BigNumber,\n    Fraction,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm05 = (0,_type_matrix_utils_algorithm05_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm05)({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.\n   *\n   * x and y are considered equal when the relative difference between x and y\n   * is smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.compare(x, y)\n   *\n   * Examples:\n   *\n   *    math.compare(6, 1)           // returns 1\n   *    math.compare(2, 3)           // returns -1\n   *    math.compare(7, 7)           // returns 0\n   *    math.compare('10', '2')      // returns 1\n   *    math.compare('1000', '1e3')  // returns 0\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('40 mm')\n   *    math.compare(a, b)           // returns 1\n   *\n   *    math.compare(2, [1, 2, 3])   // returns [1, 0, -1]\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, larger, largerEq, compareNatural, compareText\n   *\n   * @param  {number | BigNumber | Fraction | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | Unit | string | Array | Matrix} y Second value to compare\n   * @return {number | BigNumber | Fraction | Array | Matrix} Returns the result of the comparison:\n   *                                                          1 when x > y, -1 when x < y, and 0 when x == y.\n   */\n\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x === y ? 0 : x > y ? 1 : -1;\n    },\n    'number, number': function numberNumber(x, y) {\n      return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon) ? 0 : x > y ? 1 : -1;\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return (0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__.nearlyEqual)(x, y, config.epsilon) ? new BigNumber(0) : new BigNumber(x.cmp(y));\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return new Fraction(x.compare(y));\n    },\n    'Complex, Complex': function ComplexComplex() {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm05(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nvar createCompareNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'config'], _ref2 => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon) ? 0 : x > y ? 1 : -1;\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/compare.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/compareNatural.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/compareNatural.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCompareNatural\": () => (/* binding */ createCompareNatural)\n/* harmony export */ });\n/* harmony import */ var javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! javascript-natural-sort */ \"./node_modules/javascript-natural-sort/naturalSort.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'compareNatural';\nvar dependencies = ['typed', 'compare'];\nvar createCompareNatural = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    compare\n  } = _ref;\n  var compareBooleans = compare.signatures['boolean,boolean'];\n  /**\n   * Compare two values of any type in a deterministic, natural way.\n   *\n   * For numeric values, the function works the same as `math.compare`.\n   * For types of values that can't be compared mathematically,\n   * the function compares in a natural way.\n   *\n   * For numeric values, x and y are considered equal when the relative\n   * difference between x and y is smaller than the configured epsilon.\n   * The function cannot be used to compare values smaller than\n   * approximately 2.22e-16.\n   *\n   * For Complex numbers, first the real parts are compared. If equal,\n   * the imaginary parts are compared.\n   *\n   * Strings are compared with a natural sorting algorithm, which\n   * orders strings in a \"logic\" way following some heuristics.\n   * This differs from the function `compare`, which converts the string\n   * into a numeric value and compares that. The function `compareText`\n   * on the other hand compares text lexically.\n   *\n   * Arrays and Matrices are compared value by value until there is an\n   * unequal pair of values encountered. Objects are compared by sorted\n   * keys until the keys or their values are unequal.\n   *\n   * Syntax:\n   *\n   *    math.compareNatural(x, y)\n   *\n   * Examples:\n   *\n   *    math.compareNatural(6, 1)              // returns 1\n   *    math.compareNatural(2, 3)              // returns -1\n   *    math.compareNatural(7, 7)              // returns 0\n   *\n   *    math.compareNatural('10', '2')         // returns 1\n   *    math.compareText('10', '2')            // returns -1\n   *    math.compare('10', '2')                // returns 1\n   *\n   *    math.compareNatural('Answer: 10', 'Answer: 2') // returns 1\n   *    math.compareText('Answer: 10', 'Answer: 2')    // returns -1\n   *    math.compare('Answer: 10', 'Answer: 2')\n   *        // Error: Cannot convert \"Answer: 10\" to a number\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('40 mm')\n   *    math.compareNatural(a, b)              // returns 1\n   *\n   *    const c = math.complex('2 + 3i')\n   *    const d = math.complex('2 + 4i')\n   *    math.compareNatural(c, d)              // returns -1\n   *\n   *    math.compareNatural([1, 2, 4], [1, 2, 3]) // returns 1\n   *    math.compareNatural([1, 2, 3], [1, 2])    // returns 1\n   *    math.compareNatural([1, 5], [1, 2, 3])    // returns 1\n   *    math.compareNatural([1, 2], [1, 2])       // returns 0\n   *\n   *    math.compareNatural({a: 2}, {a: 4})       // returns -1\n   *\n   * See also:\n   *\n   *    compare, compareText\n   *\n   * @param  {*} x First value to compare\n   * @param  {*} y Second value to compare\n   * @return {number} Returns the result of the comparison:\n   *                  1 when x > y, -1 when x < y, and 0 when x == y.\n   */\n\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      var typeX = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.typeOf)(x);\n      var typeY = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.typeOf)(y);\n      var c; // numeric types\n\n      if ((typeX === 'number' || typeX === 'BigNumber' || typeX === 'Fraction') && (typeY === 'number' || typeY === 'BigNumber' || typeY === 'Fraction')) {\n        c = compare(x, y);\n\n        if (c.toString() !== '0') {\n          // c can be number, BigNumber, or Fraction\n          return c > 0 ? 1 : -1; // return a number\n        } else {\n          return javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__(typeX, typeY);\n        }\n      } // matrix types\n\n\n      if (typeX === 'Array' || typeX === 'Matrix' || typeY === 'Array' || typeY === 'Matrix') {\n        c = compareMatricesAndArrays(this, x, y);\n\n        if (c !== 0) {\n          return c;\n        } else {\n          return javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__(typeX, typeY);\n        }\n      } // in case of different types, order by name of type, i.e. 'BigNumber' < 'Complex'\n\n\n      if (typeX !== typeY) {\n        return javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__(typeX, typeY);\n      }\n\n      if (typeX === 'Complex') {\n        return compareComplexNumbers(x, y);\n      }\n\n      if (typeX === 'Unit') {\n        if (x.equalBase(y)) {\n          return this(x.value, y.value);\n        } // compare by units\n\n\n        return compareArrays(this, x.formatUnits(), y.formatUnits());\n      }\n\n      if (typeX === 'boolean') {\n        return compareBooleans(x, y);\n      }\n\n      if (typeX === 'string') {\n        return javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__(x, y);\n      }\n\n      if (typeX === 'Object') {\n        return compareObjects(this, x, y);\n      }\n\n      if (typeX === 'null') {\n        return 0;\n      }\n\n      if (typeX === 'undefined') {\n        return 0;\n      } // this should not occur...\n\n\n      throw new TypeError('Unsupported type of value \"' + typeX + '\"');\n    }\n  });\n  /**\n   * Compare mixed matrix/array types, by converting to same-shaped array.\n   * This comparator is non-deterministic regarding input types.\n   * @param {Array | SparseMatrix | DenseMatrix | *} x\n   * @param {Array | SparseMatrix | DenseMatrix | *} y\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n\n  function compareMatricesAndArrays(compareNatural, x, y) {\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isSparseMatrix)(x) && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isSparseMatrix)(y)) {\n      return compareArrays(compareNatural, x.toJSON().values, y.toJSON().values);\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isSparseMatrix)(x)) {\n      // note: convert to array is expensive\n      return compareMatricesAndArrays(compareNatural, x.toArray(), y);\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isSparseMatrix)(y)) {\n      // note: convert to array is expensive\n      return compareMatricesAndArrays(compareNatural, x, y.toArray());\n    } // convert DenseArray into Array\n\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isDenseMatrix)(x)) {\n      return compareMatricesAndArrays(compareNatural, x.toJSON().data, y);\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.isDenseMatrix)(y)) {\n      return compareMatricesAndArrays(compareNatural, x, y.toJSON().data);\n    } // convert scalars to array\n\n\n    if (!Array.isArray(x)) {\n      return compareMatricesAndArrays(compareNatural, [x], y);\n    }\n\n    if (!Array.isArray(y)) {\n      return compareMatricesAndArrays(compareNatural, x, [y]);\n    }\n\n    return compareArrays(compareNatural, x, y);\n  }\n  /**\n   * Compare two Arrays\n   *\n   * - First, compares value by value\n   * - Next, if all corresponding values are equal,\n   *   look at the length: longest array will be considered largest\n   *\n   * @param {Array} x\n   * @param {Array} y\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n\n\n  function compareArrays(compareNatural, x, y) {\n    // compare each value\n    for (var i = 0, ii = Math.min(x.length, y.length); i < ii; i++) {\n      var v = compareNatural(x[i], y[i]);\n\n      if (v !== 0) {\n        return v;\n      }\n    } // compare the size of the arrays\n\n\n    if (x.length > y.length) {\n      return 1;\n    }\n\n    if (x.length < y.length) {\n      return -1;\n    } // both Arrays have equal size and content\n\n\n    return 0;\n  }\n  /**\n   * Compare two objects\n   *\n   * - First, compare sorted property names\n   * - Next, compare the property values\n   *\n   * @param {Object} x\n   * @param {Object} y\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n\n\n  function compareObjects(compareNatural, x, y) {\n    var keysX = Object.keys(x);\n    var keysY = Object.keys(y); // compare keys\n\n    keysX.sort(javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__);\n    keysY.sort(javascript_natural_sort__WEBPACK_IMPORTED_MODULE_0__);\n    var c = compareArrays(compareNatural, keysX, keysY);\n\n    if (c !== 0) {\n      return c;\n    } // compare values\n\n\n    for (var i = 0; i < keysX.length; i++) {\n      var v = compareNatural(x[keysX[i]], y[keysY[i]]);\n\n      if (v !== 0) {\n        return v;\n      }\n    }\n\n    return 0;\n  }\n});\n/**\n * Compare two complex numbers, `x` and `y`:\n *\n * - First, compare the real values of `x` and `y`\n * - If equal, compare the imaginary values of `x` and `y`\n *\n * @params {Complex} x\n * @params {Complex} y\n * @returns {number} Returns the comparison result: -1, 0, or 1\n */\n\nfunction compareComplexNumbers(x, y) {\n  if (x.re > y.re) {\n    return 1;\n  }\n\n  if (x.re < y.re) {\n    return -1;\n  }\n\n  if (x.im > y.im) {\n    return 1;\n  }\n\n  if (x.im < y.im) {\n    return -1;\n  }\n\n  return 0;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/compareNatural.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/compareText.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/compareText.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCompareText\": () => (/* binding */ createCompareText),\n/* harmony export */   \"createCompareTextNumber\": () => (/* binding */ createCompareTextNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n\n\n\n\nvar name = 'compareText';\nvar dependencies = ['typed', 'matrix'];\nvar createCompareText = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Compare two strings lexically. Comparison is case sensitive.\n   * Returns 1 when x > y, -1 when x < y, and 0 when x == y.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.compareText(x, y)\n   *\n   * Examples:\n   *\n   *    math.compareText('B', 'A')     // returns 1\n   *    math.compareText('2', '10')    // returns 1\n   *    math.compare('2', '10')        // returns -1\n   *    math.compareNatural('2', '10') // returns -1\n   *\n   *    math.compareText('B', ['A', 'B', 'C']) // returns [1, 0, -1]\n   *\n   * See also:\n   *\n   *    equal, equalText, compare, compareNatural\n   *\n   * @param  {string | Array | DenseMatrix} x First string to compare\n   * @param  {string | Array | DenseMatrix} y Second string to compare\n   * @return {number | Array | DenseMatrix} Returns the result of the comparison:\n   *                                        1 when x > y, -1 when x < y, and 0 when x == y.\n   */\n\n  return typed(name, {\n    'any, any': _utils_string_js__WEBPACK_IMPORTED_MODULE_3__.compareText,\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _utils_string_js__WEBPACK_IMPORTED_MODULE_3__.compareText);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _utils_string_js__WEBPACK_IMPORTED_MODULE_3__.compareText, false);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _utils_string_js__WEBPACK_IMPORTED_MODULE_3__.compareText, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _utils_string_js__WEBPACK_IMPORTED_MODULE_3__.compareText, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _utils_string_js__WEBPACK_IMPORTED_MODULE_3__.compareText, true).valueOf();\n    }\n  });\n});\nvar createCompareTextNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed'], _ref2 => {\n  var {\n    typed\n  } = _ref2;\n  return typed(name, {\n    'any, any': _utils_string_js__WEBPACK_IMPORTED_MODULE_3__.compareText\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/compareText.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/deepEqual.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/deepEqual.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDeepEqual\": () => (/* binding */ createDeepEqual)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'deepEqual';\nvar dependencies = ['typed', 'equal'];\nvar createDeepEqual = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equal\n  } = _ref;\n  /**\n   * Test element wise whether two matrices are equal.\n   * The function accepts both matrices and scalar values.\n   *\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.deepEqual(x, y)\n   *\n   * Examples:\n   *\n   *    math.deepEqual(2, 4)   // returns false\n   *\n   *    a = [2, 5, 1]\n   *    b = [2, 7, 1]\n   *\n   *    math.deepEqual(a, b)   // returns false\n   *    math.equal(a, b)       // returns [true, false, true]\n   *\n   * See also:\n   *\n   *    equal, unequal\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First matrix to compare\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second matrix to compare\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}\n   *            Returns true when the input matrices have the same size and each of their elements is equal.\n   */\n\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      return _deepEqual(x.valueOf(), y.valueOf());\n    }\n  });\n  /**\n   * Test whether two arrays have the same size and all elements are equal\n   * @param {Array | *} x\n   * @param {Array | *} y\n   * @return {boolean} Returns true if both arrays are deep equal\n   */\n\n  function _deepEqual(x, y) {\n    if (Array.isArray(x)) {\n      if (Array.isArray(y)) {\n        var len = x.length;\n\n        if (len !== y.length) {\n          return false;\n        }\n\n        for (var i = 0; i < len; i++) {\n          if (!_deepEqual(x[i], y[i])) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (Array.isArray(y)) {\n        return false;\n      } else {\n        return equal(x, y);\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/deepEqual.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/equal.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/equal.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEqual\": () => (/* binding */ createEqual),\n/* harmony export */   \"createEqualNumber\": () => (/* binding */ createEqualNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\nvar name = 'equal';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nvar createEqual = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Test whether two values are equal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is only\n   * equal to `null` and nothing else, and `undefined` is only equal to\n   * `undefined` and nothing else. Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.equal(x, y)\n   *\n   * Examples:\n   *\n   *    math.equal(2 + 2, 3)         // returns false\n   *    math.equal(2 + 2, 4)         // returns true\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.equal(a, b)             // returns true\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.equal(c, d)             // returns [true, false, true]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.equal(\"1000\", \"1e3\")    // returns true\n   *    math.equal(0, null)          // returns false\n   *\n   * See also:\n   *\n   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual, equalText\n   *\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | boolean | Complex | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are equal, else returns false\n   */\n\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n\n      if (y === null) {\n        return x === null;\n      }\n\n      if (x === undefined) {\n        return y === undefined;\n      }\n\n      if (y === undefined) {\n        return x === undefined;\n      }\n\n      return equalScalar(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, equalScalar);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, equalScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, equalScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, equalScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, equalScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, equalScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, equalScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, equalScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, equalScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, equalScalar, true).valueOf();\n    }\n  });\n});\nvar createEqualNumber = (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'equalScalar'], _ref2 => {\n  var {\n    typed,\n    equalScalar\n  } = _ref2;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y === null;\n      }\n\n      if (y === null) {\n        return x === null;\n      }\n\n      if (x === undefined) {\n        return y === undefined;\n      }\n\n      if (y === undefined) {\n        return x === undefined;\n      }\n\n      return equalScalar(x, y);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/equal.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/equalScalar.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/equalScalar.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEqualScalar\": () => (/* binding */ createEqualScalar),\n/* harmony export */   \"createEqualScalarNumber\": () => (/* binding */ createEqualScalarNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_complex_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/complex.js */ \"./node_modules/mathjs/lib/esm/utils/complex.js\");\n\n\n\n\nvar name = 'equalScalar';\nvar dependencies = ['typed', 'config'];\nvar createEqualScalar = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config\n  } = _ref;\n  /**\n   * Test whether two scalar values are nearly equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x === y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.eq(y) || (0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_2__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.equals(y);\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return (0,_utils_complex_js__WEBPACK_IMPORTED_MODULE_3__.complexEquals)(x, y, config.epsilon);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    }\n  });\n});\nvar createEqualScalarNumber = (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'config'], _ref2 => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/equalScalar.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/equalText.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/equalText.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEqualText\": () => (/* binding */ createEqualText)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'equalText';\nvar dependencies = ['typed', 'compareText', 'isZero'];\nvar createEqualText = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    compareText,\n    isZero\n  } = _ref;\n  /**\n   * Check equality of two strings. Comparison is case sensitive.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.equalText(x, y)\n   *\n   * Examples:\n   *\n   *    math.equalText('Hello', 'Hello')     // returns true\n   *    math.equalText('a', 'A')             // returns false\n   *    math.equal('2e3', '2000')            // returns true\n   *    math.equalText('2e3', '2000')        // returns false\n   *\n   *    math.equalText('B', ['A', 'B', 'C']) // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    equal, compareText, compare, compareNatural\n   *\n   * @param  {string | Array | DenseMatrix} x First string to compare\n   * @param  {string | Array | DenseMatrix} y Second string to compare\n   * @return {number | Array | DenseMatrix} Returns true if the values are equal, and false if not.\n   */\n\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      return isZero(compareText(x, y));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/equalText.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/larger.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/larger.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLarger\": () => (/* binding */ createLarger),\n/* harmony export */   \"createLargerNumber\": () => (/* binding */ createLargerNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n\n\n\n\n\n\n\n\nvar name = 'larger';\nvar dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];\nvar createLarger = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Test whether value x is larger than y.\n   *\n   * The function returns true when x is larger than y and the relative\n   * difference between x and y is larger than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.larger(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 3)             // returns false\n   *    math.larger(5, 2 + 2)         // returns true\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('2 inch')\n   *    math.larger(a, b)             // returns false\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is larger than y, else returns false\n   */\n\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x > y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return x > y && !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.gt(y) && !(0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.compare(y) === 1;\n    },\n    'Complex, Complex': function ComplexComplex() {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nvar createLargerNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'config'], _ref2 => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x > y && !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/larger.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/largerEq.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/largerEq.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createLargerEq\": () => (/* binding */ createLargerEq),\n/* harmony export */   \"createLargerEqNumber\": () => (/* binding */ createLargerEqNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n\n\n\n\n\n\n\n\nvar name = 'largerEq';\nvar dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];\nvar createLargerEq = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Test whether value x is larger or equal to y.\n   *\n   * The function returns true when x is larger than y or the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.largerEq(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 1 + 1)         // returns false\n   *    math.largerEq(2, 1 + 1)       // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, larger, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is larger or equal to y, else returns false\n   */\n\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x >= y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return x >= y || (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.gte(y) || (0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.compare(y) !== -1;\n    },\n    'Complex, Complex': function ComplexComplex() {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nvar createLargerEqNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'config'], _ref2 => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x >= y || (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/largerEq.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/smaller.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/smaller.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSmaller\": () => (/* binding */ createSmaller),\n/* harmony export */   \"createSmallerNumber\": () => (/* binding */ createSmallerNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n\n\n\n\n\n\n\n\nvar name = 'smaller';\nvar dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];\nvar createSmaller = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Test whether value x is smaller than y.\n   *\n   * The function returns true when x is smaller than y and the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.smaller(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(2, 3)            // returns true\n   *    math.smaller(5, 2 * 2)        // returns false\n   *\n   *    const a = math.unit('5 cm')\n   *    const b = math.unit('2 inch')\n   *    math.smaller(a, b)            // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smallerEq, smaller, smallerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x < y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return x < y && !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.lt(y) && !(0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.compare(y) === -1;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nvar createSmallerNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'config'], _ref2 => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x < y && !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/smaller.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/smallerEq.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/smallerEq.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSmallerEq\": () => (/* binding */ createSmallerEq),\n/* harmony export */   \"createSmallerEqNumber\": () => (/* binding */ createSmallerEqNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/nearlyEqual.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n\n\n\n\n\n\n\n\nvar name = 'smallerEq';\nvar dependencies = ['typed', 'config', 'matrix', 'DenseMatrix'];\nvar createSmallerEq = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Test whether value x is smaller or equal to y.\n   *\n   * The function returns true when x is smaller than y or the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * Strings are compared by their numerical value.\n   *\n   * Syntax:\n   *\n   *    math.smallerEq(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(1 + 2, 3)        // returns false\n   *    math.smallerEq(1 + 2, 3)      // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n\n  return typed(name, {\n    'boolean, boolean': function booleanBoolean(x, y) {\n      return x <= y;\n    },\n    'number, number': function numberNumber(x, y) {\n      return x <= y || (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.lte(y) || (0,_utils_bignumber_nearlyEqual_js__WEBPACK_IMPORTED_MODULE_7__.nearlyEqual)(x, y, config.epsilon);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.compare(y) !== 1;\n    },\n    'Complex, Complex': function ComplexComplex() {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n\n      return this(x.value, y.value);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nvar createSmallerEqNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'config'], _ref2 => {\n  var {\n    typed,\n    config\n  } = _ref2;\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x <= y || (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.nearlyEqual)(x, y, config.epsilon);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/smallerEq.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/relational/unequal.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/relational/unequal.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUnequal\": () => (/* binding */ createUnequal),\n/* harmony export */   \"createUnequalNumber\": () => (/* binding */ createUnequalNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm07.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n\n\n\n\n\n\nvar name = 'unequal';\nvar dependencies = ['typed', 'config', 'equalScalar', 'matrix', 'DenseMatrix'];\nvar createUnequal = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    equalScalar,\n    matrix,\n    DenseMatrix\n  } = _ref;\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm03)({\n    typed\n  });\n  var algorithm07 = (0,_type_matrix_utils_algorithm07_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm07)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Test whether two values are unequal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * larger than the configured epsilon. The function cannot be used to compare\n   * values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.\n   * Strings are compared by their numerical value.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is unequal\n   * with everything except `null`, and `undefined` is unequal with everything\n   * except `undefined`.\n   *\n   * Syntax:\n   *\n   *    math.unequal(x, y)\n   *\n   * Examples:\n   *\n   *    math.unequal(2 + 2, 3)       // returns true\n   *    math.unequal(2 + 2, 4)       // returns false\n   *\n   *    const a = math.unit('50 cm')\n   *    const b = math.unit('5 m')\n   *    math.unequal(a, b)           // returns false\n   *\n   *    const c = [2, 5, 1]\n   *    const d = [2, 7, 1]\n   *\n   *    math.unequal(c, d)           // returns [false, true, false]\n   *    math.deepEqual(c, d)         // returns false\n   *\n   *    math.unequal(0, null)        // returns true\n   * See also:\n   *\n   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit | string | Array | Matrix | undefined} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false\n   */\n\n  return typed('unequal', {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return _unequal(x, y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, _unequal);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm03(y, x, _unequal, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, _unequal, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, _unequal);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm12(x, y, _unequal, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, _unequal, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, _unequal, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, _unequal, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, _unequal, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, _unequal, true).valueOf();\n    }\n  });\n\n  function _unequal(x, y) {\n    return !equalScalar(x, y);\n  }\n});\nvar createUnequalNumber = (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, ['typed', 'equalScalar'], _ref2 => {\n  var {\n    typed,\n    equalScalar\n  } = _ref2;\n  return typed(name, {\n    'any, any': function anyAny(x, y) {\n      // strict equality for null and undefined?\n      if (x === null) {\n        return y !== null;\n      }\n\n      if (y === null) {\n        return x !== null;\n      }\n\n      if (x === undefined) {\n        return y !== undefined;\n      }\n\n      if (y === undefined) {\n        return x !== undefined;\n      }\n\n      return !equalScalar(x, y);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/relational/unequal.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setCartesian.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setCartesian.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetCartesian\": () => (/* binding */ createSetCartesian)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setCartesian';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];\nvar createSetCartesian = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    subset,\n    compareNatural,\n    Index,\n    DenseMatrix\n  } = _ref;\n  /**\n   * Create the cartesian product of two (multi)sets.\n   * Multi-dimension arrays will be converted to single-dimension arrays\n   * and the values will be sorted in ascending order before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setCartesian(set1, set2)\n   *\n   * Examples:\n   *\n   *    math.setCartesian([1, 2], [3, 4])        // returns [[1, 3], [1, 4], [2, 3], [2, 4]]\n   *    math.setCartesian([4, 3], [2, 1])        // returns [[3, 1], [3, 2], [4, 1], [4, 2]]\n   *\n   * See also:\n   *\n   *    setUnion, setIntersect, setDifference, setPowerset\n   *\n   * @param {Array | Matrix}    a1  A (multi)set\n   * @param {Array | Matrix}    a2  A (multi)set\n   * @return {Array | Matrix}    The cartesian product of two (multi)sets\n   */\n\n  return typed(name, {\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {\n      var result = [];\n\n      if (subset(size(a1), new Index(0)) !== 0 && subset(size(a2), new Index(0)) !== 0) {\n        // if any of them is empty, return empty\n        var b1 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural);\n        var b2 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural);\n        result = [];\n\n        for (var i = 0; i < b1.length; i++) {\n          for (var j = 0; j < b2.length; j++) {\n            result.push([b1[i], b2[j]]);\n          }\n        }\n      } // return an array, if both inputs were arrays\n\n\n      if (Array.isArray(a1) && Array.isArray(a2)) {\n        return result;\n      } // return a matrix otherwise\n\n\n      return new DenseMatrix(result);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setCartesian.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setDifference.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setDifference.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetDifference\": () => (/* binding */ createSetDifference)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setDifference';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];\nvar createSetDifference = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    subset,\n    compareNatural,\n    Index,\n    DenseMatrix\n  } = _ref;\n  /**\n   * Create the difference of two (multi)sets: every element of set1, that is not the element of set2.\n   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setDifference(set1, set2)\n   *\n   * Examples:\n   *\n   *    math.setDifference([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2]\n   *    math.setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2]\n   *\n   * See also:\n   *\n   *    setUnion, setIntersect, setSymDifference\n   *\n   * @param {Array | Matrix}    a1  A (multi)set\n   * @param {Array | Matrix}    a2  A (multi)set\n   * @return {Array | Matrix}    The difference of two (multi)sets\n   */\n\n  return typed(name, {\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {\n      var result;\n\n      if (subset(size(a1), new Index(0)) === 0) {\n        // empty-anything=empty\n        result = [];\n      } else if (subset(size(a2), new Index(0)) === 0) {\n        // anything-empty=anything\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a1.toArray());\n      } else {\n        var b1 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.identify)((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural));\n        var b2 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.identify)((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural));\n        result = [];\n        var inb2;\n\n        for (var i = 0; i < b1.length; i++) {\n          inb2 = false;\n\n          for (var j = 0; j < b2.length; j++) {\n            if (compareNatural(b1[i].value, b2[j].value) === 0 && b1[i].identifier === b2[j].identifier) {\n              // the identifier is always a decimal int\n              inb2 = true;\n              break;\n            }\n          }\n\n          if (!inb2) {\n            result.push(b1[i]);\n          }\n        }\n      } // return an array, if both inputs were arrays\n\n\n      if (Array.isArray(a1) && Array.isArray(a2)) {\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.generalize)(result);\n      } // return a matrix otherwise\n\n\n      return new DenseMatrix((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.generalize)(result));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setDifference.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setDistinct.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setDistinct.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetDistinct\": () => (/* binding */ createSetDistinct)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setDistinct';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];\nvar createSetDistinct = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    subset,\n    compareNatural,\n    Index,\n    DenseMatrix\n  } = _ref;\n  /**\n   * Collect the distinct elements of a multiset.\n   * A multi-dimension array will be converted to a single-dimension array before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setDistinct(set)\n   *\n   * Examples:\n   *\n   *    math.setDistinct([1, 1, 1, 2, 2, 3])        // returns [1, 2, 3]\n   *\n   * See also:\n   *\n   *    setMultiplicity\n   *\n   * @param {Array | Matrix}    a  A multiset\n   * @return {Array | Matrix}    A set containing the distinc elements of the multiset\n   */\n\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(a) {\n      var result;\n\n      if (subset(size(a), new Index(0)) === 0) {\n        // if empty, return empty\n        result = [];\n      } else {\n        var b = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a) ? a : a.toArray()).sort(compareNatural);\n        result = [];\n        result.push(b[0]);\n\n        for (var i = 1; i < b.length; i++) {\n          if (compareNatural(b[i], b[i - 1]) !== 0) {\n            result.push(b[i]);\n          }\n        }\n      } // return an array, if the input was an array\n\n\n      if (Array.isArray(a)) {\n        return result;\n      } // return a matrix otherwise\n\n\n      return new DenseMatrix(result);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setDistinct.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setIntersect.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setIntersect.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetIntersect\": () => (/* binding */ createSetIntersect)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setIntersect';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index', 'DenseMatrix'];\nvar createSetIntersect = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    subset,\n    compareNatural,\n    Index,\n    DenseMatrix\n  } = _ref;\n  /**\n   * Create the intersection of two (multi)sets.\n   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setIntersect(set1, set2)\n   *\n   * Examples:\n   *\n   *    math.setIntersect([1, 2, 3, 4], [3, 4, 5, 6])            // returns [3, 4]\n   *    math.setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [3, 4]\n   *\n   * See also:\n   *\n   *    setUnion, setDifference\n   *\n   * @param {Array | Matrix}    a1  A (multi)set\n   * @param {Array | Matrix}    a2  A (multi)set\n   * @return {Array | Matrix}    The intersection of two (multi)sets\n   */\n\n  return typed(name, {\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {\n      var result;\n\n      if (subset(size(a1), new Index(0)) === 0 || subset(size(a2), new Index(0)) === 0) {\n        // of any of them is empty, return empty\n        result = [];\n      } else {\n        var b1 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.identify)((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural));\n        var b2 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.identify)((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural));\n        result = [];\n\n        for (var i = 0; i < b1.length; i++) {\n          for (var j = 0; j < b2.length; j++) {\n            if (compareNatural(b1[i].value, b2[j].value) === 0 && b1[i].identifier === b2[j].identifier) {\n              // the identifier is always a decimal int\n              result.push(b1[i]);\n              break;\n            }\n          }\n        }\n      } // return an array, if both inputs were arrays\n\n\n      if (Array.isArray(a1) && Array.isArray(a2)) {\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.generalize)(result);\n      } // return a matrix otherwise\n\n\n      return new DenseMatrix((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.generalize)(result));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setIntersect.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setIsSubset.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setIsSubset.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetIsSubset\": () => (/* binding */ createSetIsSubset)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setIsSubset';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index'];\nvar createSetIsSubset = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    subset,\n    compareNatural,\n    Index\n  } = _ref;\n  /**\n   * Check whether a (multi)set is a subset of another (multi)set. (Every element of set1 is the element of set2.)\n   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setIsSubset(set1, set2)\n   *\n   * Examples:\n   *\n   *    math.setIsSubset([1, 2], [3, 4, 5, 6])        // returns false\n   *    math.setIsSubset([3, 4], [3, 4, 5, 6])        // returns true\n   *\n   * See also:\n   *\n   *    setUnion, setIntersect, setDifference\n   *\n   * @param {Array | Matrix}    a1  A (multi)set\n   * @param {Array | Matrix}    a2  A (multi)set\n   * @return {boolean}            true | false\n   */\n\n  return typed(name, {\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {\n      if (subset(size(a1), new Index(0)) === 0) {\n        // empty is a subset of anything\n        return true;\n      } else if (subset(size(a2), new Index(0)) === 0) {\n        // anything is not a subset of empty\n        return false;\n      }\n\n      var b1 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.identify)((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural));\n      var b2 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.identify)((0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural));\n      var inb2;\n\n      for (var i = 0; i < b1.length; i++) {\n        inb2 = false;\n\n        for (var j = 0; j < b2.length; j++) {\n          if (compareNatural(b1[i].value, b2[j].value) === 0 && b1[i].identifier === b2[j].identifier) {\n            // the identifier is always a decimal int\n            inb2 = true;\n            break;\n          }\n        }\n\n        if (inb2 === false) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setIsSubset.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setMultiplicity.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setMultiplicity.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetMultiplicity\": () => (/* binding */ createSetMultiplicity)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setMultiplicity';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index'];\nvar createSetMultiplicity = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    subset,\n    compareNatural,\n    Index\n  } = _ref;\n  /**\n   * Count the multiplicity of an element in a multiset.\n   * A multi-dimension array will be converted to a single-dimension array before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setMultiplicity(element, set)\n   *\n   * Examples:\n   *\n   *    math.setMultiplicity(1, [1, 2, 2, 4])    // returns 1\n   *    math.setMultiplicity(2, [1, 2, 2, 4])    // returns 2\n   *\n   * See also:\n   *\n   *    setDistinct, setSize\n   *\n   * @param {number | BigNumber | Fraction | Complex} e  An element in the multiset\n   * @param {Array | Matrix}     a  A multiset\n   * @return {number}            The number of how many times the multiset contains the element\n   */\n\n  return typed(name, {\n    'number | BigNumber | Fraction | Complex, Array | Matrix': function numberBigNumberFractionComplexArrayMatrix(e, a) {\n      if (subset(size(a), new Index(0)) === 0) {\n        // if empty, return 0\n        return 0;\n      }\n\n      var b = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a) ? a : a.toArray());\n      var count = 0;\n\n      for (var i = 0; i < b.length; i++) {\n        if (compareNatural(b[i], e) === 0) {\n          count++;\n        }\n      }\n\n      return count;\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setMultiplicity.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setPowerset.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setPowerset.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetPowerset\": () => (/* binding */ createSetPowerset)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setPowerset';\nvar dependencies = ['typed', 'size', 'subset', 'compareNatural', 'Index'];\nvar createSetPowerset = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    subset,\n    compareNatural,\n    Index\n  } = _ref;\n  /**\n   * Create the powerset of a (multi)set. (The powerset contains very possible subsets of a (multi)set.)\n   * A multi-dimension array will be converted to a single-dimension array before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setPowerset(set)\n   *\n   * Examples:\n   *\n   *    math.setPowerset([1, 2, 3])        // returns [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]\n   *\n   * See also:\n   *\n   *    setCartesian\n   *\n   * @param {Array | Matrix}    a  A (multi)set\n   * @return {Array}    The powerset of the (multi)set\n   */\n\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(a) {\n      if (subset(size(a), new Index(0)) === 0) {\n        // if empty, return empty\n        return [];\n      }\n\n      var b = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a) ? a : a.toArray()).sort(compareNatural);\n      var result = [];\n      var number = 0;\n\n      while (number.toString(2).length <= b.length) {\n        result.push(_subset(b, number.toString(2).split('').reverse()));\n        number++;\n      } // can not return a matrix, because of the different size of the subarrays\n\n\n      return _sort(result);\n    }\n  }); // create subset\n\n  function _subset(array, bitarray) {\n    var result = [];\n\n    for (var i = 0; i < bitarray.length; i++) {\n      if (bitarray[i] === '1') {\n        result.push(array[i]);\n      }\n    }\n\n    return result;\n  } // sort subsests by length\n\n\n  function _sort(array) {\n    var temp = [];\n\n    for (var i = array.length - 1; i > 0; i--) {\n      for (var j = 0; j < i; j++) {\n        if (array[j].length > array[j + 1].length) {\n          temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;\n        }\n      }\n    }\n\n    return array;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setPowerset.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setSize.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setSize.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetSize\": () => (/* binding */ createSetSize)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setSize';\nvar dependencies = ['typed', 'compareNatural'];\nvar createSetSize = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    compareNatural\n  } = _ref;\n  /**\n   * Count the number of elements of a (multi)set. When a second parameter is 'true', count only the unique values.\n   * A multi-dimension array will be converted to a single-dimension array before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setSize(set)\n   *    math.setSize(set, unique)\n   *\n   * Examples:\n   *\n   *    math.setSize([1, 2, 2, 4])          // returns 4\n   *    math.setSize([1, 2, 2, 4], true)    // returns 3\n   *\n   * See also:\n   *\n   *    setUnion, setIntersect, setDifference\n   *\n   * @param {Array | Matrix}    a  A multiset\n   * @return {number}            The number of elements of the (multi)set\n   */\n\n  return typed(name, {\n    'Array | Matrix': function ArrayMatrix(a) {\n      return Array.isArray(a) ? (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a).length : (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a.toArray()).length;\n    },\n    'Array | Matrix, boolean': function ArrayMatrixBoolean(a, unique) {\n      if (unique === false || a.length === 0) {\n        return Array.isArray(a) ? (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a).length : (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a.toArray()).length;\n      } else {\n        var b = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(Array.isArray(a) ? a : a.toArray()).sort(compareNatural);\n        var count = 1;\n\n        for (var i = 1; i < b.length; i++) {\n          if (compareNatural(b[i], b[i - 1]) !== 0) {\n            count++;\n          }\n        }\n\n        return count;\n      }\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setSize.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setSymDifference.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setSymDifference.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetSymDifference\": () => (/* binding */ createSetSymDifference)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setSymDifference';\nvar dependencies = ['typed', 'size', 'concat', 'subset', 'setDifference', 'Index'];\nvar createSetSymDifference = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    concat,\n    subset,\n    setDifference,\n    Index\n  } = _ref;\n  /**\n   * Create the symmetric difference of two (multi)sets.\n   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setSymDifference(set1, set2)\n   *\n   * Examples:\n   *\n   *    math.setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2, 5, 6]\n   *    math.setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2, 5, 6]\n   *\n   * See also:\n   *\n   *    setUnion, setIntersect, setDifference\n   *\n   * @param {Array | Matrix}    a1  A (multi)set\n   * @param {Array | Matrix}    a2  A (multi)set\n   * @return {Array | Matrix}    The symmetric difference of two (multi)sets\n   */\n\n  return typed(name, {\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {\n      if (subset(size(a1), new Index(0)) === 0) {\n        // if any of them is empty, return the other one\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a2);\n      } else if (subset(size(a2), new Index(0)) === 0) {\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a1);\n      }\n\n      var b1 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a1);\n      var b2 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a2);\n      return concat(setDifference(b1, b2), setDifference(b2, b1));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setSymDifference.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/set/setUnion.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/set/setUnion.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSetUnion\": () => (/* binding */ createSetUnion)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'setUnion';\nvar dependencies = ['typed', 'size', 'concat', 'subset', 'setIntersect', 'setSymDifference', 'Index'];\nvar createSetUnion = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    size,\n    concat,\n    subset,\n    setIntersect,\n    setSymDifference,\n    Index\n  } = _ref;\n  /**\n   * Create the union of two (multi)sets.\n   * Multi-dimension arrays will be converted to single-dimension arrays before the operation.\n   *\n   * Syntax:\n   *\n   *    math.setUnion(set1, set2)\n   *\n   * Examples:\n   *\n   *    math.setUnion([1, 2, 3, 4], [3, 4, 5, 6])            // returns [1, 2, 3, 4, 5, 6]\n   *    math.setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])    // returns [1, 2, 3, 4, 5, 6]\n   *\n   * See also:\n   *\n   *    setIntersect, setDifference\n   *\n   * @param {Array | Matrix}    a1  A (multi)set\n   * @param {Array | Matrix}    a2  A (multi)set\n   * @return {Array | Matrix}    The union of two (multi)sets\n   */\n\n  return typed(name, {\n    'Array | Matrix, Array | Matrix': function ArrayMatrixArrayMatrix(a1, a2) {\n      if (subset(size(a1), new Index(0)) === 0) {\n        // if any of them is empty, return the other one\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a2);\n      } else if (subset(size(a2), new Index(0)) === 0) {\n        return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a1);\n      }\n\n      var b1 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a1);\n      var b2 = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(a2);\n      return concat(setSymDifference(b1, b2), setIntersect(b1, b2));\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/set/setUnion.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/special/erf.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/special/erf.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createErf\": () => (/* binding */ createErf)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* eslint-disable no-loss-of-precision */\n\n\n\nvar name = 'erf';\nvar dependencies = ['typed'];\nvar createErf = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Compute the erf function of a value using a rational Chebyshev\n   * approximations for different intervals of x.\n   *\n   * This is a translation of W. J. Cody's Fortran implementation from 1987\n   * ( https://www.netlib.org/specfun/erf ). See the AMS publication\n   * \"Rational Chebyshev Approximations for the Error Function\" by W. J. Cody\n   * for an explanation of this process.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.erf(x)\n   *\n   * Examples:\n   *\n   *    math.erf(0.2)    // returns 0.22270258921047847\n   *    math.erf(-0.5)   // returns -0.5204998778130465\n   *    math.erf(4)      // returns 0.9999999845827421\n   *\n   * @param {number | Array | Matrix} x   A real number\n   * @return {number | Array | Matrix}    The erf of `x`\n   */\n\n  return typed('name', {\n    number: function number(x) {\n      var y = Math.abs(x);\n\n      if (y >= MAX_NUM) {\n        return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.sign)(x);\n      }\n\n      if (y <= THRESH) {\n        return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.sign)(x) * erf1(y);\n      }\n\n      if (y <= 4.0) {\n        return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.sign)(x) * (1 - erfc2(y));\n      }\n\n      return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_1__.sign)(x) * (1 - erfc3(y));\n    },\n    'Array | Matrix': function ArrayMatrix(n) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(n, this);\n    } // TODO: For complex numbers, use the approximation for the Faddeeva function\n    //  from \"More Efficient Computation of the Complex Error Function\" (AMS)\n\n  });\n  /**\n   * Approximates the error function erf() for x <= 0.46875 using this function:\n   *               n\n   * erf(x) = x * sum (p_j * x^(2j)) / (q_j * x^(2j))\n   *              j=0\n   */\n\n  function erf1(y) {\n    var ysq = y * y;\n    var xnum = P[0][4] * ysq;\n    var xden = ysq;\n    var i;\n\n    for (i = 0; i < 3; i += 1) {\n      xnum = (xnum + P[0][i]) * ysq;\n      xden = (xden + Q[0][i]) * ysq;\n    }\n\n    return y * (xnum + P[0][3]) / (xden + Q[0][3]);\n  }\n  /**\n   * Approximates the complement of the error function erfc() for\n   * 0.46875 <= x <= 4.0 using this function:\n   *                       n\n   * erfc(x) = e^(-x^2) * sum (p_j * x^j) / (q_j * x^j)\n   *                      j=0\n   */\n\n\n  function erfc2(y) {\n    var xnum = P[1][8] * y;\n    var xden = y;\n    var i;\n\n    for (i = 0; i < 7; i += 1) {\n      xnum = (xnum + P[1][i]) * y;\n      xden = (xden + Q[1][i]) * y;\n    }\n\n    var result = (xnum + P[1][7]) / (xden + Q[1][7]);\n    var ysq = parseInt(y * 16) / 16;\n    var del = (y - ysq) * (y + ysq);\n    return Math.exp(-ysq * ysq) * Math.exp(-del) * result;\n  }\n  /**\n   * Approximates the complement of the error function erfc() for x > 4.0 using\n   * this function:\n   *\n   * erfc(x) = (e^(-x^2) / x) * [ 1/sqrt(pi) +\n   *               n\n   *    1/(x^2) * sum (p_j * x^(-2j)) / (q_j * x^(-2j)) ]\n   *              j=0\n   */\n\n\n  function erfc3(y) {\n    var ysq = 1 / (y * y);\n    var xnum = P[2][5] * ysq;\n    var xden = ysq;\n    var i;\n\n    for (i = 0; i < 4; i += 1) {\n      xnum = (xnum + P[2][i]) * ysq;\n      xden = (xden + Q[2][i]) * ysq;\n    }\n\n    var result = ysq * (xnum + P[2][4]) / (xden + Q[2][4]);\n    result = (SQRPI - result) / y;\n    ysq = parseInt(y * 16) / 16;\n    var del = (y - ysq) * (y + ysq);\n    return Math.exp(-ysq * ysq) * Math.exp(-del) * result;\n  }\n});\n/**\n * Upper bound for the first approximation interval, 0 <= x <= THRESH\n * @constant\n */\n\nvar THRESH = 0.46875;\n/**\n * Constant used by W. J. Cody's Fortran77 implementation to denote sqrt(pi)\n * @constant\n */\n\nvar SQRPI = 5.6418958354775628695e-1;\n/**\n * Coefficients for each term of the numerator sum (p_j) for each approximation\n * interval (see W. J. Cody's paper for more details)\n * @constant\n */\n\nvar P = [[3.16112374387056560e00, 1.13864154151050156e02, 3.77485237685302021e02, 3.20937758913846947e03, 1.85777706184603153e-1], [5.64188496988670089e-1, 8.88314979438837594e00, 6.61191906371416295e01, 2.98635138197400131e02, 8.81952221241769090e02, 1.71204761263407058e03, 2.05107837782607147e03, 1.23033935479799725e03, 2.15311535474403846e-8], [3.05326634961232344e-1, 3.60344899949804439e-1, 1.25781726111229246e-1, 1.60837851487422766e-2, 6.58749161529837803e-4, 1.63153871373020978e-2]];\n/**\n * Coefficients for each term of the denominator sum (q_j) for each approximation\n * interval (see W. J. Cody's paper for more details)\n * @constant\n */\n\nvar Q = [[2.36012909523441209e01, 2.44024637934444173e02, 1.28261652607737228e03, 2.84423683343917062e03], [1.57449261107098347e01, 1.17693950891312499e02, 5.37181101862009858e02, 1.62138957456669019e03, 3.29079923573345963e03, 4.36261909014324716e03, 3.43936767414372164e03, 1.23033935480374942e03], [2.56852019228982242e00, 1.87295284992346047e00, 5.27905102951428412e-1, 6.05183413124413191e-2, 2.33520497626869185e-3]];\n/**\n * Maximum/minimum safe numbers to input to erf() (in ES6+, this number is\n * Number.[MAX|MIN]_SAFE_INTEGER). erf() for all numbers beyond this limit will\n * return 1\n */\n\nvar MAX_NUM = Math.pow(2, 53);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/special/erf.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/mad.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/mad.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMad\": () => (/* binding */ createMad)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage.js */ \"./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js\");\n\n\n\nvar name = 'mad';\nvar dependencies = ['typed', 'abs', 'map', 'median', 'subtract'];\nvar createMad = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    abs,\n    map,\n    median,\n    subtract\n  } = _ref;\n  /**\n   * Compute the median absolute deviation of a matrix or a list with values.\n   * The median absolute deviation is defined as the median of the absolute\n   * deviations from the median.\n   *\n   * Syntax:\n   *\n   *     math.mad(a, b, c, ...)\n   *     math.mad(A)\n   *\n   * Examples:\n   *\n   *     math.mad(10, 20, 30)             // returns 10\n   *     math.mad([1, 2, 3])              // returns 1\n   *     math.mad([[1, 2, 3], [4, 5, 6]]) // returns 1.5\n   *\n   * See also:\n   *\n   *     median, mean, std, abs\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or multiple scalar values.\n   * @return {*} The median absolute deviation.\n   */\n\n  return typed(name, {\n    // mad([a, b, c, d, ...])\n    'Array | Matrix': _mad,\n    // mad(a, b, c, d, ...)\n    '...': function _(args) {\n      return _mad(args);\n    }\n  });\n\n  function _mad(array) {\n    array = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(array.valueOf());\n\n    if (array.length === 0) {\n      throw new Error('Cannot calculate median absolute deviation (mad) of an empty array');\n    }\n\n    try {\n      var med = median(array);\n      return median(map(array, function (value) {\n        return abs(subtract(value, med));\n      }));\n    } catch (err) {\n      if (err instanceof TypeError && err.message.indexOf('median') !== -1) {\n        throw new TypeError(err.message.replace('median', 'mad'));\n      } else {\n        throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'mad');\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/mad.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/max.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/max.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMax\": () => (/* binding */ createMax)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage.js */ \"./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js\");\n\n\n\nvar name = 'max';\nvar dependencies = ['typed', 'config', 'numeric', 'larger'];\nvar createMax = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    numeric,\n    larger\n  } = _ref;\n  /**\n   * Compute the maximum value of a matrix or a  list with values.\n   * In case of a multi dimensional array, the maximum of the flattened array\n   * will be calculated. When `dim` is provided, the maximum over the selected\n   * dimension will be calculated. Parameter `dim` is zero-based.\n   *\n   * Syntax:\n   *\n   *     math.max(a, b, c, ...)\n   *     math.max(A)\n   *     math.max(A, dim)\n   *\n   * Examples:\n   *\n   *     math.max(2, 1, 4, 3)                  // returns 4\n   *     math.max([2, 1, 4, 3])                // returns 4\n   *\n   *     // maximum over a specified dimension (zero-based)\n   *     math.max([[2, 5], [4, 3], [1, 7]], 0) // returns [4, 7]\n   *     math.max([[2, 5], [4, 3]], [1, 7], 1) // returns [5, 4, 7]\n   *\n   *     math.max(2.7, 7.1, -4.5, 2.0, 4.1)    // returns 7.1\n   *     math.min(2.7, 7.1, -4.5, 2.0, 4.1)    // returns -4.5\n   *\n   * See also:\n   *\n   *    mean, median, min, prod, std, sum, variance\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The maximum value\n   */\n\n  return typed(name, {\n    // max([a, b, c, d, ...])\n    'Array | Matrix': _max,\n    // max([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.reduce)(array, dim.valueOf(), _largest);\n    },\n    // max(a, b, c, d, ...)\n    '...': function _(args) {\n      if ((0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.containsCollections)(args)) {\n        throw new TypeError('Scalar values expected in function max');\n      }\n\n      return _max(args);\n    }\n  });\n  /**\n   * Return the largest of two values\n   * @param {*} x\n   * @param {*} y\n   * @returns {*} Returns x when x is largest, or y when y is largest\n   * @private\n   */\n\n  function _largest(x, y) {\n    try {\n      return larger(x, y) ? x : y;\n    } catch (err) {\n      throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'max', y);\n    }\n  }\n  /**\n   * Recursively calculate the maximum value in an n-dimensional array\n   * @param {Array} array\n   * @return {number} max\n   * @private\n   */\n\n\n  function _max(array) {\n    var res;\n    (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepForEach)(array, function (value) {\n      try {\n        if (isNaN(value) && typeof value === 'number') {\n          res = NaN;\n        } else if (res === undefined || larger(value, res)) {\n          res = value;\n        }\n      } catch (err) {\n        throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'max', value);\n      }\n    });\n\n    if (res === undefined) {\n      throw new Error('Cannot calculate max of an empty array');\n    } // make sure returning numeric value: parse a string into a numeric value\n\n\n    if (typeof res === 'string') {\n      res = numeric(res, config.number);\n    }\n\n    return res;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/max.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/mean.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/mean.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMean\": () => (/* binding */ createMean)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/improveErrorMessage.js */ \"./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js\");\n\n\n\n\nvar name = 'mean';\nvar dependencies = ['typed', 'add', 'divide'];\nvar createMean = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    divide\n  } = _ref;\n  /**\n   * Compute the mean value of matrix or a list with values.\n   * In case of a multi dimensional array, the mean of the flattened array\n   * will be calculated. When `dim` is provided, the maximum over the selected\n   * dimension will be calculated. Parameter `dim` is zero-based.\n   *\n   * Syntax:\n   *\n   *     math.mean(a, b, c, ...)\n   *     math.mean(A)\n   *     math.mean(A, dim)\n   *\n   * Examples:\n   *\n   *     math.mean(2, 1, 4, 3)                     // returns 2.5\n   *     math.mean([1, 2.7, 3.2, 4])               // returns 2.725\n   *\n   *     math.mean([[2, 5], [6, 3], [1, 7]], 0)    // returns [3, 5]\n   *     math.mean([[2, 5], [6, 3], [1, 7]], 1)    // returns [3.5, 4.5, 4]\n   *\n   * See also:\n   *\n   *     median, min, max, sum, prod, std, variance\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The mean of all values\n   */\n\n  return typed(name, {\n    // mean([a, b, c, d, ...])\n    'Array | Matrix': _mean,\n    // mean([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': _nmeanDim,\n    // mean(a, b, c, d, ...)\n    '...': function _(args) {\n      if ((0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.containsCollections)(args)) {\n        throw new TypeError('Scalar values expected in function mean');\n      }\n\n      return _mean(args);\n    }\n  });\n  /**\n   * Calculate the mean value in an n-dimensional array, returning a\n   * n-1 dimensional array\n   * @param {Array} array\n   * @param {number} dim\n   * @return {number} mean\n   * @private\n   */\n\n  function _nmeanDim(array, dim) {\n    try {\n      var sum = (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.reduce)(array, dim, add);\n      var s = Array.isArray(array) ? (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_2__.arraySize)(array) : array.size();\n      return divide(sum, s[dim]);\n    } catch (err) {\n      throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_3__.improveErrorMessage)(err, 'mean');\n    }\n  }\n  /**\n   * Recursively calculate the mean value in an n-dimensional array\n   * @param {Array} array\n   * @return {number} mean\n   * @private\n   */\n\n\n  function _mean(array) {\n    var sum;\n    var num = 0;\n    (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepForEach)(array, function (value) {\n      try {\n        sum = sum === undefined ? value : add(sum, value);\n        num++;\n      } catch (err) {\n        throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_3__.improveErrorMessage)(err, 'mean', value);\n      }\n    });\n\n    if (num === 0) {\n      throw new Error('Cannot calculate the mean of an empty array');\n    }\n\n    return divide(sum, num);\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/mean.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/median.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/median.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMedian\": () => (/* binding */ createMedian)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage.js */ \"./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js\");\n\n\n\n\nvar name = 'median';\nvar dependencies = ['typed', 'add', 'divide', 'compare', 'partitionSelect'];\nvar createMedian = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    divide,\n    compare,\n    partitionSelect\n  } = _ref;\n  /**\n   * Recursively calculate the median of an n-dimensional array\n   * @param {Array} array\n   * @return {Number} median\n   * @private\n   */\n\n  function _median(array) {\n    try {\n      array = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(array.valueOf());\n      var num = array.length;\n\n      if (num === 0) {\n        throw new Error('Cannot calculate median of an empty array');\n      }\n\n      if (num % 2 === 0) {\n        // even: return the average of the two middle values\n        var mid = num / 2 - 1;\n        var right = partitionSelect(array, mid + 1); // array now partitioned at mid + 1, take max of left part\n\n        var left = array[mid];\n\n        for (var i = 0; i < mid; ++i) {\n          if (compare(array[i], left) > 0) {\n            left = array[i];\n          }\n        }\n\n        return middle2(left, right);\n      } else {\n        // odd: return the middle value\n        var m = partitionSelect(array, (num - 1) / 2);\n        return middle(m);\n      }\n    } catch (err) {\n      throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'median');\n    }\n  } // helper function to type check the middle value of the array\n\n\n  var middle = typed({\n    'number | BigNumber | Complex | Unit': function numberBigNumberComplexUnit(value) {\n      return value;\n    }\n  }); // helper function to type check the two middle value of the array\n\n  var middle2 = typed({\n    'number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit': function numberBigNumberComplexUnitNumberBigNumberComplexUnit(left, right) {\n      return divide(add(left, right), 2);\n    }\n  });\n  /**\n   * Compute the median of a matrix or a list with values. The values are\n   * sorted and the middle value is returned. In case of an even number of\n   * values, the average of the two middle values is returned.\n   * Supported types of values are: Number, BigNumber, Unit\n   *\n   * In case of a (multi dimensional) array or matrix, the median of all\n   * elements will be calculated.\n   *\n   * Syntax:\n   *\n   *     math.median(a, b, c, ...)\n   *     math.median(A)\n   *\n   * Examples:\n   *\n   *     math.median(5, 2, 7)        // returns 5\n   *     math.median([3, -1, 5, 7])  // returns 4\n   *\n   * See also:\n   *\n   *     mean, min, max, sum, prod, std, variance, quantileSeq\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The median\n   */\n\n  return typed(name, {\n    // median([a, b, c, d, ...])\n    'Array | Matrix': _median,\n    // median([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {\n      // TODO: implement median(A, dim)\n      throw new Error('median(A, dim) is not yet supported'); // return reduce(arguments[0], arguments[1], ...)\n    },\n    // median(a, b, c, d, ...)\n    '...': function _(args) {\n      if ((0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_3__.containsCollections)(args)) {\n        throw new TypeError('Scalar values expected in function median');\n      }\n\n      return _median(args);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/median.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/min.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/min.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMin\": () => (/* binding */ createMin)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage.js */ \"./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js\");\n\n\n\nvar name = 'min';\nvar dependencies = ['typed', 'config', 'numeric', 'smaller'];\nvar createMin = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    numeric,\n    smaller\n  } = _ref;\n  /**\n   * Compute the minimum value of a matrix or a  list of values.\n   * In case of a multi dimensional array, the minimum of the flattened array\n   * will be calculated. When `dim` is provided, the minimum over the selected\n   * dimension will be calculated. Parameter `dim` is zero-based.\n   *\n   * Syntax:\n   *\n   *     math.min(a, b, c, ...)\n   *     math.min(A)\n   *     math.min(A, dim)\n   *\n   * Examples:\n   *\n   *     math.min(2, 1, 4, 3)                  // returns 1\n   *     math.min([2, 1, 4, 3])                // returns 1\n   *\n   *     // minimum over a specified dimension (zero-based)\n   *     math.min([[2, 5], [4, 3], [1, 7]], 0) // returns [1, 3]\n   *     math.min([[2, 5], [4, 3], [1, 7]], 1) // returns [2, 3, 1]\n   *\n   *     math.max(2.7, 7.1, -4.5, 2.0, 4.1)    // returns 7.1\n   *     math.min(2.7, 7.1, -4.5, 2.0, 4.1)    // returns -4.5\n   *\n   * See also:\n   *\n   *    mean, median, max, prod, std, sum, variance\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The minimum value\n   */\n\n  return typed(name, {\n    // min([a, b, c, d, ...])\n    'Array | Matrix': _min,\n    // min([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.reduce)(array, dim.valueOf(), _smallest);\n    },\n    // min(a, b, c, d, ...)\n    '...': function _(args) {\n      if ((0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.containsCollections)(args)) {\n        throw new TypeError('Scalar values expected in function min');\n      }\n\n      return _min(args);\n    }\n  });\n  /**\n   * Return the smallest of two values\n   * @param {*} x\n   * @param {*} y\n   * @returns {*} Returns x when x is smallest, or y when y is smallest\n   * @private\n   */\n\n  function _smallest(x, y) {\n    try {\n      return smaller(x, y) ? x : y;\n    } catch (err) {\n      throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'min', y);\n    }\n  }\n  /**\n   * Recursively calculate the minimum value in an n-dimensional array\n   * @param {Array} array\n   * @return {number} min\n   * @private\n   */\n\n\n  function _min(array) {\n    var min;\n    (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepForEach)(array, function (value) {\n      try {\n        if (isNaN(value) && typeof value === 'number') {\n          min = NaN;\n        } else if (min === undefined || smaller(value, min)) {\n          min = value;\n        }\n      } catch (err) {\n        throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'min', value);\n      }\n    });\n\n    if (min === undefined) {\n      throw new Error('Cannot calculate min of an empty array');\n    } // make sure returning numeric value: parse a string into a numeric value\n\n\n    if (typeof min === 'string') {\n      min = numeric(min, config.number);\n    }\n\n    return min;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/min.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/mode.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/mode.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMode\": () => (/* binding */ createMode)\n/* harmony export */ });\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'mode';\nvar dependencies = ['typed', 'isNaN', 'isNumeric'];\nvar createMode = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    isNaN,\n    isNumeric\n  } = _ref;\n  /**\n  * Computes the mode of a set of numbers or a list with values(numbers or characters).\n  * If there are more than one modes, it returns a list of those values.\n  *\n  * Syntax:\n  *\n  *     math.mode(a, b, c, ...)\n  *     math.mode(A)\n  *\n  * Examples:\n  *\n  *     math.mode(2, 1, 4, 3, 1)                            // returns [1]\n  *     math.mode([1, 2.7, 3.2, 4, 2.7])                    // returns [2.7]\n  *     math.mode(1, 4, 6, 1, 6)                             // returns [1, 6]\n  *     math.mode('a','a','b','c')                           // returns [\"a\"]\n  *     math.mode(1, 1.5, 'abc')                             // returns [1, 1.5, \"abc\"]\n  *\n  * See also:\n  *\n  *     median,\n  *     mean\n  *\n  * @param {... *} args  A single matrix\n  * @return {*} The mode of all values\n  */\n\n  return typed(name, {\n    'Array | Matrix': _mode,\n    '...': function _(args) {\n      return _mode(args);\n    }\n  });\n  /**\n   * Calculates the mode in an 1-dimensional array\n   * @param {Array} values\n   * @return {Array} mode\n   * @private\n   */\n\n  function _mode(values) {\n    values = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_1__.flatten)(values.valueOf());\n    var num = values.length;\n\n    if (num === 0) {\n      throw new Error('Cannot calculate mode of an empty array');\n    }\n\n    var count = {};\n    var mode = [];\n    var max = 0;\n\n    for (var i = 0; i < values.length; i++) {\n      var value = values[i];\n\n      if (isNumeric(value) && isNaN(value)) {\n        throw new Error('Cannot calculate mode of an array containing NaN values');\n      }\n\n      if (!(value in count)) {\n        count[value] = 0;\n      }\n\n      count[value]++;\n\n      if (count[value] === max) {\n        mode.push(value);\n      } else if (count[value] > max) {\n        max = count[value];\n        mode = [value];\n      }\n    }\n\n    return mode;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/mode.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/prod.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/prod.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createProd\": () => (/* binding */ createProd)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage.js */ \"./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js\");\n\n\n\nvar name = 'prod';\nvar dependencies = ['typed', 'config', 'multiplyScalar', 'numeric'];\nvar createProd = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    multiplyScalar,\n    numeric\n  } = _ref;\n  /**\n   * Compute the product of a matrix or a list with values.\n   * In case of a (multi dimensional) array or matrix, the sum of all\n   * elements will be calculated.\n   *\n   * Syntax:\n   *\n   *     math.prod(a, b, c, ...)\n   *     math.prod(A)\n   *\n   * Examples:\n   *\n   *     math.multiply(2, 3)           // returns 6\n   *     math.prod(2, 3)               // returns 6\n   *     math.prod(2, 3, 4)            // returns 24\n   *     math.prod([2, 3, 4])          // returns 24\n   *     math.prod([[2, 5], [4, 3]])   // returns 120\n   *\n   * See also:\n   *\n   *    mean, median, min, max, sum, std, variance\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The product of all values\n   */\n\n  return typed(name, {\n    // prod([a, b, c, d, ...])\n    'Array | Matrix': _prod,\n    // prod([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {\n      // TODO: implement prod(A, dim)\n      throw new Error('prod(A, dim) is not yet supported'); // return reduce(arguments[0], arguments[1], math.prod)\n    },\n    // prod(a, b, c, d, ...)\n    '...': function _(args) {\n      return _prod(args);\n    }\n  });\n  /**\n   * Recursively calculate the product of an n-dimensional array\n   * @param {Array} array\n   * @return {number} prod\n   * @private\n   */\n\n  function _prod(array) {\n    var prod;\n    (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepForEach)(array, function (value) {\n      try {\n        prod = prod === undefined ? value : multiplyScalar(prod, value);\n      } catch (err) {\n        throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'prod', value);\n      }\n    }); // make sure returning numeric value: parse a string into a numeric value\n\n    if (typeof prod === 'string') {\n      prod = numeric(prod, config.number);\n    }\n\n    if (prod === undefined) {\n      throw new Error('Cannot calculate prod of an empty array');\n    }\n\n    return prod;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/prod.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/quantileSeq.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/quantileSeq.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createQuantileSeq\": () => (/* binding */ createQuantileSeq)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'quantileSeq';\nvar dependencies = ['typed', 'add', 'multiply', 'partitionSelect', 'compare'];\nvar createQuantileSeq = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    multiply,\n    partitionSelect,\n    compare\n  } = _ref;\n  /**\n   * Compute the prob order quantile of a matrix or a list with values.\n   * The sequence is sorted and the middle value is returned.\n   * Supported types of sequence values are: Number, BigNumber, Unit\n   * Supported types of probability are: Number, BigNumber\n   *\n   * In case of a (multi dimensional) array or matrix, the prob order quantile\n   * of all elements will be calculated.\n   *\n   * Syntax:\n   *\n   *     math.quantileSeq(A, prob[, sorted])\n   *     math.quantileSeq(A, [prob1, prob2, ...][, sorted])\n   *     math.quantileSeq(A, N[, sorted])\n   *\n   * Examples:\n   *\n   *     math.quantileSeq([3, -1, 5, 7], 0.5)         // returns 4\n   *     math.quantileSeq([3, -1, 5, 7], [1/3, 2/3])  // returns [3, 5]\n   *     math.quantileSeq([3, -1, 5, 7], 2)           // returns [3, 5]\n   *     math.quantileSeq([-1, 3, 5, 7], 0.5, true)   // returns 4\n   *\n   * See also:\n   *\n   *     median, mean, min, max, sum, prod, std, variance\n   *\n   * @param {Array, Matrix} data                A single matrix or Array\n   * @param {Number, BigNumber, Array} probOrN  prob is the order of the quantile, while N is\n   *                                            the amount of evenly distributed steps of\n   *                                            probabilities; only one of these options can\n   *                                            be provided\n   * @param {Boolean} sorted=false              is data sorted in ascending order\n   * @return {Number, BigNumber, Unit, Array}   Quantile(s)\n   */\n\n  function quantileSeq(data, probOrN, sorted) {\n    var probArr, dataArr, one;\n\n    if (arguments.length < 2 || arguments.length > 3) {\n      throw new SyntaxError('Function quantileSeq requires two or three parameters');\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(data)) {\n      sorted = sorted || false;\n\n      if (typeof sorted === 'boolean') {\n        dataArr = data.valueOf();\n\n        if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(probOrN)) {\n          if (probOrN < 0) {\n            throw new Error('N/prob must be non-negative');\n          }\n\n          if (probOrN <= 1) {\n            // quantileSeq([a, b, c, d, ...], prob[,sorted])\n            return _quantileSeq(dataArr, probOrN, sorted);\n          }\n\n          if (probOrN > 1) {\n            // quantileSeq([a, b, c, d, ...], N[,sorted])\n            if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.isInteger)(probOrN)) {\n              throw new Error('N must be a positive integer');\n            }\n\n            var nPlusOne = probOrN + 1;\n            probArr = new Array(probOrN);\n\n            for (var i = 0; i < probOrN;) {\n              probArr[i] = _quantileSeq(dataArr, ++i / nPlusOne, sorted);\n            }\n\n            return probArr;\n          }\n        }\n\n        if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(probOrN)) {\n          var BigNumber = probOrN.constructor;\n\n          if (probOrN.isNegative()) {\n            throw new Error('N/prob must be non-negative');\n          }\n\n          one = new BigNumber(1);\n\n          if (probOrN.lte(one)) {\n            // quantileSeq([a, b, c, d, ...], prob[,sorted])\n            return new BigNumber(_quantileSeq(dataArr, probOrN, sorted));\n          }\n\n          if (probOrN.gt(one)) {\n            // quantileSeq([a, b, c, d, ...], N[,sorted])\n            if (!probOrN.isInteger()) {\n              throw new Error('N must be a positive integer');\n            } // largest possible Array length is 2^32-1\n            // 2^32 < 10^15, thus safe conversion guaranteed\n\n\n            var intN = probOrN.toNumber();\n\n            if (intN > 4294967295) {\n              throw new Error('N must be less than or equal to 2^32-1, as that is the maximum length of an Array');\n            }\n\n            var _nPlusOne = new BigNumber(intN + 1);\n\n            probArr = new Array(intN);\n\n            for (var _i = 0; _i < intN;) {\n              probArr[_i] = new BigNumber(_quantileSeq(dataArr, new BigNumber(++_i).div(_nPlusOne), sorted));\n            }\n\n            return probArr;\n          }\n        }\n\n        if (Array.isArray(probOrN)) {\n          // quantileSeq([a, b, c, d, ...], [prob1, prob2, ...][,sorted])\n          probArr = new Array(probOrN.length);\n\n          for (var _i2 = 0; _i2 < probArr.length; ++_i2) {\n            var currProb = probOrN[_i2];\n\n            if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(currProb)) {\n              if (currProb < 0 || currProb > 1) {\n                throw new Error('Probability must be between 0 and 1, inclusive');\n              }\n            } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(currProb)) {\n              one = new currProb.constructor(1);\n\n              if (currProb.isNegative() || currProb.gt(one)) {\n                throw new Error('Probability must be between 0 and 1, inclusive');\n              }\n            } else {\n              throw new TypeError('Unexpected type of argument in function quantileSeq'); // FIXME: becomes redundant when converted to typed-function\n            }\n\n            probArr[_i2] = _quantileSeq(dataArr, currProb, sorted);\n          }\n\n          return probArr;\n        }\n\n        throw new TypeError('Unexpected type of argument in function quantileSeq'); // FIXME: becomes redundant when converted to typed-function\n      }\n\n      throw new TypeError('Unexpected type of argument in function quantileSeq'); // FIXME: becomes redundant when converted to typed-function\n    }\n\n    throw new TypeError('Unexpected type of argument in function quantileSeq'); // FIXME: becomes redundant when converted to typed-function\n  }\n  /**\n   * Calculate the prob order quantile of an n-dimensional array.\n   *\n   * @param {Array} array\n   * @param {Number, BigNumber} prob\n   * @param {Boolean} sorted\n   * @return {Number, BigNumber, Unit} prob order quantile\n   * @private\n   */\n\n\n  function _quantileSeq(array, prob, sorted) {\n    var flat = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.flatten)(array);\n    var len = flat.length;\n\n    if (len === 0) {\n      throw new Error('Cannot calculate quantile of an empty sequence');\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(prob)) {\n      var _index = prob * (len - 1);\n\n      var _fracPart = _index % 1;\n\n      if (_fracPart === 0) {\n        var value = sorted ? flat[_index] : partitionSelect(flat, _index);\n        validate(value);\n        return value;\n      }\n\n      var _integerPart = Math.floor(_index);\n\n      var _left;\n\n      var _right;\n\n      if (sorted) {\n        _left = flat[_integerPart];\n        _right = flat[_integerPart + 1];\n      } else {\n        _right = partitionSelect(flat, _integerPart + 1); // max of partition is kth largest\n\n        _left = flat[_integerPart];\n\n        for (var i = 0; i < _integerPart; ++i) {\n          if (compare(flat[i], _left) > 0) {\n            _left = flat[i];\n          }\n        }\n      }\n\n      validate(_left);\n      validate(_right); // Q(prob) = (1-f)*A[floor(index)] + f*A[floor(index)+1]\n\n      return add(multiply(_left, 1 - _fracPart), multiply(_right, _fracPart));\n    } // If prob is a BigNumber\n\n\n    var index = prob.times(len - 1);\n\n    if (index.isInteger()) {\n      index = index.toNumber();\n\n      var _value = sorted ? flat[index] : partitionSelect(flat, index);\n\n      validate(_value);\n      return _value;\n    }\n\n    var integerPart = index.floor();\n    var fracPart = index.minus(integerPart);\n    var integerPartNumber = integerPart.toNumber();\n    var left;\n    var right;\n\n    if (sorted) {\n      left = flat[integerPartNumber];\n      right = flat[integerPartNumber + 1];\n    } else {\n      right = partitionSelect(flat, integerPartNumber + 1); // max of partition is kth largest\n\n      left = flat[integerPartNumber];\n\n      for (var _i3 = 0; _i3 < integerPartNumber; ++_i3) {\n        if (compare(flat[_i3], left) > 0) {\n          left = flat[_i3];\n        }\n      }\n    }\n\n    validate(left);\n    validate(right); // Q(prob) = (1-f)*A[floor(index)] + f*A[floor(index)+1]\n\n    var one = new fracPart.constructor(1);\n    return add(multiply(left, one.minus(fracPart)), multiply(right, fracPart));\n  }\n  /**\n   * Check if array value types are valid, throw error otherwise.\n   * @param {number | BigNumber | Unit} x\n   * @param {number | BigNumber | Unit} x\n   * @private\n   */\n\n\n  var validate = typed({\n    'number | BigNumber | Unit': function numberBigNumberUnit(x) {\n      return x;\n    }\n  });\n  return quantileSeq;\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/quantileSeq.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/std.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/std.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createStd\": () => (/* binding */ createStd)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'std';\nvar dependencies = ['typed', 'sqrt', 'variance'];\nvar createStd = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    sqrt,\n    variance\n  } = _ref;\n  /**\n   * Compute the standard deviation of a matrix or a  list with values.\n   * The standard deviations is defined as the square root of the variance:\n   * `std(A) = sqrt(variance(A))`.\n   * In case of a (multi dimensional) array or matrix, the standard deviation\n   * over all elements will be calculated by default, unless an axis is specified\n   * in which case the standard deviation will be computed along that axis.\n   *\n   * Additionally, it is possible to compute the standard deviation along the rows\n   * or columns of a matrix by specifying the dimension as the second argument.\n   *\n   * Optionally, the type of normalization can be specified as the final\n   * parameter. The parameter `normalization` can be one of the following values:\n   *\n   * - 'unbiased' (default) The sum of squared errors is divided by (n - 1)\n   * - 'uncorrected'        The sum of squared errors is divided by n\n   * - 'biased'             The sum of squared errors is divided by (n + 1)\n   *\n   *\n   * Syntax:\n   *\n   *     math.std(a, b, c, ...)\n   *     math.std(A)\n   *     math.std(A, normalization)\n   *     math.std(A, dimension)\n   *     math.std(A, dimension, normalization)\n   *\n   * Examples:\n   *\n   *     math.std(2, 4, 6)                     // returns 2\n   *     math.std([2, 4, 6, 8])                // returns 2.581988897471611\n   *     math.std([2, 4, 6, 8], 'uncorrected') // returns 2.23606797749979\n   *     math.std([2, 4, 6, 8], 'biased')      // returns 2\n   *\n   *     math.std([[1, 2, 3], [4, 5, 6]])      // returns 1.8708286933869707\n   *     math.std([[1, 2, 3], [4, 6, 8]], 0)    // returns [2.1213203435596424, 2.8284271247461903, 3.5355339059327378]\n   *     math.std([[1, 2, 3], [4, 6, 8]], 1)    // returns [1, 2]\n   *     math.std([[1, 2, 3], [4, 6, 8]], 1, 'biased') // returns [0.7071067811865476, 1.4142135623730951]\n   *\n   * See also:\n   *\n   *    mean, median, max, min, prod, sum, variance\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or or multiple scalar values\n   * @param {string} [normalization='unbiased']\n   *                        Determines how to normalize the variance.\n   *                        Choose 'unbiased' (default), 'uncorrected', or 'biased'.\n   * @param dimension {number | BigNumber}\n   *                        Determines the axis to compute the standard deviation for a matrix\n   * @return {*} The standard deviation\n   */\n\n  return typed(name, {\n    // std([a, b, c, d, ...])\n    'Array | Matrix': _std,\n    // std([a, b, c, d, ...], normalization)\n    'Array | Matrix, string': _std,\n    // std([a, b, c, c, ...], dim)\n    'Array | Matrix, number | BigNumber': _std,\n    // std([a, b, c, c, ...], dim, normalization)\n    'Array | Matrix, number | BigNumber, string': _std,\n    // std(a, b, c, d, ...)\n    '...': function _(args) {\n      return _std(args);\n    }\n  });\n\n  function _std(array, normalization) {\n    if (array.length === 0) {\n      throw new SyntaxError('Function std requires one or more parameters (0 provided)');\n    }\n\n    try {\n      return sqrt(variance.apply(null, arguments));\n    } catch (err) {\n      if (err instanceof TypeError && err.message.indexOf(' variance') !== -1) {\n        throw new TypeError(err.message.replace(' variance', ' std'));\n      } else {\n        throw err;\n      }\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/std.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/sum.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/sum.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSum\": () => (/* binding */ createSum)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage.js */ \"./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js\");\n\n\n\nvar name = 'sum';\nvar dependencies = ['typed', 'config', 'add', 'numeric'];\nvar createSum = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    add,\n    numeric\n  } = _ref;\n  /**\n   * Compute the sum of a matrix or a list with values.\n   * In case of a (multi dimensional) array or matrix, the sum of all\n   * elements will be calculated.\n   *\n   * Syntax:\n   *\n   *     math.sum(a, b, c, ...)\n   *     math.sum(A)\n   *\n   * Examples:\n   *\n   *     math.sum(2, 1, 4, 3)               // returns 10\n   *     math.sum([2, 1, 4, 3])             // returns 10\n   *     math.sum([[2, 5], [4, 3], [1, 7]]) // returns 22\n   *\n   * See also:\n   *\n   *    mean, median, min, max, prod, std, variance\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The sum of all values\n   */\n\n  return typed(name, {\n    // sum([a, b, c, d, ...])\n    'Array | Matrix': _sum,\n    // sum([a, b, c, d, ...], dim)\n    'Array | Matrix, number | BigNumber': _nsumDim,\n    // sum(a, b, c, d, ...)\n    '...': function _(args) {\n      if ((0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.containsCollections)(args)) {\n        throw new TypeError('Scalar values expected in function sum');\n      }\n\n      return _sum(args);\n    }\n  });\n  /**\n   * Recursively calculate the sum of an n-dimensional array\n   * @param {Array | Matrix} array\n   * @return {number} sum\n   * @private\n   */\n\n  function _sum(array) {\n    var sum;\n    (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepForEach)(array, function (value) {\n      try {\n        sum = sum === undefined ? value : add(sum, value);\n      } catch (err) {\n        throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'sum', value);\n      }\n    }); // make sure returning numeric value: parse a string into a numeric value\n\n    if (sum === undefined) {\n      sum = numeric(0, config.number);\n    }\n\n    if (typeof sum === 'string') {\n      sum = numeric(sum, config.number);\n    }\n\n    return sum;\n  }\n\n  function _nsumDim(array, dim) {\n    try {\n      var sum = (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.reduce)(array, dim, add);\n      return sum;\n    } catch (err) {\n      throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'sum');\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/sum.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"improveErrorMessage\": () => (/* binding */ improveErrorMessage)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n/**\n * Improve error messages for statistics functions. Errors are typically\n * thrown in an internally used function like larger, causing the error\n * not to mention the function (like max) which is actually used by the user.\n *\n * @param {Error} err\n * @param {String} fnName\n * @param {*} [value]\n * @return {Error}\n */\n\nfunction improveErrorMessage(err, fnName, value) {\n  // TODO: add information with the index (also needs transform in expression parser)\n  var details;\n\n  if (String(err).indexOf('Unexpected type') !== -1) {\n    details = arguments.length > 2 ? ' (type: ' + (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_0__.typeOf)(value) + ', value: ' + JSON.stringify(value) + ')' : ' (type: ' + err.data.actual + ')';\n    return new TypeError('Cannot calculate ' + fnName + ', unexpected type of argument' + details);\n  }\n\n  if (String(err).indexOf('complex numbers') !== -1) {\n    details = arguments.length > 2 ? ' (type: ' + (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_0__.typeOf)(value) + ', value: ' + JSON.stringify(value) + ')' : '';\n    return new TypeError('Cannot calculate ' + fnName + ', no ordering relation is defined for complex numbers' + details);\n  }\n\n  return err;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/statistics/variance.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/statistics/variance.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createVariance\": () => (/* binding */ createVariance)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/improveErrorMessage.js */ \"./node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js\");\n\n\n\n\nvar DEFAULT_NORMALIZATION = 'unbiased';\nvar name = 'variance';\nvar dependencies = ['typed', 'add', 'subtract', 'multiply', 'divide', 'apply', 'isNaN'];\nvar createVariance = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    add,\n    subtract,\n    multiply,\n    divide,\n    apply,\n    isNaN\n  } = _ref;\n  /**\n   * Compute the variance of a matrix or a  list with values.\n   * In case of a (multi dimensional) array or matrix, the variance over all\n   * elements will be calculated.\n   *\n   * Additionally, it is possible to compute the variance along the rows\n   * or columns of a matrix by specifying the dimension as the second argument.\n   *\n   * Optionally, the type of normalization can be specified as the final\n   * parameter. The parameter `normalization` can be one of the following values:\n   *\n   * - 'unbiased' (default) The sum of squared errors is divided by (n - 1)\n   * - 'uncorrected'        The sum of squared errors is divided by n\n   * - 'biased'             The sum of squared errors is divided by (n + 1)\n   *\n   *\n   * Note that older browser may not like the variable name `var`. In that\n   * case, the function can be called as `math['var'](...)` instead of\n   * `math.var(...)`.\n   *\n   * Syntax:\n   *\n   *     math.variance(a, b, c, ...)\n   *     math.variance(A)\n   *     math.variance(A, normalization)\n   *     math.variance(A, dimension)\n   *     math.variance(A, dimension, normalization)\n   *\n   * Examples:\n   *\n   *     math.variance(2, 4, 6)                     // returns 4\n   *     math.variance([2, 4, 6, 8])                // returns 6.666666666666667\n   *     math.variance([2, 4, 6, 8], 'uncorrected') // returns 5\n   *     math.variance([2, 4, 6, 8], 'biased')      // returns 4\n   *\n   *     math.variance([[1, 2, 3], [4, 5, 6]])      // returns 3.5\n   *     math.variance([[1, 2, 3], [4, 6, 8]], 0)   // returns [4.5, 8, 12.5]\n   *     math.variance([[1, 2, 3], [4, 6, 8]], 1)   // returns [1, 4]\n   *     math.variance([[1, 2, 3], [4, 6, 8]], 1, 'biased') // returns [0.5, 2]\n   *\n   * See also:\n   *\n   *    mean, median, max, min, prod, std, sum\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or or multiple scalar values\n   * @param {string} [normalization='unbiased']\n   *                        Determines how to normalize the variance.\n   *                        Choose 'unbiased' (default), 'uncorrected', or 'biased'.\n   * @param dimension {number | BigNumber}\n   *                        Determines the axis to compute the variance for a matrix\n   * @return {*} The variance\n   */\n\n  return typed(name, {\n    // variance([a, b, c, d, ...])\n    'Array | Matrix': function ArrayMatrix(array) {\n      return _var(array, DEFAULT_NORMALIZATION);\n    },\n    // variance([a, b, c, d, ...], normalization)\n    'Array | Matrix, string': _var,\n    // variance([a, b, c, c, ...], dim)\n    'Array | Matrix, number | BigNumber': function ArrayMatrixNumberBigNumber(array, dim) {\n      return _varDim(array, dim, DEFAULT_NORMALIZATION);\n    },\n    // variance([a, b, c, c, ...], dim, normalization)\n    'Array | Matrix, number | BigNumber, string': _varDim,\n    // variance(a, b, c, d, ...)\n    '...': function _(args) {\n      return _var(args, DEFAULT_NORMALIZATION);\n    }\n  });\n  /**\n   * Recursively calculate the variance of an n-dimensional array\n   * @param {Array} array\n   * @param {string} normalization\n   *                        Determines how to normalize the variance:\n   *                        - 'unbiased'    The sum of squared errors is divided by (n - 1)\n   *                        - 'uncorrected' The sum of squared errors is divided by n\n   *                        - 'biased'      The sum of squared errors is divided by (n + 1)\n   * @return {number | BigNumber} variance\n   * @private\n   */\n\n  function _var(array, normalization) {\n    var sum;\n    var num = 0;\n\n    if (array.length === 0) {\n      throw new SyntaxError('Function variance requires one or more parameters (0 provided)');\n    } // calculate the mean and number of elements\n\n\n    (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepForEach)(array, function (value) {\n      try {\n        sum = sum === undefined ? value : add(sum, value);\n        num++;\n      } catch (err) {\n        throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'variance', value);\n      }\n    });\n    if (num === 0) throw new Error('Cannot calculate variance of an empty array');\n    var mean = divide(sum, num); // calculate the variance\n\n    sum = undefined;\n    (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepForEach)(array, function (value) {\n      var diff = subtract(value, mean);\n      sum = sum === undefined ? multiply(diff, diff) : add(sum, multiply(diff, diff));\n    });\n\n    if (isNaN(sum)) {\n      return sum;\n    }\n\n    switch (normalization) {\n      case 'uncorrected':\n        return divide(sum, num);\n\n      case 'biased':\n        return divide(sum, num + 1);\n\n      case 'unbiased':\n        {\n          var zero = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isBigNumber)(sum) ? sum.mul(0) : 0;\n          return num === 1 ? zero : divide(sum, num - 1);\n        }\n\n      default:\n        throw new Error('Unknown normalization \"' + normalization + '\". ' + 'Choose \"unbiased\" (default), \"uncorrected\", or \"biased\".');\n    }\n  }\n\n  function _varDim(array, dim, normalization) {\n    try {\n      if (array.length === 0) {\n        throw new SyntaxError('Function variance requires one or more parameters (0 provided)');\n      }\n\n      return apply(array, dim, x => _var(x, normalization));\n    } catch (err) {\n      throw (0,_utils_improveErrorMessage_js__WEBPACK_IMPORTED_MODULE_2__.improveErrorMessage)(err, 'variance');\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/statistics/variance.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/string/bin.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/string/bin.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBin\": () => (/* binding */ createBin)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'bin';\nvar dependencies = ['typed', 'format'];\n/**\n * Format a number as binary.\n *\n * Syntax:\n *\n *    math.bin(value)\n *\n * Examples:\n *\n *    //the following outputs \"0b10\"\n *    math.bin(2)\n *\n * See also:\n *\n *    oct\n *    hex\n *\n * @param {number} value    Value to be stringified\n * @param {number} wordSize Optional word size (see `format`)\n * @return {string}         The formatted value\n */\n\nvar createBin = (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    format\n  } = _ref;\n  return typed(name, {\n    'number | BigNumber': function numberBigNumber(n) {\n      return format(n, {\n        notation: 'bin'\n      });\n    },\n    'number | BigNumber, number': function numberBigNumberNumber(n, wordSize) {\n      return format(n, {\n        notation: 'bin',\n        wordSize: wordSize\n      });\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/string/bin.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/string/format.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/string/format.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFormat\": () => (/* binding */ createFormat)\n/* harmony export */ });\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'format';\nvar dependencies = ['typed'];\nvar createFormat = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Format a value of any type into a string.\n   *\n   * Syntax:\n   *\n   *    math.format(value)\n   *    math.format(value, options)\n   *    math.format(value, precision)\n   *    math.format(value, callback)\n   *\n   * Where:\n   *\n   *  - `value: *`\n   *    The value to be formatted\n   *  - `options: Object`\n   *    An object with formatting options. Available options:\n   *    - `notation: string`\n   *      Number notation. Choose from:\n   *      - 'fixed'\n   *        Always use regular number notation.\n   *        For example '123.40' and '14000000'\n   *      - 'exponential'\n   *        Always use exponential notation.\n   *        For example '1.234e+2' and '1.4e+7'\n   *      - 'engineering'\n   *        Always use engineering notation: always have exponential notation,\n   *        and select the exponent to be a multiple of 3.\n   *        For example '123.4e+0' and '14.0e+6'\n   *      - 'auto' (default)\n   *        Regular number notation for numbers having an absolute value between\n   *        `lower` and `upper` bounds, and uses exponential notation elsewhere.\n   *        Lower bound is included, upper bound is excluded.\n   *        For example '123.4' and '1.4e7'.\n   *      - 'bin', 'oct, or 'hex'\n   *        Format the number using binary, octal, or hexadecimal notation.\n   *        For example '0b1101' and '0x10fe'.\n   *    - `wordSize: number`\n   *      The word size in bits to use for formatting in binary, octal, or\n   *      hexadecimal notation. To be used only with 'bin', 'oct', or 'hex'\n   *      values for 'notation' option. When this option is defined the value\n   *      is formatted as a signed twos complement integer of the given word\n   *      size and the size suffix is appended to the output.\n   *      For example format(-1, {notation: 'hex', wordSize: 8}) === '0xffi8'.\n   *      Default value is undefined.\n   *    - `precision: number`\n   *      A number between 0 and 16 to round the digits of the number. In case\n   *      of notations 'exponential', 'engineering', and 'auto', `precision`\n   *      defines the total number of significant digits returned.\n   *      In case of notation 'fixed', `precision` defines the number of\n   *      significant digits after the decimal point.\n   *      `precision` is undefined by default.\n   *    - `lowerExp: number`\n   *      Exponent determining the lower boundary for formatting a value with\n   *      an exponent when `notation='auto`. Default value is `-3`.\n   *    - `upperExp: number`\n   *      Exponent determining the upper boundary for formatting a value with\n   *      an exponent when `notation='auto`. Default value is `5`.\n   *    - `fraction: string`. Available values: 'ratio' (default) or 'decimal'.\n   *      For example `format(fraction(1, 3))` will output '1/3' when 'ratio' is\n   *      configured, and will output `0.(3)` when 'decimal' is configured.\n   * - `callback: function`\n   *   A custom formatting function, invoked for all numeric elements in `value`,\n   *   for example all elements of a matrix, or the real and imaginary\n   *   parts of a complex number. This callback can be used to override the\n   *   built-in numeric notation with any type of formatting. Function `callback`\n   *   is called with `value` as parameter and must return a string.\n   *\n   * When `value` is an Object:\n   *\n   * - When the object contains a property `format` being a function, this function\n   *   is invoked as `value.format(options)` and the result is returned.\n   * - When the object has its own `toString` method, this method is invoked\n   *   and the result is returned.\n   * - In other cases the function will loop over all object properties and\n   *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n   *\n   * When value is a function:\n   *\n   * - When the function has a property `syntax`, it returns this\n   *   syntax description.\n   * - In other cases, a string `'function'` is returned.\n   *\n   * Examples:\n   *\n   *    math.format(6.4)                                        // returns '6.4'\n   *    math.format(1240000)                                    // returns '1.24e6'\n   *    math.format(1/3)                                        // returns '0.3333333333333333'\n   *    math.format(1/3, 3)                                     // returns '0.333'\n   *    math.format(21385, 2)                                   // returns '21000'\n   *    math.format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n   *    math.format(2.3,  {notation: 'fixed', precision: 4})    // returns '2.3000'\n   *    math.format(52.8, {notation: 'exponential'})            // returns '5.28e+1'\n   *    math.format(12400,{notation: 'engineering'})            // returns '12.400e+3'\n   *    math.format(2000, {lowerExp: -2, upperExp: 2})          // returns '2e+3'\n   *\n   *    function formatCurrency(value) {\n   *      // return currency notation with two digits:\n   *      return '$' + value.toFixed(2)\n   *\n   *      // you could also use math.format inside the callback:\n   *      // return '$' + math.format(value, {notation: 'fixed', precision: 2})\n   *    }\n   *    math.format([2.1, 3, 0.016], formatCurrency}            // returns '[$2.10, $3.00, $0.02]'\n   *\n   * See also:\n   *\n   *    print\n   *\n   * @param {*} value                               Value to be stringified\n   * @param {Object | Function | number} [options]  Formatting options\n   * @return {string} The formatted value\n   */\n\n  return typed(name, {\n    any: _utils_string_js__WEBPACK_IMPORTED_MODULE_1__.format,\n    'any, Object | function | number': _utils_string_js__WEBPACK_IMPORTED_MODULE_1__.format\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/string/format.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/string/hex.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/string/hex.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createHex\": () => (/* binding */ createHex)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'hex';\nvar dependencies = ['typed', 'format'];\n/**\n * Format a number as hexadecimal.\n *\n * Syntax:\n *\n *    math.hex(value)\n *\n * Examples:\n *\n *    //the following outputs \"0xF0\"\n *    math.hex(240)\n *\n * See also:\n *\n *    oct\n *    bin\n *\n * @param {number} value    Value to be stringified\n * @param {number} wordSize Optional word size (see `format`)\n * @return {string}         The formatted value\n */\n\nvar createHex = (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    format\n  } = _ref;\n  return typed(name, {\n    'number | BigNumber': function numberBigNumber(n) {\n      return format(n, {\n        notation: 'hex'\n      });\n    },\n    'number | BigNumber, number': function numberBigNumberNumber(n, wordSize) {\n      return format(n, {\n        notation: 'hex',\n        wordSize: wordSize\n      });\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/string/hex.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/string/oct.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/string/oct.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createOct\": () => (/* binding */ createOct)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'oct';\nvar dependencies = ['typed', 'format'];\n/**\n * Format a number as octal.\n *\n * Syntax:\n *\n *    math.oct(value)\n *\n * Examples:\n *\n *    //the following outputs \"0o70\"\n *    math.oct(56)\n *\n * See also:\n *\n *    bin\n *    hex\n *\n * @param {number} value    Value to be stringified\n * @param {number} wordSize Optional word size (see `format`)\n * @return {string}         The formatted value\n */\n\nvar createOct = (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    format\n  } = _ref;\n  return typed(name, {\n    'number | BigNumber': function numberBigNumber(n) {\n      return format(n, {\n        notation: 'oct'\n      });\n    },\n    'number | BigNumber, number': function numberBigNumberNumber(n, wordSize) {\n      return format(n, {\n        notation: 'oct',\n        wordSize: wordSize\n      });\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/string/oct.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/string/print.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/string/print.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPrint\": () => (/* binding */ createPrint)\n/* harmony export */ });\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'print';\nvar dependencies = ['typed'];\nvar createPrint = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Interpolate values into a string template.\n   *\n   * Syntax:\n   *\n   *     math.print(template, values)\n   *     math.print(template, values, precision)\n   *     math.print(template, values, options)\n   *\n   * Example usage:\n   *\n   *     // the following outputs: 'Lucy is 5 years old'\n   *     math.print('Lucy is $age years old', {age: 5})\n   *\n   *     // the following outputs: 'The value of pi is 3.141592654'\n   *     math.print('The value of pi is $pi', {pi: math.pi}, 10)\n   *\n   *     // the following outputs: 'hello Mary! The date is 2013-03-23'\n   *     math.print('Hello $user.name! The date is $date', {\n   *       user: {\n   *         name: 'Mary',\n   *       },\n   *       date: new Date(2013, 2, 23).toISOString().substring(0, 10)\n   *     })\n   *\n   *     // the following outputs: 'My favorite fruits are apples and bananas !'\n   *     math.print('My favorite fruits are $0 and $1 !', [\n   *       'apples',\n   *       'bananas'\n   *     ])\n   *\n   * See also:\n   *\n   *     format\n   *\n   * @param {string} template           A string containing variable placeholders.\n   * @param {Object | Array | Matrix}   values An object or array containing variables\n   *                                    which will be filled in in the template.\n   * @param {number | Object} [options] Formatting options,\n   *                                    or the number of digits to format numbers.\n   *                                    See function math.format for a description\n   *                                    of all options.\n   * @return {string} Interpolated string\n   */\n\n  return typed(name, {\n    // note: Matrix will be converted automatically to an Array\n    'string, Object | Array': _print,\n    'string, Object | Array, number | Object': _print\n  });\n});\n/**\n * Interpolate values into a string template.\n * @param {string} template\n * @param {Object} values\n * @param {number | Object} [options]\n * @returns {string} Interpolated string\n * @private\n */\n\nfunction _print(template, values, options) {\n  return template.replace(/\\$([\\w.]+)/g, function (original, key) {\n    var keys = key.split('.');\n    var value = values[keys.shift()];\n\n    while (keys.length && value !== undefined) {\n      var k = keys.shift();\n      value = k ? value[k] : value + '.';\n    }\n\n    if (value !== undefined) {\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(value)) {\n        return (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_2__.format)(value, options);\n      } else {\n        return value;\n      }\n    }\n\n    return original;\n  });\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/string/print.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/acos.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/acos.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAcos\": () => (/* binding */ createAcos)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'acos';\nvar dependencies = ['typed', 'config', 'Complex'];\nvar createAcos = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex\n  } = _ref;\n  /**\n   * Calculate the inverse cosine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acos(x)\n   *\n   * Examples:\n   *\n   *    math.acos(0.5)           // returns number 1.0471975511965979\n   *    math.acos(math.cos(1.5)) // returns number 1.5\n   *\n   *    math.acos(2)             // returns Complex 0 + 1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    cos, atan, asin\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} The arc cosine of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x >= -1 && x <= 1 || config.predictable) {\n        return Math.acos(x);\n      } else {\n        return new Complex(x, 0).acos();\n      }\n    },\n    Complex: function Complex(x) {\n      return x.acos();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.acos();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/acos.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/acosh.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/acosh.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAcosh\": () => (/* binding */ createAcosh)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'acosh';\nvar dependencies = ['typed', 'config', 'Complex'];\nvar createAcosh = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex\n  } = _ref;\n  /**\n   * Calculate the hyperbolic arccos of a value,\n   * defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acosh(x)\n   *\n   * Examples:\n   *\n   *    math.acosh(1.5)       // returns 0.9624236501192069\n   *\n   * See also:\n   *\n   *    cosh, asinh, atanh\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccosine of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x >= 1 || config.predictable) {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.acoshNumber)(x);\n      }\n\n      if (x <= -1) {\n        return new Complex(Math.log(Math.sqrt(x * x - 1) - x), Math.PI);\n      }\n\n      return new Complex(x, 0).acosh();\n    },\n    Complex: function Complex(x) {\n      return x.acosh();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.acosh();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/acosh.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/acot.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/acot.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAcot\": () => (/* binding */ createAcot)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'acot';\nvar dependencies = ['typed', 'BigNumber'];\nvar createAcot = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the inverse cotangent of a value, defined as `acot(x) = atan(1/x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acot(x)\n   *\n   * Examples:\n   *\n   *    math.acot(0.5)           // returns number 0.4636476090008061\n   *    math.acot(math.cot(1.5)) // returns number 1.5\n   *\n   *    math.acot(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    cot, atan\n   *\n   * @param {number | Complex | Array | Matrix} x   Function input\n   * @return {number | Complex | Array | Matrix} The arc cotangent of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.acotNumber,\n    Complex: function Complex(x) {\n      return x.acot();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).atan();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/acot.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/acoth.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/acoth.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAcoth\": () => (/* binding */ createAcoth)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'acoth';\nvar dependencies = ['typed', 'config', 'Complex', 'BigNumber'];\nvar createAcoth = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the hyperbolic arccotangent of a value,\n   * defined as `acoth(x) = atanh(1/x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acoth(x)\n   *\n   * Examples:\n   *\n   *    math.acoth(0.5)       // returns 0.8047189562170503\n   *\n   * See also:\n   *\n   *    acsch, asech\n   *\n   * @param {number | Complex | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccotangent of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x >= 1 || x <= -1 || config.predictable) {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.acothNumber)(x);\n      }\n\n      return new Complex(x, 0).acoth();\n    },\n    Complex: function Complex(x) {\n      return x.acoth();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).atanh();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/acoth.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/acsc.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/acsc.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAcsc\": () => (/* binding */ createAcsc)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'acsc';\nvar dependencies = ['typed', 'config', 'Complex', 'BigNumber'];\nvar createAcsc = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the inverse cosecant of a value, defined as `acsc(x) = asin(1/x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acsc(x)\n   *\n   * Examples:\n   *\n   *    math.acsc(0.5)           // returns number 0.5235987755982989\n   *    math.acsc(math.csc(1.5)) // returns number ~1.5\n   *\n   *    math.acsc(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    csc, asin, asec\n   *\n   * @param {number | Complex | Array | Matrix} x   Function input\n   * @return {number | Complex | Array | Matrix} The arc cosecant of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x <= -1 || x >= 1 || config.predictable) {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.acscNumber)(x);\n      }\n\n      return new Complex(x, 0).acsc();\n    },\n    Complex: function Complex(x) {\n      return x.acsc();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).asin();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/acsc.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/acsch.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/acsch.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAcsch\": () => (/* binding */ createAcsch)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'acsch';\nvar dependencies = ['typed', 'BigNumber'];\nvar createAcsch = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the hyperbolic arccosecant of a value,\n   * defined as `acsch(x) = asinh(1/x) = ln(1/x + sqrt(1/x^2 + 1))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acsch(x)\n   *\n   * Examples:\n   *\n   *    math.acsch(0.5)       // returns 1.4436354751788103\n   *\n   * See also:\n   *\n   *    asech, acoth\n   *\n   * @param {number | Complex | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccosecant of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.acschNumber,\n    Complex: function Complex(x) {\n      return x.acsch();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).asinh();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/acsch.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/asec.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/asec.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAsec\": () => (/* binding */ createAsec)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'asec';\nvar dependencies = ['typed', 'config', 'Complex', 'BigNumber'];\nvar createAsec = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the inverse secant of a value. Defined as `asec(x) = acos(1/x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.asec(x)\n   *\n   * Examples:\n   *\n   *    math.asec(0.5)           // returns 1.0471975511965979\n   *    math.asec(math.sec(1.5)) // returns 1.5\n   *\n   *    math.asec(2)             // returns 0 + 1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    acos, acot, acsc\n   *\n   * @param {number | Complex | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} The arc secant of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x <= -1 || x >= 1 || config.predictable) {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.asecNumber)(x);\n      }\n\n      return new Complex(x, 0).asec();\n    },\n    Complex: function Complex(x) {\n      return x.asec();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).acos();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/asec.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/asech.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/asech.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAsech\": () => (/* binding */ createAsech)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'asech';\nvar dependencies = ['typed', 'config', 'Complex', 'BigNumber'];\nvar createAsech = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the hyperbolic arcsecant of a value,\n   * defined as `asech(x) = acosh(1/x) = ln(sqrt(1/x^2 - 1) + 1/x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.asech(x)\n   *\n   * Examples:\n   *\n   *    math.asech(0.5)       // returns 1.3169578969248166\n   *\n   * See also:\n   *\n   *    acsch, acoth\n   *\n   * @param {number | Complex | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arcsecant of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x <= 1 && x >= -1 || config.predictable) {\n        var xInv = 1 / x;\n\n        if (xInv > 0 || config.predictable) {\n          return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.asechNumber)(x);\n        }\n\n        var ret = Math.sqrt(xInv * xInv - 1);\n        return new Complex(Math.log(ret - xInv), Math.PI);\n      }\n\n      return new Complex(x, 0).asech();\n    },\n    Complex: function Complex(x) {\n      return x.asech();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).acosh();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/asech.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/asin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/asin.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAsin\": () => (/* binding */ createAsin)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'asin';\nvar dependencies = ['typed', 'config', 'Complex'];\nvar createAsin = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex\n  } = _ref;\n  /**\n   * Calculate the inverse sine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.asin(x)\n   *\n   * Examples:\n   *\n   *    math.asin(0.5)           // returns number 0.5235987755982989\n   *    math.asin(math.sin(1.5)) // returns number ~1.5\n   *\n   *    math.asin(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    sin, atan, acos\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x   Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} The arc sine of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x >= -1 && x <= 1 || config.predictable) {\n        return Math.asin(x);\n      } else {\n        return new Complex(x, 0).asin();\n      }\n    },\n    Complex: function Complex(x) {\n      return x.asin();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.asin();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since asin(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this, true);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/asin.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/asinh.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/asinh.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAsinh\": () => (/* binding */ createAsinh)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'asinh';\nvar dependencies = ['typed'];\nvar createAsinh = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the hyperbolic arcsine of a value,\n   * defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.asinh(x)\n   *\n   * Examples:\n   *\n   *    math.asinh(0.5)       // returns 0.48121182505960347\n   *\n   * See also:\n   *\n   *    acosh, atanh\n   *\n   * @param {number | Complex | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arcsine of x\n   */\n\n  return typed('asinh', {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.asinhNumber,\n    Complex: function Complex(x) {\n      return x.asinh();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.asinh();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since asinh(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/asinh.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/atan.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/atan.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAtan\": () => (/* binding */ createAtan)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'atan';\nvar dependencies = ['typed'];\nvar createAtan = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the inverse tangent of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan(x)\n   *\n   * Examples:\n   *\n   *    math.atan(0.5)           // returns number 0.4636476090008061\n   *    math.atan(math.tan(1.5)) // returns number 1.5\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, asin, acos\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x   Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} The arc tangent of x\n   */\n\n  return typed('atan', {\n    number: function number(x) {\n      return Math.atan(x);\n    },\n    Complex: function Complex(x) {\n      return x.atan();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.atan();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since atan(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this, true);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/atan.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/atan2.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/atan2.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAtan2\": () => (/* binding */ createAtan2)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm02.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js\");\n/* harmony import */ var _type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm03.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js\");\n/* harmony import */ var _type_matrix_utils_algorithm09_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm09.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm09.js\");\n/* harmony import */ var _type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm11.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js\");\n/* harmony import */ var _type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm12.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\n\n\n\n\n\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nvar createAtan2 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    equalScalar,\n    BigNumber,\n    DenseMatrix\n  } = _ref;\n  var algorithm02 = (0,_type_matrix_utils_algorithm02_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm02)({\n    typed,\n    equalScalar\n  });\n  var algorithm03 = (0,_type_matrix_utils_algorithm03_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm03)({\n    typed\n  });\n  var algorithm09 = (0,_type_matrix_utils_algorithm09_js__WEBPACK_IMPORTED_MODULE_3__.createAlgorithm09)({\n    typed,\n    equalScalar\n  });\n  var algorithm11 = (0,_type_matrix_utils_algorithm11_js__WEBPACK_IMPORTED_MODULE_4__.createAlgorithm11)({\n    typed,\n    equalScalar\n  });\n  var algorithm12 = (0,_type_matrix_utils_algorithm12_js__WEBPACK_IMPORTED_MODULE_5__.createAlgorithm12)({\n    typed,\n    DenseMatrix\n  });\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_6__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_7__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/atan2.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/atanh.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/atanh.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAtanh\": () => (/* binding */ createAtanh)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'atanh';\nvar dependencies = ['typed', 'config', 'Complex'];\nvar createAtanh = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    Complex\n  } = _ref;\n  /**\n   * Calculate the hyperbolic arctangent of a value,\n   * defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atanh(x)\n   *\n   * Examples:\n   *\n   *    math.atanh(0.5)       // returns 0.5493061443340549\n   *\n   * See also:\n   *\n   *    acosh, asinh\n   *\n   * @param {number | Complex | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arctangent of x\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x <= 1 && x >= -1 || config.predictable) {\n        return (0,_plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.atanhNumber)(x);\n      }\n\n      return new Complex(x, 0).atanh();\n    },\n    Complex: function Complex(x) {\n      return x.atanh();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.atanh();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since atanh(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/atanh.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/cos.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/cos.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCos\": () => (/* binding */ createCos)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'cos';\nvar dependencies = ['typed'];\nvar createCos = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the cosine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cos(x)\n   *\n   * Examples:\n   *\n   *    math.cos(2)                      // returns number -0.4161468365471422\n   *    math.cos(math.pi / 4)            // returns number  0.7071067811865475\n   *    math.cos(math.unit(180, 'deg'))  // returns number -1\n   *    math.cos(math.unit(60, 'deg'))   // returns number  0.5\n   *\n   *    const angle = 0.2\n   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2) // returns number ~1\n   *\n   * See also:\n   *\n   *    cos, tan\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Cosine of x\n   */\n\n  return typed(name, {\n    number: Math.cos,\n    Complex: function Complex(x) {\n      return x.cos();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.cos();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function cos is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/cos.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/cosh.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/cosh.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCosh\": () => (/* binding */ createCosh)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\n\n\nvar name = 'cosh';\nvar dependencies = ['typed'];\nvar createCosh = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the hyperbolic cosine of a value,\n   * defined as `cosh(x) = 1/2 * (exp(x) + exp(-x))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cosh(x)\n   *\n   * Examples:\n   *\n   *    math.cosh(0.5)       // returns number 1.1276259652063807\n   *\n   * See also:\n   *\n   *    sinh, tanh\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Hyperbolic cosine of x\n   */\n\n  return typed(name, {\n    number: _utils_number_js__WEBPACK_IMPORTED_MODULE_1__.cosh,\n    Complex: function Complex(x) {\n      return x.cosh();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.cosh();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function cosh is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/cosh.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/cot.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/cot.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCot\": () => (/* binding */ createCot)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'cot';\nvar dependencies = ['typed', 'BigNumber'];\nvar createCot = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the cotangent of a value. Defined as `cot(x) = 1 / tan(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cot(x)\n   *\n   * Examples:\n   *\n   *    math.cot(2)      // returns number -0.45765755436028577\n   *    1 / math.tan(2)  // returns number -0.45765755436028577\n   *\n   * See also:\n   *\n   *    tan, sec, csc\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Cotangent of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cotNumber,\n    Complex: function Complex(x) {\n      return x.cot();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x.tan());\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function cot is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/cot.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/coth.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/coth.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCoth\": () => (/* binding */ createCoth)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'coth';\nvar dependencies = ['typed', 'BigNumber'];\nvar createCoth = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the hyperbolic cotangent of a value,\n   * defined as `coth(x) = 1 / tanh(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.coth(x)\n   *\n   * Examples:\n   *\n   *    // coth(x) = 1 / tanh(x)\n   *    math.coth(2)         // returns 1.0373147207275482\n   *    1 / math.tanh(2)     // returns 1.0373147207275482\n   *\n   * See also:\n   *\n   *    sinh, tanh, cosh\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic cotangent of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cothNumber,\n    Complex: function Complex(x) {\n      return x.coth();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x.tanh());\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function coth is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/coth.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/csc.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/csc.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCsc\": () => (/* binding */ createCsc)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'csc';\nvar dependencies = ['typed', 'BigNumber'];\nvar createCsc = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the cosecant of a value, defined as `csc(x) = 1/sin(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.csc(x)\n   *\n   * Examples:\n   *\n   *    math.csc(2)      // returns number 1.099750170294617\n   *    1 / math.sin(2)  // returns number 1.099750170294617\n   *\n   * See also:\n   *\n   *    sin, sec, cot\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Cosecant of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cscNumber,\n    Complex: function Complex(x) {\n      return x.csc();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x.sin());\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function csc is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/csc.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/csch.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/csch.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCsch\": () => (/* binding */ createCsch)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'csch';\nvar dependencies = ['typed', 'BigNumber'];\nvar createCsch = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the hyperbolic cosecant of a value,\n   * defined as `csch(x) = 1 / sinh(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.csch(x)\n   *\n   * Examples:\n   *\n   *    // csch(x) = 1/ sinh(x)\n   *    math.csch(0.5)       // returns 1.9190347513349437\n   *    1 / math.sinh(0.5)   // returns 1.9190347513349437\n   *\n   * See also:\n   *\n   *    sinh, sech, coth\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic cosecant of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.cschNumber,\n    Complex: function Complex(x) {\n      return x.csch();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x.sinh());\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function csch is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/csch.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/sec.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/sec.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSec\": () => (/* binding */ createSec)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'sec';\nvar dependencies = ['typed', 'BigNumber'];\nvar createSec = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the secant of a value, defined as `sec(x) = 1/cos(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sec(x)\n   *\n   * Examples:\n   *\n   *    math.sec(2)      // returns number -2.4029979617223822\n   *    1 / math.cos(2)  // returns number -2.4029979617223822\n   *\n   * See also:\n   *\n   *    cos, csc, cot\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Secant of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.secNumber,\n    Complex: function Complex(x) {\n      return x.sec();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x.cos());\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function sec is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/sec.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/sech.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/sech.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSech\": () => (/* binding */ createSech)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'sech';\nvar dependencies = ['typed', 'BigNumber'];\nvar createSech = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber: _BigNumber\n  } = _ref;\n  /**\n   * Calculate the hyperbolic secant of a value,\n   * defined as `sech(x) = 1 / cosh(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sech(x)\n   *\n   * Examples:\n   *\n   *    // sech(x) = 1/ cosh(x)\n   *    math.sech(0.5)       // returns 0.886818883970074\n   *    1 / math.cosh(0.5)   // returns 0.886818883970074\n   *\n   * See also:\n   *\n   *    cosh, csch, coth\n   *\n   * @param {number | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic secant of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.sechNumber,\n    Complex: function Complex(x) {\n      return x.sech();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x.cosh());\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function sech is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/sech.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/sin.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/sin.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSin\": () => (/* binding */ createSin)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'sin';\nvar dependencies = ['typed'];\nvar createSin = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the sine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sin(x)\n   *\n   * Examples:\n   *\n   *    math.sin(2)                      // returns number 0.9092974268256813\n   *    math.sin(math.pi / 4)            // returns number 0.7071067811865475\n   *    math.sin(math.unit(90, 'deg'))   // returns number 1\n   *    math.sin(math.unit(30, 'deg'))   // returns number 0.5\n   *\n   *    const angle = 0.2\n   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2) // returns number ~1\n   *\n   * See also:\n   *\n   *    cos, tan\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Sine of x\n   */\n\n  return typed(name, {\n    number: Math.sin,\n    Complex: function Complex(x) {\n      return x.sin();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.sin();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function sin is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since sin(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this, true);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/sin.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/sinh.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/sinh.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSinh\": () => (/* binding */ createSinh)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/trigonometry.js\");\n\n\n\nvar name = 'sinh';\nvar dependencies = ['typed'];\nvar createSinh = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the hyperbolic sine of a value,\n   * defined as `sinh(x) = 1/2 * (exp(x) - exp(-x))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sinh(x)\n   *\n   * Examples:\n   *\n   *    math.sinh(0.5)       // returns number 0.5210953054937474\n   *\n   * See also:\n   *\n   *    cosh, tanh\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Hyperbolic sine of x\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.sinhNumber,\n    Complex: function Complex(x) {\n      return x.sinh();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.sinh();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function sinh is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since sinh(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/sinh.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/tan.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/tan.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTan\": () => (/* binding */ createTan)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'tan';\nvar dependencies = ['typed'];\nvar createTan = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the tangent of a value. `tan(x)` is equal to `sin(x) / cos(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.tan(x)\n   *\n   * Examples:\n   *\n   *    math.tan(0.5)                    // returns number 0.5463024898437905\n   *    math.sin(0.5) / math.cos(0.5)    // returns number 0.5463024898437905\n   *    math.tan(math.pi / 4)            // returns number 1\n   *    math.tan(math.unit(45, 'deg'))   // returns number 1\n   *\n   * See also:\n   *\n   *    atan, sin, cos\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Tangent of x\n   */\n\n  return typed(name, {\n    number: Math.tan,\n    Complex: function Complex(x) {\n      return x.tan();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.tan();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function tan is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since tan(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this, true);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/tan.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/trigonometry/tanh.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/trigonometry/tanh.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTanh\": () => (/* binding */ createTanh)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\n\n\nvar name = 'tanh';\nvar dependencies = ['typed'];\nvar createTanh = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Calculate the hyperbolic tangent of a value,\n   * defined as `tanh(x) = (exp(2 * x) - 1) / (exp(2 * x) + 1)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.tanh(x)\n   *\n   * Examples:\n   *\n   *    // tanh(x) = sinh(x) / cosh(x) = 1 / coth(x)\n   *    math.tanh(0.5)                   // returns 0.46211715726000974\n   *    math.sinh(0.5) / math.cosh(0.5)  // returns 0.46211715726000974\n   *    1 / math.coth(0.5)               // returns 0.46211715726000974\n   *\n   * See also:\n   *\n   *    sinh, cosh, coth\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Hyperbolic tangent of x\n   */\n\n  return typed('tanh', {\n    number: _utils_number_js__WEBPACK_IMPORTED_MODULE_1__.tanh,\n    Complex: function Complex(x) {\n      return x.tanh();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.tanh();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function tanh is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since tanh(0) = 0\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this, true);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/trigonometry/tanh.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/unit/to.js":
/*!*********************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/unit/to.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTo\": () => (/* binding */ createTo)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm13.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js\");\n/* harmony import */ var _type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../type/matrix/utils/algorithm14.js */ \"./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js\");\n\n\n\nvar name = 'to';\nvar dependencies = ['typed', 'matrix'];\nvar createTo = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  var algorithm13 = (0,_type_matrix_utils_algorithm13_js__WEBPACK_IMPORTED_MODULE_1__.createAlgorithm13)({\n    typed\n  });\n  var algorithm14 = (0,_type_matrix_utils_algorithm14_js__WEBPACK_IMPORTED_MODULE_2__.createAlgorithm14)({\n    typed\n  });\n  /**\n   * Change the unit of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.to(x, unit)\n   *\n   * Examples:\n   *\n   *    math.to(math.unit('2 inch'), 'cm')                   // returns Unit 5.08 cm\n   *    math.to(math.unit('2 inch'), math.unit(null, 'cm'))  // returns Unit 5.08 cm\n   *    math.to(math.unit(16, 'bytes'), 'bits')              // returns Unit 128 bits\n   *\n   * See also:\n   *\n   *    unit\n   *\n   * @param {Unit | Array | Matrix} x     The unit to be converted.\n   * @param {Unit | Array | Matrix} unit  New unit. Can be a string like \"cm\"\n   *                                      or a unit without value.\n   * @return {Unit | Array | Matrix} value with changed, fixed unit.\n   */\n\n  return typed(name, {\n    'Unit, Unit | string': function UnitUnitString(x, unit) {\n      return x.to(unit);\n    },\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'Matrix, any': function MatrixAny(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm14(x, y, this, false);\n    },\n    'any, Matrix': function anyMatrix(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/unit/to.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/clone.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/clone.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createClone\": () => (/* binding */ createClone)\n/* harmony export */ });\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'clone';\nvar dependencies = ['typed'];\nvar createClone = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Clone an object. Will make a deep copy of the data.\n   *\n   * Syntax:\n   *\n   *     math.clone(x)\n   *\n   * Examples:\n   *\n   *    math.clone(3.5)                   // returns number 3.5\n   *    math.clone(math.complex('2-4i') // returns Complex 2 - 4i\n   *    math.clone(math.unit(45, 'deg'))  // returns Unit 45 deg\n   *    math.clone([[1, 2], [3, 4]])      // returns Array [[1, 2], [3, 4]]\n   *    math.clone(\"hello world\")         // returns string \"hello world\"\n   *\n   * @param {*} x   Object to be cloned\n   * @return {*} A clone of object x\n   */\n\n  return typed(name, {\n    any: _utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/clone.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/hasNumericValue.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/hasNumericValue.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createHasNumericValue\": () => (/* binding */ createHasNumericValue)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'hasNumericValue';\nvar dependencies = ['typed', 'isNumeric'];\nvar createHasNumericValue = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    isNumeric\n  } = _ref;\n  /**\n   * Test whether a value is an numeric value.\n   *\n   * In case of a string, true is returned if the string contains a numeric value.\n   *\n   * Syntax:\n   *\n   *     math.hasNumericValue(x)\n   *\n   * Examples:\n   *\n   *    math.hasNumericValue(2)                     // returns true\n   *    math.hasNumericValue('2')                   // returns true\n   *    math.isNumeric('2')                         // returns false\n   *    math.hasNumericValue(0)                     // returns true\n   *    math.hasNumericValue(math.bignumber(500))   // returns true\n   *    math.hasNumericValue(math.fraction(4))      // returns true\n   *    math.hasNumericValue(math.complex('2-4i')   // returns false\n   *    math.hasNumericValue([2.3, 'foo', false])   // returns [true, false, true]\n   *\n   * See also:\n   *\n   *    isZero, isPositive, isNegative, isInteger, isNumeric\n   *\n   * @param {*} x       Value to be tested\n   * @return {boolean}  Returns true when `x` is a `number`, `BigNumber`,\n   *                    `Fraction`, `Boolean`, or a `String` containing number. Returns false for other types.\n   *                    Throws an error in case of unknown types.\n   */\n\n  return typed(name, {\n    string: function string(x) {\n      return x.trim().length > 0 && !isNaN(Number(x));\n    },\n    any: function any(x) {\n      return isNumeric(x);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/hasNumericValue.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/isInteger.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/isInteger.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIsInteger\": () => (/* binding */ createIsInteger)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'isInteger';\nvar dependencies = ['typed'];\nvar createIsInteger = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Test whether a value is an integer number.\n   * The function supports `number`, `BigNumber`, and `Fraction`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isInteger(x)\n   *\n   * Examples:\n   *\n   *    math.isInteger(2)                     // returns true\n   *    math.isInteger(0)                     // returns true\n   *    math.isInteger(0.5)                   // returns false\n   *    math.isInteger(math.bignumber(500))   // returns true\n   *    math.isInteger(math.fraction(4))      // returns true\n   *    math.isInteger('3')                   // returns true\n   *    math.isInteger([3, 0.5, -2])          // returns [true, false, true]\n   *    math.isInteger(math.complex('2-4i')   // throws an error\n   *\n   * See also:\n   *\n   *    isNumeric, isPositive, isNegative, isZero\n   *\n   * @param {number | BigNumber | Fraction | Array | Matrix} x   Value to be tested\n   * @return {boolean}  Returns true when `x` contains a numeric, integer value.\n   *                    Throws an error in case of an unknown data type.\n   */\n\n  return typed(name, {\n    number: _utils_number_js__WEBPACK_IMPORTED_MODULE_1__.isInteger,\n    // TODO: what to do with isInteger(add(0.1, 0.2))  ?\n    BigNumber: function BigNumber(x) {\n      return x.isInt();\n    },\n    Fraction: function Fraction(x) {\n      return x.d === 1 && isFinite(x.n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/isInteger.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/isNaN.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/isNaN.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIsNaN\": () => (/* binding */ createIsNaN)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/utils.js\");\n\n\n\nvar name = 'isNaN';\nvar dependencies = ['typed'];\nvar createIsNaN = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Test whether a value is NaN (not a number).\n   * The function supports types `number`, `BigNumber`, `Fraction`, `Unit` and `Complex`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isNaN(x)\n   *\n   * Examples:\n   *\n   *    math.isNaN(3)                     // returns false\n   *    math.isNaN(NaN)                   // returns true\n   *    math.isNaN(0)                     // returns false\n   *    math.isNaN(math.bignumber(NaN))   // returns true\n   *    math.isNaN(math.bignumber(0))     // returns false\n   *    math.isNaN(math.fraction(-2, 5))  // returns false\n   *    math.isNaN('-2')                  // returns false\n   *    math.isNaN([2, 0, -3, NaN]')      // returns [false, false, false, true]\n   *\n   * See also:\n   *\n   *    isNumeric, isNegative, isPositive, isZero, isInteger\n   *\n   * @param {number | BigNumber | Fraction | Unit | Array | Matrix} x  Value to be tested\n   * @return {boolean}  Returns true when `x` is NaN.\n   *                    Throws an error in case of an unknown data type.\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.isNaNNumber,\n    BigNumber: function BigNumber(x) {\n      return x.isNaN();\n    },\n    Fraction: function Fraction(x) {\n      return false;\n    },\n    Complex: function Complex(x) {\n      return x.isNaN();\n    },\n    Unit: function Unit(x) {\n      return Number.isNaN(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, Number.isNaN);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/isNaN.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/isNegative.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/isNegative.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIsNegative\": () => (/* binding */ createIsNegative)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/utils.js\");\n\n\n\nvar name = 'isNegative';\nvar dependencies = ['typed'];\nvar createIsNegative = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Test whether a value is negative: smaller than zero.\n   * The function supports types `number`, `BigNumber`, `Fraction`, and `Unit`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isNegative(x)\n   *\n   * Examples:\n   *\n   *    math.isNegative(3)                     // returns false\n   *    math.isNegative(-2)                    // returns true\n   *    math.isNegative(0)                     // returns false\n   *    math.isNegative(-0)                    // returns false\n   *    math.isNegative(math.bignumber(2))     // returns false\n   *    math.isNegative(math.fraction(-2, 5))  // returns true\n   *    math.isNegative('-2')                  // returns true\n   *    math.isNegative([2, 0, -3]')           // returns [false, false, true]\n   *\n   * See also:\n   *\n   *    isNumeric, isPositive, isZero, isInteger\n   *\n   * @param {number | BigNumber | Fraction | Unit | Array | Matrix} x  Value to be tested\n   * @return {boolean}  Returns true when `x` is larger than zero.\n   *                    Throws an error in case of an unknown data type.\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.isNegativeNumber,\n    BigNumber: function BigNumber(x) {\n      return x.isNeg() && !x.isZero() && !x.isNaN();\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0; // It's enough to decide on the sign\n    },\n    Unit: function Unit(x) {\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/isNegative.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/isNumeric.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/isNumeric.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIsNumeric\": () => (/* binding */ createIsNumeric)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'isNumeric';\nvar dependencies = ['typed'];\nvar createIsNumeric = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Test whether a value is an numeric value.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isNumeric(x)\n   *\n   * Examples:\n   *\n   *    math.isNumeric(2)                     // returns true\n   *    math.isNumeric('2')                   // returns false\n   *    math.hasNumericValue('2')             // returns true\n   *    math.isNumeric(0)                     // returns true\n   *    math.isNumeric(math.bignumber(500))   // returns true\n   *    math.isNumeric(math.fraction(4))      // returns true\n   *    math.isNumeric(math.complex('2-4i')   // returns false\n   *    math.isNumeric([2.3, 'foo', false])   // returns [true, false, true]\n   *\n   * See also:\n   *\n   *    isZero, isPositive, isNegative, isInteger, hasNumericValue\n   *\n   * @param {*} x       Value to be tested\n   * @return {boolean}  Returns true when `x` is a `number`, `BigNumber`,\n   *                    `Fraction`, or `boolean`. Returns false for other types.\n   *                    Throws an error in case of unknown types.\n   */\n\n  return typed(name, {\n    'number | BigNumber | Fraction | boolean': function numberBigNumberFractionBoolean() {\n      return true;\n    },\n    'Complex | Unit | string | null | undefined | Node': function ComplexUnitStringNullUndefinedNode() {\n      return false;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/isNumeric.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/isPositive.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/isPositive.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIsPositive\": () => (/* binding */ createIsPositive)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/utils.js\");\n\n\n\nvar name = 'isPositive';\nvar dependencies = ['typed'];\nvar createIsPositive = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Test whether a value is positive: larger than zero.\n   * The function supports types `number`, `BigNumber`, `Fraction`, and `Unit`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isPositive(x)\n   *\n   * Examples:\n   *\n   *    math.isPositive(3)                     // returns true\n   *    math.isPositive(-2)                    // returns false\n   *    math.isPositive(0)                     // returns false\n   *    math.isPositive(-0)                    // returns false\n   *    math.isPositive(0.5)                   // returns true\n   *    math.isPositive(math.bignumber(2))     // returns true\n   *    math.isPositive(math.fraction(-2, 5))  // returns false\n   *    math.isPositive(math.fraction(1,3))    // returns false\n   *    math.isPositive('2')                   // returns true\n   *    math.isPositive([2, 0, -3])            // returns [true, false, false]\n   *\n   * See also:\n   *\n   *    isNumeric, isZero, isNegative, isInteger\n   *\n   * @param {number | BigNumber | Fraction | Unit | Array | Matrix} x  Value to be tested\n   * @return {boolean}  Returns true when `x` is larger than zero.\n   *                    Throws an error in case of an unknown data type.\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.isPositiveNumber,\n    BigNumber: function BigNumber(x) {\n      return !x.isNeg() && !x.isZero() && !x.isNaN();\n    },\n    Fraction: function Fraction(x) {\n      return x.s > 0 && x.n > 0;\n    },\n    Unit: function Unit(x) {\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/isPositive.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/isPrime.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/isPrime.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIsPrime\": () => (/* binding */ createIsPrime)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'isPrime';\nvar dependencies = ['typed'];\nvar createIsPrime = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Test whether a value is prime: has no divisors other than itself and one.\n   * The function supports type `number`, `bignumber`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isPrime(x)\n   *\n   * Examples:\n   *\n   *    math.isPrime(3)                     // returns true\n   *    math.isPrime(-2)                    // returns false\n   *    math.isPrime(0)                     // returns false\n   *    math.isPrime(-0)                    // returns false\n   *    math.isPrime(0.5)                   // returns false\n   *    math.isPrime('2')                   // returns true\n   *    math.isPrime([2, 17, 100])           // returns [true, true, false]\n   *\n   * See also:\n   *\n   *    isNumeric, isZero, isNegative, isInteger\n   *\n   * @param {number | BigNumber | Array | Matrix} x  Value to be tested\n   * @return {boolean}  Returns true when `x` is larger than zero.\n   *                    Throws an error in case of an unknown data type.\n   */\n\n  return typed(name, {\n    number: function number(x) {\n      if (x * 0 !== 0) {\n        return false;\n      }\n\n      if (x <= 3) {\n        return x > 1;\n      }\n\n      if (x % 2 === 0 || x % 3 === 0) {\n        return false;\n      }\n\n      for (var i = 5; i * i <= x; i += 6) {\n        if (x % i === 0 || x % (i + 2) === 0) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    BigNumber: function BigNumber(n) {\n      if (n.toNumber() * 0 !== 0) {\n        return false;\n      }\n\n      if (n.lte(3)) return n.gt(1);\n      if (n.mod(2).eq(0) || n.mod(3).eq(0)) return false;\n\n      if (n.lt(Math.pow(2, 32))) {\n        var x = n.toNumber();\n\n        for (var i = 5; i * i <= x; i += 6) {\n          if (x % i === 0 || x % (i + 2) === 0) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      function modPow(base, exponent, modulus) {\n        // exponent can be huge, use non-recursive variant\n        var accumulator = 1;\n\n        while (!exponent.eq(0)) {\n          if (exponent.mod(2).eq(0)) {\n            exponent = exponent.div(2);\n            base = base.mul(base).mod(modulus);\n          } else {\n            exponent = exponent.sub(1);\n            accumulator = base.mul(accumulator).mod(modulus);\n          }\n        }\n\n        return accumulator;\n      } // https://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test#Deterministic_variants\n\n\n      var Decimal = n.constructor.clone({\n        precision: n.toFixed(0).length * 2\n      });\n      n = new Decimal(n);\n      var r = 0;\n      var d = n.sub(1);\n\n      while (d.mod(2).eq(0)) {\n        d = d.div(2);\n        r += 1;\n      }\n\n      var bases = null; // https://en.wikipedia.org/wiki/Miller–Rabin_primality_test#Testing_against_small_sets_of_bases\n\n      if (n.lt('3317044064679887385961981')) {\n        bases = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41].filter(x => x < n);\n      } else {\n        var max = Math.min(n.toNumber() - 2, Math.floor(2 * Math.pow(n.toFixed(0).length * Math.log(10), 2)));\n        bases = [];\n\n        for (var _i = 2; _i <= max; _i += 1) {\n          bases.push(max);\n        }\n      }\n\n      for (var _i2 = 0; _i2 < bases.length; _i2 += 1) {\n        var a = bases[_i2];\n        var adn = modPow(n.sub(n).add(a), d, n);\n\n        if (!adn.eq(1)) {\n          for (var _i3 = 0, _x = adn; !_x.eq(n.sub(1)); _i3 += 1, _x = _x.mul(_x).mod(n)) {\n            if (_i3 === r - 1) {\n              return false;\n            }\n          }\n        }\n      }\n\n      return true;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/isPrime.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/isZero.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/isZero.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIsZero\": () => (/* binding */ createIsZero)\n/* harmony export */ });\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../plain/number/index.js */ \"./node_modules/mathjs/lib/esm/plain/number/utils.js\");\n\n\n\nvar name = 'isZero';\nvar dependencies = ['typed'];\nvar createIsZero = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Test whether a value is zero.\n   * The function can check for zero for types `number`, `BigNumber`, `Fraction`,\n   * `Complex`, and `Unit`.\n   *\n   * The function is evaluated element-wise in case of Array or Matrix input.\n   *\n   * Syntax:\n   *\n   *     math.isZero(x)\n   *\n   * Examples:\n   *\n   *    math.isZero(0)                     // returns true\n   *    math.isZero(2)                     // returns false\n   *    math.isZero(0.5)                   // returns false\n   *    math.isZero(math.bignumber(0))     // returns true\n   *    math.isZero(math.fraction(0))      // returns true\n   *    math.isZero(math.fraction(1,3))    // returns false\n   *    math.isZero(math.complex('2 - 4i') // returns false\n   *    math.isZero(math.complex('0i')     // returns true\n   *    math.isZero('0')                   // returns true\n   *    math.isZero('2')                   // returns false\n   *    math.isZero([2, 0, -3]')           // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    isNumeric, isPositive, isNegative, isInteger\n   *\n   * @param {number | BigNumber | Complex | Fraction | Unit | Array | Matrix} x       Value to be tested\n   * @return {boolean}  Returns true when `x` is zero.\n   *                    Throws an error in case of an unknown data type.\n   */\n\n  return typed(name, {\n    number: _plain_number_index_js__WEBPACK_IMPORTED_MODULE_1__.isZeroNumber,\n    BigNumber: function BigNumber(x) {\n      return x.isZero();\n    },\n    Complex: function Complex(x) {\n      return x.re === 0 && x.im === 0;\n    },\n    Fraction: function Fraction(x) {\n      return x.d === 1 && x.n === 0;\n    },\n    Unit: function Unit(x) {\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/isZero.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/numeric.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/numeric.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNumeric\": () => (/* binding */ createNumeric)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/noop.js */ \"./node_modules/mathjs/lib/esm/utils/noop.js\");\n\n\n\nvar name = 'numeric';\nvar dependencies = ['number', '?bignumber', '?fraction'];\nvar createNumeric = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    number: _number,\n    bignumber,\n    fraction\n  } = _ref;\n  var validInputTypes = {\n    string: true,\n    number: true,\n    BigNumber: true,\n    Fraction: true\n  }; // Load the conversion functions for each output type\n\n  var validOutputTypes = {\n    number: x => _number(x),\n    BigNumber: bignumber ? x => bignumber(x) : _utils_noop_js__WEBPACK_IMPORTED_MODULE_1__.noBignumber,\n    Fraction: fraction ? x => fraction(x) : _utils_noop_js__WEBPACK_IMPORTED_MODULE_1__.noFraction\n  };\n  /**\n   * Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.\n   *\n   * Syntax:\n   *\n   *    math.numeric(x)\n   *\n   * Examples:\n   *\n   *    math.numeric('4')                           // returns number 4\n   *    math.numeric('4', 'number')                 // returns number 4\n   *    math.numeric('4', 'BigNumber')              // returns BigNumber 4\n   *    math.numeric('4', 'Fraction')               // returns Fraction 4\n   *    math.numeric(4, 'Fraction')                 // returns Fraction 4\n   *    math.numeric(math.fraction(2, 5), 'number') // returns number 0.4\n   *\n   * See also:\n   *\n   *    number, fraction, bignumber, string, format\n   *\n   * @param {string | number | BigNumber | Fraction } value\n   *              A numeric value or a string containing a numeric value\n   * @param {string} outputType\n   *              Desired numeric output type.\n   *              Available values: 'number', 'BigNumber', or 'Fraction'\n   * @return {number | BigNumber | Fraction}\n   *              Returns an instance of the numeric in the requested type\n   */\n\n  return function numeric(value, outputType) {\n    var inputType = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_2__.typeOf)(value);\n\n    if (!(inputType in validInputTypes)) {\n      throw new TypeError('Cannot convert ' + value + ' of type \"' + inputType + '\"; valid input types are ' + Object.keys(validInputTypes).join(', '));\n    }\n\n    if (!(outputType in validOutputTypes)) {\n      throw new TypeError('Cannot convert ' + value + ' to type \"' + outputType + '\"; valid output types are ' + Object.keys(validOutputTypes).join(', '));\n    }\n\n    if (outputType === inputType) {\n      return value;\n    } else {\n      return validOutputTypes[outputType](value);\n    }\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/numeric.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/function/utils/typeOf.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/function/utils/typeOf.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTypeOf\": () => (/* binding */ createTypeOf)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\nvar name = 'typeOf';\nvar dependencies = ['typed'];\nvar createTypeOf = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Determine the type of a variable.\n   *\n   * Function `typeOf` recognizes the following types of objects:\n   *\n   * Object                 | Returns       | Example\n   * ---------------------- | ------------- | ------------------------------------------\n   * null                   | `'null'`      | `math.typeOf(null)`\n   * number                 | `'number'`    | `math.typeOf(3.5)`\n   * boolean                | `'boolean'`   | `math.typeOf(true)`\n   * string                 | `'string'`    | `math.typeOf('hello world')`\n   * Array                  | `'Array'`     | `math.typeOf([1, 2, 3])`\n   * Date                   | `'Date'`      | `math.typeOf(new Date())`\n   * Function               | `'Function'`  | `math.typeOf(function () {})`\n   * Object                 | `'Object'`    | `math.typeOf({a: 2, b: 3})`\n   * RegExp                 | `'RegExp'`    | `math.typeOf(/a regexp/)`\n   * undefined              | `'undefined'` | `math.typeOf(undefined)`\n   * math.BigNumber         | `'BigNumber'` | `math.typeOf(math.bignumber('2.3e500'))`\n   * math.Chain             | `'Chain'`     | `math.typeOf(math.chain(2))`\n   * math.Complex           | `'Complex'`   | `math.typeOf(math.complex(2, 3))`\n   * math.Fraction          | `'Fraction'`  | `math.typeOf(math.fraction(1, 3))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Help              | `'Help'`      | `math.typeOf(math.help('sqrt'))`\n   * math.Index             | `'Index'`     | `math.typeOf(math.index(1, 3))`\n   * math.Matrix            | `'Matrix'`    | `math.typeOf(math.matrix([[1,2], [3, 4]]))`\n   * math.Range             | `'Range'`     | `math.typeOf(math.range(0, 10))`\n   * math.ResultSet         | `'ResultSet'` | `math.typeOf(math.evaluate('a=2\\nb=3'))`\n   * math.Unit              | `'Unit'`      | `math.typeOf(math.unit('45 deg'))`\n   * math.AccessorNode            | `'AccessorNode'`            | `math.typeOf(math.parse('A[2]'))`\n   * math.ArrayNode               | `'ArrayNode'`               | `math.typeOf(math.parse('[1,2,3]'))`\n   * math.AssignmentNode          | `'AssignmentNode'`          | `math.typeOf(math.parse('x=2'))`\n   * math.BlockNode               | `'BlockNode'`               | `math.typeOf(math.parse('a=2; b=3'))`\n   * math.ConditionalNode         | `'ConditionalNode'`         | `math.typeOf(math.parse('x<0 ? -x : x'))`\n   * math.ConstantNode            | `'ConstantNode'`            | `math.typeOf(math.parse('2.3'))`\n   * math.FunctionAssignmentNode  | `'FunctionAssignmentNode'`  | `math.typeOf(math.parse('f(x)=x^2'))`\n   * math.FunctionNode            | `'FunctionNode'`            | `math.typeOf(math.parse('sqrt(4)'))`\n   * math.IndexNode               | `'IndexNode'`               | `math.typeOf(math.parse('A[2]').index)`\n   * math.ObjectNode              | `'ObjectNode'`              | `math.typeOf(math.parse('{a:2}'))`\n   * math.ParenthesisNode         | `'ParenthesisNode'`         | `math.typeOf(math.parse('(2+3)'))`\n   * math.RangeNode               | `'RangeNode'`               | `math.typeOf(math.parse('1:10'))`\n   * math.SymbolNode              | `'SymbolNode'`              | `math.typeOf(math.parse('x'))`\n   *\n   * Syntax:\n   *\n   *    math.typeOf(x)\n   *\n   * Examples:\n   *\n   *    math.typeOf(3.5)                     // returns 'number'\n   *    math.typeOf(math.complex('2-4i'))    // returns 'Complex'\n   *    math.typeOf(math.unit('45 deg'))     // returns 'Unit'\n   *    math.typeOf('hello world')           // returns 'string'\n   *\n   * @param {*} x     The variable for which to test the type.\n   * @return {string} Returns the name of the type. Primitive types are lower case,\n   *                  non-primitive types are upper-camel-case.\n   *                  For example 'number', 'string', 'Array', 'Date'.\n   */\n\n  return typed(name, {\n    any: _utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/function/utils/typeOf.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/json/replacer.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/json/replacer.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createReplacer\": () => (/* binding */ createReplacer)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'replacer';\nvar dependencies = [];\nvar createReplacer = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, () => {\n  /**\n   * Stringify data types into their JSON representation.\n   * Most data types can be serialized using their `.toJSON` method,\n   * but not all, for example the number `Infinity`. For these cases you have\n   * to use the replacer. Example usage:\n   *\n   *     JSON.stringify([2, Infinity], math.replacer)\n   *\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the replaced object\n   */\n  return function replacer(key, value) {\n    // the numeric values Infinitiy, -Infinity, and NaN cannot be serialized to JSON\n    if (typeof value === 'number' && (!isFinite(value) || isNaN(value))) {\n      return {\n        mathjs: 'number',\n        value: String(value)\n      };\n    }\n\n    return value;\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/json/replacer.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/plain/number/arithmetic.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/plain/number/arithmetic.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"absNumber\": () => (/* binding */ absNumber),\n/* harmony export */   \"addNumber\": () => (/* binding */ addNumber),\n/* harmony export */   \"subtractNumber\": () => (/* binding */ subtractNumber),\n/* harmony export */   \"multiplyNumber\": () => (/* binding */ multiplyNumber),\n/* harmony export */   \"divideNumber\": () => (/* binding */ divideNumber),\n/* harmony export */   \"unaryMinusNumber\": () => (/* binding */ unaryMinusNumber),\n/* harmony export */   \"unaryPlusNumber\": () => (/* binding */ unaryPlusNumber),\n/* harmony export */   \"cbrtNumber\": () => (/* binding */ cbrtNumber),\n/* harmony export */   \"ceilNumber\": () => (/* binding */ ceilNumber),\n/* harmony export */   \"cubeNumber\": () => (/* binding */ cubeNumber),\n/* harmony export */   \"expNumber\": () => (/* binding */ expNumber),\n/* harmony export */   \"expm1Number\": () => (/* binding */ expm1Number),\n/* harmony export */   \"fixNumber\": () => (/* binding */ fixNumber),\n/* harmony export */   \"floorNumber\": () => (/* binding */ floorNumber),\n/* harmony export */   \"gcdNumber\": () => (/* binding */ gcdNumber),\n/* harmony export */   \"lcmNumber\": () => (/* binding */ lcmNumber),\n/* harmony export */   \"logNumber\": () => (/* binding */ logNumber),\n/* harmony export */   \"log10Number\": () => (/* binding */ log10Number),\n/* harmony export */   \"log2Number\": () => (/* binding */ log2Number),\n/* harmony export */   \"log1pNumber\": () => (/* binding */ log1pNumber),\n/* harmony export */   \"modNumber\": () => (/* binding */ modNumber),\n/* harmony export */   \"nthRootNumber\": () => (/* binding */ nthRootNumber),\n/* harmony export */   \"signNumber\": () => (/* binding */ signNumber),\n/* harmony export */   \"sqrtNumber\": () => (/* binding */ sqrtNumber),\n/* harmony export */   \"squareNumber\": () => (/* binding */ squareNumber),\n/* harmony export */   \"xgcdNumber\": () => (/* binding */ xgcdNumber),\n/* harmony export */   \"powNumber\": () => (/* binding */ powNumber),\n/* harmony export */   \"roundNumber\": () => (/* binding */ roundNumber),\n/* harmony export */   \"normNumber\": () => (/* binding */ normNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\nvar n1 = 'number';\nvar n2 = 'number, number';\nfunction absNumber(a) {\n  return Math.abs(a);\n}\nabsNumber.signature = n1;\nfunction addNumber(a, b) {\n  return a + b;\n}\naddNumber.signature = n2;\nfunction subtractNumber(a, b) {\n  return a - b;\n}\nsubtractNumber.signature = n2;\nfunction multiplyNumber(a, b) {\n  return a * b;\n}\nmultiplyNumber.signature = n2;\nfunction divideNumber(a, b) {\n  return a / b;\n}\ndivideNumber.signature = n2;\nfunction unaryMinusNumber(x) {\n  return -x;\n}\nunaryMinusNumber.signature = n1;\nfunction unaryPlusNumber(x) {\n  return x;\n}\nunaryPlusNumber.signature = n1;\nfunction cbrtNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.cbrt)(x);\n}\ncbrtNumber.signature = n1;\nfunction ceilNumber(x) {\n  return Math.ceil(x);\n}\nceilNumber.signature = n1;\nfunction cubeNumber(x) {\n  return x * x * x;\n}\ncubeNumber.signature = n1;\nfunction expNumber(x) {\n  return Math.exp(x);\n}\nexpNumber.signature = n1;\nfunction expm1Number(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.expm1)(x);\n}\nexpm1Number.signature = n1;\nfunction fixNumber(x) {\n  return x > 0 ? Math.floor(x) : Math.ceil(x);\n}\nfixNumber.signature = n1;\nfunction floorNumber(x) {\n  return Math.floor(x);\n}\nfloorNumber.signature = n1;\n/**\n * Calculate gcd for numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the greatest common denominator of a and b\n */\n\nfunction gcdNumber(a, b) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(a) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(b)) {\n    throw new Error('Parameters in function gcd must be integer numbers');\n  } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n\n\n  var r;\n\n  while (b !== 0) {\n    r = a % b;\n    a = b;\n    b = r;\n  }\n\n  return a < 0 ? -a : a;\n}\ngcdNumber.signature = n2;\n/**\n * Calculate lcm for two numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the least common multiple of a and b\n */\n\nfunction lcmNumber(a, b) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(a) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(b)) {\n    throw new Error('Parameters in function lcm must be integer numbers');\n  }\n\n  if (a === 0 || b === 0) {\n    return 0;\n  } // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  // evaluate lcm here inline to reduce overhead\n\n\n  var t;\n  var prod = a * b;\n\n  while (b !== 0) {\n    t = b;\n    b = a % t;\n    a = t;\n  }\n\n  return Math.abs(prod / a);\n}\nlcmNumber.signature = n2;\n/**\n * Calculate the logarithm of a value.\n * @param {number} x\n * @return {number}\n */\n\nfunction logNumber(x) {\n  return Math.log(x);\n}\nlogNumber.signature = n1;\n/**\n * Calculate the 10-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\n\nfunction log10Number(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.log10)(x);\n}\nlog10Number.signature = n1;\n/**\n * Calculate the 2-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\n\nfunction log2Number(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.log2)(x);\n}\nlog2Number.signature = n1;\n/**\n * Calculate the natural logarithm of a `number+1`\n * @param {number} x\n * @returns {number}\n */\n\nfunction log1pNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.log1p)(x);\n}\nlog1pNumber.signature = n1;\n/**\n * Calculate the modulus of two numbers\n * @param {number} x\n * @param {number} y\n * @returns {number} res\n * @private\n */\n\nfunction modNumber(x, y) {\n  if (y > 0) {\n    // We don't use JavaScript's % operator here as this doesn't work\n    // correctly for x < 0 and x === 0\n    // see https://en.wikipedia.org/wiki/Modulo_operation\n    return x - y * Math.floor(x / y);\n  } else if (y === 0) {\n    return x;\n  } else {\n    // y < 0\n    // TODO: implement mod for a negative divisor\n    throw new Error('Cannot calculate mod for a negative divisor');\n  }\n}\nmodNumber.signature = n2;\n/**\n * Calculate the nth root of a, solve x^root == a\n * http://rosettacode.org/wiki/Nth_root#JavaScript\n * @param {number} a\n * @param {number} root\n * @private\n */\n\nfunction nthRootNumber(a, root) {\n  var inv = root < 0;\n\n  if (inv) {\n    root = -root;\n  }\n\n  if (root === 0) {\n    throw new Error('Root must be non-zero');\n  }\n\n  if (a < 0 && Math.abs(root) % 2 !== 1) {\n    throw new Error('Root must be odd when a is negative.');\n  } // edge cases zero and infinity\n\n\n  if (a === 0) {\n    return inv ? Infinity : 0;\n  }\n\n  if (!isFinite(a)) {\n    return inv ? 0 : a;\n  }\n\n  var x = Math.pow(Math.abs(a), 1 / root); // If a < 0, we require that root is an odd integer,\n  // so (-1) ^ (1/root) = -1\n\n  x = a < 0 ? -x : x;\n  return inv ? 1 / x : x; // Very nice algorithm, but fails with nthRoot(-2, 3).\n  // Newton's method has some well-known problems at times:\n  // https://en.wikipedia.org/wiki/Newton%27s_method#Failure_analysis\n\n  /*\n  let x = 1 // Initial guess\n  let xPrev = 1\n  let i = 0\n  const iMax = 10000\n  do {\n    const delta = (a / Math.pow(x, root - 1) - x) / root\n    xPrev = x\n    x = x + delta\n    i++\n  }\n  while (xPrev !== x && i < iMax)\n   if (xPrev !== x) {\n    throw new Error('Function nthRoot failed to converge')\n  }\n   return inv ? 1 / x : x\n  */\n}\nnthRootNumber.signature = n2;\nfunction signNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.sign)(x);\n}\nsignNumber.signature = n1;\nfunction sqrtNumber(x) {\n  return Math.sqrt(x);\n}\nsqrtNumber.signature = n1;\nfunction squareNumber(x) {\n  return x * x;\n}\nsquareNumber.signature = n1;\n/**\n * Calculate xgcd for two numbers\n * @param {number} a\n * @param {number} b\n * @return {number} result\n * @private\n */\n\nfunction xgcdNumber(a, b) {\n  // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n  var t; // used to swap two variables\n\n  var q; // quotient\n\n  var r; // remainder\n\n  var x = 0;\n  var lastx = 1;\n  var y = 1;\n  var lasty = 0;\n\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(a) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(b)) {\n    throw new Error('Parameters in function xgcd must be integer numbers');\n  }\n\n  while (b) {\n    q = Math.floor(a / b);\n    r = a - q * b;\n    t = x;\n    x = lastx - q * x;\n    lastx = t;\n    t = y;\n    y = lasty - q * y;\n    lasty = t;\n    a = b;\n    b = r;\n  }\n\n  var res;\n\n  if (a < 0) {\n    res = [-a, -lastx, -lasty];\n  } else {\n    res = [a, a ? lastx : 0, lasty];\n  }\n\n  return res;\n}\nxgcdNumber.signature = n2;\n/**\n * Calculates the power of x to y, x^y, for two numbers.\n * @param {number} x\n * @param {number} y\n * @return {number} res\n */\n\nfunction powNumber(x, y) {\n  // x^Infinity === 0 if -1 < x < 1\n  // A real number 0 is returned instead of complex(0)\n  if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {\n    return 0;\n  }\n\n  return Math.pow(x, y);\n}\npowNumber.signature = n2;\n/**\n * round a number to the given number of decimals, or to zero if decimals is\n * not provided\n * @param {number} value\n * @param {number} decimals       number of decimals, between 0 and 15 (0 by default)\n * @return {number} roundedValue\n */\n\nfunction roundNumber(value) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return parseFloat((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.toFixed)(value, decimals));\n}\nroundNumber.signature = n2;\n/**\n * Calculate the norm of a number, the absolute value.\n * @param {number} x\n * @return {number}\n */\n\nfunction normNumber(x) {\n  return Math.abs(x);\n}\nnormNumber.signature = n1;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/plain/number/arithmetic.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/plain/number/bitwise.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/plain/number/bitwise.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bitAndNumber\": () => (/* binding */ bitAndNumber),\n/* harmony export */   \"bitNotNumber\": () => (/* binding */ bitNotNumber),\n/* harmony export */   \"bitOrNumber\": () => (/* binding */ bitOrNumber),\n/* harmony export */   \"bitXorNumber\": () => (/* binding */ bitXorNumber),\n/* harmony export */   \"leftShiftNumber\": () => (/* binding */ leftShiftNumber),\n/* harmony export */   \"rightArithShiftNumber\": () => (/* binding */ rightArithShiftNumber),\n/* harmony export */   \"rightLogShiftNumber\": () => (/* binding */ rightLogShiftNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\nvar n1 = 'number';\nvar n2 = 'number, number';\nfunction bitAndNumber(x, y) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(x) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(y)) {\n    throw new Error('Integers expected in function bitAnd');\n  }\n\n  return x & y;\n}\nbitAndNumber.signature = n2;\nfunction bitNotNumber(x) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(x)) {\n    throw new Error('Integer expected in function bitNot');\n  }\n\n  return ~x;\n}\nbitNotNumber.signature = n1;\nfunction bitOrNumber(x, y) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(x) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(y)) {\n    throw new Error('Integers expected in function bitOr');\n  }\n\n  return x | y;\n}\nbitOrNumber.signature = n2;\nfunction bitXorNumber(x, y) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(x) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(y)) {\n    throw new Error('Integers expected in function bitXor');\n  }\n\n  return x ^ y;\n}\nbitXorNumber.signature = n2;\nfunction leftShiftNumber(x, y) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(x) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(y)) {\n    throw new Error('Integers expected in function leftShift');\n  }\n\n  return x << y;\n}\nleftShiftNumber.signature = n2;\nfunction rightArithShiftNumber(x, y) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(x) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(y)) {\n    throw new Error('Integers expected in function rightArithShift');\n  }\n\n  return x >> y;\n}\nrightArithShiftNumber.signature = n2;\nfunction rightLogShiftNumber(x, y) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(x) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(y)) {\n    throw new Error('Integers expected in function rightLogShift');\n  }\n\n  return x >>> y;\n}\nrightLogShiftNumber.signature = n2;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/plain/number/bitwise.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/plain/number/combinations.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/plain/number/combinations.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"combinationsNumber\": () => (/* binding */ combinationsNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_product_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/product.js */ \"./node_modules/mathjs/lib/esm/utils/product.js\");\n\n\nfunction combinationsNumber(n, k) {\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(n) || n < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n\n  if (!(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(k) || k < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n\n  if (k > n) {\n    throw new TypeError('k must be less than or equal to n');\n  }\n\n  var nMinusk = n - k;\n  var prodrange;\n\n  if (k < nMinusk) {\n    prodrange = (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_1__.product)(nMinusk + 1, n);\n    return prodrange / (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_1__.product)(1, k);\n  }\n\n  prodrange = (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_1__.product)(k + 1, n);\n  return prodrange / (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_1__.product)(1, nMinusk);\n}\ncombinationsNumber.signature = 'number, number';\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/plain/number/combinations.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/plain/number/constants.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/plain/number/constants.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"pi\": () => (/* binding */ pi),\n/* harmony export */   \"tau\": () => (/* binding */ tau),\n/* harmony export */   \"e\": () => (/* binding */ e),\n/* harmony export */   \"phi\": () => (/* binding */ phi)\n/* harmony export */ });\nvar pi = Math.PI;\nvar tau = 2 * Math.PI;\nvar e = Math.E;\nvar phi = 1.6180339887498948; // eslint-disable-line no-loss-of-precision\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/plain/number/constants.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/plain/number/logical.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/plain/number/logical.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"notNumber\": () => (/* binding */ notNumber),\n/* harmony export */   \"orNumber\": () => (/* binding */ orNumber),\n/* harmony export */   \"xorNumber\": () => (/* binding */ xorNumber),\n/* harmony export */   \"andNumber\": () => (/* binding */ andNumber)\n/* harmony export */ });\nvar n1 = 'number';\nvar n2 = 'number, number';\nfunction notNumber(x) {\n  return !x;\n}\nnotNumber.signature = n1;\nfunction orNumber(x, y) {\n  return !!(x || y);\n}\norNumber.signature = n2;\nfunction xorNumber(x, y) {\n  return !!x !== !!y;\n}\nxorNumber.signature = n2;\nfunction andNumber(x, y) {\n  return !!(x && y);\n}\nandNumber.signature = n2;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/plain/number/logical.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/plain/number/probability.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/plain/number/probability.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gammaNumber\": () => (/* binding */ gammaNumber),\n/* harmony export */   \"gammaG\": () => (/* binding */ gammaG),\n/* harmony export */   \"gammaP\": () => (/* binding */ gammaP)\n/* harmony export */ });\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_product_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/product.js */ \"./node_modules/mathjs/lib/esm/utils/product.js\");\n/* eslint-disable no-loss-of-precision */\n\n\nfunction gammaNumber(n) {\n  var x;\n\n  if ((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(n)) {\n    if (n <= 0) {\n      return isFinite(n) ? Infinity : NaN;\n    }\n\n    if (n > 171) {\n      return Infinity; // Will overflow\n    }\n\n    return (0,_utils_product_js__WEBPACK_IMPORTED_MODULE_1__.product)(1, n - 1);\n  }\n\n  if (n < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * n) * gammaNumber(1 - n));\n  }\n\n  if (n >= 171.35) {\n    return Infinity; // will overflow\n  }\n\n  if (n > 85.0) {\n    // Extended Stirling Approx\n    var twoN = n * n;\n    var threeN = twoN * n;\n    var fourN = threeN * n;\n    var fiveN = fourN * n;\n    return Math.sqrt(2 * Math.PI / n) * Math.pow(n / Math.E, n) * (1 + 1 / (12 * n) + 1 / (288 * twoN) - 139 / (51840 * threeN) - 571 / (2488320 * fourN) + 163879 / (209018880 * fiveN) + 5246819 / (75246796800 * fiveN * n));\n  }\n\n  --n;\n  x = gammaP[0];\n\n  for (var i = 1; i < gammaP.length; ++i) {\n    x += gammaP[i] / (n + i);\n  }\n\n  var t = n + gammaG + 0.5;\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;\n}\ngammaNumber.signature = 'number'; // TODO: comment on the variables g and p\n\nvar gammaG = 4.7421875;\nvar gammaP = [0.99999999999999709182, 57.156235665862923517, -59.597960355475491248, 14.136097974741747174, -0.49191381609762019978, 0.33994649984811888699e-4, 0.46523628927048575665e-4, -0.98374475304879564677e-4, 0.15808870322491248884e-3, -0.21026444172410488319e-3, 0.21743961811521264320e-3, -0.16431810653676389022e-3, 0.84418223983852743293e-4, -0.26190838401581408670e-4, 0.36899182659531622704e-5];\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/plain/number/probability.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/plain/number/trigonometry.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/plain/number/trigonometry.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"acosNumber\": () => (/* binding */ acosNumber),\n/* harmony export */   \"acoshNumber\": () => (/* binding */ acoshNumber),\n/* harmony export */   \"acotNumber\": () => (/* binding */ acotNumber),\n/* harmony export */   \"acothNumber\": () => (/* binding */ acothNumber),\n/* harmony export */   \"acscNumber\": () => (/* binding */ acscNumber),\n/* harmony export */   \"acschNumber\": () => (/* binding */ acschNumber),\n/* harmony export */   \"asecNumber\": () => (/* binding */ asecNumber),\n/* harmony export */   \"asechNumber\": () => (/* binding */ asechNumber),\n/* harmony export */   \"asinNumber\": () => (/* binding */ asinNumber),\n/* harmony export */   \"asinhNumber\": () => (/* binding */ asinhNumber),\n/* harmony export */   \"atanNumber\": () => (/* binding */ atanNumber),\n/* harmony export */   \"atan2Number\": () => (/* binding */ atan2Number),\n/* harmony export */   \"atanhNumber\": () => (/* binding */ atanhNumber),\n/* harmony export */   \"cosNumber\": () => (/* binding */ cosNumber),\n/* harmony export */   \"coshNumber\": () => (/* binding */ coshNumber),\n/* harmony export */   \"cotNumber\": () => (/* binding */ cotNumber),\n/* harmony export */   \"cothNumber\": () => (/* binding */ cothNumber),\n/* harmony export */   \"cscNumber\": () => (/* binding */ cscNumber),\n/* harmony export */   \"cschNumber\": () => (/* binding */ cschNumber),\n/* harmony export */   \"secNumber\": () => (/* binding */ secNumber),\n/* harmony export */   \"sechNumber\": () => (/* binding */ sechNumber),\n/* harmony export */   \"sinNumber\": () => (/* binding */ sinNumber),\n/* harmony export */   \"sinhNumber\": () => (/* binding */ sinhNumber),\n/* harmony export */   \"tanNumber\": () => (/* binding */ tanNumber),\n/* harmony export */   \"tanhNumber\": () => (/* binding */ tanhNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\nvar n1 = 'number';\nvar n2 = 'number, number';\nfunction acosNumber(x) {\n  return Math.acos(x);\n}\nacosNumber.signature = n1;\nfunction acoshNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.acosh)(x);\n}\nacoshNumber.signature = n1;\nfunction acotNumber(x) {\n  return Math.atan(1 / x);\n}\nacotNumber.signature = n1;\nfunction acothNumber(x) {\n  return isFinite(x) ? (Math.log((x + 1) / x) + Math.log(x / (x - 1))) / 2 : 0;\n}\nacothNumber.signature = n1;\nfunction acscNumber(x) {\n  return Math.asin(1 / x);\n}\nacscNumber.signature = n1;\nfunction acschNumber(x) {\n  var xInv = 1 / x;\n  return Math.log(xInv + Math.sqrt(xInv * xInv + 1));\n}\nacschNumber.signature = n1;\nfunction asecNumber(x) {\n  return Math.acos(1 / x);\n}\nasecNumber.signature = n1;\nfunction asechNumber(x) {\n  var xInv = 1 / x;\n  var ret = Math.sqrt(xInv * xInv - 1);\n  return Math.log(ret + xInv);\n}\nasechNumber.signature = n1;\nfunction asinNumber(x) {\n  return Math.asin(x);\n}\nasinNumber.signature = n1;\nfunction asinhNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.asinh)(x);\n}\nasinhNumber.signature = n1;\nfunction atanNumber(x) {\n  return Math.atan(x);\n}\natanNumber.signature = n1;\nfunction atan2Number(y, x) {\n  return Math.atan2(y, x);\n}\natan2Number.signature = n2;\nfunction atanhNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.atanh)(x);\n}\natanhNumber.signature = n1;\nfunction cosNumber(x) {\n  return Math.cos(x);\n}\ncosNumber.signature = n1;\nfunction coshNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.cosh)(x);\n}\ncoshNumber.signature = n1;\nfunction cotNumber(x) {\n  return 1 / Math.tan(x);\n}\ncotNumber.signature = n1;\nfunction cothNumber(x) {\n  var e = Math.exp(2 * x);\n  return (e + 1) / (e - 1);\n}\ncothNumber.signature = n1;\nfunction cscNumber(x) {\n  return 1 / Math.sin(x);\n}\ncscNumber.signature = n1;\nfunction cschNumber(x) {\n  // consider values close to zero (+/-)\n  if (x === 0) {\n    return Number.POSITIVE_INFINITY;\n  } else {\n    return Math.abs(2 / (Math.exp(x) - Math.exp(-x))) * (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.sign)(x);\n  }\n}\ncschNumber.signature = n1;\nfunction secNumber(x) {\n  return 1 / Math.cos(x);\n}\nsecNumber.signature = n1;\nfunction sechNumber(x) {\n  return 2 / (Math.exp(x) + Math.exp(-x));\n}\nsechNumber.signature = n1;\nfunction sinNumber(x) {\n  return Math.sin(x);\n}\nsinNumber.signature = n1;\nfunction sinhNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.sinh)(x);\n}\nsinhNumber.signature = n1;\nfunction tanNumber(x) {\n  return Math.tan(x);\n}\ntanNumber.signature = n1;\nfunction tanhNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.tanh)(x);\n}\ntanhNumber.signature = n1;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/plain/number/trigonometry.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/plain/number/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/plain/number/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isIntegerNumber\": () => (/* binding */ isIntegerNumber),\n/* harmony export */   \"isNegativeNumber\": () => (/* binding */ isNegativeNumber),\n/* harmony export */   \"isPositiveNumber\": () => (/* binding */ isPositiveNumber),\n/* harmony export */   \"isZeroNumber\": () => (/* binding */ isZeroNumber),\n/* harmony export */   \"isNaNNumber\": () => (/* binding */ isNaNNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\nvar n1 = 'number';\nfunction isIntegerNumber(x) {\n  return (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(x);\n}\nisIntegerNumber.signature = n1;\nfunction isNegativeNumber(x) {\n  return x < 0;\n}\nisNegativeNumber.signature = n1;\nfunction isPositiveNumber(x) {\n  return x > 0;\n}\nisPositiveNumber.signature = n1;\nfunction isZeroNumber(x) {\n  return x === 0;\n}\nisZeroNumber.signature = n1;\nfunction isNaNNumber(x) {\n  return Number.isNaN(x);\n}\nisNaNNumber.signature = n1;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/plain/number/utils.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBigNumberClass\": () => (/* binding */ createBigNumberClass)\n/* harmony export */ });\n/* harmony import */ var decimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js */ \"./node_modules/decimal.js/decimal.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nvar createBigNumberClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, dependencies, _ref => {\n  var {\n    on,\n    config\n  } = _ref;\n  var BigNumber = decimal_js__WEBPACK_IMPORTED_MODULE_0__.clone({\n    precision: config.precision,\n    modulo: decimal_js__WEBPACK_IMPORTED_MODULE_0__.EUCLID\n  });\n  BigNumber.prototype = Object.create(BigNumber.prototype);\n  /**\n   * Attach type information\n   */\n\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n\n\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n\n  return BigNumber;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/bignumber/function/bignumber.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/bignumber/function/bignumber.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBignumber\": () => (/* binding */ createBignumber)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'bignumber';\nvar dependencies = ['typed', 'BigNumber'];\nvar createBignumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    BigNumber\n  } = _ref;\n  /**\n   * Create a BigNumber, which can store numbers with arbitrary precision.\n   * When a matrix is provided, all elements will be converted to BigNumber.\n   *\n   * Syntax:\n   *\n   *    math.bignumber(x)\n   *\n   * Examples:\n   *\n   *    0.1 + 0.2                                  // returns number 0.30000000000000004\n   *    math.bignumber(0.1) + math.bignumber(0.2)  // returns BigNumber 0.3\n   *\n   *\n   *    7.2e500                                    // returns number Infinity\n   *    math.bignumber('7.2e500')                  // returns BigNumber 7.2e500\n   *\n   * See also:\n   *\n   *    boolean, complex, index, matrix, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix | boolean | null} [value]  Value for the big number,\n   *                                                    0 by default.\n   * @returns {BigNumber} The created bignumber\n   */\n\n  return typed('bignumber', {\n    '': function _() {\n      return new BigNumber(0);\n    },\n    number: function number(x) {\n      // convert to string to prevent errors in case of >15 digits\n      return new BigNumber(x + '');\n    },\n    string: function string(x) {\n      var wordSizeSuffixMatch = x.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);\n\n      if (wordSizeSuffixMatch) {\n        // x has a word size suffix\n        var size = wordSizeSuffixMatch[2];\n        var n = BigNumber(wordSizeSuffixMatch[1]);\n        var twoPowSize = new BigNumber(2).pow(Number(size));\n\n        if (n.gt(twoPowSize.sub(1))) {\n          throw new SyntaxError(\"String \\\"\".concat(x, \"\\\" is out of range\"));\n        }\n\n        var twoPowSizeSubOne = new BigNumber(2).pow(Number(size) - 1);\n\n        if (n.gte(twoPowSizeSubOne)) {\n          return n.sub(twoPowSize);\n        } else {\n          return n;\n        }\n      }\n\n      return new BigNumber(x);\n    },\n    BigNumber: function BigNumber(x) {\n      // we assume a BigNumber is immutable\n      return x;\n    },\n    Fraction: function Fraction(x) {\n      return new BigNumber(x.n).div(x.d).times(x.s);\n    },\n    null: function _null(x) {\n      return new BigNumber(0);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/bignumber/function/bignumber.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/boolean.js":
/*!*****************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/boolean.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBoolean\": () => (/* binding */ createBoolean)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'boolean';\nvar dependencies = ['typed'];\nvar createBoolean = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Create a boolean or convert a string or number to a boolean.\n   * In case of a number, `true` is returned for non-zero numbers, and `false` in\n   * case of zero.\n   * Strings can be `'true'` or `'false'`, or can contain a number.\n   * When value is a matrix, all elements will be converted to boolean.\n   *\n   * Syntax:\n   *\n   *    math.boolean(x)\n   *\n   * Examples:\n   *\n   *    math.boolean(0)     // returns false\n   *    math.boolean(1)     // returns true\n   *    math.boolean(-3)     // returns true\n   *    math.boolean('true')     // returns true\n   *    math.boolean('false')     // returns false\n   *    math.boolean([1, 0, 1, 1])     // returns [true, false, true, true]\n   *\n   * See also:\n   *\n   *    bignumber, complex, index, matrix, string, unit\n   *\n   * @param {string | number | boolean | Array | Matrix | null} value  A value of any type\n   * @return {boolean | Array | Matrix} The boolean value\n   */\n\n  return typed(name, {\n    '': function _() {\n      return false;\n    },\n    boolean: function boolean(x) {\n      return x;\n    },\n    number: function number(x) {\n      return !!x;\n    },\n    null: function _null(x) {\n      return false;\n    },\n    BigNumber: function BigNumber(x) {\n      return !x.isZero();\n    },\n    string: function string(x) {\n      // try case insensitive\n      var lcase = x.toLowerCase();\n\n      if (lcase === 'true') {\n        return true;\n      } else if (lcase === 'false') {\n        return false;\n      } // test whether value is a valid number\n\n\n      var num = Number(x);\n\n      if (x !== '' && !isNaN(num)) {\n        return !!num;\n      }\n\n      throw new Error('Cannot convert \"' + x + '\" to a boolean');\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/boolean.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/complex/Complex.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/complex/Complex.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createComplexClass\": () => (/* binding */ createComplexClass)\n/* harmony export */ });\n/* harmony import */ var complex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! complex.js */ \"./node_modules/complex.js/complex.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'Complex';\nvar dependencies = [];\nvar createComplexClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.prototype.type = 'Complex';\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.prototype.isComplex = true;\n  /**\n   * Get a JSON representation of the complex number\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}`\n   */\n\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.prototype.toJSON = function () {\n    return {\n      mathjs: 'Complex',\n      re: this.re,\n      im: this.im\n    };\n  };\n  /*\n   * Return the value of the complex number in polar notation\n   * The angle phi will be set in the interval of [-pi, pi].\n   * @return {{r: number, phi: number}} Returns and object with properties r and phi.\n   */\n\n\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.prototype.toPolar = function () {\n    return {\n      r: this.abs(),\n      phi: this.arg()\n    };\n  };\n  /**\n   * Get a string representation of the complex number,\n   * with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string} str\n   */\n\n\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.prototype.format = function (options) {\n    var str = '';\n    var im = this.im;\n    var re = this.re;\n    var strRe = (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.format)(this.re, options);\n    var strIm = (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.format)(this.im, options); // round either re or im when smaller than the configured precision\n\n    var precision = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isNumber)(options) ? options : options ? options.precision : null;\n\n    if (precision !== null) {\n      var epsilon = Math.pow(10, -precision);\n\n      if (Math.abs(re / im) < epsilon) {\n        re = 0;\n      }\n\n      if (Math.abs(im / re) < epsilon) {\n        im = 0;\n      }\n    }\n\n    if (im === 0) {\n      // real value\n      str = strRe;\n    } else if (re === 0) {\n      // purely complex value\n      if (im === 1) {\n        str = 'i';\n      } else if (im === -1) {\n        str = '-i';\n      } else {\n        str = strIm + 'i';\n      }\n    } else {\n      // complex value\n      if (im < 0) {\n        if (im === -1) {\n          str = strRe + ' - i';\n        } else {\n          str = strRe + ' - ' + strIm.substring(1) + 'i';\n        }\n      } else {\n        if (im === 1) {\n          str = strRe + ' + i';\n        } else {\n          str = strRe + ' + ' + strIm + 'i';\n        }\n      }\n    }\n\n    return str;\n  };\n  /**\n   * Create a complex number from polar coordinates\n   *\n   * Usage:\n   *\n   *     Complex.fromPolar(r: number, phi: number) : Complex\n   *     Complex.fromPolar({r: number, phi: number}) : Complex\n   *\n   * @param {*} args...\n   * @return {Complex}\n   */\n\n\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.fromPolar = function (args) {\n    switch (arguments.length) {\n      case 1:\n        {\n          var arg = arguments[0];\n\n          if (typeof arg === 'object') {\n            return complex_js__WEBPACK_IMPORTED_MODULE_0__(arg);\n          } else {\n            throw new TypeError('Input has to be an object with r and phi keys.');\n          }\n        }\n\n      case 2:\n        {\n          var r = arguments[0];\n          var phi = arguments[1];\n\n          if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isNumber)(r)) {\n            if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isUnit)(phi) && phi.hasBase('ANGLE')) {\n              // convert unit to a number in radians\n              phi = phi.toNumber('rad');\n            }\n\n            if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isNumber)(phi)) {\n              return new complex_js__WEBPACK_IMPORTED_MODULE_0__({\n                r: r,\n                phi: phi\n              });\n            }\n\n            throw new TypeError('Phi is not a number nor an angle unit.');\n          } else {\n            throw new TypeError('Radius r is not a number.');\n          }\n        }\n\n      default:\n        throw new SyntaxError('Wrong number of arguments in function fromPolar');\n    }\n  };\n\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.prototype.valueOf = complex_js__WEBPACK_IMPORTED_MODULE_0__.prototype.toString;\n  /**\n   * Create a Complex number from a JSON object\n   * @param {Object} json  A JSON Object structured as\n   *                       {\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}\n   *                       All properties are optional, default values\n   *                       for `re` and `im` are 0.\n   * @return {Complex} Returns a new Complex number\n   */\n\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.fromJSON = function (json) {\n    return new complex_js__WEBPACK_IMPORTED_MODULE_0__(json);\n  };\n  /**\n   * Compare two complex numbers, `a` and `b`:\n   *\n   * - Returns 1 when the real part of `a` is larger than the real part of `b`\n   * - Returns -1 when the real part of `a` is smaller than the real part of `b`\n   * - Returns 1 when the real parts are equal\n   *   and the imaginary part of `a` is larger than the imaginary part of `b`\n   * - Returns -1 when the real parts are equal\n   *   and the imaginary part of `a` is smaller than the imaginary part of `b`\n   * - Returns 0 when both real and imaginary parts are equal.\n   *\n   * @params {Complex} a\n   * @params {Complex} b\n   * @returns {number} Returns the comparison result: -1, 0, or 1\n   */\n\n\n  complex_js__WEBPACK_IMPORTED_MODULE_0__.compare = function (a, b) {\n    if (a.re > b.re) {\n      return 1;\n    }\n\n    if (a.re < b.re) {\n      return -1;\n    }\n\n    if (a.im > b.im) {\n      return 1;\n    }\n\n    if (a.im < b.im) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  return complex_js__WEBPACK_IMPORTED_MODULE_0__;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/complex/Complex.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/complex/function/complex.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/complex/function/complex.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createComplex\": () => (/* binding */ createComplex)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'complex';\nvar dependencies = ['typed', 'Complex'];\nvar createComplex = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Complex\n  } = _ref;\n  /**\n   * Create a complex value or convert a value to a complex value.\n   *\n   * Syntax:\n   *\n   *     math.complex()                           // creates a complex value with zero\n   *                                              // as real and imaginary part.\n   *     math.complex(re : number, im : string)   // creates a complex value with provided\n   *                                              // values for real and imaginary part.\n   *     math.complex(re : number)                // creates a complex value with provided\n   *                                              // real value and zero imaginary part.\n   *     math.complex(complex : Complex)          // clones the provided complex value.\n   *     math.complex(arg : string)               // parses a string into a complex value.\n   *     math.complex(array : Array)              // converts the elements of the array\n   *                                              // or matrix element wise into a\n   *                                              // complex value.\n   *     math.complex({re: number, im: number})   // creates a complex value with provided\n   *                                              // values for real an imaginary part.\n   *     math.complex({r: number, phi: number})   // creates a complex value with provided\n   *                                              // polar coordinates\n   *\n   * Examples:\n   *\n   *    const a = math.complex(3, -4)     // a = Complex 3 - 4i\n   *    a.re = 5                          // a = Complex 5 - 4i\n   *    const i = a.im                    // Number -4\n   *    const b = math.complex('2 + 6i')  // Complex 2 + 6i\n   *    const c = math.complex()          // Complex 0 + 0i\n   *    const d = math.add(a, b)          // Complex 5 + 2i\n   *\n   * See also:\n   *\n   *    bignumber, boolean, index, matrix, number, string, unit\n   *\n   * @param {* | Array | Matrix} [args]\n   *            Arguments specifying the real and imaginary part of the complex number\n   * @return {Complex | Array | Matrix} Returns a complex value\n   */\n\n  return typed('complex', {\n    '': function _() {\n      return Complex.ZERO;\n    },\n    number: function number(x) {\n      return new Complex(x, 0);\n    },\n    'number, number': function numberNumber(re, im) {\n      return new Complex(re, im);\n    },\n    // TODO: this signature should be redundant\n    'BigNumber, BigNumber': function BigNumberBigNumber(re, im) {\n      return new Complex(re.toNumber(), im.toNumber());\n    },\n    Fraction: function Fraction(x) {\n      return new Complex(x.valueOf(), 0);\n    },\n    Complex: function Complex(x) {\n      return x.clone();\n    },\n    string: function string(x) {\n      return Complex(x); // for example '2 + 3i'\n    },\n    null: function _null(x) {\n      return Complex(0);\n    },\n    Object: function Object(x) {\n      if ('re' in x && 'im' in x) {\n        return new Complex(x.re, x.im);\n      }\n\n      if ('r' in x && 'phi' in x || 'abs' in x && 'arg' in x) {\n        return new Complex(x);\n      }\n\n      throw new Error('Expected object with properties (re and im) or (r and phi) or (abs and arg)');\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/complex/function/complex.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/fraction/Fraction.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/fraction/Fraction.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFractionClass\": () => (/* binding */ createFractionClass)\n/* harmony export */ });\n/* harmony import */ var fraction_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fraction.js */ \"./node_modules/fraction.js/fraction.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\nvar name = 'Fraction';\nvar dependencies = [];\nvar createFractionClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_1__.factory)(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  fraction_js__WEBPACK_IMPORTED_MODULE_0__.prototype.type = 'Fraction';\n  fraction_js__WEBPACK_IMPORTED_MODULE_0__.prototype.isFraction = true;\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n\n  fraction_js__WEBPACK_IMPORTED_MODULE_0__.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n\n\n  fraction_js__WEBPACK_IMPORTED_MODULE_0__.fromJSON = function (json) {\n    return new fraction_js__WEBPACK_IMPORTED_MODULE_0__(json);\n  };\n\n  return fraction_js__WEBPACK_IMPORTED_MODULE_0__;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/fraction/Fraction.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/fraction/function/fraction.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/fraction/function/fraction.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFraction\": () => (/* binding */ createFraction)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'fraction';\nvar dependencies = ['typed', 'Fraction'];\nvar createFraction = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Fraction\n  } = _ref;\n  /**\n   * Create a fraction convert a value to a fraction.\n   *\n   * Syntax:\n   *     math.fraction(numerator, denominator)\n   *     math.fraction({n: numerator, d: denominator})\n   *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n   *                                                   into fractions\n   *\n   * Examples:\n   *\n   *     math.fraction(1, 3)\n   *     math.fraction('2/3')\n   *     math.fraction({n: 2, d: 3})\n   *     math.fraction([0.2, 0.25, 1.25])\n   *\n   * See also:\n   *\n   *    bignumber, number, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n   *            Arguments specifying the numerator and denominator of\n   *            the fraction\n   * @return {Fraction | Array | Matrix} Returns a fraction\n   */\n\n  return typed('fraction', {\n    number: function number(x) {\n      if (!isFinite(x) || isNaN(x)) {\n        throw new Error(x + ' cannot be represented as a fraction');\n      }\n\n      return new Fraction(x);\n    },\n    string: function string(x) {\n      return new Fraction(x);\n    },\n    'number, number': function numberNumber(numerator, denominator) {\n      return new Fraction(numerator, denominator);\n    },\n    null: function _null(x) {\n      return new Fraction(0);\n    },\n    BigNumber: function BigNumber(x) {\n      return new Fraction(x.toString());\n    },\n    Fraction: function Fraction(x) {\n      return x; // fractions are immutable\n    },\n    Object: function Object(x) {\n      return new Fraction(x);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/fraction/function/fraction.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/DenseMatrix.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/DenseMatrix.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDenseMatrixClass\": () => (/* binding */ createDenseMatrixClass)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\n\n\n\nvar name = 'DenseMatrix';\nvar dependencies = ['Matrix'];\nvar createDenseMatrixClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    Matrix\n  } = _ref;\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   * @enum {{ value, index: number[] }}\n   */\n\n  function DenseMatrix(data, datatype) {\n    if (!(this instanceof DenseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (datatype && !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(data._data);\n        this._size = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(data._size);\n        this._datatype = datatype || data._datatype;\n      } else {\n        // build data from existing matrix\n        this._data = data.toArray();\n        this._size = data.size();\n        this._datatype = datatype || data._datatype;\n      }\n    } else if (data && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data.data) && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size; // verify the dimensions of the array\n\n      (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validate)(this._data, this._size);\n      this._datatype = datatype || data.datatype;\n    } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data); // get the dimensions of the array\n\n      this._size = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.arraySize)(this._data); // verify the dimensions of the array, TODO: compute size while processing array\n\n      (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validate)(this._data, this._size); // data type unknown\n\n      this._datatype = datatype;\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf)(data) + ')');\n    } else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n    }\n  }\n\n  DenseMatrix.prototype = new Matrix();\n  /**\n   * Create a new DenseMatrix\n   */\n\n  DenseMatrix.prototype.createDenseMatrix = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Attach type information\n   */\n\n\n  DenseMatrix.prototype.type = 'DenseMatrix';\n  DenseMatrix.prototype.isDenseMatrix = true;\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf DenseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n\n  DenseMatrix.prototype.getDataType = function () {\n    return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.getArrayDataType)(this._data, _utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf);\n  };\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()  // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n\n\n  DenseMatrix.prototype.storage = function () {\n    return 'dense';\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n\n\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n\n\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index);\n      // intentional fall through\n\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  DenseMatrix.prototype.get = function (index) {\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(index.length, this._size.length);\n    } // check index\n\n\n    for (var x = 0; x < index.length; x++) {\n      (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(index[x], this._size[x]);\n    }\n\n    var data = this._data;\n\n    for (var i = 0, ii = index.length; i < ii; i++) {\n      var indexI = index[i];\n      (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(indexI, data.length);\n      data = data[indexI];\n    }\n\n    return data;\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n\n\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length < this._size.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(index.length, this._size.length, '<');\n    }\n\n    var i, ii, indexI; // enlarge matrix when needed\n\n    var size = index.map(function (i) {\n      return i + 1;\n    });\n\n    _fit(this, size, defaultValue); // traverse over the dimensions\n\n\n    var data = this._data;\n\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      indexI = index[i];\n      (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(indexI, data.length);\n      data = data[indexI];\n    } // set new value\n\n\n    indexI = index[index.length - 1];\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(indexI, data.length);\n    data[indexI] = value;\n    return this;\n  };\n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n\n\n  function _get(matrix, index) {\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isIndex)(index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    } else {\n      // validate dimensions\n      var size = index.size();\n\n      if (size.length !== matrix._size.length) {\n        throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(size.length, matrix._size.length);\n      } // validate if any of the ranges in the index is out of range\n\n\n      var min = index.min();\n      var max = index.max();\n\n      for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n        (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(min[i], matrix._size[i]);\n        (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(max[i], matrix._size[i]);\n      } // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n\n\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype);\n    }\n  }\n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n\n\n  function _getSubmatrix(data, index, dims, dim) {\n    var last = dim === dims - 1;\n    var range = index.dimension(dim);\n\n    if (last) {\n      return range.map(function (i) {\n        (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(i, data.length);\n        return data[i];\n      }).valueOf();\n    } else {\n      return range.map(function (i) {\n        (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(i, data.length);\n        var child = data[i];\n        return _getSubmatrix(child, index, dims, dim + 1);\n      }).valueOf();\n    }\n  }\n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n\n\n  function _set(matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    } // get index size and check whether the index contains a single value\n\n\n    var iSize = index.size();\n    var isScalar = index.isScalar(); // calculate the size of the submatrix, and convert it into an Array if needed\n\n    var sSize;\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(submatrix)) {\n      sSize = submatrix.size();\n      submatrix = submatrix.valueOf();\n    } else {\n      sSize = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.arraySize)(submatrix);\n    }\n\n    if (isScalar) {\n      // set a scalar\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    } else {\n      // set a submatrix\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        } // unsqueeze both outer and inner dimensions\n\n\n        submatrix = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.unsqueeze)(submatrix, iSize.length, outer, sSize);\n      } // check whether the size of the submatrix matches the index size\n\n\n      if (!(0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.deepStrictEqual)(iSize, sSize)) {\n        throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(iSize, sSize, '>');\n      } // enlarge matrix when needed\n\n\n      var size = index.max().map(function (i) {\n        return i + 1;\n      });\n\n      _fit(matrix, size, defaultValue); // insert the sub matrix\n\n\n      var dims = iSize.length;\n      var dim = 0;\n\n      _setSubmatrix(matrix._data, index, submatrix, dims, dim);\n    }\n\n    return matrix;\n  }\n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n\n\n  function _setSubmatrix(data, index, submatrix, dims, dim) {\n    var last = dim === dims - 1;\n    var range = index.dimension(dim);\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(dataIndex);\n        data[dataIndex] = submatrix[subIndex[0]];\n      });\n    } else {\n      range.forEach(function (dataIndex, subIndex) {\n        (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(dataIndex);\n\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1);\n      });\n    }\n  }\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[] || Matrix} size The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(size)) {\n      throw new TypeError('Array or Matrix expected');\n    } // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector\n\n\n    var sizeArray = size.valueOf().map(value => {\n      return Array.isArray(value) && value.length === 1 ? value[0] : value;\n    }); // matrix to resize\n\n    var m = copy ? this.clone() : this; // resize matrix\n\n    return _resize(m, sizeArray, defaultValue);\n  };\n\n  function _resize(matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      var v = matrix._data; // go deep\n\n      while ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(v)) {\n        v = v[0];\n      }\n\n      return v;\n    } // resize matrix\n\n\n    matrix._size = size.slice(0); // copy the array\n\n    matrix._data = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.resize)(matrix._data, matrix._size, defaultValue); // return matrix\n\n    return matrix;\n  }\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    var m = copy ? this.clone() : this;\n    m._data = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.reshape)(m._data, size);\n\n    var currentLength = m._size.reduce((length, size) => length * size);\n\n    m._size = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.processSizesWildcard)(size, currentLength);\n    return m;\n  };\n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n\n\n  function _fit(matrix, size, defaultValue) {\n    var // copy the array\n    newSize = matrix._size.slice(0);\n\n    var changed = false; // add dimensions when needed\n\n    while (newSize.length < size.length) {\n      newSize.push(0);\n      changed = true;\n    } // enlarge size when needed\n\n\n    for (var i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue);\n    }\n  }\n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n\n\n  DenseMatrix.prototype.clone = function () {\n    var m = new DenseMatrix({\n      data: (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._data),\n      size: (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n\n\n  DenseMatrix.prototype.size = function () {\n    return this._size.slice(0); // return a clone of _size\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n\n\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    var me = this;\n\n    var recurse = function recurse(value, index) {\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i));\n        });\n      } else {\n        return callback(value, index, me);\n      }\n    }; // determine the new datatype when the original matrix has datatype defined\n    // TODO: should be done in matrix constructor instead\n\n\n    var data = recurse(this._data, []);\n    var datatype = this._datatype !== undefined ? (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.getArrayDataType)(data, _utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf) : undefined;\n    return new DenseMatrix(data, datatype);\n  };\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n\n\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    var me = this;\n\n    var recurse = function recurse(value, index) {\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i));\n        });\n      } else {\n        callback(value, index, me);\n      }\n    };\n\n    recurse(this._data, []);\n  };\n  /**\n   * Iterate over the matrix elements\n   * @return {Iterable<{ value, index: number[] }>}\n   */\n\n\n  DenseMatrix.prototype[Symbol.iterator] = function* () {\n    var recurse = function* recurse(value, index) {\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\n        for (var i = 0; i < value.length; i++) {\n          yield* recurse(value[i], index.concat(i));\n        }\n      } else {\n        yield {\n          value,\n          index\n        };\n      }\n    };\n\n    yield* recurse(this._data, []);\n  };\n  /**\n   * Returns an array containing the rows of a 2D matrix\n   * @returns {Array<Matrix>}\n   */\n\n\n  DenseMatrix.prototype.rows = function () {\n    var result = [];\n    var s = this.size();\n\n    if (s.length !== 2) {\n      throw new TypeError('Rows can only be returned for a 2D matrix.');\n    }\n\n    var data = this._data;\n\n    for (var row of data) {\n      result.push(new DenseMatrix([row], this._datatype));\n    }\n\n    return result;\n  };\n  /**\n   * Returns an array containing the columns of a 2D matrix\n   * @returns {Array<Matrix>}\n   */\n\n\n  DenseMatrix.prototype.columns = function () {\n    var _this = this;\n\n    var result = [];\n    var s = this.size();\n\n    if (s.length !== 2) {\n      throw new TypeError('Rows can only be returned for a 2D matrix.');\n    }\n\n    var data = this._data;\n\n    var _loop = function _loop(i) {\n      var col = data.map(row => [row[i]]);\n      result.push(new DenseMatrix(col, _this._datatype));\n    };\n\n    for (var i = 0; i < s[1]; i++) {\n      _loop(i);\n    }\n\n    return result;\n  };\n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n\n\n  DenseMatrix.prototype.toArray = function () {\n    return (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._data);\n  };\n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n\n\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data;\n  };\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  DenseMatrix.prototype.format = function (options) {\n    return (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_5__.format)(this._data, options);\n  };\n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n\n\n  DenseMatrix.prototype.toString = function () {\n    return (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_5__.format)(this._data);\n  };\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n\n\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix with the diagonal values.\n   */\n\n\n  DenseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(k) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.isInteger)(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // number diagonal values\n\n    var n = Math.min(rows - kSub, columns - kSuper); // x is a matrix get diagonal from matrix\n\n    var data = []; // loop rows\n\n    for (var i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper];\n    } // create DenseMatrix\n\n\n    return new DenseMatrix({\n      data: data,\n      size: [n],\n      datatype: this._datatype\n    });\n  };\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                     The matrix size.\n   * @param {number | Matrix | Array } value The values for the diagonal.\n   * @param {number | BigNumber} [k=0]       The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]          The default value for non-diagonal\n   * @param {string} [datatype]              The datatype for the diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n\n\n  DenseMatrix.diagonal = function (size, value, k, defaultValue) {\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(size)) {\n      throw new TypeError('Array expected, size parameter');\n    }\n\n    if (size.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // map size & validate\n\n\n    size = size.map(function (s) {\n      // check it is a big number\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(s)) {\n        // convert it\n        s = s.toNumber();\n      } // validate arguments\n\n\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(s) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.isInteger)(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      }\n\n      return s;\n    }); // validate k if any\n\n    if (k) {\n      // convert BigNumber to a number\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(k) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.isInteger)(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows and columns\n\n    var rows = size[0];\n    var columns = size[1]; // number of non-zero items\n\n    var n = Math.min(rows - kSub, columns - kSuper); // value extraction function\n\n    var _value; // check value\n\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value[i];\n      };\n    } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(value)) {\n      // matrix size\n      var ms = value.size(); // validate matrix\n\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    } else {\n      // define function\n      _value = function _value() {\n        // return value\n        return value;\n      };\n    } // discover default value if needed\n\n\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(_value(0)) ? _value(0).mul(0) // trick to create a BigNumber with value zero\n      : 0;\n    } // empty array\n\n\n    var data = []; // check we need to resize array\n\n    if (size.length > 0) {\n      // resize array\n      data = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.resize)(data, size, defaultValue); // fill diagonal\n\n      for (var d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d);\n      }\n    } // create DenseMatrix\n\n\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    });\n  };\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n\n\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json);\n  };\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n\n\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(i) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.isInteger)(i) || !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(j) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_6__.isInteger)(j)) {\n      throw new Error('Row index must be positive integers');\n    } // check dimensions\n\n\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    } // validate index\n\n\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(i, this._size[0]);\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(j, this._size[0]); // swap rows\n\n    DenseMatrix._swapRows(i, j, this._data); // return current instance\n\n\n    return this;\n  };\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   * @param {Array} data     Matrix data\n   */\n\n\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    var vi = data[i];\n    data[i] = data[j];\n    data[j] = vi;\n  };\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @return {Array} data\n   */\n\n\n  function preprocess(data) {\n    for (var i = 0, ii = data.length; i < ii; i++) {\n      var elem = data[i];\n\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(elem)) {\n        data[i] = preprocess(elem);\n      } else if (elem && elem.isMatrix === true) {\n        data[i] = preprocess(elem.valueOf());\n      }\n    }\n\n    return data;\n  }\n\n  return DenseMatrix;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/DenseMatrix.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/FibonacciHeap.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/FibonacciHeap.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createFibonacciHeapClass\": () => (/* binding */ createFibonacciHeapClass)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'FibonacciHeap';\nvar dependencies = ['smaller', 'larger'];\nvar createFibonacciHeapClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    smaller,\n    larger\n  } = _ref;\n  var oneOverLogPhi = 1.0 / Math.log((1.0 + Math.sqrt(5.0)) / 2.0);\n  /**\n   * Fibonacci Heap implementation, used interally for Matrix math.\n   * @class FibonacciHeap\n   * @constructor FibonacciHeap\n   */\n\n  function FibonacciHeap() {\n    if (!(this instanceof FibonacciHeap)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // initialize fields\n\n\n    this._minimum = null;\n    this._size = 0;\n  }\n  /**\n   * Attach type information\n   */\n\n\n  FibonacciHeap.prototype.type = 'FibonacciHeap';\n  FibonacciHeap.prototype.isFibonacciHeap = true;\n  /**\n   * Inserts a new data element into the heap. No heap consolidation is\n   * performed at this time, the new node is simply inserted into the root\n   * list of this heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n\n  FibonacciHeap.prototype.insert = function (key, value) {\n    // create node\n    var node = {\n      key: key,\n      value: value,\n      degree: 0\n    }; // check we have a node in the minimum\n\n    if (this._minimum) {\n      // minimum node\n      var minimum = this._minimum; // update left & right of node\n\n      node.left = minimum;\n      node.right = minimum.right;\n      minimum.right = node;\n      node.right.left = node; // update minimum node in heap if needed\n\n      if (smaller(key, minimum.key)) {\n        // node has a smaller key, use it as minimum\n        this._minimum = node;\n      }\n    } else {\n      // set left & right\n      node.left = node;\n      node.right = node; // this is the first node\n\n      this._minimum = node;\n    } // increment number of nodes in heap\n\n\n    this._size++; // return node\n\n    return node;\n  };\n  /**\n   * Returns the number of nodes in heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.size = function () {\n    return this._size;\n  };\n  /**\n   * Removes all elements from this heap.\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.clear = function () {\n    this._minimum = null;\n    this._size = 0;\n  };\n  /**\n   * Returns true if the heap is empty, otherwise false.\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.isEmpty = function () {\n    return this._size === 0;\n  };\n  /**\n   * Extracts the node with minimum key from heap. Amortized running\n   * time: O(log n).\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.extractMinimum = function () {\n    // node to remove\n    var node = this._minimum; // check we have a minimum\n\n    if (node === null) {\n      return node;\n    } // current minimum\n\n\n    var minimum = this._minimum; // get number of children\n\n    var numberOfChildren = node.degree; // pointer to the first child\n\n    var x = node.child; // for each child of node do...\n\n    while (numberOfChildren > 0) {\n      // store node in right side\n      var tempRight = x.right; // remove x from child list\n\n      x.left.right = x.right;\n      x.right.left = x.left; // add x to root list of heap\n\n      x.left = minimum;\n      x.right = minimum.right;\n      minimum.right = x;\n      x.right.left = x; // set Parent[x] to null\n\n      x.parent = null;\n      x = tempRight;\n      numberOfChildren--;\n    } // remove node from root list of heap\n\n\n    node.left.right = node.right;\n    node.right.left = node.left; // update minimum\n\n    if (node === node.right) {\n      // empty\n      minimum = null;\n    } else {\n      // update minimum\n      minimum = node.right; // we need to update the pointer to the root with minimum key\n\n      minimum = _findMinimumNode(minimum, this._size);\n    } // decrement size of heap\n\n\n    this._size--; // update minimum\n\n    this._minimum = minimum; // return node\n\n    return node;\n  };\n  /**\n   * Removes a node from the heap given the reference to the node. The trees\n   * in the heap will be consolidated, if necessary. This operation may fail\n   * to remove the correct element if there are nodes with key value -Infinity.\n   * Running time: O(log n) amortized.\n   * @memberof FibonacciHeap\n   */\n\n\n  FibonacciHeap.prototype.remove = function (node) {\n    // decrease key value\n    this._minimum = _decreaseKey(this._minimum, node, -1); // remove the smallest\n\n    this.extractMinimum();\n  };\n  /**\n   * Decreases the key value for a heap node, given the new value to take on.\n   * The structure of the heap may be changed and will not be consolidated.\n   * Running time: O(1) amortized.\n   * @memberof FibonacciHeap\n   */\n\n\n  function _decreaseKey(minimum, node, key) {\n    // set node key\n    node.key = key; // get parent node\n\n    var parent = node.parent;\n\n    if (parent && smaller(node.key, parent.key)) {\n      // remove node from parent\n      _cut(minimum, node, parent); // remove all nodes from parent to the root parent\n\n\n      _cascadingCut(minimum, parent);\n    } // update minimum node if needed\n\n\n    if (smaller(node.key, minimum.key)) {\n      minimum = node;\n    } // return minimum\n\n\n    return minimum;\n  }\n  /**\n   * The reverse of the link operation: removes node from the child list of parent.\n   * This method assumes that min is non-null. Running time: O(1).\n   * @memberof FibonacciHeap\n   */\n\n\n  function _cut(minimum, node, parent) {\n    // remove node from parent children and decrement Degree[parent]\n    node.left.right = node.right;\n    node.right.left = node.left;\n    parent.degree--; // reset y.child if necessary\n\n    if (parent.child === node) {\n      parent.child = node.right;\n    } // remove child if degree is 0\n\n\n    if (parent.degree === 0) {\n      parent.child = null;\n    } // add node to root list of heap\n\n\n    node.left = minimum;\n    node.right = minimum.right;\n    minimum.right = node;\n    node.right.left = node; // set parent[node] to null\n\n    node.parent = null; // set mark[node] to false\n\n    node.mark = false;\n  }\n  /**\n   * Performs a cascading cut operation. This cuts node from its parent and then\n   * does the same for its parent, and so on up the tree.\n   * Running time: O(log n); O(1) excluding the recursion.\n   * @memberof FibonacciHeap\n   */\n\n\n  function _cascadingCut(minimum, node) {\n    // store parent node\n    var parent = node.parent; // if there's a parent...\n\n    if (!parent) {\n      return;\n    } // if node is unmarked, set it marked\n\n\n    if (!node.mark) {\n      node.mark = true;\n    } else {\n      // it's marked, cut it from parent\n      _cut(minimum, node, parent); // cut its parent as well\n\n\n      _cascadingCut(parent);\n    }\n  }\n  /**\n   * Make the first node a child of the second one. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n\n\n  var _linkNodes = function _linkNodes(node, parent) {\n    // remove node from root list of heap\n    node.left.right = node.right;\n    node.right.left = node.left; // make node a Child of parent\n\n    node.parent = parent;\n\n    if (!parent.child) {\n      parent.child = node;\n      node.right = node;\n      node.left = node;\n    } else {\n      node.left = parent.child;\n      node.right = parent.child.right;\n      parent.child.right = node;\n      node.right.left = node;\n    } // increase degree[parent]\n\n\n    parent.degree++; // set mark[node] false\n\n    node.mark = false;\n  };\n\n  function _findMinimumNode(minimum, size) {\n    // to find trees of the same degree efficiently we use an array of length O(log n) in which we keep a pointer to one root of each degree\n    var arraySize = Math.floor(Math.log(size) * oneOverLogPhi) + 1; // create list with initial capacity\n\n    var array = new Array(arraySize); // find the number of root nodes.\n\n    var numRoots = 0;\n    var x = minimum;\n\n    if (x) {\n      numRoots++;\n      x = x.right;\n\n      while (x !== minimum) {\n        numRoots++;\n        x = x.right;\n      }\n    } // vars\n\n\n    var y; // For each node in root list do...\n\n    while (numRoots > 0) {\n      // access this node's degree..\n      var d = x.degree; // get next node\n\n      var next = x.right; // check if there is a node already in array with the same degree\n\n      while (true) {\n        // get node with the same degree is any\n        y = array[d];\n\n        if (!y) {\n          break;\n        } // make one node with the same degree a child of the other, do this based on the key value.\n\n\n        if (larger(x.key, y.key)) {\n          var temp = y;\n          y = x;\n          x = temp;\n        } // make y a child of x\n\n\n        _linkNodes(y, x); // we have handled this degree, go to next one.\n\n\n        array[d] = null;\n        d++;\n      } // save this node for later when we might encounter another of the same degree.\n\n\n      array[d] = x; // move forward through list.\n\n      x = next;\n      numRoots--;\n    } // Set min to null (effectively losing the root list) and reconstruct the root list from the array entries in array[].\n\n\n    minimum = null; // loop nodes in array\n\n    for (var i = 0; i < arraySize; i++) {\n      // get current node\n      y = array[i];\n\n      if (!y) {\n        continue;\n      } // check if we have a linked list\n\n\n      if (minimum) {\n        // First remove node from root list.\n        y.left.right = y.right;\n        y.right.left = y.left; // now add to root list, again.\n\n        y.left = minimum;\n        y.right = minimum.right;\n        minimum.right = y;\n        y.right.left = y; // check if this is a new min.\n\n        if (smaller(y.key, minimum.key)) {\n          minimum = y;\n        }\n      } else {\n        minimum = y;\n      }\n    }\n\n    return minimum;\n  }\n\n  return FibonacciHeap;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/FibonacciHeap.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/ImmutableDenseMatrix.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/ImmutableDenseMatrix.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createImmutableDenseMatrixClass\": () => (/* binding */ createImmutableDenseMatrixClass)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'ImmutableDenseMatrix';\nvar dependencies = ['smaller', 'DenseMatrix'];\nvar createImmutableDenseMatrixClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    smaller,\n    DenseMatrix\n  } = _ref;\n\n  function ImmutableDenseMatrix(data, datatype) {\n    if (!(this instanceof ImmutableDenseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (datatype && !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(data) || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data)) {\n      // use DenseMatrix implementation\n      var matrix = new DenseMatrix(data, datatype); // internal structures\n\n      this._data = matrix._data;\n      this._size = matrix._size;\n      this._datatype = matrix._datatype;\n      this._min = null;\n      this._max = null;\n    } else if (data && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data.data) && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n      this._datatype = data.datatype;\n      this._min = typeof data.min !== 'undefined' ? data.min : null;\n      this._max = typeof data.max !== 'undefined' ? data.max : null;\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf)(data) + ')');\n    } else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n      this._min = null;\n      this._max = null;\n    }\n  }\n\n  ImmutableDenseMatrix.prototype = new DenseMatrix();\n  /**\n   * Attach type information\n   */\n\n  ImmutableDenseMatrix.prototype.type = 'ImmutableDenseMatrix';\n  ImmutableDenseMatrix.prototype.isImmutableDenseMatrix = true;\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | ImmutableDenseMatrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n  ImmutableDenseMatrix.prototype.subset = function (index) {\n    switch (arguments.length) {\n      case 1:\n        {\n          // use base implementation\n          var m = DenseMatrix.prototype.subset.call(this, index); // check result is a matrix\n\n          if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(m)) {\n            // return immutable matrix\n            return new ImmutableDenseMatrix({\n              data: m._data,\n              size: m._size,\n              datatype: m._datatype\n            });\n          }\n\n          return m;\n        }\n      // intentional fall through\n\n      case 2:\n      case 3:\n        throw new Error('Cannot invoke set subset on an Immutable Matrix instance');\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {ImmutableDenseMatrix} self\n   */\n\n\n  ImmutableDenseMatrix.prototype.set = function () {\n    throw new Error('Cannot invoke set on an Immutable Matrix instance');\n  };\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {Number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  ImmutableDenseMatrix.prototype.resize = function () {\n    throw new Error('Cannot invoke resize on an Immutable Matrix instance');\n  };\n  /**\n   * Disallows reshaping in favor of immutability.\n   *\n   * @throws {Error} Operation not allowed\n   */\n\n\n  ImmutableDenseMatrix.prototype.reshape = function () {\n    throw new Error('Cannot invoke reshape on an Immutable Matrix instance');\n  };\n  /**\n   * Create a clone of the matrix\n   * @return {ImmutableDenseMatrix} clone\n   */\n\n\n  ImmutableDenseMatrix.prototype.clone = function () {\n    return new ImmutableDenseMatrix({\n      data: (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._data),\n      size: (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._size),\n      datatype: this._datatype\n    });\n  };\n  /**\n   * Get a JSON representation of the matrix\n   * @returns {Object}\n   */\n\n\n  ImmutableDenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'ImmutableDenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  /**\n   * Generate a matrix from a JSON object\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ImmutableDenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {ImmutableDenseMatrix}\n   */\n\n\n  ImmutableDenseMatrix.fromJSON = function (json) {\n    return new ImmutableDenseMatrix(json);\n  };\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @param {Number} i       Matrix row index 1\n   * @param {Number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n\n\n  ImmutableDenseMatrix.prototype.swapRows = function () {\n    throw new Error('Cannot invoke swapRows on an Immutable Matrix instance');\n  };\n  /**\n   * Calculate the minimum value in the set\n   * @return {Number | undefined} min\n   */\n\n\n  ImmutableDenseMatrix.prototype.min = function () {\n    // check min has been calculated before\n    if (this._min === null) {\n      // minimum\n      var m = null; // compute min\n\n      this.forEach(function (v) {\n        if (m === null || smaller(v, m)) {\n          m = v;\n        }\n      });\n      this._min = m !== null ? m : undefined;\n    }\n\n    return this._min;\n  };\n  /**\n   * Calculate the maximum value in the set\n   * @return {Number | undefined} max\n   */\n\n\n  ImmutableDenseMatrix.prototype.max = function () {\n    // check max has been calculated before\n    if (this._max === null) {\n      // maximum\n      var m = null; // compute max\n\n      this.forEach(function (v) {\n        if (m === null || smaller(m, v)) {\n          m = v;\n        }\n      });\n      this._max = m !== null ? m : undefined;\n    }\n\n    return this._max;\n  };\n\n  return ImmutableDenseMatrix;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/ImmutableDenseMatrix.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/Matrix.js":
/*!***********************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/Matrix.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMatrixClass\": () => (/* binding */ createMatrixClass)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'Matrix';\nvar dependencies = [];\nvar createMatrixClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, () => {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *\n   *     let matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *\n   *     let matrix = math.matrix([[1, 2], [3, 4]])\n   *     matix.size()              // [2, 2]\n   *     matrix.resize([3, 2], 5)\n   *     matrix.valueOf()          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Matrix.prototype.type = 'Matrix';\n  Matrix.prototype.isMatrix = true;\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n\n\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface');\n  };\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n\n\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface');\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n\n\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface');\n  };\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n\n\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n\n\n  Matrix.prototype.size = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n\n\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n\n\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n  /**\n   * Iterate over the matrix elements\n   * @return {Iterable<{ value, index: number[] }>}\n   */\n\n\n  Matrix.prototype[Symbol.iterator] = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot iterate a Matrix interface');\n  };\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n\n\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n\n\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n\n\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n\n  return Matrix;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/Matrix.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/MatrixIndex.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/MatrixIndex.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIndexClass\": () => (/* binding */ createIndexClass)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\n\nvar name = 'Index';\nvar dependencies = ['ImmutableDenseMatrix'];\nvar createIndexClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    ImmutableDenseMatrix\n  } = _ref;\n  /**\n   * Create an index. An Index can store ranges and sets for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Usage:\n   *     const index = new Index(range1, range2, matrix1, array1, ...)\n   *\n   * Where each parameter can be any of:\n   *     A number\n   *     A string (containing a name of an object property)\n   *     An instance of Range\n   *     An Array with the Set values\n   *     A Matrix with the Set values\n   *\n   * The parameters start, end, and step must be integer numbers.\n   *\n   * @class Index\n   * @Constructor Index\n   * @param {...*} ranges\n   */\n\n  function Index(ranges) {\n    if (!(this instanceof Index)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this._dimensions = [];\n    this._isScalar = true;\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      var arg = arguments[i];\n\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isRange)(arg)) {\n        this._dimensions.push(arg);\n\n        this._isScalar = false;\n      } else if (Array.isArray(arg) || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(arg)) {\n        // create matrix\n        var m = _createImmutableMatrix(arg.valueOf());\n\n        this._dimensions.push(m); // size\n\n\n        var size = m.size(); // scalar\n\n        if (size.length !== 1 || size[0] !== 1) {\n          this._isScalar = false;\n        }\n      } else if (typeof arg === 'number') {\n        this._dimensions.push(_createImmutableMatrix([arg]));\n      } else if (typeof arg === 'string') {\n        // object property (arguments.count should be 1)\n        this._dimensions.push(arg);\n      } else {\n        throw new TypeError('Dimension must be an Array, Matrix, number, string, or Range');\n      } // TODO: implement support for wildcard '*'\n\n    }\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Index.prototype.type = 'Index';\n  Index.prototype.isIndex = true;\n\n  function _createImmutableMatrix(arg) {\n    // loop array elements\n    for (var i = 0, l = arg.length; i < l; i++) {\n      if (typeof arg[i] !== 'number' || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.isInteger)(arg[i])) {\n        throw new TypeError('Index parameters must be positive integer numbers');\n      }\n    } // create matrix\n\n\n    return new ImmutableDenseMatrix(arg);\n  }\n  /**\n   * Create a clone of the index\n   * @memberof Index\n   * @return {Index} clone\n   */\n\n\n  Index.prototype.clone = function () {\n    var index = new Index();\n    index._dimensions = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_3__.clone)(this._dimensions);\n    index._isScalar = this._isScalar;\n    return index;\n  };\n  /**\n   * Create an index from an array with ranges/numbers\n   * @memberof Index\n   * @param {Array.<Array | number>} ranges\n   * @return {Index} index\n   * @private\n   */\n\n\n  Index.create = function (ranges) {\n    var index = new Index();\n    Index.apply(index, ranges);\n    return index;\n  };\n  /**\n   * Retrieve the size of the index, the number of elements for each dimension.\n   * @memberof Index\n   * @returns {number[]} size\n   */\n\n\n  Index.prototype.size = function () {\n    var size = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var d = this._dimensions[i];\n      size[i] = typeof d === 'string' ? 1 : d.size()[0];\n    }\n\n    return size;\n  };\n  /**\n   * Get the maximum value for each of the indexes ranges.\n   * @memberof Index\n   * @returns {number[]} max\n   */\n\n\n  Index.prototype.max = function () {\n    var values = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var range = this._dimensions[i];\n      values[i] = typeof range === 'string' ? range : range.max();\n    }\n\n    return values;\n  };\n  /**\n   * Get the minimum value for each of the indexes ranges.\n   * @memberof Index\n   * @returns {number[]} min\n   */\n\n\n  Index.prototype.min = function () {\n    var values = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var range = this._dimensions[i];\n      values[i] = typeof range === 'string' ? range : range.min();\n    }\n\n    return values;\n  };\n  /**\n   * Loop over each of the ranges of the index\n   * @memberof Index\n   * @param {Function} callback   Called for each range with a Range as first\n   *                              argument, the dimension as second, and the\n   *                              index object as third.\n   */\n\n\n  Index.prototype.forEach = function (callback) {\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      callback(this._dimensions[i], i, this);\n    }\n  };\n  /**\n   * Retrieve the dimension for the given index\n   * @memberof Index\n   * @param {Number} dim                  Number of the dimension\n   * @returns {Range | null} range\n   */\n\n\n  Index.prototype.dimension = function (dim) {\n    return this._dimensions[dim] || null;\n  };\n  /**\n   * Test whether this index contains an object property\n   * @returns {boolean} Returns true if the index is an object property\n   */\n\n\n  Index.prototype.isObjectProperty = function () {\n    return this._dimensions.length === 1 && typeof this._dimensions[0] === 'string';\n  };\n  /**\n   * Returns the object property name when the Index holds a single object property,\n   * else returns null\n   * @returns {string | null}\n   */\n\n\n  Index.prototype.getObjectProperty = function () {\n    return this.isObjectProperty() ? this._dimensions[0] : null;\n  };\n  /**\n   * Test whether this index contains only a single value.\n   *\n   * This is the case when the index is created with only scalar values as ranges,\n   * not for ranges resolving into a single value.\n   * @memberof Index\n   * @return {boolean} isScalar\n   */\n\n\n  Index.prototype.isScalar = function () {\n    return this._isScalar;\n  };\n  /**\n   * Expand the Index into an array.\n   * For example new Index([0,3], [2,7]) returns [[0,1,2], [2,3,4,5,6]]\n   * @memberof Index\n   * @returns {Array} array\n   */\n\n\n  Index.prototype.toArray = function () {\n    var array = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var dimension = this._dimensions[i];\n      array.push(typeof dimension === 'string' ? dimension : dimension.toArray());\n    }\n\n    return array;\n  };\n  /**\n   * Get the primitive value of the Index, a two dimensional array.\n   * Equivalent to Index.toArray().\n   * @memberof Index\n   * @returns {Array} array\n   */\n\n\n  Index.prototype.valueOf = Index.prototype.toArray;\n  /**\n   * Get the string representation of the index, for example '[2:6]' or '[0:2:10, 4:7, [1,2,3]]'\n   * @memberof Index\n   * @returns {String} str\n   */\n\n  Index.prototype.toString = function () {\n    var strings = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var dimension = this._dimensions[i];\n\n      if (typeof dimension === 'string') {\n        strings.push(JSON.stringify(dimension));\n      } else {\n        strings.push(dimension.toString());\n      }\n    }\n\n    return '[' + strings.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the Index\n   * @memberof Index\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Index\", \"ranges\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n   */\n\n\n  Index.prototype.toJSON = function () {\n    return {\n      mathjs: 'Index',\n      dimensions: this._dimensions\n    };\n  };\n  /**\n   * Instantiate an Index from a JSON object\n   * @memberof Index\n   * @param {Object} json A JSON object structured as:\n   *                     `{\"mathjs\": \"Index\", \"dimensions\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n   * @return {Index}\n   */\n\n\n  Index.fromJSON = function (json) {\n    return Index.create(json.dimensions);\n  };\n\n  return Index;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/MatrixIndex.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/Range.js":
/*!**********************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/Range.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRangeClass\": () => (/* binding */ createRangeClass)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\n\n\nvar name = 'Range';\nvar dependencies = [];\nvar createRangeClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, () => {\n  /**\n   * Create a range. A range has a start, step, and end, and contains functions\n   * to iterate over the range.\n   *\n   * A range can be constructed as:\n   *\n   *     const range = new Range(start, end)\n   *     const range = new Range(start, end, step)\n   *\n   * To get the result of the range:\n   *     range.forEach(function (x) {\n   *         console.log(x)\n   *     })\n   *     range.map(function (x) {\n   *         return math.sin(x)\n   *     })\n   *     range.toArray()\n   *\n   * Example usage:\n   *\n   *     const c = new Range(2, 6)       // 2:1:5\n   *     c.toArray()                     // [2, 3, 4, 5]\n   *     const d = new Range(2, -3, -1)  // 2:-1:-2\n   *     d.toArray()                     // [2, 1, 0, -1, -2]\n   *\n   * @class Range\n   * @constructor Range\n   * @param {number} start  included lower bound\n   * @param {number} end    excluded upper bound\n   * @param {number} [step] step size, default value is 1\n   */\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    var hasStart = start !== null && start !== undefined;\n    var hasEnd = end !== null && end !== undefined;\n    var hasStep = step !== null && step !== undefined;\n\n    if (hasStart) {\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(start)) {\n        start = start.toNumber();\n      } else if (typeof start !== 'number') {\n        throw new TypeError('Parameter start must be a number');\n      }\n    }\n\n    if (hasEnd) {\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(end)) {\n        end = end.toNumber();\n      } else if (typeof end !== 'number') {\n        throw new TypeError('Parameter end must be a number');\n      }\n    }\n\n    if (hasStep) {\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(step)) {\n        step = step.toNumber();\n      } else if (typeof step !== 'number') {\n        throw new TypeError('Parameter step must be a number');\n      }\n    }\n\n    this.start = hasStart ? parseFloat(start) : 0;\n    this.end = hasEnd ? parseFloat(end) : 0;\n    this.step = hasStep ? parseFloat(step) : 1;\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Range.prototype.type = 'Range';\n  Range.prototype.isRange = true;\n  /**\n   * Parse a string into a range,\n   * The string contains the start, optional step, and end, separated by a colon.\n   * If the string does not contain a valid range, null is returned.\n   * For example str='0:2:11'.\n   * @memberof Range\n   * @param {string} str\n   * @return {Range | null} range\n   */\n\n  Range.parse = function (str) {\n    if (typeof str !== 'string') {\n      return null;\n    }\n\n    var args = str.split(':');\n    var nums = args.map(function (arg) {\n      return parseFloat(arg);\n    });\n    var invalid = nums.some(function (num) {\n      return isNaN(num);\n    });\n\n    if (invalid) {\n      return null;\n    }\n\n    switch (nums.length) {\n      case 2:\n        return new Range(nums[0], nums[1]);\n\n      case 3:\n        return new Range(nums[0], nums[2], nums[1]);\n\n      default:\n        return null;\n    }\n  };\n  /**\n   * Create a clone of the range\n   * @return {Range} clone\n   */\n\n\n  Range.prototype.clone = function () {\n    return new Range(this.start, this.end, this.step);\n  };\n  /**\n   * Retrieve the size of the range.\n   * Returns an array containing one number, the number of elements in the range.\n   * @memberof Range\n   * @returns {number[]} size\n   */\n\n\n  Range.prototype.size = function () {\n    var len = 0;\n    var start = this.start;\n    var step = this.step;\n    var end = this.end;\n    var diff = end - start;\n\n    if ((0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.sign)(step) === (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.sign)(diff)) {\n      len = Math.ceil(diff / step);\n    } else if (diff === 0) {\n      len = 0;\n    }\n\n    if (isNaN(len)) {\n      len = 0;\n    }\n\n    return [len];\n  };\n  /**\n   * Calculate the minimum value in the range\n   * @memberof Range\n   * @return {number | undefined} min\n   */\n\n\n  Range.prototype.min = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start;\n      } else {\n        // negative step\n        return this.start + (size - 1) * this.step;\n      }\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * Calculate the maximum value in the range\n   * @memberof Range\n   * @return {number | undefined} max\n   */\n\n\n  Range.prototype.max = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start + (size - 1) * this.step;\n      } else {\n        // negative step\n        return this.start;\n      }\n    } else {\n      return undefined;\n    }\n  };\n  /**\n   * Execute a callback function for each value in the range.\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Range being traversed.\n   */\n\n\n  Range.prototype.forEach = function (callback) {\n    var x = this.start;\n    var step = this.step;\n    var end = this.end;\n    var i = 0;\n\n    if (step > 0) {\n      while (x < end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    } else if (step < 0) {\n      while (x > end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    }\n  };\n  /**\n   * Execute a callback function for each value in the Range, and return the\n   * results as an array\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @returns {Array} array\n   */\n\n\n  Range.prototype.map = function (callback) {\n    var array = [];\n    this.forEach(function (value, index, obj) {\n      array[index[0]] = callback(value, index, obj);\n    });\n    return array;\n  };\n  /**\n   * Create an Array with a copy of the Ranges data\n   * @memberof Range\n   * @returns {Array} array\n   */\n\n\n  Range.prototype.toArray = function () {\n    var array = [];\n    this.forEach(function (value, index) {\n      array[index[0]] = value;\n    });\n    return array;\n  };\n  /**\n   * Get the primitive value of the Range, a one dimensional array\n   * @memberof Range\n   * @returns {Array} array\n   */\n\n\n  Range.prototype.valueOf = function () {\n    // TODO: implement a caching mechanism for range.valueOf()\n    return this.toArray();\n  };\n  /**\n   * Get a string representation of the range, with optional formatting options.\n   * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'\n   * @memberof Range\n   * @param {Object | number | function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  Range.prototype.format = function (options) {\n    var str = (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.format)(this.start, options);\n\n    if (this.step !== 1) {\n      str += ':' + (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.format)(this.step, options);\n    }\n\n    str += ':' + (0,_utils_number_js__WEBPACK_IMPORTED_MODULE_2__.format)(this.end, options);\n    return str;\n  };\n  /**\n   * Get a string representation of the range.\n   * @memberof Range\n   * @returns {string}\n   */\n\n\n  Range.prototype.toString = function () {\n    return this.format();\n  };\n  /**\n   * Get a JSON representation of the range\n   * @memberof Range\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   */\n\n\n  Range.prototype.toJSON = function () {\n    return {\n      mathjs: 'Range',\n      start: this.start,\n      end: this.end,\n      step: this.step\n    };\n  };\n  /**\n   * Instantiate a Range from a JSON object\n   * @memberof Range\n   * @param {Object} json A JSON object structured as:\n   *                      `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   * @return {Range}\n   */\n\n\n  Range.fromJSON = function (json) {\n    return new Range(json.start, json.end, json.step);\n  };\n\n  return Range;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/Range.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/Spa.js":
/*!********************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/Spa.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSpaClass\": () => (/* binding */ createSpaClass)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'Spa';\nvar dependencies = ['addScalar', 'equalScalar', 'FibonacciHeap'];\nvar createSpaClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    addScalar,\n    equalScalar,\n    FibonacciHeap\n  } = _ref;\n  /**\n   * An ordered Sparse Accumulator is a representation for a sparse vector that includes a dense array\n   * of the vector elements and an ordered list of non-zero elements.\n   */\n\n  function Spa() {\n    if (!(this instanceof Spa)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    } // allocate vector, TODO use typed arrays\n\n\n    this._values = [];\n    this._heap = new FibonacciHeap();\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Spa.prototype.type = 'Spa';\n  Spa.prototype.isSpa = true;\n  /**\n   * Set the value for index i.\n   *\n   * @param {number} i                       The index\n   * @param {number | BigNumber | Complex}   The value at index i\n   */\n\n  Spa.prototype.set = function (i, v) {\n    // check we have a value @ i\n    if (!this._values[i]) {\n      // insert in heap\n      var node = this._heap.insert(i, v); // set the value @ i\n\n\n      this._values[i] = node;\n    } else {\n      // update the value @ i\n      this._values[i].value = v;\n    }\n  };\n\n  Spa.prototype.get = function (i) {\n    var node = this._values[i];\n\n    if (node) {\n      return node.value;\n    }\n\n    return 0;\n  };\n\n  Spa.prototype.accumulate = function (i, v) {\n    // node @ i\n    var node = this._values[i];\n\n    if (!node) {\n      // insert in heap\n      node = this._heap.insert(i, v); // initialize value\n\n      this._values[i] = node;\n    } else {\n      // accumulate value\n      node.value = addScalar(node.value, v);\n    }\n  };\n\n  Spa.prototype.forEach = function (from, to, callback) {\n    // references\n    var heap = this._heap;\n    var values = this._values; // nodes\n\n    var nodes = []; // node with minimum key, save it\n\n    var node = heap.extractMinimum();\n\n    if (node) {\n      nodes.push(node);\n    } // extract nodes from heap (ordered)\n\n\n    while (node && node.key <= to) {\n      // check it is in range\n      if (node.key >= from) {\n        // check value is not zero\n        if (!equalScalar(node.value, 0)) {\n          // invoke callback\n          callback(node.key, node.value, this);\n        }\n      } // extract next node, save it\n\n\n      node = heap.extractMinimum();\n\n      if (node) {\n        nodes.push(node);\n      }\n    } // reinsert all nodes in heap\n\n\n    for (var i = 0; i < nodes.length; i++) {\n      // current node\n      var n = nodes[i]; // insert node in heap\n\n      node = heap.insert(n.key, n.value); // update values\n\n      values[node.key] = node;\n    }\n  };\n\n  Spa.prototype.swap = function (i, j) {\n    // node @ i and j\n    var nodei = this._values[i];\n    var nodej = this._values[j]; // check we need to insert indeces\n\n    if (!nodei && nodej) {\n      // insert in heap\n      nodei = this._heap.insert(i, nodej.value); // remove from heap\n\n      this._heap.remove(nodej); // set values\n\n\n      this._values[i] = nodei;\n      this._values[j] = undefined;\n    } else if (nodei && !nodej) {\n      // insert in heap\n      nodej = this._heap.insert(j, nodei.value); // remove from heap\n\n      this._heap.remove(nodei); // set values\n\n\n      this._values[j] = nodej;\n      this._values[i] = undefined;\n    } else if (nodei && nodej) {\n      // swap values\n      var v = nodei.value;\n      nodei.value = nodej.value;\n      nodej.value = v;\n    }\n  };\n\n  return Spa;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/Spa.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/SparseMatrix.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/SparseMatrix.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSparseMatrixClass\": () => (/* binding */ createSparseMatrixClass)\n/* harmony export */ });\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\n\n\n\n\n\nvar name = 'SparseMatrix';\nvar dependencies = ['typed', 'equalScalar', 'Matrix'];\nvar createSparseMatrixClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar,\n    Matrix\n  } = _ref;\n  /**\n   * Sparse Matrix implementation. This type implements\n   * a [Compressed Column Storage](https://en.wikipedia.org/wiki/Sparse_matrix#Compressed_sparse_column_(CSC_or_CCS))\n   * format for two-dimensional sparse matrices.\n   * @class SparseMatrix\n   */\n\n  function SparseMatrix(data, datatype) {\n    if (!(this instanceof SparseMatrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (datatype && !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(datatype)) {\n      throw new Error('Invalid datatype: ' + datatype);\n    }\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype);\n    } else if (data && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data.index) && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data.ptr) && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(data)) {\n      // create from array\n      _createFromArray(this, data, datatype);\n    } else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf)(data) + ')');\n    } else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0, 0];\n      this._datatype = datatype;\n    }\n  }\n\n  function _createFromMatrix(matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(source._values) : undefined;\n      matrix._index = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(source._index);\n      matrix._ptr = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(source._ptr);\n      matrix._size = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(source._size);\n      matrix._datatype = datatype || source._datatype;\n    } else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype);\n    }\n  }\n\n  function _createFromArray(matrix, data, datatype) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    matrix._datatype = datatype; // discover rows & columns, do not use math.size() to avoid looping array twice\n\n    var rows = data.length;\n    var columns = 0; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, datatype);\n    } // check we have rows (empty array)\n\n\n    if (rows > 0) {\n      // column index\n      var j = 0;\n\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length); // loop rows\n\n\n        for (var i = 0; i < rows; i++) {\n          // current row\n          var row = data[i]; // check row is an array\n\n          if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length) {\n              columns = row.length;\n            } // check row has column\n\n\n            if (j < row.length) {\n              // value\n              var v = row[j]; // check value != 0\n\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v); // index\n\n\n                matrix._index.push(i);\n              }\n            }\n          } else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1) {\n              columns = 1;\n            } // check value != 0 (row is a scalar)\n\n\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row); // index\n\n\n              matrix._index.push(i);\n            }\n          }\n        } // increment index\n\n\n        j++;\n      } while (j < columns);\n    } // store number of values in ptr\n\n\n    matrix._ptr.push(matrix._index.length); // size\n\n\n    matrix._size = [rows, columns];\n  }\n\n  SparseMatrix.prototype = new Matrix();\n  /**\n   * Create a new SparseMatrix\n   */\n\n  SparseMatrix.prototype.createSparseMatrix = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n  /**\n   * Attach type information\n   */\n\n\n  SparseMatrix.prototype.type = 'SparseMatrix';\n  SparseMatrix.prototype.isSparseMatrix = true;\n  /**\n   * Get the matrix type\n   *\n   * Usage:\n   *    const matrixType = matrix.getDataType()  // retrieves the matrix type\n   *\n   * @memberOf SparseMatrix\n   * @return {string}   type information; if multiple types are found from the Matrix, it will return \"mixed\"\n   */\n\n  SparseMatrix.prototype.getDataType = function () {\n    return (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.getArrayDataType)(this._values, _utils_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf);\n  };\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     const format = matrix.storage()   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n\n\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse';\n  };\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     const format = matrix.datatype()    // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n\n\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n\n\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     const density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n\n\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1]; // calculate density\n\n    return rows !== 0 && columns !== 0 ? this._index.length / (rows * columns) : 0;\n  };\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     const subset = matrix.subset(index)               // retrieve subset\n   *     const value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n\n\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke subset on a Pattern only matrix');\n    } // check arguments\n\n\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n      // intentional fall through\n\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n\n  function _getsubset(matrix, idx) {\n    // check idx\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isIndex)(idx)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = idx.isScalar();\n\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min());\n    } // validate dimensions\n\n\n    var size = idx.size();\n\n    if (size.length !== matrix._size.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(size.length, matrix._size.length);\n    } // vars\n\n\n    var i, ii, k, kk; // validate if any of the ranges in the index is out of range\n\n    var min = idx.min();\n    var max = idx.max();\n\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(min[i], matrix._size[i]);\n      (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(max[i], matrix._size[i]);\n    } // matrix arrays\n\n\n    var mvalues = matrix._values;\n    var mindex = matrix._index;\n    var mptr = matrix._ptr; // rows & columns dimensions for result matrix\n\n    var rows = idx.dimension(0);\n    var columns = idx.dimension(1); // workspace & permutation vector\n\n    var w = [];\n    var pv = []; // loop rows in resulting matrix\n\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0]; // mark i in workspace\n\n      w[i] = true;\n    }); // result matrix arrays\n\n    var values = mvalues ? [] : undefined;\n    var index = [];\n    var ptr = []; // loop columns in result matrix\n\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length); // loop values in column j\n\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k]; // check row is in result matrix\n\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i]); // check we need to process values\n\n          if (values) {\n            values.push(mvalues[k]);\n          }\n        }\n      }\n    }); // update ptr\n\n    ptr.push(index.length); // return matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: size,\n      datatype: matrix._datatype\n    });\n  }\n\n  function _setsubset(matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    } // get index size and check whether the index contains a single value\n\n\n    var iSize = index.size();\n    var isScalar = index.isScalar(); // calculate the size of the submatrix, and convert it into an Array if needed\n\n    var sSize;\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size(); // use array representation\n\n      submatrix = submatrix.toArray();\n    } else {\n      // get submatrix size (array, scalar)\n      sSize = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.arraySize)(submatrix);\n    } // check index is a scalar\n\n\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      } // set value\n\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    } else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(iSize.length, matrix._size.length, '<');\n      } // check submatrix and index have the same dimensions\n\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        } // unsqueeze both outer and inner dimensions\n\n\n        submatrix = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.unsqueeze)(submatrix, iSize.length, outer, sSize);\n      } // check whether the size of the submatrix matches the index size\n\n\n      if (!(0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.deepStrictEqual)(iSize, sSize)) {\n        throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(iSize, sSize, '>');\n      } // offsets\n\n\n      var x0 = index.min()[0];\n      var y0 = index.min()[1]; // submatrix rows and columns\n\n      var m = sSize[0];\n      var n = sSize[1]; // loop submatrix\n\n      for (var x = 0; x < m; x++) {\n        // loop columns\n        for (var y = 0; y < n; y++) {\n          // value at i, j\n          var v = submatrix[x][y]; // invoke set (zero value will remove entry from matrix)\n\n          matrix.set([x + x0, y + y0], v, defaultValue);\n        }\n      }\n    }\n\n    return matrix;\n  }\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n\n\n  SparseMatrix.prototype.get = function (index) {\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(index.length, this._size.length);\n    } // check it is a pattern matrix\n\n\n    if (!this._values) {\n      throw new Error('Cannot invoke get on a Pattern only matrix');\n    } // row and column\n\n\n    var i = index[0];\n    var j = index[1]; // check i, j are valid\n\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(i, this._size[0]);\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(j, this._size[1]); // find value index\n\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index); // check k is prior to next column k and it is in the correct row\n\n\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      return this._values[k];\n    }\n\n    return 0;\n  };\n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} v\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n\n\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(index)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (index.length !== this._size.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_4__.DimensionError(index.length, this._size.length);\n    } // check it is a pattern matrix\n\n\n    if (!this._values) {\n      throw new Error('Cannot invoke set on a Pattern only matrix');\n    } // row and column\n\n\n    var i = index[0];\n    var j = index[1]; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, this._datatype);\n    } // check we need to resize matrix\n\n\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue); // update rows & columns\n\n\n      rows = this._size[0];\n      columns = this._size[1];\n    } // check i, j are valid\n\n\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(i, rows);\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(j, columns); // find value index\n\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index); // check k is prior to next column k and it is in the correct row\n\n\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v;\n      } else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr);\n      }\n    } else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr);\n    }\n\n    return this;\n  };\n\n  function _getValueIndex(i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0) {\n      return bottom;\n    } // loop rows [top, bottom[\n\n\n    for (var r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i) {\n        return r;\n      }\n    } // we did not find row\n\n\n    return top;\n  }\n\n  function _remove(k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1); // update pointers\n\n    for (var x = j + 1; x < ptr.length; x++) {\n      ptr[x]--;\n    }\n  }\n\n  function _insert(k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v); // update row for k\n\n    index.splice(k, 0, i); // update column pointers\n\n    for (var x = j + 1; x < ptr.length; x++) {\n      ptr[x]++;\n    }\n  }\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[] | Matrix} size  The new size the matrix should have.\n   *                                  Since sparse matrices are always two-dimensional,\n   *                                  size must be two numbers in either an array or a matrix\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n\n\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isCollection)(size)) {\n      throw new TypeError('Array or Matrix expected');\n    } // SparseMatrix input is always 2d, flatten this into 1d if it's indeed a vector\n\n\n    var sizeArray = size.valueOf().map(value => {\n      return Array.isArray(value) && value.length === 1 ? value[0] : value;\n    });\n\n    if (sizeArray.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // check sizes\n\n\n    sizeArray.forEach(function (value) {\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_5__.isInteger)(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(sizeArray) + ')');\n      }\n    }); // matrix to resize\n\n    var m = copy ? this.clone() : this; // resize matrix\n\n    return _resize(m, sizeArray[0], sizeArray[1], defaultValue);\n  };\n\n  function _resize(matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, matrix._datatype); // convert value to the same datatype\n\n      value = typed.convert(value, matrix._datatype);\n    } // should we insert the value?\n\n\n    var ins = !eq(value, zero); // old columns and rows\n\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n    var i, j, k; // check we need to increase columns\n\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length; // check we need to insert matrix._values\n\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value); // update matrix._index\n\n\n            matrix._index.push(i);\n          }\n        }\n      } // store number of matrix._values in matrix._ptr\n\n\n      matrix._ptr[columns] = matrix._values.length;\n    } else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns); // truncate matrix._values and matrix._index\n\n\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length);\n\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length);\n    } // update columns\n\n\n    c = columns; // check we need to increase rows\n\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0; // loop columns\n\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n; // where to insert matrix._values\n\n          k = matrix._ptr[j + 1] + n; // pointer\n\n          var p = 0; // loop new rows, initialize pointer\n\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value); // update matrix._index\n\n\n            matrix._index.splice(k + p, 0, i); // increment inserts\n\n\n            n++;\n          }\n        } // store number of matrix._values in matrix._ptr\n\n\n        matrix._ptr[c] = matrix._values.length;\n      }\n    } else if (rows < r) {\n      // deletes\n      var d = 0; // loop columns\n\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d; // where matrix._values start for next column\n\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1] - d; // loop matrix._index\n\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k]; // check we need to delete value and matrix._index\n\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1); // remove item from matrix._index\n\n\n            matrix._index.splice(k, 1); // increase deletes\n\n\n            d++;\n          }\n        }\n      } // update matrix._ptr for current column\n\n\n      matrix._ptr[j] = matrix._values.length;\n    } // update matrix._size\n\n\n    matrix._size[0] = rows;\n    matrix._size[1] = columns; // return matrix\n\n    return matrix;\n  }\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} sizes          The new size the matrix should have.\n   *                                  Since sparse matrices are always two-dimensional,\n   *                                  size must be two numbers in either an array or a matrix\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n\n\n  SparseMatrix.prototype.reshape = function (sizes, copy) {\n    // validate arguments\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(sizes)) {\n      throw new TypeError('Array expected');\n    }\n\n    if (sizes.length !== 2) {\n      throw new Error('Sparse matrices can only be reshaped in two dimensions');\n    } // check sizes\n\n\n    sizes.forEach(function (value) {\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_5__.isInteger)(value) || value <= -2 || value === 0) {\n        throw new TypeError('Invalid size, must contain positive integers or -1 ' + '(size: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(sizes) + ')');\n      }\n    });\n    var currentLength = this._size[0] * this._size[1];\n    sizes = (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.processSizesWildcard)(sizes, currentLength);\n    var newLength = sizes[0] * sizes[1]; // m * n must not change\n\n    if (currentLength !== newLength) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements');\n    } // matrix to reshape\n\n\n    var m = copy ? this.clone() : this; // return unchanged if the same shape\n\n    if (this._size[0] === sizes[0] && this._size[1] === sizes[1]) {\n      return m;\n    } // Convert to COO format (generate a column index)\n\n\n    var colIndex = [];\n\n    for (var i = 0; i < m._ptr.length; i++) {\n      for (var j = 0; j < m._ptr[i + 1] - m._ptr[i]; j++) {\n        colIndex.push(i);\n      }\n    } // Clone the values array\n\n\n    var values = m._values.slice(); // Clone the row index array\n\n\n    var rowIndex = m._index.slice(); // Transform the (row, column) indices\n\n\n    for (var _i = 0; _i < m._index.length; _i++) {\n      var r1 = rowIndex[_i];\n      var c1 = colIndex[_i];\n      var flat = r1 * m._size[1] + c1;\n      colIndex[_i] = flat % sizes[1];\n      rowIndex[_i] = Math.floor(flat / sizes[1]);\n    } // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n    // OR, we could easily just:\n    // 1. Remove all values from the matrix\n\n\n    m._values.length = 0;\n    m._index.length = 0;\n    m._ptr.length = sizes[1] + 1;\n    m._size = sizes.slice();\n\n    for (var _i2 = 0; _i2 < m._ptr.length; _i2++) {\n      m._ptr[_i2] = 0;\n    } // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n\n\n    for (var h = 0; h < values.length; h++) {\n      var _i3 = rowIndex[h];\n      var _j = colIndex[h];\n      var v = values[h];\n\n      var k = _getValueIndex(_i3, m._ptr[_j], m._ptr[_j + 1], m._index);\n\n      _insert(k, _i3, _j, v, m._values, m._index, m._ptr);\n    } // The value indices are inserted out of order, but apparently that's... still OK?\n\n\n    return m;\n  };\n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n\n\n  SparseMatrix.prototype.clone = function () {\n    var m = new SparseMatrix({\n      values: this._values ? (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._values) : undefined,\n      index: (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._index),\n      ptr: (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._ptr),\n      size: (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n\n\n  SparseMatrix.prototype.size = function () {\n    return this._size.slice(0); // copy the Array\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n\n\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke map on a Pattern only matrix');\n    } // matrix instance\n\n\n    var me = this; // rows and columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // invoke callback\n\n    var invoke = function invoke(v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me);\n    }; // invoke _map\n\n\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n\n\n  function _map(matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = []; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, matrix._datatype);\n    } // invoke callback\n\n\n    var invoke = function invoke(v, x, y) {\n      // invoke callback\n      v = callback(v, x, y); // check value != 0\n\n      if (!eq(v, zero)) {\n        // store value\n        values.push(v); // index\n\n        index.push(x);\n      }\n    }; // loop columns\n\n\n    for (var j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length); // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row index\n          var i = matrix._index[k]; // check i is in range\n\n          if (i >= minRow && i <= maxRow) {\n            // value @ k\n            invoke(matrix._values[k], i - minRow, j - minColumn);\n          }\n        }\n      } else {\n        // create a cache holding all defined values\n        var _values = {};\n\n        for (var _k = k0; _k < k1; _k++) {\n          var _i4 = matrix._index[_k];\n          _values[_i4] = matrix._values[_k];\n        } // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n\n\n        for (var _i5 = minRow; _i5 <= maxRow; _i5++) {\n          var value = _i5 in _values ? _values[_i5] : 0;\n          invoke(value, _i5 - minRow, j - minColumn);\n        }\n      }\n    } // store number of values in ptr\n\n\n    ptr.push(values.length); // return sparse matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  }\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *                              If false, the indices are guaranteed to be in order,\n   *                              if true, the indices can be unordered.\n   */\n\n\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values) {\n      throw new Error('Cannot invoke forEach on a Pattern only matrix');\n    } // matrix instance\n\n\n    var me = this; // rows and columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n\n      if (skipZeros) {\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row index\n          var i = this._index[k]; // value @ k\n\n          callback(this._values[k], [i, j], me);\n        }\n      } else {\n        // create a cache holding all defined values\n        var values = {};\n\n        for (var _k2 = k0; _k2 < k1; _k2++) {\n          var _i6 = this._index[_k2];\n          values[_i6] = this._values[_k2];\n        } // loop over all rows (indexes can be unordered so we can't use that),\n        // and either read the value or zero\n\n\n        for (var _i7 = 0; _i7 < rows; _i7++) {\n          var value = _i7 in values ? values[_i7] : 0;\n          callback(value, [_i7, j], me);\n        }\n      }\n    }\n  };\n  /**\n   * Iterate over the matrix elements, skipping zeros\n   * @return {Iterable<{ value, index: number[] }>}\n   */\n\n\n  SparseMatrix.prototype[Symbol.iterator] = function* () {\n    if (!this._values) {\n      throw new Error('Cannot iterate a Pattern only matrix');\n    }\n\n    var columns = this._size[1];\n\n    for (var j = 0; j < columns; j++) {\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        yield {\n          value: this._values[k],\n          index: [i, j]\n        };\n      }\n    }\n  };\n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n\n\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true);\n  };\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n\n\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false);\n  };\n\n  function _toArray(values, index, ptr, size, copy) {\n    // rows and columns\n    var rows = size[0];\n    var columns = size[1]; // result\n\n    var a = []; // vars\n\n    var i, j; // initialize array\n\n    for (i = 0; i < rows; i++) {\n      a[i] = [];\n\n      for (j = 0; j < columns; j++) {\n        a[i][j] = 0;\n      }\n    } // loop columns\n\n\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1]; // loop k within [k0, k1[\n\n      for (var k = k0; k < k1; k++) {\n        // row index\n        i = index[k]; // set value (use one for pattern matrix)\n\n        a[i][j] = values ? copy ? (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_2__.clone)(values[k]) : values[k] : 1;\n      }\n    }\n\n    return a;\n  }\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n\n\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1]; // density\n\n    var density = this.density(); // rows & columns\n\n    var str = 'Sparse Matrix [' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(rows, options) + ' x ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(columns, options) + '] density: ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(density, options) + '\\n'; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1]; // loop k within [k0, k1[\n\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k]; // append value\n\n        str += '\\n    (' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(i, options) + ', ' + (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(j, options) + ') ==> ' + (this._values ? (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(this._values[k], options) : 'X');\n      }\n    }\n\n    return str;\n  };\n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n\n\n  SparseMatrix.prototype.toString = function () {\n    return (0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.format)(this.toArray());\n  };\n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n\n\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n\n\n  SparseMatrix.prototype.diagonal = function (k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(k) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_5__.isInteger)(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows & columns\n\n    var rows = this._size[0];\n    var columns = this._size[1]; // number diagonal values\n\n    var n = Math.min(rows - kSub, columns - kSuper); // diagonal arrays\n\n    var values = [];\n    var index = [];\n    var ptr = []; // initial ptr value\n\n    ptr[0] = 0; // loop columns\n\n    for (var j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1]; // loop x within [k0, k1[\n\n      for (var x = k0; x < k1; x++) {\n        // row index\n        var i = this._index[x]; // check row\n\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x]); // store row\n\n          index[values.length - 1] = i - kSub; // exit loop\n\n          break;\n        }\n      }\n    } // close ptr\n\n\n    ptr.push(values.length); // return matrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [n, 1]\n    });\n  };\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n\n\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json);\n  };\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]            The default value for non-diagonal\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n\n\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(size)) {\n      throw new TypeError('Array expected, size parameter');\n    }\n\n    if (size.length !== 2) {\n      throw new Error('Only two dimensions matrix are supported');\n    } // map size & validate\n\n\n    size = size.map(function (s) {\n      // check it is a big number\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(s)) {\n        // convert it\n        s = s.toNumber();\n      } // validate arguments\n\n\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(s) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_5__.isInteger)(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      }\n\n      return s;\n    }); // validate k if any\n\n    if (k) {\n      // convert BigNumber to a number\n      if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(k)) {\n        k = k.toNumber();\n      } // is must be an integer\n\n\n      if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(k) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_5__.isInteger)(k)) {\n        throw new TypeError('The parameter k must be an integer number');\n      }\n    } else {\n      // default value\n      k = 0;\n    } // equal signature to use\n\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0;\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar; // convert 0 to the same datatype\n\n      zero = typed.convert(0, datatype);\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0; // rows and columns\n\n    var rows = size[0];\n    var columns = size[1]; // number of non-zero items\n\n    var n = Math.min(rows - kSub, columns - kSuper); // value extraction function\n\n    var _value; // check value\n\n\n    if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isArray)(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value[i];\n      };\n    } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(value)) {\n      // matrix size\n      var ms = value.size(); // validate matrix\n\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      } // define function\n\n\n      _value = function _value(i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    } else {\n      // define function\n      _value = function _value() {\n        // return value\n        return value;\n      };\n    } // create arrays\n\n\n    var values = [];\n    var index = [];\n    var ptr = []; // loop items\n\n    for (var j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length); // diagonal index\n\n      var i = j - kSuper; // check we need to set diagonal value\n\n      if (i >= 0 && i < n) {\n        // get value @ i\n        var v = _value(i); // check for zero\n\n\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub); // add value\n\n          values.push(v);\n        }\n      }\n    } // last value should be number of values\n\n\n    ptr.push(values.length); // create SparseMatrix\n\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    });\n  };\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n\n\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(i) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_5__.isInteger)(i) || !(0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(j) || !(0,_utils_number_js__WEBPACK_IMPORTED_MODULE_5__.isInteger)(j)) {\n      throw new Error('Row index must be positive integers');\n    } // check dimensions\n\n\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    } // validate index\n\n\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(i, this._size[0]);\n    (0,_utils_array_js__WEBPACK_IMPORTED_MODULE_3__.validateIndex)(j, this._size[0]); // swap rows\n\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr); // return current instance\n\n\n    return this;\n  };\n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n\n\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    var k0 = ptr[j];\n    var k1 = ptr[j + 1]; // loop\n\n    for (var k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k]);\n    }\n  };\n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n\n\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1]; // find value index @ x\n\n      var kx = _getValueIndex(x, k0, k1, index); // find value index @ x\n\n\n      var ky = _getValueIndex(y, k0, k1, index); // check both rows exist in matrix\n\n\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          var v = values[kx];\n          values[kx] = values[ky];\n          values[ky] = v;\n        } // next column\n\n\n        continue;\n      } // check x row exist & no y row\n\n\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        var vx = values ? values[kx] : undefined; // insert value @ y\n\n        index.splice(ky, 0, y);\n\n        if (values) {\n          values.splice(ky, 0, vx);\n        } // remove value @ x (adjust array index if needed)\n\n\n        index.splice(ky <= kx ? kx + 1 : kx, 1);\n\n        if (values) {\n          values.splice(ky <= kx ? kx + 1 : kx, 1);\n        } // next column\n\n\n        continue;\n      } // check y row exist & no x row\n\n\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        var vy = values ? values[ky] : undefined; // insert value @ x\n\n        index.splice(kx, 0, x);\n\n        if (values) {\n          values.splice(kx, 0, vy);\n        } // remove value @ y (adjust array index if needed)\n\n\n        index.splice(kx <= ky ? ky + 1 : ky, 1);\n\n        if (values) {\n          values.splice(kx <= ky ? ky + 1 : ky, 1);\n        }\n      }\n    }\n  };\n\n  return SparseMatrix;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/SparseMatrix.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/function/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/function/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createIndex\": () => (/* binding */ createIndex)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\nvar name = 'index';\nvar dependencies = ['typed', 'Index'];\nvar createIndex = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Index\n  } = _ref;\n  /**\n   * Create an index. An Index can store ranges having start, step, and end\n   * for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Syntax:\n   *\n   *     math.index(range1, range2, ...)\n   *\n   * Where each range can be any of:\n   *\n   * - A number\n   * - A string for getting/setting an object property\n   * - An instance of `Range`\n   * - A one-dimensional Array or a Matrix with numbers\n   *\n   * Indexes must be zero-based, integer numbers.\n   *\n   * Examples:\n   *\n   *    const b = [1, 2, 3, 4, 5]\n   *    math.subset(b, math.index([1, 2, 3]))     // returns [2, 3, 4]\n   *\n   *    const a = math.matrix([[1, 2], [3, 4]])\n   *    a.subset(math.index(0, 1))             // returns 2\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, matrix, number, string, unit\n   *\n   * @param {...*} ranges   Zero or more ranges or numbers.\n   * @return {Index}        Returns the created index\n   */\n\n  return typed(name, {\n    '...number | string | BigNumber | Range | Array | Matrix': function numberStringBigNumberRangeArrayMatrix(args) {\n      var ranges = args.map(function (arg) {\n        if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(arg)) {\n          return arg.toNumber(); // convert BigNumber to Number\n        } else if (Array.isArray(arg) || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isMatrix)(arg)) {\n          return arg.map(function (elem) {\n            // convert BigNumber to Number\n            return (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(elem) ? elem.toNumber() : elem;\n          });\n        } else {\n          return arg;\n        }\n      });\n      var res = new Index();\n      Index.apply(res, ranges);\n      return res;\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/function/index.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/function/matrix.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/function/matrix.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createMatrix\": () => (/* binding */ createMatrix)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'matrix';\nvar dependencies = ['typed', 'Matrix', 'DenseMatrix', 'SparseMatrix'];\nvar createMatrix = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Matrix,\n    DenseMatrix,\n    SparseMatrix\n  } = _ref;\n  /**\n   * Create a Matrix. The function creates a new `math.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    let m = math.matrix([[1, 2], [3, 4]])\n   *    m.size()                        // Array [2, 2]\n   *    m.resize([3, 2], 5)\n   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format, either `'dense'` or `'sparse'`\n   * @param {string} [datatype]        Type of the values\n   *\n   * @return {Matrix} The created matrix\n   */\n\n  return typed(name, {\n    '': function _() {\n      return _create([]);\n    },\n    string: function string(format) {\n      return _create([], format);\n    },\n    'string, string': function stringString(format, datatype) {\n      return _create([], format, datatype);\n    },\n    Array: function Array(data) {\n      return _create(data);\n    },\n    Matrix: function Matrix(data) {\n      return _create(data, data.storage());\n    },\n    'Array | Matrix, string': _create,\n    'Array | Matrix, string, string': _create\n  });\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n\n  function _create(data, format, datatype) {\n    // get storage format constructor\n    if (format === 'dense' || format === 'default' || format === undefined) {\n      return new DenseMatrix(data, datatype);\n    }\n\n    if (format === 'sparse') {\n      return new SparseMatrix(data, datatype);\n    }\n\n    throw new TypeError('Unknown matrix type ' + JSON.stringify(format) + '.');\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/function/matrix.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/function/sparse.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/function/sparse.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSparse\": () => (/* binding */ createSparse)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'sparse';\nvar dependencies = ['typed', 'SparseMatrix'];\nvar createSparse = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    SparseMatrix\n  } = _ref;\n  /**\n   * Create a Sparse Matrix. The function creates a new `math.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   *\n   * Syntax:\n   *\n   *    math.sparse()               // creates an empty sparse matrix.\n   *    math.sparse(data)           // creates a sparse matrix with initial data.\n   *    math.sparse(data, 'number') // creates a sparse matrix with initial data, number datatype.\n   *\n   * Examples:\n   *\n   *    let m = math.sparse([[1, 2], [3, 4]])\n   *    m.size()                        // Array [2, 2]\n   *    m.resize([3, 2], 5)\n   *    m.valueOf()                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, matrix\n   *\n   * @param {Array | Matrix} [data]    A two dimensional array\n   *\n   * @return {Matrix} The created matrix\n   */\n\n  return typed(name, {\n    '': function _() {\n      return new SparseMatrix([]);\n    },\n    string: function string(datatype) {\n      return new SparseMatrix([], datatype);\n    },\n    'Array | Matrix': function ArrayMatrix(data) {\n      return new SparseMatrix(data);\n    },\n    'Array | Matrix, string': function ArrayMatrixString(data, datatype) {\n      return new SparseMatrix(data, datatype);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/function/sparse.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm01\": () => (/* binding */ createAlgorithm01)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm01';\nvar dependencies = ['typed'];\nvar createAlgorithm01 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n\n  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // process data types\n\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined; // callback function\n\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback; // vars\n\n    var i, j; // result (DenseMatrix)\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // mark i as updated\n\n        w[i] = mark;\n      } // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        } else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm01.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm02\": () => (/* binding */ createAlgorithm02)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm02';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm02 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n\n  return function algorithm02(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (SparseMatrix)\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update C(i,j)\n\n        var cij = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // check for nonzero\n\n        if (!eq(cij, zero)) {\n          // push i & v\n          cindex.push(i);\n          cvalues.push(cij);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return sparseMatrix.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm02.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm03\": () => (/* binding */ createAlgorithm03)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm03';\nvar dependencies = ['typed'];\nvar createAlgorithm03 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked M*N times.\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(Dij, 0)    ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n\n  return function algorithm03(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (DenseMatrix)\n\n\n    var cdata = []; // initialize dense matrix\n\n    for (var z = 0; z < rows; z++) {\n      // initialize row\n      cdata[z] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        w[i] = mark;\n      } // process workspace\n\n\n      for (var y = 0; y < rows; y++) {\n        // check we have a calculated value for current row\n        if (w[y] === mark) {\n          // use calculated value\n          cdata[y][j] = x[y];\n        } else {\n          // calculate value\n          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm03.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm04.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm04.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm04\": () => (/* binding */ createAlgorithm04)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm04';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm04 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0\n   *          └  B(i,j)       ; B(i,j) !== 0\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n\n  return function algorithm04(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // workspace\n\n    var xa = avalues && bvalues ? [] : undefined;\n    var xb = avalues && bvalues ? [] : undefined; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // vars\n\n    var i, j, k, k0, k1; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // columns mark\n\n      var mark = j + 1; // loop A(:,j)\n\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k]; // update c\n\n        cindex.push(i); // update workspace\n\n        wa[i] = mark; // check we need to process values\n\n        if (xa) {\n          xa[i] = avalues[k];\n        }\n      } // loop B(:,j)\n\n\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // check row exists in A\n\n        if (wa[i] === mark) {\n          // update record in xa @ i\n          if (xa) {\n            // invoke callback\n            var v = cf(xa[i], bvalues[k]); // check for zero\n\n            if (!eq(v, zero)) {\n              // update workspace\n              xa[i] = v;\n            } else {\n              // remove mark (index will be removed later)\n              wa[i] = null;\n            }\n          }\n        } else {\n          // update c\n          cindex.push(i); // update workspace\n\n          wb[i] = mark; // check we need to process values\n\n          if (xb) {\n            xb[i] = bvalues[k];\n          }\n        }\n      } // check we need to process values (non pattern matrix)\n\n\n      if (xa && xb) {\n        // initialize first index in j\n        k = cptr[j]; // loop index in j\n\n        while (k < cindex.length) {\n          // row\n          i = cindex[k]; // check workspace has value @ i\n\n          if (wa[i] === mark) {\n            // push value (Aij != 0 || (Aij != 0 && Bij != 0))\n            cvalues[k] = xa[i]; // increment pointer\n\n            k++;\n          } else if (wb[i] === mark) {\n            // push value (bij != 0)\n            cvalues[k] = xb[i]; // increment pointer\n\n            k++;\n          } else {\n            // remove index @ k\n            cindex.splice(k, 1);\n          }\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm04.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm05.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm05.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm05\": () => (/* binding */ createAlgorithm05)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm05';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm05 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 || B(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n\n  return function algorithm05(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // workspaces\n\n    var xa = cvalues ? [] : undefined;\n    var xb = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // vars\n\n    var i, j, k, k1; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // columns mark\n\n      var mark = j + 1; // loop values A(:,j)\n\n      for (k = aptr[j], k1 = aptr[j + 1]; k < k1; k++) {\n        // row\n        i = aindex[k]; // push index\n\n        cindex.push(i); // update workspace\n\n        wa[i] = mark; // check we need to process values\n\n        if (xa) {\n          xa[i] = avalues[k];\n        }\n      } // loop values B(:,j)\n\n\n      for (k = bptr[j], k1 = bptr[j + 1]; k < k1; k++) {\n        // row\n        i = bindex[k]; // check row existed in A\n\n        if (wa[i] !== mark) {\n          // push index\n          cindex.push(i);\n        } // update workspace\n\n\n        wb[i] = mark; // check we need to process values\n\n        if (xb) {\n          xb[i] = bvalues[k];\n        }\n      } // check we need to process values (non pattern matrix)\n\n\n      if (cvalues) {\n        // initialize first index in j\n        k = cptr[j]; // loop index in j\n\n        while (k < cindex.length) {\n          // row\n          i = cindex[k]; // marks\n\n          var wai = wa[i];\n          var wbi = wb[i]; // check Aij or Bij are nonzero\n\n          if (wai === mark || wbi === mark) {\n            // matrix values @ i,j\n            var va = wai === mark ? xa[i] : zero;\n            var vb = wbi === mark ? xb[i] : zero; // Cij\n\n            var vc = cf(va, vb); // check for zero\n\n            if (!eq(vc, zero)) {\n              // push value\n              cvalues.push(vc); // increment pointer\n\n              k++;\n            } else {\n              // remove value @ i, do not increment pointer\n              cindex.splice(k, 1);\n            }\n          }\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm05.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm06.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm06.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm06\": () => (/* binding */ createAlgorithm06)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\n\nvar name = 'algorithm06';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm06 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked (Anz U Bnz) times, where Anz and Bnz are the nonzero elements in both matrices.\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n\n  return function algorithm06(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // workspaces\n\n    var x = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column\n\n    var w = []; // marks indicating value in a given row has been updated\n\n    var u = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // columns mark\n\n      var mark = j + 1; // scatter the values of A(:,j) into workspace\n\n      (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.scatter)(a, j, w, x, u, mark, cindex, cf); // scatter the values of B(:,j) into workspace\n\n      (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.scatter)(b, j, w, x, u, mark, cindex, cf); // check we need to process values (non pattern matrix)\n\n      if (x) {\n        // initialize first index in j\n        var k = cptr[j]; // loop index in j\n\n        while (k < cindex.length) {\n          // row\n          var i = cindex[k]; // check function was invoked on current row (Aij !=0 && Bij != 0)\n\n          if (u[i] === mark) {\n            // value @ i\n            var v = x[i]; // check for zero value\n\n            if (!eq(v, zero)) {\n              // push value\n              cvalues.push(v); // increment pointer\n\n              k++;\n            } else {\n              // remove value @ i, do not increment pointer\n              cindex.splice(k, 1);\n            }\n          } else {\n            // remove value @ i, do not increment pointer\n            cindex.splice(k, 1);\n          }\n        }\n      } else {\n        // initialize first index in j\n        var p = cptr[j]; // loop index in j\n\n        while (p < cindex.length) {\n          // row\n          var r = cindex[p]; // check function was invoked on current row (Aij !=0 && Bij != 0)\n\n          if (u[r] !== mark) {\n            // remove value @ i, do not increment pointer\n            cindex.splice(p, 1);\n          } else {\n            // increment pointer\n            p++;\n          }\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm06.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm07\": () => (/* binding */ createAlgorithm07)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm07';\nvar dependencies = ['typed', 'DenseMatrix'];\nvar createAlgorithm07 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    DenseMatrix\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j) = f(Aij, Bij)\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n\n  return function algorithm07(a, b, callback) {\n    // sparse matrix arrays\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // vars\n\n\n    var i, j; // result arrays\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspaces\n\n\n    var xa = [];\n    var xb = []; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // scatter the values of A(:,j) into workspace\n\n      _scatter(a, j, wa, xa, mark); // scatter the values of B(:,j) into workspace\n\n\n      _scatter(b, j, wb, xb, mark); // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // matrix values @ i,j\n        var va = wa[i] === mark ? xa[i] : zero;\n        var vb = wb[i] === mark ? xb[i] : zero; // invoke callback\n\n        cdata[i][j] = cf(va, vb);\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n\n  function _scatter(m, j, w, x, mark) {\n    // a arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop values in column j\n\n    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\n      // row\n      var i = index[k]; // update workspace\n\n      w[i] = mark;\n      x[i] = values[k];\n    }\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm07.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm08.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm08.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm08\": () => (/* binding */ createAlgorithm08)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm08';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm08 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n\n  return function algorithm08(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!avalues || !bvalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrices');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // workspace\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // vars\n\n    var k, k0, k1, i; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // columns mark\n\n      var mark = j + 1; // loop values in a\n\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k]; // mark workspace\n\n        w[i] = mark; // set value\n\n        x[i] = avalues[k]; // add index\n\n        cindex.push(i);\n      } // loop values in b\n\n\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // check value exists in workspace\n\n        if (w[i] === mark) {\n          // evaluate callback\n          x[i] = cf(x[i], bvalues[k]);\n        }\n      } // initialize first index in j\n\n\n      k = cptr[j]; // loop index in j\n\n      while (k < cindex.length) {\n        // row\n        i = cindex[k]; // value @ i\n\n        var v = x[i]; // check for zero value\n\n        if (!eq(v, zero)) {\n          // push value\n          cvalues.push(v); // increment pointer\n\n          k++;\n        } else {\n          // remove value @ i, do not increment pointer\n          cindex.splice(k, 1);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm08.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm09.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm09.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm09\": () => (/* binding */ createAlgorithm09)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm09';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm09 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix A and invokes the callback function f(Aij, Bij).\n   * Callback function invoked NZA times, number of nonzero elements in A.\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n\n  return function algorithm09(a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = []; // workspaces\n\n    var x = cvalues ? [] : undefined; // marks indicating we have a value in x for a given column\n\n    var w = []; // vars\n\n    var i, j, k, k0, k1; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // column mark\n\n      var mark = j + 1; // check we need to process values\n\n      if (x) {\n        // loop B(:,j)\n        for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n          // row\n          i = bindex[k]; // update workspace\n\n          w[i] = mark;\n          x[i] = bvalues[k];\n        }\n      } // loop A(:,j)\n\n\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k]; // check we need to process values\n\n        if (x) {\n          // b value @ i,j\n          var vb = w[i] === mark ? x[i] : zero; // invoke f\n\n          var vc = cf(avalues[k], vb); // check zero value\n\n          if (!eq(vc, zero)) {\n            // push index\n            cindex.push(i); // push value\n\n            cvalues.push(vc);\n          }\n        } else {\n          // push index\n          cindex.push(i);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return a.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm09.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm10\": () => (/* binding */ createAlgorithm10)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'algorithm10';\nvar dependencies = ['typed', 'DenseMatrix'];\nvar createAlgorithm10 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    DenseMatrix\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n\n  return function algorithm10(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cdata = []; // workspaces\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k]; // update workspace\n\n        x[r] = avalues[k];\n        w[r] = mark;\n      } // loop rows\n\n\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        } // check sparse matrix has a value @ i,j\n\n\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b;\n        }\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm10.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm11\": () => (/* binding */ createAlgorithm11)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'algorithm11';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm11 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    equalScalar\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n\n  return function algorithm11(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // initialize ptr\n      cptr[j] = cindex.length; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = aindex[k]; // invoke callback\n\n        var v = inverse ? cf(b, avalues[k]) : cf(avalues[k], b); // check value is zero\n\n        if (!eq(v, zero)) {\n          // push index & value\n          cindex.push(i);\n          cvalues.push(v);\n        }\n      }\n    } // update ptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return s.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm11.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm12\": () => (/* binding */ createAlgorithm12)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'algorithm12';\nvar dependencies = ['typed', 'DenseMatrix'];\nvar createAlgorithm12 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    DenseMatrix\n  } = _ref;\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked MxN times.\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(0, b)    ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n\n  return function algorithm12(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cdata = []; // workspaces\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k]; // update workspace\n\n        x[r] = avalues[k];\n        w[r] = mark;\n      } // loop rows\n\n\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        } // check sparse matrix has a value @ i,j\n\n\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b);\n        }\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm12.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm13\": () => (/* binding */ createAlgorithm13)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n\n\nvar name = 'algorithm13';\nvar dependencies = ['typed'];\nvar createAlgorithm13 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n\n  return function algorithm13(a, b, callback) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // b arrays\n\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype; // c arrays\n\n    var csize = []; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_1__.DimensionError(asize.length, bsize.length);\n    } // validate each one of the dimension sizes\n\n\n    for (var s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s]) {\n        throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n      } // update dimension in c\n\n\n      csize[s] = asize[s];\n    } // datatype\n\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // populate cdata, iterate through dimensions\n\n\n    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : []; // c matrix\n\n    return a.createDenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    });\n  }; // recursive function\n\n  function _iterate(f, level, s, n, av, bv) {\n    // initialize array for this level\n    var cv = []; // check we reach the last level\n\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i]);\n      }\n    } else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);\n      }\n    }\n\n    return cv;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm13.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createAlgorithm14\": () => (/* binding */ createAlgorithm14)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n\n\nvar name = 'algorithm14';\nvar dependencies = ['typed'];\nvar createAlgorithm14 = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n\n  return function algorithm14(a, b, callback, inverse) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // populate cdata, iterate through dimensions\n\n\n    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : []; // c matrix\n\n    return a.createDenseMatrix({\n      data: cdata,\n      size: (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_1__.clone)(asize),\n      datatype: dt\n    });\n  }; // recursive function\n\n  function _iterate(f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    var cv = []; // check we reach the last level\n\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv);\n      }\n    } else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);\n      }\n    }\n\n    return cv;\n  }\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/matrix/utils/algorithm14.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/number.js":
/*!****************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/number.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createNumber\": () => (/* binding */ createNumber)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'number';\nvar dependencies = ['typed'];\n/**\n * Separates the radix, integer part, and fractional part of a non decimal number string\n * @param {string} input string to parse\n * @returns {object} the parts of the string or null if not a valid input\n */\n\nfunction getNonDecimalNumberParts(input) {\n  var nonDecimalWithRadixMatch = input.match(/(0[box])([0-9a-fA-F]*)\\.([0-9a-fA-F]*)/);\n\n  if (nonDecimalWithRadixMatch) {\n    var radix = {\n      '0b': 2,\n      '0o': 8,\n      '0x': 16\n    }[nonDecimalWithRadixMatch[1]];\n    var integerPart = nonDecimalWithRadixMatch[2];\n    var fractionalPart = nonDecimalWithRadixMatch[3];\n    return {\n      input,\n      radix,\n      integerPart,\n      fractionalPart\n    };\n  } else {\n    return null;\n  }\n}\n/**\n * Makes a number from a radix, and integer part, and a fractional part\n * @param {parts} [x] parts of the number string (from getNonDecimalNumberParts)\n * @returns {number} the number\n */\n\n\nfunction makeNumberFromNonDecimalParts(parts) {\n  var n = parseInt(parts.integerPart, parts.radix);\n  var f = 0;\n\n  for (var i = 0; i < parts.fractionalPart.length; i++) {\n    var digitValue = parseInt(parts.fractionalPart[i], parts.radix);\n    f += digitValue / Math.pow(parts.radix, i + 1);\n  }\n\n  var result = n + f;\n\n  if (isNaN(result)) {\n    throw new SyntaxError('String \"' + parts.input + '\" is no valid number');\n  }\n\n  return result;\n}\n\nvar createNumber = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Create a number or convert a string, boolean, or unit to a number.\n   * When value is a matrix, all elements will be converted to number.\n   *\n   * Syntax:\n   *\n   *    math.number(value)\n   *    math.number(unit, valuelessUnit)\n   *\n   * Examples:\n   *\n   *    math.number(2)                         // returns number 2\n   *    math.number('7.2')                     // returns number 7.2\n   *    math.number(true)                      // returns number 1\n   *    math.number([true, false, true, true]) // returns [1, 0, 1, 1]\n   *    math.number(math.unit('52cm'), 'm')    // returns 0.52\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, string, unit\n   *\n   * @param {string | number | BigNumber | Fraction | boolean | Array | Matrix | Unit | null} [value]  Value to be converted\n   * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number\n   * @return {number | Array | Matrix} The created number\n   */\n\n  var number = typed('number', {\n    '': function _() {\n      return 0;\n    },\n    number: function number(x) {\n      return x;\n    },\n    string: function string(x) {\n      if (x === 'NaN') return NaN;\n      var nonDecimalNumberParts = getNonDecimalNumberParts(x);\n\n      if (nonDecimalNumberParts) {\n        return makeNumberFromNonDecimalParts(nonDecimalNumberParts);\n      }\n\n      var size = 0;\n      var wordSizeSuffixMatch = x.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);\n\n      if (wordSizeSuffixMatch) {\n        // x includes a size suffix like 0xffffi32, so we extract\n        // the suffix and remove it from x\n        size = Number(wordSizeSuffixMatch[2]);\n        x = wordSizeSuffixMatch[1];\n      }\n\n      var num = Number(x);\n\n      if (isNaN(num)) {\n        throw new SyntaxError('String \"' + x + '\" is no valid number');\n      }\n\n      if (wordSizeSuffixMatch) {\n        // x is a signed bin, oct, or hex literal\n        // num is the value of string x if x is interpreted as unsigned\n        if (num > 2 ** size - 1) {\n          // literal is too large for size suffix\n          throw new SyntaxError(\"String \\\"\".concat(x, \"\\\" is out of range\"));\n        } // check if the bit at index size - 1 is set and if so do the twos complement\n\n\n        if (num >= 2 ** (size - 1)) {\n          num = num - 2 ** size;\n        }\n      }\n\n      return num;\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toNumber();\n    },\n    Fraction: function Fraction(x) {\n      return x.valueOf();\n    },\n    Unit: function Unit(x) {\n      throw new Error('Second argument with valueless unit expected');\n    },\n    null: function _null(x) {\n      return 0;\n    },\n    'Unit, string | Unit': function UnitStringUnit(unit, valuelessUnit) {\n      return unit.toNumber(valuelessUnit);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  }); // reviver function to parse a JSON object like:\n  //\n  //     {\"mathjs\":\"number\",\"value\":\"2.3\"}\n  //\n  // into a number 2.3\n\n  number.fromJSON = function (json) {\n    return parseFloat(json.value);\n  };\n\n  return number;\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/number.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/resultset/ResultSet.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/resultset/ResultSet.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createResultSet\": () => (/* binding */ createResultSet)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'ResultSet';\nvar dependencies = [];\nvar createResultSet = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, () => {\n  /**\n   * A ResultSet contains a list or results\n   * @class ResultSet\n   * @param {Array} entries\n   * @constructor ResultSet\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.entries = entries || [];\n  }\n  /**\n   * Attach type information\n   */\n\n\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n  /**\n   * Returns the array with results hold by this ResultSet\n   * @memberof ResultSet\n   * @returns {Array} entries\n   */\n\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n  /**\n   * Returns the stringified results of the ResultSet\n   * @memberof ResultSet\n   * @returns {string} string\n   */\n\n\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the ResultSet\n   * @memberof ResultSet\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   */\n\n\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n  /**\n   * Instantiate a ResultSet from a JSON object\n   * @memberof ResultSet\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   * @return {ResultSet}\n   */\n\n\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n\n  return ResultSet;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/resultset/ResultSet.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/string.js":
/*!****************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/string.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createString\": () => (/* binding */ createString)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n/* harmony import */ var _utils_number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\n\n\nvar name = 'string';\nvar dependencies = ['typed'];\nvar createString = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Create a string or convert any object into a string.\n   * Elements of Arrays and Matrices are processed element wise.\n   *\n   * Syntax:\n   *\n   *    math.string(value)\n   *\n   * Examples:\n   *\n   *    math.string(4.2)               // returns string '4.2'\n   *    math.string(math.complex(3, 2) // returns string '3 + 2i'\n   *\n   *    const u = math.unit(5, 'km')\n   *    math.string(u.to('m'))         // returns string '5000 m'\n   *\n   *    math.string([true, false])     // returns ['true', 'false']\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, number, unit\n   *\n   * @param {* | Array | Matrix | null} [value]  A value to convert to a string\n   * @return {string | Array | Matrix} The created string\n   */\n\n  return typed(name, {\n    '': function _() {\n      return '';\n    },\n    number: _utils_number_js__WEBPACK_IMPORTED_MODULE_1__.format,\n    null: function _null(x) {\n      return 'null';\n    },\n    boolean: function boolean(x) {\n      return x + '';\n    },\n    string: function string(x) {\n      return x;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_2__.deepMap)(x, this);\n    },\n    any: function any(x) {\n      return String(x);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/string.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/unit/Unit.js":
/*!*******************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/unit/Unit.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUnitClass\": () => (/* binding */ createUnitClass)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _utils_is_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_function_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/function.js */ \"./node_modules/mathjs/lib/esm/utils/function.js\");\n/* harmony import */ var _utils_string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _utils_object_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n/* harmony import */ var _utils_bignumber_constants_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/bignumber/constants.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/constants.js\");\n\n\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n\n\n\n\n\n\nvar name = 'Unit';\nvar dependencies = ['?on', 'config', 'addScalar', 'subtract', 'multiplyScalar', 'divideScalar', 'pow', 'abs', 'fix', 'round', 'equal', 'isNumeric', 'format', 'number', 'Complex', 'BigNumber', 'Fraction'];\nvar createUnitClass = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_2__.factory)(name, dependencies, _ref => {\n  var {\n    on,\n    config,\n    addScalar,\n    subtract,\n    multiplyScalar,\n    divideScalar,\n    pow,\n    abs,\n    fix,\n    round,\n    equal,\n    isNumeric,\n    format,\n    number,\n    Complex,\n    BigNumber: _BigNumber,\n    Fraction: _Fraction\n  } = _ref;\n  var toNumber = number;\n  /**\n   * A unit can be constructed in the following ways:\n   *\n   *     const a = new Unit(value, name)\n   *     const b = new Unit(null, name)\n   *     const c = Unit.parse(str)\n   *\n   * Example usage:\n   *\n   *     const a = new Unit(5, 'cm')               // 50 mm\n   *     const b = Unit.parse('23 kg')             // 23 kg\n   *     const c = math.in(a, new Unit(null, 'm')  // 0.05 m\n   *     const d = new Unit(9.81, \"m/s^2\")         // 9.81 m/s^2\n   *\n   * @class Unit\n   * @constructor Unit\n   * @param {number | BigNumber | Fraction | Complex | boolean} [value]  A value like 5.2\n   * @param {string} [name]   A unit name like \"cm\" or \"inch\", or a derived unit of the form: \"u1[^ex1] [u2[^ex2] ...] [/ u3[^ex3] [u4[^ex4]]]\", such as \"kg m^2/s^2\", where each unit appearing after the forward slash is taken to be in the denominator. \"kg m^2 s^-2\" is a synonym and is also acceptable. Any of the units can include a prefix.\n   */\n\n  function Unit(value, name) {\n    if (!(this instanceof Unit)) {\n      throw new Error('Constructor must be called with the new operator');\n    }\n\n    if (!(value === null || value === undefined || isNumeric(value) || (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isComplex)(value))) {\n      throw new TypeError('First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined');\n    }\n\n    if (name !== undefined && (typeof name !== 'string' || name === '')) {\n      throw new TypeError('Second parameter in Unit constructor must be a string');\n    }\n\n    if (name !== undefined) {\n      var u = Unit.parse(name);\n      this.units = u.units;\n      this.dimensions = u.dimensions;\n    } else {\n      this.units = [{\n        unit: UNIT_NONE,\n        prefix: PREFIXES.NONE,\n        // link to a list with supported prefixes\n        power: 0\n      }];\n      this.dimensions = [];\n\n      for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n        this.dimensions[i] = 0;\n      }\n    }\n\n    this.value = value !== undefined && value !== null ? this._normalize(value) : null;\n    this.fixPrefix = false; // if true, function format will not search for the\n    // best prefix but leave it as initially provided.\n    // fixPrefix is set true by the method Unit.to\n    // The justification behind this is that if the constructor is explicitly called,\n    // the caller wishes the units to be returned exactly as he supplied.\n\n    this.skipAutomaticSimplification = true;\n  }\n  /**\n   * Attach type information\n   */\n\n\n  Unit.prototype.type = 'Unit';\n  Unit.prototype.isUnit = true; // private variables and functions for the Unit parser\n\n  var text, index, c;\n\n  function skipWhitespace() {\n    while (c === ' ' || c === '\\t') {\n      next();\n    }\n  }\n\n  function isDigitDot(c) {\n    return c >= '0' && c <= '9' || c === '.';\n  }\n\n  function isDigit(c) {\n    return c >= '0' && c <= '9';\n  }\n\n  function next() {\n    index++;\n    c = text.charAt(index);\n  }\n\n  function revert(oldIndex) {\n    index = oldIndex;\n    c = text.charAt(index);\n  }\n\n  function parseNumber() {\n    var number = '';\n    var oldIndex = index;\n\n    if (c === '+') {\n      next();\n    } else if (c === '-') {\n      number += c;\n      next();\n    }\n\n    if (!isDigitDot(c)) {\n      // a + or - must be followed by a digit\n      revert(oldIndex);\n      return null;\n    } // get number, can have a single dot\n\n\n    if (c === '.') {\n      number += c;\n      next();\n\n      if (!isDigit(c)) {\n        // this is no legal number, it is just a dot\n        revert(oldIndex);\n        return null;\n      }\n    } else {\n      while (isDigit(c)) {\n        number += c;\n        next();\n      }\n\n      if (c === '.') {\n        number += c;\n        next();\n      }\n    }\n\n    while (isDigit(c)) {\n      number += c;\n      next();\n    } // check for exponential notation like \"2.3e-4\" or \"1.23e50\"\n\n\n    if (c === 'E' || c === 'e') {\n      // The grammar branches here. This could either be part of an exponent or the start of a unit that begins with the letter e, such as \"4exabytes\"\n      var tentativeNumber = '';\n      var tentativeIndex = index;\n      tentativeNumber += c;\n      next();\n\n      if (c === '+' || c === '-') {\n        tentativeNumber += c;\n        next();\n      } // Scientific notation MUST be followed by an exponent (otherwise we assume it is not scientific notation)\n\n\n      if (!isDigit(c)) {\n        // The e or E must belong to something else, so return the number without the e or E.\n        revert(tentativeIndex);\n        return number;\n      } // We can now safely say that this is scientific notation.\n\n\n      number = number + tentativeNumber;\n\n      while (isDigit(c)) {\n        number += c;\n        next();\n      }\n    }\n\n    return number;\n  }\n\n  function parseUnit() {\n    var unitName = ''; // Alphanumeric characters only; matches [a-zA-Z0-9]\n\n    while (isDigit(c) || Unit.isValidAlpha(c)) {\n      unitName += c;\n      next();\n    } // Must begin with [a-zA-Z]\n\n\n    var firstC = unitName.charAt(0);\n\n    if (Unit.isValidAlpha(firstC)) {\n      return unitName;\n    } else {\n      return null;\n    }\n  }\n\n  function parseCharacter(toFind) {\n    if (c === toFind) {\n      next();\n      return toFind;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Parse a string into a unit. The value of the unit is parsed as number,\n   * BigNumber, or Fraction depending on the math.js config setting `number`.\n   *\n   * Throws an exception if the provided string does not contain a valid unit or\n   * cannot be parsed.\n   * @memberof Unit\n   * @param {string} str        A string like \"5.2 inch\", \"4e2 cm/s^2\"\n   * @return {Unit} unit\n   */\n\n\n  Unit.parse = function (str, options) {\n    options = options || {};\n    text = str;\n    index = -1;\n    c = '';\n\n    if (typeof text !== 'string') {\n      throw new TypeError('Invalid argument in Unit.parse, string expected');\n    }\n\n    var unit = new Unit();\n    unit.units = [];\n    var powerMultiplierCurrent = 1;\n    var expectingUnit = false; // A unit should follow this pattern:\n    // [number] ...[ [*/] unit[^number] ]\n    // unit[^number] ... [ [*/] unit[^number] ]\n    // Rules:\n    // number is any floating point number.\n    // unit is any alphanumeric string beginning with an alpha. Units with names like e3 should be avoided because they look like the exponent of a floating point number!\n    // The string may optionally begin with a number.\n    // Each unit may optionally be followed by ^number.\n    // Whitespace or a forward slash is recommended between consecutive units, although the following technically is parseable:\n    //   2m^2kg/s^2\n    // it is not good form. If a unit starts with e, then it could be confused as a floating point number:\n    //   4erg\n\n    next();\n    skipWhitespace(); // Optional number at the start of the string\n\n    var valueStr = parseNumber();\n    var value = null;\n\n    if (valueStr) {\n      if (config.number === 'BigNumber') {\n        value = new _BigNumber(valueStr);\n      } else if (config.number === 'Fraction') {\n        try {\n          // not all numbers can be turned in Fractions, for example very small numbers not\n          value = new _Fraction(valueStr);\n        } catch (err) {\n          value = parseFloat(valueStr);\n        }\n      } else {\n        // number\n        value = parseFloat(valueStr);\n      }\n\n      skipWhitespace(); // Whitespace is not required here\n      // handle multiplication or division right after the value, like '1/s'\n\n      if (parseCharacter('*')) {\n        powerMultiplierCurrent = 1;\n        expectingUnit = true;\n      } else if (parseCharacter('/')) {\n        powerMultiplierCurrent = -1;\n        expectingUnit = true;\n      }\n    } // Stack to keep track of powerMultipliers applied to each parentheses group\n\n\n    var powerMultiplierStack = []; // Running product of all elements in powerMultiplierStack\n\n    var powerMultiplierStackProduct = 1;\n\n    while (true) {\n      skipWhitespace(); // Check for and consume opening parentheses, pushing powerMultiplierCurrent to the stack\n      // A '(' will always appear directly before a unit.\n\n      while (c === '(') {\n        powerMultiplierStack.push(powerMultiplierCurrent);\n        powerMultiplierStackProduct *= powerMultiplierCurrent;\n        powerMultiplierCurrent = 1;\n        next();\n        skipWhitespace();\n      } // Is there something here?\n\n\n      var uStr = void 0;\n\n      if (c) {\n        var oldC = c;\n        uStr = parseUnit();\n\n        if (uStr === null) {\n          throw new SyntaxError('Unexpected \"' + oldC + '\" in \"' + text + '\" at index ' + index.toString());\n        }\n      } else {\n        // End of input.\n        break;\n      } // Verify the unit exists and get the prefix (if any)\n\n\n      var res = _findUnit(uStr);\n\n      if (res === null) {\n        // Unit not found.\n        throw new SyntaxError('Unit \"' + uStr + '\" not found.');\n      }\n\n      var power = powerMultiplierCurrent * powerMultiplierStackProduct; // Is there a \"^ number\"?\n\n      skipWhitespace();\n\n      if (parseCharacter('^')) {\n        skipWhitespace();\n        var p = parseNumber();\n\n        if (p === null) {\n          // No valid number found for the power!\n          throw new SyntaxError('In \"' + str + '\", \"^\" must be followed by a floating-point number');\n        }\n\n        power *= p;\n      } // Add the unit to the list\n\n\n      unit.units.push({\n        unit: res.unit,\n        prefix: res.prefix,\n        power: power\n      });\n\n      for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n        unit.dimensions[i] += (res.unit.dimensions[i] || 0) * power;\n      } // Check for and consume closing parentheses, popping from the stack.\n      // A ')' will always follow a unit.\n\n\n      skipWhitespace();\n\n      while (c === ')') {\n        if (powerMultiplierStack.length === 0) {\n          throw new SyntaxError('Unmatched \")\" in \"' + text + '\" at index ' + index.toString());\n        }\n\n        powerMultiplierStackProduct /= powerMultiplierStack.pop();\n        next();\n        skipWhitespace();\n      } // \"*\" and \"/\" should mean we are expecting something to come next.\n      // Is there a forward slash? If so, negate powerMultiplierCurrent. The next unit or paren group is in the denominator.\n\n\n      expectingUnit = false;\n\n      if (parseCharacter('*')) {\n        // explicit multiplication\n        powerMultiplierCurrent = 1;\n        expectingUnit = true;\n      } else if (parseCharacter('/')) {\n        // division\n        powerMultiplierCurrent = -1;\n        expectingUnit = true;\n      } else {\n        // implicit multiplication\n        powerMultiplierCurrent = 1;\n      } // Replace the unit into the auto unit system\n\n\n      if (res.unit.base) {\n        var baseDim = res.unit.base.key;\n        UNIT_SYSTEMS.auto[baseDim] = {\n          unit: res.unit,\n          prefix: res.prefix\n        };\n      }\n    } // Has the string been entirely consumed?\n\n\n    skipWhitespace();\n\n    if (c) {\n      throw new SyntaxError('Could not parse: \"' + str + '\"');\n    } // Is there a trailing slash?\n\n\n    if (expectingUnit) {\n      throw new SyntaxError('Trailing characters: \"' + str + '\"');\n    } // Is the parentheses stack empty?\n\n\n    if (powerMultiplierStack.length !== 0) {\n      throw new SyntaxError('Unmatched \"(\" in \"' + text + '\"');\n    } // Are there any units at all?\n\n\n    if (unit.units.length === 0 && !options.allowNoUnits) {\n      throw new SyntaxError('\"' + str + '\" contains no units');\n    }\n\n    unit.value = value !== undefined ? unit._normalize(value) : null;\n    return unit;\n  };\n  /**\n   * create a copy of this unit\n   * @memberof Unit\n   * @return {Unit} Returns a cloned version of the unit\n   */\n\n\n  Unit.prototype.clone = function () {\n    var unit = new Unit();\n    unit.fixPrefix = this.fixPrefix;\n    unit.skipAutomaticSimplification = this.skipAutomaticSimplification;\n    unit.value = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.clone)(this.value);\n    unit.dimensions = this.dimensions.slice(0);\n    unit.units = [];\n\n    for (var i = 0; i < this.units.length; i++) {\n      unit.units[i] = {};\n\n      for (var p in this.units[i]) {\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(this.units[i], p)) {\n          unit.units[i][p] = this.units[i][p];\n        }\n      }\n    }\n\n    return unit;\n  };\n  /**\n   * Return whether the unit is derived (such as m/s, or cm^2, but not N)\n   * @memberof Unit\n   * @return {boolean} True if the unit is derived\n   */\n\n\n  Unit.prototype._isDerived = function () {\n    if (this.units.length === 0) {\n      return false;\n    }\n\n    return this.units.length > 1 || Math.abs(this.units[0].power - 1.0) > 1e-15;\n  };\n  /**\n   * Normalize a value, based on its currently set unit(s)\n   * @memberof Unit\n   * @param {number | BigNumber | Fraction | boolean} value\n   * @return {number | BigNumber | Fraction | boolean} normalized value\n   * @private\n   */\n\n\n  Unit.prototype._normalize = function (value) {\n    var unitValue, unitOffset, unitPower, unitPrefixValue;\n    var convert;\n\n    if (value === null || value === undefined || this.units.length === 0) {\n      return value;\n    } else if (this._isDerived()) {\n      // This is a derived unit, so do not apply offsets.\n      // For example, with J kg^-1 degC^-1 you would NOT want to apply the offset.\n      var res = value;\n      convert = Unit._getNumberConverter((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.typeOf)(value)); // convert to Fraction or BigNumber if needed\n\n      for (var i = 0; i < this.units.length; i++) {\n        unitValue = convert(this.units[i].unit.value);\n        unitPrefixValue = convert(this.units[i].prefix.value);\n        unitPower = convert(this.units[i].power);\n        res = multiplyScalar(res, pow(multiplyScalar(unitValue, unitPrefixValue), unitPower));\n      }\n\n      return res;\n    } else {\n      // This is a single unit of power 1, like kg or degC\n      convert = Unit._getNumberConverter((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.typeOf)(value)); // convert to Fraction or BigNumber if needed\n\n      unitValue = convert(this.units[0].unit.value);\n      unitOffset = convert(this.units[0].unit.offset);\n      unitPrefixValue = convert(this.units[0].prefix.value);\n      return multiplyScalar(addScalar(value, unitOffset), multiplyScalar(unitValue, unitPrefixValue));\n    }\n  };\n  /**\n   * Denormalize a value, based on its currently set unit(s)\n   * @memberof Unit\n   * @param {number} value\n   * @param {number} [prefixValue]    Optional prefix value to be used (ignored if this is a derived unit)\n   * @return {number} denormalized value\n   * @private\n   */\n\n\n  Unit.prototype._denormalize = function (value, prefixValue) {\n    var unitValue, unitOffset, unitPower, unitPrefixValue;\n    var convert;\n\n    if (value === null || value === undefined || this.units.length === 0) {\n      return value;\n    } else if (this._isDerived()) {\n      // This is a derived unit, so do not apply offsets.\n      // For example, with J kg^-1 degC^-1 you would NOT want to apply the offset.\n      // Also, prefixValue is ignored--but we will still use the prefix value stored in each unit, since kg is usually preferable to g unless the user decides otherwise.\n      var res = value;\n      convert = Unit._getNumberConverter((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.typeOf)(value)); // convert to Fraction or BigNumber if needed\n\n      for (var i = 0; i < this.units.length; i++) {\n        unitValue = convert(this.units[i].unit.value);\n        unitPrefixValue = convert(this.units[i].prefix.value);\n        unitPower = convert(this.units[i].power);\n        res = divideScalar(res, pow(multiplyScalar(unitValue, unitPrefixValue), unitPower));\n      }\n\n      return res;\n    } else {\n      // This is a single unit of power 1, like kg or degC\n      convert = Unit._getNumberConverter((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.typeOf)(value)); // convert to Fraction or BigNumber if needed\n\n      unitValue = convert(this.units[0].unit.value);\n      unitPrefixValue = convert(this.units[0].prefix.value);\n      unitOffset = convert(this.units[0].unit.offset);\n\n      if (prefixValue === undefined || prefixValue === null) {\n        return subtract(divideScalar(divideScalar(value, unitValue), unitPrefixValue), unitOffset);\n      } else {\n        return subtract(divideScalar(divideScalar(value, unitValue), prefixValue), unitOffset);\n      }\n    }\n  };\n  /**\n   * Find a unit from a string\n   * @memberof Unit\n   * @param {string} str              A string like 'cm' or 'inch'\n   * @returns {Object | null} result  When found, an object with fields unit and\n   *                                  prefix is returned. Else, null is returned.\n   * @private\n   */\n\n\n  var _findUnit = (0,_utils_function_js__WEBPACK_IMPORTED_MODULE_5__.memoize)(str => {\n    // First, match units names exactly. For example, a user could define 'mm' as 10^-4 m, which is silly, but then we would want 'mm' to match the user-defined unit.\n    if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(UNITS, str)) {\n      var unit = UNITS[str];\n      var prefix = unit.prefixes[''];\n      return {\n        unit,\n        prefix\n      };\n    }\n\n    for (var _name in UNITS) {\n      if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(UNITS, _name)) {\n        if ((0,_utils_string_js__WEBPACK_IMPORTED_MODULE_6__.endsWith)(str, _name)) {\n          var _unit = UNITS[_name];\n          var prefixLen = str.length - _name.length;\n          var prefixName = str.substring(0, prefixLen);\n\n          var _prefix = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(_unit.prefixes, prefixName) ? _unit.prefixes[prefixName] : undefined;\n\n          if (_prefix !== undefined) {\n            // store unit, prefix, and value\n            return {\n              unit: _unit,\n              prefix: _prefix\n            };\n          }\n        }\n      }\n    }\n\n    return null;\n  }, {\n    hasher: args => args[0],\n    limit: 100\n  });\n  /**\n   * Test if the given expression is a unit.\n   * The unit can have a prefix but cannot have a value.\n   * @memberof Unit\n   * @param {string} name   A string to be tested whether it is a value less unit.\n   *                        The unit can have prefix, like \"cm\"\n   * @return {boolean}      true if the given string is a unit\n   */\n\n\n  Unit.isValuelessUnit = function (name) {\n    return _findUnit(name) !== null;\n  };\n  /**\n   * check if this unit has given base unit\n   * If this unit is a derived unit, this will ALWAYS return false, since by definition base units are not derived.\n   * @memberof Unit\n   * @param {BASE_UNITS | string | undefined} base\n   */\n\n\n  Unit.prototype.hasBase = function (base) {\n    if (typeof base === 'string') {\n      base = BASE_UNITS[base];\n    }\n\n    if (!base) {\n      return false;\n    } // All dimensions must be the same\n\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      if (Math.abs((this.dimensions[i] || 0) - (base.dimensions[i] || 0)) > 1e-12) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Check if this unit has a base or bases equal to another base or bases\n   * For derived units, the exponent on each base also must match\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {boolean} true if equal base\n   */\n\n\n  Unit.prototype.equalBase = function (other) {\n    // All dimensions must be the same\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      if (Math.abs((this.dimensions[i] || 0) - (other.dimensions[i] || 0)) > 1e-12) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Check if this unit equals another unit\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {boolean} true if both units are equal\n   */\n\n\n  Unit.prototype.equals = function (other) {\n    return this.equalBase(other) && equal(this.value, other.value);\n  };\n  /**\n   * Multiply this unit with another one\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {Unit} product of this unit and the other unit\n   */\n\n\n  Unit.prototype.multiply = function (other) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) + (other.dimensions[i] || 0);\n    } // Append other's units list onto res\n\n\n    for (var _i = 0; _i < other.units.length; _i++) {\n      // Make a shallow copy of every unit\n      var inverted = _objectSpread({}, other.units[_i]);\n\n      res.units.push(inverted);\n    } // If at least one operand has a value, then the result should also have a value\n\n\n    if (this.value !== null || other.value !== null) {\n      var valThis = this.value === null ? this._normalize(1) : this.value;\n      var valOther = other.value === null ? other._normalize(1) : other.value;\n      res.value = multiplyScalar(valThis, valOther);\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Divide this unit by another one\n   * @memberof Unit\n   * @param {Unit} other\n   * @return {Unit} result of dividing this unit by the other unit\n   */\n\n\n  Unit.prototype.divide = function (other) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) - (other.dimensions[i] || 0);\n    } // Invert and append other's units list onto res\n\n\n    for (var _i2 = 0; _i2 < other.units.length; _i2++) {\n      // Make a shallow copy of every unit\n      var inverted = _objectSpread(_objectSpread({}, other.units[_i2]), {}, {\n        power: -other.units[_i2].power\n      });\n\n      res.units.push(inverted);\n    } // If at least one operand has a value, the result should have a value\n\n\n    if (this.value !== null || other.value !== null) {\n      var valThis = this.value === null ? this._normalize(1) : this.value;\n      var valOther = other.value === null ? other._normalize(1) : other.value;\n      res.value = divideScalar(valThis, valOther);\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Calculate the power of a unit\n   * @memberof Unit\n   * @param {number | Fraction | BigNumber} p\n   * @returns {Unit}      The result: this^p\n   */\n\n\n  Unit.prototype.pow = function (p) {\n    var res = this.clone();\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      // Dimensions arrays may be of different lengths. Default to 0.\n      res.dimensions[i] = (this.dimensions[i] || 0) * p;\n    } // Adjust the power of each unit in the list\n\n\n    for (var _i3 = 0; _i3 < res.units.length; _i3++) {\n      res.units[_i3].power *= p;\n    }\n\n    if (res.value !== null) {\n      res.value = pow(res.value, p); // only allow numeric output, we don't want to return a Complex number\n      // if (!isNumeric(res.value)) {\n      //  res.value = NaN\n      // }\n      // Update: Complex supported now\n    } else {\n      res.value = null;\n    }\n\n    res.skipAutomaticSimplification = false;\n    return getNumericIfUnitless(res);\n  };\n  /**\n   * Return the numeric value of this unit if it is dimensionless, has a value, and config.predictable == false; or the original unit otherwise\n   * @param {Unit} unit\n   * @returns {number | Fraction | BigNumber | Unit}  The numeric value of the unit if conditions are met, or the original unit otherwise\n   */\n\n\n  function getNumericIfUnitless(unit) {\n    if (unit.equalBase(BASE_UNITS.NONE) && unit.value !== null && !config.predictable) {\n      return unit.value;\n    } else {\n      return unit;\n    }\n  }\n  /**\n   * Calculate the absolute value of a unit\n   * @memberof Unit\n   * @param {number | Fraction | BigNumber} x\n   * @returns {Unit}      The result: |x|, absolute value of x\n   */\n\n\n  Unit.prototype.abs = function () {\n    // This gives correct, but unexpected, results for units with an offset.\n    // For example, abs(-283.15 degC) = -263.15 degC !!!\n    var ret = this.clone();\n    ret.value = ret.value !== null ? abs(ret.value) : null;\n\n    for (var i in ret.units) {\n      if (ret.units[i].unit.name === 'VA' || ret.units[i].unit.name === 'VAR') {\n        ret.units[i].unit = UNITS.W;\n      }\n    }\n\n    return ret;\n  };\n  /**\n   * Convert the unit to a specific unit name.\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit   A unit without value. Can have prefix, like \"cm\"\n   * @returns {Unit} Returns a clone of the unit with a fixed prefix and unit.\n   */\n\n\n  Unit.prototype.to = function (valuelessUnit) {\n    var other;\n    var value = this.value === null ? this._normalize(1) : this.value;\n\n    if (typeof valuelessUnit === 'string') {\n      // other = new Unit(null, valuelessUnit)\n      other = Unit.parse(valuelessUnit);\n\n      if (!this.equalBase(other)) {\n        throw new Error(\"Units do not match ('\".concat(other.toString(), \"' != '\").concat(this.toString(), \"')\"));\n      }\n\n      if (other.value !== null) {\n        throw new Error('Cannot convert to a unit with a value');\n      }\n\n      other.value = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.clone)(value);\n      other.fixPrefix = true;\n      other.skipAutomaticSimplification = true;\n      return other;\n    } else if ((0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isUnit)(valuelessUnit)) {\n      if (!this.equalBase(valuelessUnit)) {\n        throw new Error(\"Units do not match ('\".concat(valuelessUnit.toString(), \"' != '\").concat(this.toString(), \"')\"));\n      }\n\n      if (valuelessUnit.value !== null) {\n        throw new Error('Cannot convert to a unit with a value');\n      }\n\n      other = valuelessUnit.clone();\n      other.value = (0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.clone)(value);\n      other.fixPrefix = true;\n      other.skipAutomaticSimplification = true;\n      return other;\n    } else {\n      throw new Error('String or Unit expected as parameter');\n    }\n  };\n  /**\n   * Return the value of the unit when represented with given valueless unit\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit    For example 'cm' or 'inch'\n   * @return {number} Returns the unit value as number.\n   */\n  // TODO: deprecate Unit.toNumber? It's always better to use toNumeric\n\n\n  Unit.prototype.toNumber = function (valuelessUnit) {\n    return toNumber(this.toNumeric(valuelessUnit));\n  };\n  /**\n   * Return the value of the unit in the original numeric type\n   * @memberof Unit\n   * @param {string | Unit} valuelessUnit    For example 'cm' or 'inch'\n   * @return {number | BigNumber | Fraction} Returns the unit value\n   */\n\n\n  Unit.prototype.toNumeric = function (valuelessUnit) {\n    var other;\n\n    if (valuelessUnit) {\n      // Allow getting the numeric value without converting to a different unit\n      other = this.to(valuelessUnit);\n    } else {\n      other = this.clone();\n    }\n\n    if (other._isDerived() || other.units.length === 0) {\n      return other._denormalize(other.value);\n    } else {\n      return other._denormalize(other.value, other.units[0].prefix.value);\n    }\n  };\n  /**\n   * Get a string representation of the unit.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.toString = function () {\n    return this.format();\n  };\n  /**\n   * Get a JSON representation of the unit\n   * @memberof Unit\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Unit\", \"value\": 2, \"unit\": \"cm\", \"fixPrefix\": false}`\n   */\n\n\n  Unit.prototype.toJSON = function () {\n    return {\n      mathjs: 'Unit',\n      value: this._denormalize(this.value),\n      unit: this.formatUnits(),\n      fixPrefix: this.fixPrefix\n    };\n  };\n  /**\n   * Instantiate a Unit from a JSON object\n   * @memberof Unit\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"Unit\", \"value\": 2, \"unit\": \"cm\", \"fixPrefix\": false}`\n   * @return {Unit}\n   */\n\n\n  Unit.fromJSON = function (json) {\n    var unit = new Unit(json.value, json.unit);\n    unit.fixPrefix = json.fixPrefix || false;\n    return unit;\n  };\n  /**\n   * Returns the string representation of the unit.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.valueOf = Unit.prototype.toString;\n  /**\n   * Simplify this Unit's unit list and return a new Unit with the simplified list.\n   * The returned Unit will contain a list of the \"best\" units for formatting.\n   */\n\n  Unit.prototype.simplify = function () {\n    var ret = this.clone();\n    var proposedUnitList = []; // Search for a matching base\n\n    var matchingBase;\n\n    for (var key in currentUnitSystem) {\n      if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(currentUnitSystem, key)) {\n        if (ret.hasBase(BASE_UNITS[key])) {\n          matchingBase = key;\n          break;\n        }\n      }\n    }\n\n    if (matchingBase === 'NONE') {\n      ret.units = [];\n    } else {\n      var matchingUnit;\n\n      if (matchingBase) {\n        // Does the unit system have a matching unit?\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(currentUnitSystem, matchingBase)) {\n          matchingUnit = currentUnitSystem[matchingBase];\n        }\n      }\n\n      if (matchingUnit) {\n        ret.units = [{\n          unit: matchingUnit.unit,\n          prefix: matchingUnit.prefix,\n          power: 1.0\n        }];\n      } else {\n        // Multiple units or units with powers are formatted like this:\n        // 5 (kg m^2) / (s^3 mol)\n        // Build an representation from the base units of the current unit system\n        var missingBaseDim = false;\n\n        for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n          var baseDim = BASE_DIMENSIONS[i];\n\n          if (Math.abs(ret.dimensions[i] || 0) > 1e-12) {\n            if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(currentUnitSystem, baseDim)) {\n              proposedUnitList.push({\n                unit: currentUnitSystem[baseDim].unit,\n                prefix: currentUnitSystem[baseDim].prefix,\n                power: ret.dimensions[i] || 0\n              });\n            } else {\n              missingBaseDim = true;\n            }\n          }\n        } // Is the proposed unit list \"simpler\" than the existing one?\n\n\n        if (proposedUnitList.length < ret.units.length && !missingBaseDim) {\n          // Replace this unit list with the proposed list\n          ret.units = proposedUnitList;\n        }\n      }\n    }\n\n    return ret;\n  };\n  /**\n   * Returns a new Unit in the SI system with the same value as this one\n   */\n\n\n  Unit.prototype.toSI = function () {\n    var ret = this.clone();\n    var proposedUnitList = []; // Multiple units or units with powers are formatted like this:\n    // 5 (kg m^2) / (s^3 mol)\n    // Build an representation from the base units of the SI unit system\n\n    for (var i = 0; i < BASE_DIMENSIONS.length; i++) {\n      var baseDim = BASE_DIMENSIONS[i];\n\n      if (Math.abs(ret.dimensions[i] || 0) > 1e-12) {\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(UNIT_SYSTEMS.si, baseDim)) {\n          proposedUnitList.push({\n            unit: UNIT_SYSTEMS.si[baseDim].unit,\n            prefix: UNIT_SYSTEMS.si[baseDim].prefix,\n            power: ret.dimensions[i] || 0\n          });\n        } else {\n          throw new Error('Cannot express custom unit ' + baseDim + ' in SI units');\n        }\n      }\n    } // Replace this unit list with the proposed list\n\n\n    ret.units = proposedUnitList;\n    ret.fixPrefix = true;\n    ret.skipAutomaticSimplification = true;\n    return ret;\n  };\n  /**\n   * Get a string representation of the units of this Unit, without the value. The unit list is formatted as-is without first being simplified.\n   * @memberof Unit\n   * @return {string}\n   */\n\n\n  Unit.prototype.formatUnits = function () {\n    var strNum = '';\n    var strDen = '';\n    var nNum = 0;\n    var nDen = 0;\n\n    for (var i = 0; i < this.units.length; i++) {\n      if (this.units[i].power > 0) {\n        nNum++;\n        strNum += ' ' + this.units[i].prefix.name + this.units[i].unit.name;\n\n        if (Math.abs(this.units[i].power - 1.0) > 1e-15) {\n          strNum += '^' + this.units[i].power;\n        }\n      } else if (this.units[i].power < 0) {\n        nDen++;\n      }\n    }\n\n    if (nDen > 0) {\n      for (var _i4 = 0; _i4 < this.units.length; _i4++) {\n        if (this.units[_i4].power < 0) {\n          if (nNum > 0) {\n            strDen += ' ' + this.units[_i4].prefix.name + this.units[_i4].unit.name;\n\n            if (Math.abs(this.units[_i4].power + 1.0) > 1e-15) {\n              strDen += '^' + -this.units[_i4].power;\n            }\n          } else {\n            strDen += ' ' + this.units[_i4].prefix.name + this.units[_i4].unit.name;\n            strDen += '^' + this.units[_i4].power;\n          }\n        }\n      }\n    } // Remove leading \" \"\n\n\n    strNum = strNum.substr(1);\n    strDen = strDen.substr(1); // Add parans for better copy/paste back into evaluate, for example, or for better pretty print formatting\n\n    if (nNum > 1 && nDen > 0) {\n      strNum = '(' + strNum + ')';\n    }\n\n    if (nDen > 1 && nNum > 0) {\n      strDen = '(' + strDen + ')';\n    }\n\n    var str = strNum;\n\n    if (nNum > 0 && nDen > 0) {\n      str += ' / ';\n    }\n\n    str += strDen;\n    return str;\n  };\n  /**\n   * Get a string representation of the Unit, with optional formatting options.\n   * @memberof Unit\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @return {string}\n   */\n\n\n  Unit.prototype.format = function (options) {\n    // Simplfy the unit list, unless it is valueless or was created directly in the\n    // constructor or as the result of to or toSI\n    var simp = this.skipAutomaticSimplification || this.value === null ? this.clone() : this.simplify(); // Apply some custom logic for handling VA and VAR. The goal is to express the value of the unit as a real value, if possible. Otherwise, use a real-valued unit instead of a complex-valued one.\n\n    var isImaginary = false;\n\n    if (typeof simp.value !== 'undefined' && simp.value !== null && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isComplex)(simp.value)) {\n      // TODO: Make this better, for example, use relative magnitude of re and im rather than absolute\n      isImaginary = Math.abs(simp.value.re) < 1e-14;\n    }\n\n    for (var i in simp.units) {\n      if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(simp.units, i)) {\n        if (simp.units[i].unit) {\n          if (simp.units[i].unit.name === 'VA' && isImaginary) {\n            simp.units[i].unit = UNITS.VAR;\n          } else if (simp.units[i].unit.name === 'VAR' && !isImaginary) {\n            simp.units[i].unit = UNITS.VA;\n          }\n        }\n      }\n    } // Now apply the best prefix\n    // Units must have only one unit and not have the fixPrefix flag set\n\n\n    if (simp.units.length === 1 && !simp.fixPrefix) {\n      // Units must have integer powers, otherwise the prefix will change the\n      // outputted value by not-an-integer-power-of-ten\n      if (Math.abs(simp.units[0].power - Math.round(simp.units[0].power)) < 1e-14) {\n        // Apply the best prefix\n        simp.units[0].prefix = simp._bestPrefix();\n      }\n    }\n\n    var value = simp._denormalize(simp.value);\n\n    var str = simp.value !== null ? format(value, options || {}) : '';\n    var unitStr = simp.formatUnits();\n\n    if (simp.value && (0,_utils_is_js__WEBPACK_IMPORTED_MODULE_3__.isComplex)(simp.value)) {\n      str = '(' + str + ')'; // Surround complex values with ( ) to enable better parsing\n    }\n\n    if (unitStr.length > 0 && str.length > 0) {\n      str += ' ';\n    }\n\n    str += unitStr;\n    return str;\n  };\n  /**\n   * Calculate the best prefix using current value.\n   * @memberof Unit\n   * @returns {Object} prefix\n   * @private\n   */\n\n\n  Unit.prototype._bestPrefix = function () {\n    if (this.units.length !== 1) {\n      throw new Error('Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!');\n    }\n\n    if (Math.abs(this.units[0].power - Math.round(this.units[0].power)) >= 1e-14) {\n      throw new Error('Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!');\n    } // find the best prefix value (resulting in the value of which\n    // the absolute value of the log10 is closest to zero,\n    // though with a little offset of 1.2 for nicer values: you get a\n    // sequence 1mm 100mm 500mm 0.6m 1m 10m 100m 500m 0.6km 1km ...\n    // Note: the units value can be any numeric type, but to find the best\n    // prefix it's enough to work with limited precision of a regular number\n    // Update: using mathjs abs since we also allow complex numbers\n\n\n    var absValue = this.value !== null ? abs(this.value) : 0;\n    var absUnitValue = abs(this.units[0].unit.value);\n    var bestPrefix = this.units[0].prefix;\n\n    if (absValue === 0) {\n      return bestPrefix;\n    }\n\n    var power = this.units[0].power;\n    var bestDiff = Math.log(absValue / Math.pow(bestPrefix.value * absUnitValue, power)) / Math.LN10 - 1.2;\n    if (bestDiff > -2.200001 && bestDiff < 1.800001) return bestPrefix; // Allow the original prefix\n\n    bestDiff = Math.abs(bestDiff);\n    var prefixes = this.units[0].unit.prefixes;\n\n    for (var p in prefixes) {\n      if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(prefixes, p)) {\n        var prefix = prefixes[p];\n\n        if (prefix.scientific) {\n          var diff = Math.abs(Math.log(absValue / Math.pow(prefix.value * absUnitValue, power)) / Math.LN10 - 1.2);\n\n          if (diff < bestDiff || diff === bestDiff && prefix.name.length < bestPrefix.name.length) {\n            // choose the prefix with the smallest diff, or if equal, choose the one\n            // with the shortest name (can happen with SHORTLONG for example)\n            bestPrefix = prefix;\n            bestDiff = diff;\n          }\n        }\n      }\n    }\n\n    return bestPrefix;\n  };\n  /**\n   * Returns an array of units whose sum is equal to this unit\n   * @memberof Unit\n   * @param {Array} [parts] An array of strings or valueless units.\n   *\n   *   Example:\n   *\n   *   const u = new Unit(1, 'm')\n   *   u.splitUnit(['feet', 'inch'])\n   *     [ 3 feet, 3.3700787401575 inch ]\n   *\n   * @return {Array} An array of units.\n   */\n\n\n  Unit.prototype.splitUnit = function (parts) {\n    var x = this.clone();\n    var ret = [];\n\n    for (var i = 0; i < parts.length; i++) {\n      // Convert x to the requested unit\n      x = x.to(parts[i]);\n      if (i === parts.length - 1) break; // Get the numeric value of this unit\n\n      var xNumeric = x.toNumeric(); // Check to see if xNumeric is nearly equal to an integer,\n      // since fix can incorrectly round down if there is round-off error\n\n      var xRounded = round(xNumeric);\n      var xFixed = void 0;\n      var isNearlyEqual = equal(xRounded, xNumeric);\n\n      if (isNearlyEqual) {\n        xFixed = xRounded;\n      } else {\n        xFixed = fix(x.toNumeric());\n      }\n\n      var y = new Unit(xFixed, parts[i].toString());\n      ret.push(y);\n      x = subtract(x, y);\n    } // This little bit fixes a bug where the remainder should be 0 but is a little bit off.\n    // But instead of comparing x, the remainder, with zero--we will compare the sum of\n    // all the parts so far with the original value. If they are nearly equal,\n    // we set the remainder to 0.\n\n\n    var testSum = 0;\n\n    for (var _i5 = 0; _i5 < ret.length; _i5++) {\n      testSum = addScalar(testSum, ret[_i5].value);\n    }\n\n    if (equal(testSum, this.value)) {\n      x.value = 0;\n    }\n\n    ret.push(x);\n    return ret;\n  };\n\n  var PREFIXES = {\n    NONE: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      }\n    },\n    SHORT: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e1,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e2,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e3,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e6,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e9,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e12,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e15,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e18,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e21,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e24,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-1,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-2,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-3,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-6,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-9,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-12,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-15,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-18,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-21,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-24,\n        scientific: true\n      }\n    },\n    LONG: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      deca: {\n        name: 'deca',\n        value: 1e1,\n        scientific: false\n      },\n      hecto: {\n        name: 'hecto',\n        value: 1e2,\n        scientific: false\n      },\n      kilo: {\n        name: 'kilo',\n        value: 1e3,\n        scientific: true\n      },\n      mega: {\n        name: 'mega',\n        value: 1e6,\n        scientific: true\n      },\n      giga: {\n        name: 'giga',\n        value: 1e9,\n        scientific: true\n      },\n      tera: {\n        name: 'tera',\n        value: 1e12,\n        scientific: true\n      },\n      peta: {\n        name: 'peta',\n        value: 1e15,\n        scientific: true\n      },\n      exa: {\n        name: 'exa',\n        value: 1e18,\n        scientific: true\n      },\n      zetta: {\n        name: 'zetta',\n        value: 1e21,\n        scientific: true\n      },\n      yotta: {\n        name: 'yotta',\n        value: 1e24,\n        scientific: true\n      },\n      deci: {\n        name: 'deci',\n        value: 1e-1,\n        scientific: false\n      },\n      centi: {\n        name: 'centi',\n        value: 1e-2,\n        scientific: false\n      },\n      milli: {\n        name: 'milli',\n        value: 1e-3,\n        scientific: true\n      },\n      micro: {\n        name: 'micro',\n        value: 1e-6,\n        scientific: true\n      },\n      nano: {\n        name: 'nano',\n        value: 1e-9,\n        scientific: true\n      },\n      pico: {\n        name: 'pico',\n        value: 1e-12,\n        scientific: true\n      },\n      femto: {\n        name: 'femto',\n        value: 1e-15,\n        scientific: true\n      },\n      atto: {\n        name: 'atto',\n        value: 1e-18,\n        scientific: true\n      },\n      zepto: {\n        name: 'zepto',\n        value: 1e-21,\n        scientific: true\n      },\n      yocto: {\n        name: 'yocto',\n        value: 1e-24,\n        scientific: true\n      }\n    },\n    SQUARED: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e2,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e4,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e6,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e12,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e18,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e24,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e30,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e36,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e42,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e48,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-2,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-4,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-6,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-12,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-18,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-24,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-30,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-36,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-42,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-48,\n        scientific: true\n      }\n    },\n    CUBIC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      da: {\n        name: 'da',\n        value: 1e3,\n        scientific: false\n      },\n      h: {\n        name: 'h',\n        value: 1e6,\n        scientific: false\n      },\n      k: {\n        name: 'k',\n        value: 1e9,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e18,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e27,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e36,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e45,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e54,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e63,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e72,\n        scientific: true\n      },\n      d: {\n        name: 'd',\n        value: 1e-3,\n        scientific: false\n      },\n      c: {\n        name: 'c',\n        value: 1e-6,\n        scientific: false\n      },\n      m: {\n        name: 'm',\n        value: 1e-9,\n        scientific: true\n      },\n      u: {\n        name: 'u',\n        value: 1e-18,\n        scientific: true\n      },\n      n: {\n        name: 'n',\n        value: 1e-27,\n        scientific: true\n      },\n      p: {\n        name: 'p',\n        value: 1e-36,\n        scientific: true\n      },\n      f: {\n        name: 'f',\n        value: 1e-45,\n        scientific: true\n      },\n      a: {\n        name: 'a',\n        value: 1e-54,\n        scientific: true\n      },\n      z: {\n        name: 'z',\n        value: 1e-63,\n        scientific: true\n      },\n      y: {\n        name: 'y',\n        value: 1e-72,\n        scientific: true\n      }\n    },\n    BINARY_SHORT_SI: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      k: {\n        name: 'k',\n        value: 1e3,\n        scientific: true\n      },\n      M: {\n        name: 'M',\n        value: 1e6,\n        scientific: true\n      },\n      G: {\n        name: 'G',\n        value: 1e9,\n        scientific: true\n      },\n      T: {\n        name: 'T',\n        value: 1e12,\n        scientific: true\n      },\n      P: {\n        name: 'P',\n        value: 1e15,\n        scientific: true\n      },\n      E: {\n        name: 'E',\n        value: 1e18,\n        scientific: true\n      },\n      Z: {\n        name: 'Z',\n        value: 1e21,\n        scientific: true\n      },\n      Y: {\n        name: 'Y',\n        value: 1e24,\n        scientific: true\n      }\n    },\n    BINARY_SHORT_IEC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      Ki: {\n        name: 'Ki',\n        value: 1024,\n        scientific: true\n      },\n      Mi: {\n        name: 'Mi',\n        value: Math.pow(1024, 2),\n        scientific: true\n      },\n      Gi: {\n        name: 'Gi',\n        value: Math.pow(1024, 3),\n        scientific: true\n      },\n      Ti: {\n        name: 'Ti',\n        value: Math.pow(1024, 4),\n        scientific: true\n      },\n      Pi: {\n        name: 'Pi',\n        value: Math.pow(1024, 5),\n        scientific: true\n      },\n      Ei: {\n        name: 'Ei',\n        value: Math.pow(1024, 6),\n        scientific: true\n      },\n      Zi: {\n        name: 'Zi',\n        value: Math.pow(1024, 7),\n        scientific: true\n      },\n      Yi: {\n        name: 'Yi',\n        value: Math.pow(1024, 8),\n        scientific: true\n      }\n    },\n    BINARY_LONG_SI: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      kilo: {\n        name: 'kilo',\n        value: 1e3,\n        scientific: true\n      },\n      mega: {\n        name: 'mega',\n        value: 1e6,\n        scientific: true\n      },\n      giga: {\n        name: 'giga',\n        value: 1e9,\n        scientific: true\n      },\n      tera: {\n        name: 'tera',\n        value: 1e12,\n        scientific: true\n      },\n      peta: {\n        name: 'peta',\n        value: 1e15,\n        scientific: true\n      },\n      exa: {\n        name: 'exa',\n        value: 1e18,\n        scientific: true\n      },\n      zetta: {\n        name: 'zetta',\n        value: 1e21,\n        scientific: true\n      },\n      yotta: {\n        name: 'yotta',\n        value: 1e24,\n        scientific: true\n      }\n    },\n    BINARY_LONG_IEC: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      kibi: {\n        name: 'kibi',\n        value: 1024,\n        scientific: true\n      },\n      mebi: {\n        name: 'mebi',\n        value: Math.pow(1024, 2),\n        scientific: true\n      },\n      gibi: {\n        name: 'gibi',\n        value: Math.pow(1024, 3),\n        scientific: true\n      },\n      tebi: {\n        name: 'tebi',\n        value: Math.pow(1024, 4),\n        scientific: true\n      },\n      pebi: {\n        name: 'pebi',\n        value: Math.pow(1024, 5),\n        scientific: true\n      },\n      exi: {\n        name: 'exi',\n        value: Math.pow(1024, 6),\n        scientific: true\n      },\n      zebi: {\n        name: 'zebi',\n        value: Math.pow(1024, 7),\n        scientific: true\n      },\n      yobi: {\n        name: 'yobi',\n        value: Math.pow(1024, 8),\n        scientific: true\n      }\n    },\n    BTU: {\n      '': {\n        name: '',\n        value: 1,\n        scientific: true\n      },\n      MM: {\n        name: 'MM',\n        value: 1e6,\n        scientific: true\n      }\n    }\n  };\n  PREFIXES.SHORTLONG = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, PREFIXES.SHORT, PREFIXES.LONG);\n  PREFIXES.BINARY_SHORT = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, PREFIXES.BINARY_SHORT_SI, PREFIXES.BINARY_SHORT_IEC);\n  PREFIXES.BINARY_LONG = (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__.default)({}, PREFIXES.BINARY_LONG_SI, PREFIXES.BINARY_LONG_IEC);\n  /* Internally, each unit is represented by a value and a dimension array. The elements of the dimensions array have the following meaning:\n   * Index  Dimension\n   * -----  ---------\n   *   0    Length\n   *   1    Mass\n   *   2    Time\n   *   3    Current\n   *   4    Temperature\n   *   5    Luminous intensity\n   *   6    Amount of substance\n   *   7    Angle\n   *   8    Bit (digital)\n   * For example, the unit \"298.15 K\" is a pure temperature and would have a value of 298.15 and a dimension array of [0, 0, 0, 0, 1, 0, 0, 0, 0]. The unit \"1 cal / (gm °C)\" can be written in terms of the 9 fundamental dimensions as [length^2] / ([time^2] * [temperature]), and would a value of (after conversion to SI) 4184.0 and a dimensions array of [2, 0, -2, 0, -1, 0, 0, 0, 0].\n   *\n   */\n\n  var BASE_DIMENSIONS = ['MASS', 'LENGTH', 'TIME', 'CURRENT', 'TEMPERATURE', 'LUMINOUS_INTENSITY', 'AMOUNT_OF_SUBSTANCE', 'ANGLE', 'BIT'];\n  var BASE_UNITS = {\n    NONE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    MASS: {\n      dimensions: [1, 0, 0, 0, 0, 0, 0, 0, 0]\n    },\n    LENGTH: {\n      dimensions: [0, 1, 0, 0, 0, 0, 0, 0, 0]\n    },\n    TIME: {\n      dimensions: [0, 0, 1, 0, 0, 0, 0, 0, 0]\n    },\n    CURRENT: {\n      dimensions: [0, 0, 0, 1, 0, 0, 0, 0, 0]\n    },\n    TEMPERATURE: {\n      dimensions: [0, 0, 0, 0, 1, 0, 0, 0, 0]\n    },\n    LUMINOUS_INTENSITY: {\n      dimensions: [0, 0, 0, 0, 0, 1, 0, 0, 0]\n    },\n    AMOUNT_OF_SUBSTANCE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 1, 0, 0]\n    },\n    FORCE: {\n      dimensions: [1, 1, -2, 0, 0, 0, 0, 0, 0]\n    },\n    SURFACE: {\n      dimensions: [0, 2, 0, 0, 0, 0, 0, 0, 0]\n    },\n    VOLUME: {\n      dimensions: [0, 3, 0, 0, 0, 0, 0, 0, 0]\n    },\n    ENERGY: {\n      dimensions: [1, 2, -2, 0, 0, 0, 0, 0, 0]\n    },\n    POWER: {\n      dimensions: [1, 2, -3, 0, 0, 0, 0, 0, 0]\n    },\n    PRESSURE: {\n      dimensions: [1, -1, -2, 0, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CHARGE: {\n      dimensions: [0, 0, 1, 1, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CAPACITANCE: {\n      dimensions: [-1, -2, 4, 2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_POTENTIAL: {\n      dimensions: [1, 2, -3, -1, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_RESISTANCE: {\n      dimensions: [1, 2, -3, -2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_INDUCTANCE: {\n      dimensions: [1, 2, -2, -2, 0, 0, 0, 0, 0]\n    },\n    ELECTRIC_CONDUCTANCE: {\n      dimensions: [-1, -2, 3, 2, 0, 0, 0, 0, 0]\n    },\n    MAGNETIC_FLUX: {\n      dimensions: [1, 2, -2, -1, 0, 0, 0, 0, 0]\n    },\n    MAGNETIC_FLUX_DENSITY: {\n      dimensions: [1, 0, -2, -1, 0, 0, 0, 0, 0]\n    },\n    FREQUENCY: {\n      dimensions: [0, 0, -1, 0, 0, 0, 0, 0, 0]\n    },\n    ANGLE: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 1, 0]\n    },\n    BIT: {\n      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 1]\n    }\n  };\n\n  for (var key in BASE_UNITS) {\n    if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(BASE_UNITS, key)) {\n      BASE_UNITS[key].key = key;\n    }\n  }\n\n  var BASE_UNIT_NONE = {};\n  var UNIT_NONE = {\n    name: '',\n    base: BASE_UNIT_NONE,\n    value: 1,\n    offset: 0,\n    dimensions: BASE_DIMENSIONS.map(x => 0)\n  };\n  var UNITS = {\n    // length\n    meter: {\n      name: 'meter',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    inch: {\n      name: 'inch',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0254,\n      offset: 0\n    },\n    foot: {\n      name: 'foot',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.3048,\n      offset: 0\n    },\n    yard: {\n      name: 'yard',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.9144,\n      offset: 0\n    },\n    mile: {\n      name: 'mile',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1609.344,\n      offset: 0\n    },\n    link: {\n      name: 'link',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.201168,\n      offset: 0\n    },\n    rod: {\n      name: 'rod',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 5.0292,\n      offset: 0\n    },\n    chain: {\n      name: 'chain',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 20.1168,\n      offset: 0\n    },\n    angstrom: {\n      name: 'angstrom',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1e-10,\n      offset: 0\n    },\n    m: {\n      name: 'm',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    in: {\n      name: 'in',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0254,\n      offset: 0\n    },\n    ft: {\n      name: 'ft',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.3048,\n      offset: 0\n    },\n    yd: {\n      name: 'yd',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.9144,\n      offset: 0\n    },\n    mi: {\n      name: 'mi',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 1609.344,\n      offset: 0\n    },\n    li: {\n      name: 'li',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.201168,\n      offset: 0\n    },\n    rd: {\n      name: 'rd',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 5.029210,\n      offset: 0\n    },\n    ch: {\n      name: 'ch',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 20.1168,\n      offset: 0\n    },\n    mil: {\n      name: 'mil',\n      base: BASE_UNITS.LENGTH,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000254,\n      offset: 0\n    },\n    // 1/1000 inch\n    // Surface\n    m2: {\n      name: 'm2',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.SQUARED,\n      value: 1,\n      offset: 0\n    },\n    sqin: {\n      name: 'sqin',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.00064516,\n      offset: 0\n    },\n    // 645.16 mm2\n    sqft: {\n      name: 'sqft',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.09290304,\n      offset: 0\n    },\n    // 0.09290304 m2\n    sqyd: {\n      name: 'sqyd',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 0.83612736,\n      offset: 0\n    },\n    // 0.83612736 m2\n    sqmi: {\n      name: 'sqmi',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 2589988.110336,\n      offset: 0\n    },\n    // 2.589988110336 km2\n    sqrd: {\n      name: 'sqrd',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 25.29295,\n      offset: 0\n    },\n    // 25.29295 m2\n    sqch: {\n      name: 'sqch',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 404.6873,\n      offset: 0\n    },\n    // 404.6873 m2\n    sqmil: {\n      name: 'sqmil',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 6.4516e-10,\n      offset: 0\n    },\n    // 6.4516 * 10^-10 m2\n    acre: {\n      name: 'acre',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 4046.86,\n      offset: 0\n    },\n    // 4046.86 m2\n    hectare: {\n      name: 'hectare',\n      base: BASE_UNITS.SURFACE,\n      prefixes: PREFIXES.NONE,\n      value: 10000,\n      offset: 0\n    },\n    // 10000 m2\n    // Volume\n    m3: {\n      name: 'm3',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.CUBIC,\n      value: 1,\n      offset: 0\n    },\n    L: {\n      name: 'L',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    // litre\n    l: {\n      name: 'l',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    // litre\n    litre: {\n      name: 'litre',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.LONG,\n      value: 0.001,\n      offset: 0\n    },\n    cuin: {\n      name: 'cuin',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 1.6387064e-5,\n      offset: 0\n    },\n    // 1.6387064e-5 m3\n    cuft: {\n      name: 'cuft',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.028316846592,\n      offset: 0\n    },\n    // 28.316 846 592 L\n    cuyd: {\n      name: 'cuyd',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.764554857984,\n      offset: 0\n    },\n    // 764.554 857 984 L\n    teaspoon: {\n      name: 'teaspoon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.000005,\n      offset: 0\n    },\n    // 5 mL\n    tablespoon: {\n      name: 'tablespoon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.000015,\n      offset: 0\n    },\n    // 15 mL\n    // {name: 'cup', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.000240, offset: 0}, // 240 mL  // not possible, we have already another cup\n    drop: {\n      name: 'drop',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 5e-8,\n      offset: 0\n    },\n    // 0.05 mL = 5e-8 m3\n    gtt: {\n      name: 'gtt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 5e-8,\n      offset: 0\n    },\n    // 0.05 mL = 5e-8 m3\n    // Liquid volume\n    minim: {\n      name: 'minim',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00000006161152,\n      offset: 0\n    },\n    // 0.06161152 mL\n    fluiddram: {\n      name: 'fluiddram',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000036966911,\n      offset: 0\n    },\n    // 3.696691 mL\n    fluidounce: {\n      name: 'fluidounce',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00002957353,\n      offset: 0\n    },\n    // 29.57353 mL\n    gill: {\n      name: 'gill',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0001182941,\n      offset: 0\n    },\n    // 118.2941 mL\n    cc: {\n      name: 'cc',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 1e-6,\n      offset: 0\n    },\n    // 1e-6 L\n    cup: {\n      name: 'cup',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0002365882,\n      offset: 0\n    },\n    // 236.5882 mL\n    pint: {\n      name: 'pint',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0004731765,\n      offset: 0\n    },\n    // 473.1765 mL\n    quart: {\n      name: 'quart',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0009463529,\n      offset: 0\n    },\n    // 946.3529 mL\n    gallon: {\n      name: 'gallon',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.003785412,\n      offset: 0\n    },\n    // 3.785412 L\n    beerbarrel: {\n      name: 'beerbarrel',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1173478,\n      offset: 0\n    },\n    // 117.3478 L\n    oilbarrel: {\n      name: 'oilbarrel',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1589873,\n      offset: 0\n    },\n    // 158.9873 L\n    hogshead: {\n      name: 'hogshead',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.2384810,\n      offset: 0\n    },\n    // 238.4810 L\n    // {name: 'min', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00000006161152, offset: 0}, // 0.06161152 mL // min is already in use as minute\n    fldr: {\n      name: 'fldr',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0000036966911,\n      offset: 0\n    },\n    // 3.696691 mL\n    floz: {\n      name: 'floz',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.00002957353,\n      offset: 0\n    },\n    // 29.57353 mL\n    gi: {\n      name: 'gi',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0001182941,\n      offset: 0\n    },\n    // 118.2941 mL\n    cp: {\n      name: 'cp',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0002365882,\n      offset: 0\n    },\n    // 236.5882 mL\n    pt: {\n      name: 'pt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0004731765,\n      offset: 0\n    },\n    // 473.1765 mL\n    qt: {\n      name: 'qt',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.0009463529,\n      offset: 0\n    },\n    // 946.3529 mL\n    gal: {\n      name: 'gal',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.003785412,\n      offset: 0\n    },\n    // 3.785412 L\n    bbl: {\n      name: 'bbl',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1173478,\n      offset: 0\n    },\n    // 117.3478 L\n    obl: {\n      name: 'obl',\n      base: BASE_UNITS.VOLUME,\n      prefixes: PREFIXES.NONE,\n      value: 0.1589873,\n      offset: 0\n    },\n    // 158.9873 L\n    // {name: 'hogshead', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.2384810, offset: 0}, // 238.4810 L // TODO: hh?\n    // Mass\n    g: {\n      name: 'g',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 0.001,\n      offset: 0\n    },\n    gram: {\n      name: 'gram',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.LONG,\n      value: 0.001,\n      offset: 0\n    },\n    ton: {\n      name: 'ton',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 907.18474,\n      offset: 0\n    },\n    t: {\n      name: 't',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.SHORT,\n      value: 1000,\n      offset: 0\n    },\n    tonne: {\n      name: 'tonne',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.LONG,\n      value: 1000,\n      offset: 0\n    },\n    grain: {\n      name: 'grain',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 64.79891e-6,\n      offset: 0\n    },\n    dram: {\n      name: 'dram',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 1.7718451953125e-3,\n      offset: 0\n    },\n    ounce: {\n      name: 'ounce',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 28.349523125e-3,\n      offset: 0\n    },\n    poundmass: {\n      name: 'poundmass',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 453.59237e-3,\n      offset: 0\n    },\n    hundredweight: {\n      name: 'hundredweight',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 45.359237,\n      offset: 0\n    },\n    stick: {\n      name: 'stick',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 115e-3,\n      offset: 0\n    },\n    stone: {\n      name: 'stone',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 6.35029318,\n      offset: 0\n    },\n    gr: {\n      name: 'gr',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 64.79891e-6,\n      offset: 0\n    },\n    dr: {\n      name: 'dr',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 1.7718451953125e-3,\n      offset: 0\n    },\n    oz: {\n      name: 'oz',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 28.349523125e-3,\n      offset: 0\n    },\n    lbm: {\n      name: 'lbm',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 453.59237e-3,\n      offset: 0\n    },\n    cwt: {\n      name: 'cwt',\n      base: BASE_UNITS.MASS,\n      prefixes: PREFIXES.NONE,\n      value: 45.359237,\n      offset: 0\n    },\n    // Time\n    s: {\n      name: 's',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    min: {\n      name: 'min',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 60,\n      offset: 0\n    },\n    h: {\n      name: 'h',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3600,\n      offset: 0\n    },\n    second: {\n      name: 'second',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    sec: {\n      name: 'sec',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    minute: {\n      name: 'minute',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 60,\n      offset: 0\n    },\n    hour: {\n      name: 'hour',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3600,\n      offset: 0\n    },\n    day: {\n      name: 'day',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 86400,\n      offset: 0\n    },\n    week: {\n      name: 'week',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 7 * 86400,\n      offset: 0\n    },\n    month: {\n      name: 'month',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 2629800,\n      // 1/12th of Julian year\n      offset: 0\n    },\n    year: {\n      name: 'year',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 31557600,\n      // Julian year\n      offset: 0\n    },\n    decade: {\n      name: 'decade',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 315576000,\n      // Julian decade\n      offset: 0\n    },\n    century: {\n      name: 'century',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 3155760000,\n      // Julian century\n      offset: 0\n    },\n    millennium: {\n      name: 'millennium',\n      base: BASE_UNITS.TIME,\n      prefixes: PREFIXES.NONE,\n      value: 31557600000,\n      // Julian millennium\n      offset: 0\n    },\n    // Frequency\n    hertz: {\n      name: 'Hertz',\n      base: BASE_UNITS.FREQUENCY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0,\n      reciprocal: true\n    },\n    Hz: {\n      name: 'Hz',\n      base: BASE_UNITS.FREQUENCY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0,\n      reciprocal: true\n    },\n    // Angle\n    rad: {\n      name: 'rad',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    radian: {\n      name: 'radian',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // deg = rad / (2*pi) * 360 = rad / 0.017453292519943295769236907684888\n    deg: {\n      name: 'deg',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    degree: {\n      name: 'degree',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // grad = rad / (2*pi) * 400  = rad / 0.015707963267948966192313216916399\n    grad: {\n      name: 'grad',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.SHORT,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    gradian: {\n      name: 'gradian',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.LONG,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // cycle = rad / (2*pi) = rad / 6.2831853071795864769252867665793\n    cycle: {\n      name: 'cycle',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // arcsec = rad / (3600 * (360 / 2 * pi)) = rad / 0.0000048481368110953599358991410235795\n    arcsec: {\n      name: 'arcsec',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // arcmin = rad / (60 * (360 / 2 * pi)) = rad / 0.00029088820866572159615394846141477\n    arcmin: {\n      name: 'arcmin',\n      base: BASE_UNITS.ANGLE,\n      prefixes: PREFIXES.NONE,\n      value: null,\n      // will be filled in by calculateAngleValues()\n      offset: 0\n    },\n    // Electric current\n    A: {\n      name: 'A',\n      base: BASE_UNITS.CURRENT,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    ampere: {\n      name: 'ampere',\n      base: BASE_UNITS.CURRENT,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // Temperature\n    // K(C) = °C + 273.15\n    // K(F) = (°F + 459.67) / 1.8\n    // K(R) = °R / 1.8\n    K: {\n      name: 'K',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 0\n    },\n    degC: {\n      name: 'degC',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 273.15\n    },\n    degF: {\n      name: 'degF',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 459.67\n    },\n    degR: {\n      name: 'degR',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 0\n    },\n    kelvin: {\n      name: 'kelvin',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 0\n    },\n    celsius: {\n      name: 'celsius',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1,\n      offset: 273.15\n    },\n    fahrenheit: {\n      name: 'fahrenheit',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 459.67\n    },\n    rankine: {\n      name: 'rankine',\n      base: BASE_UNITS.TEMPERATURE,\n      prefixes: PREFIXES.NONE,\n      value: 1 / 1.8,\n      offset: 0\n    },\n    // amount of substance\n    mol: {\n      name: 'mol',\n      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    mole: {\n      name: 'mole',\n      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // luminous intensity\n    cd: {\n      name: 'cd',\n      base: BASE_UNITS.LUMINOUS_INTENSITY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    candela: {\n      name: 'candela',\n      base: BASE_UNITS.LUMINOUS_INTENSITY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    // TODO: units STERADIAN\n    // {name: 'sr', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n    // {name: 'steradian', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n    // Force\n    N: {\n      name: 'N',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    newton: {\n      name: 'newton',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    dyn: {\n      name: 'dyn',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.SHORT,\n      value: 0.00001,\n      offset: 0\n    },\n    dyne: {\n      name: 'dyne',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 0.00001,\n      offset: 0\n    },\n    lbf: {\n      name: 'lbf',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 4.4482216152605,\n      offset: 0\n    },\n    poundforce: {\n      name: 'poundforce',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 4.4482216152605,\n      offset: 0\n    },\n    kip: {\n      name: 'kip',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.LONG,\n      value: 4448.2216,\n      offset: 0\n    },\n    kilogramforce: {\n      name: 'kilogramforce',\n      base: BASE_UNITS.FORCE,\n      prefixes: PREFIXES.NONE,\n      value: 9.80665,\n      offset: 0\n    },\n    // Energy\n    J: {\n      name: 'J',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    joule: {\n      name: 'joule',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    erg: {\n      name: 'erg',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.NONE,\n      value: 1e-7,\n      offset: 0\n    },\n    Wh: {\n      name: 'Wh',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 3600,\n      offset: 0\n    },\n    BTU: {\n      name: 'BTU',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.BTU,\n      value: 1055.05585262,\n      offset: 0\n    },\n    eV: {\n      name: 'eV',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.SHORT,\n      value: 1.602176565e-19,\n      offset: 0\n    },\n    electronvolt: {\n      name: 'electronvolt',\n      base: BASE_UNITS.ENERGY,\n      prefixes: PREFIXES.LONG,\n      value: 1.602176565e-19,\n      offset: 0\n    },\n    // Power\n    W: {\n      name: 'W',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    watt: {\n      name: 'watt',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    hp: {\n      name: 'hp',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.NONE,\n      value: 745.6998715386,\n      offset: 0\n    },\n    // Electrical power units\n    VAR: {\n      name: 'VAR',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: Complex.I,\n      offset: 0\n    },\n    VA: {\n      name: 'VA',\n      base: BASE_UNITS.POWER,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Pressure\n    Pa: {\n      name: 'Pa',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    psi: {\n      name: 'psi',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 6894.75729276459,\n      offset: 0\n    },\n    atm: {\n      name: 'atm',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 101325,\n      offset: 0\n    },\n    bar: {\n      name: 'bar',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.SHORTLONG,\n      value: 100000,\n      offset: 0\n    },\n    torr: {\n      name: 'torr',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 133.322,\n      offset: 0\n    },\n    mmHg: {\n      name: 'mmHg',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 133.322,\n      offset: 0\n    },\n    mmH2O: {\n      name: 'mmH2O',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 9.80665,\n      offset: 0\n    },\n    cmH2O: {\n      name: 'cmH2O',\n      base: BASE_UNITS.PRESSURE,\n      prefixes: PREFIXES.NONE,\n      value: 98.0665,\n      offset: 0\n    },\n    // Electric charge\n    coulomb: {\n      name: 'coulomb',\n      base: BASE_UNITS.ELECTRIC_CHARGE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    C: {\n      name: 'C',\n      base: BASE_UNITS.ELECTRIC_CHARGE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric capacitance\n    farad: {\n      name: 'farad',\n      base: BASE_UNITS.ELECTRIC_CAPACITANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    F: {\n      name: 'F',\n      base: BASE_UNITS.ELECTRIC_CAPACITANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric potential\n    volt: {\n      name: 'volt',\n      base: BASE_UNITS.ELECTRIC_POTENTIAL,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    V: {\n      name: 'V',\n      base: BASE_UNITS.ELECTRIC_POTENTIAL,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric resistance\n    ohm: {\n      name: 'ohm',\n      base: BASE_UNITS.ELECTRIC_RESISTANCE,\n      prefixes: PREFIXES.SHORTLONG,\n      // Both Mohm and megaohm are acceptable\n      value: 1,\n      offset: 0\n    },\n\n    /*\n     * Unicode breaks in browsers if charset is not specified\n    Ω: {\n      name: 'Ω',\n      base: BASE_UNITS.ELECTRIC_RESISTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    */\n    // Electric inductance\n    henry: {\n      name: 'henry',\n      base: BASE_UNITS.ELECTRIC_INDUCTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    H: {\n      name: 'H',\n      base: BASE_UNITS.ELECTRIC_INDUCTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Electric conductance\n    siemens: {\n      name: 'siemens',\n      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    S: {\n      name: 'S',\n      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Magnetic flux\n    weber: {\n      name: 'weber',\n      base: BASE_UNITS.MAGNETIC_FLUX,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    Wb: {\n      name: 'Wb',\n      base: BASE_UNITS.MAGNETIC_FLUX,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Magnetic flux density\n    tesla: {\n      name: 'tesla',\n      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,\n      prefixes: PREFIXES.LONG,\n      value: 1,\n      offset: 0\n    },\n    T: {\n      name: 'T',\n      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,\n      prefixes: PREFIXES.SHORT,\n      value: 1,\n      offset: 0\n    },\n    // Binary\n    b: {\n      name: 'b',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_SHORT,\n      value: 1,\n      offset: 0\n    },\n    bits: {\n      name: 'bits',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_LONG,\n      value: 1,\n      offset: 0\n    },\n    B: {\n      name: 'B',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_SHORT,\n      value: 8,\n      offset: 0\n    },\n    bytes: {\n      name: 'bytes',\n      base: BASE_UNITS.BIT,\n      prefixes: PREFIXES.BINARY_LONG,\n      value: 8,\n      offset: 0\n    }\n  }; // aliases (formerly plurals)\n\n  var ALIASES = {\n    meters: 'meter',\n    inches: 'inch',\n    feet: 'foot',\n    yards: 'yard',\n    miles: 'mile',\n    links: 'link',\n    rods: 'rod',\n    chains: 'chain',\n    angstroms: 'angstrom',\n    lt: 'l',\n    litres: 'litre',\n    liter: 'litre',\n    liters: 'litre',\n    teaspoons: 'teaspoon',\n    tablespoons: 'tablespoon',\n    minims: 'minim',\n    fluiddrams: 'fluiddram',\n    fluidounces: 'fluidounce',\n    gills: 'gill',\n    cups: 'cup',\n    pints: 'pint',\n    quarts: 'quart',\n    gallons: 'gallon',\n    beerbarrels: 'beerbarrel',\n    oilbarrels: 'oilbarrel',\n    hogsheads: 'hogshead',\n    gtts: 'gtt',\n    grams: 'gram',\n    tons: 'ton',\n    tonnes: 'tonne',\n    grains: 'grain',\n    drams: 'dram',\n    ounces: 'ounce',\n    poundmasses: 'poundmass',\n    hundredweights: 'hundredweight',\n    sticks: 'stick',\n    lb: 'lbm',\n    lbs: 'lbm',\n    kips: 'kip',\n    kgf: 'kilogramforce',\n    acres: 'acre',\n    hectares: 'hectare',\n    sqfeet: 'sqft',\n    sqyard: 'sqyd',\n    sqmile: 'sqmi',\n    sqmiles: 'sqmi',\n    mmhg: 'mmHg',\n    mmh2o: 'mmH2O',\n    cmh2o: 'cmH2O',\n    seconds: 'second',\n    secs: 'second',\n    minutes: 'minute',\n    mins: 'minute',\n    hours: 'hour',\n    hr: 'hour',\n    hrs: 'hour',\n    days: 'day',\n    weeks: 'week',\n    months: 'month',\n    years: 'year',\n    decades: 'decade',\n    centuries: 'century',\n    millennia: 'millennium',\n    hertz: 'hertz',\n    radians: 'radian',\n    degrees: 'degree',\n    gradians: 'gradian',\n    cycles: 'cycle',\n    arcsecond: 'arcsec',\n    arcseconds: 'arcsec',\n    arcminute: 'arcmin',\n    arcminutes: 'arcmin',\n    BTUs: 'BTU',\n    watts: 'watt',\n    joules: 'joule',\n    amperes: 'ampere',\n    coulombs: 'coulomb',\n    volts: 'volt',\n    ohms: 'ohm',\n    farads: 'farad',\n    webers: 'weber',\n    teslas: 'tesla',\n    electronvolts: 'electronvolt',\n    moles: 'mole',\n    bit: 'bits',\n    byte: 'bytes'\n  };\n  /**\n   * Calculate the values for the angle units.\n   * Value is calculated as number or BigNumber depending on the configuration\n   * @param {{number: 'number' | 'BigNumber'}} config\n   */\n\n  function calculateAngleValues(config) {\n    if (config.number === 'BigNumber') {\n      var pi = (0,_utils_bignumber_constants_js__WEBPACK_IMPORTED_MODULE_7__.createBigNumberPi)(_BigNumber);\n      UNITS.rad.value = new _BigNumber(1);\n      UNITS.deg.value = pi.div(180); // 2 * pi / 360\n\n      UNITS.grad.value = pi.div(200); // 2 * pi / 400\n\n      UNITS.cycle.value = pi.times(2); // 2 * pi\n\n      UNITS.arcsec.value = pi.div(648000); // 2 * pi / 360 / 3600\n\n      UNITS.arcmin.value = pi.div(10800); // 2 * pi / 360 / 60\n    } else {\n      // number\n      UNITS.rad.value = 1;\n      UNITS.deg.value = Math.PI / 180; // 2 * pi / 360\n\n      UNITS.grad.value = Math.PI / 200; // 2 * pi / 400\n\n      UNITS.cycle.value = Math.PI * 2; // 2 * pi\n\n      UNITS.arcsec.value = Math.PI / 648000; // 2 * pi / 360 / 3600\n\n      UNITS.arcmin.value = Math.PI / 10800; // 2 * pi / 360 / 60\n    } // copy to the full names of the angles\n\n\n    UNITS.radian.value = UNITS.rad.value;\n    UNITS.degree.value = UNITS.deg.value;\n    UNITS.gradian.value = UNITS.grad.value;\n  } // apply the angle values now\n\n\n  calculateAngleValues(config);\n\n  if (on) {\n    // recalculate the values on change of configuration\n    on('config', function (curr, prev) {\n      if (curr.number !== prev.number) {\n        calculateAngleValues(curr);\n      }\n    });\n  }\n  /**\n   * A unit system is a set of dimensionally independent base units plus a set of derived units, formed by multiplication and division of the base units, that are by convention used with the unit system.\n   * A user perhaps could issue a command to select a preferred unit system, or use the default (see below).\n   * Auto unit system: The default unit system is updated on the fly anytime a unit is parsed. The corresponding unit in the default unit system is updated, so that answers are given in the same units the user supplies.\n   */\n\n\n  var UNIT_SYSTEMS = {\n    si: {\n      // Base units\n      NONE: {\n        unit: UNIT_NONE,\n        prefix: PREFIXES.NONE['']\n      },\n      LENGTH: {\n        unit: UNITS.m,\n        prefix: PREFIXES.SHORT['']\n      },\n      MASS: {\n        unit: UNITS.g,\n        prefix: PREFIXES.SHORT.k\n      },\n      TIME: {\n        unit: UNITS.s,\n        prefix: PREFIXES.SHORT['']\n      },\n      CURRENT: {\n        unit: UNITS.A,\n        prefix: PREFIXES.SHORT['']\n      },\n      TEMPERATURE: {\n        unit: UNITS.K,\n        prefix: PREFIXES.SHORT['']\n      },\n      LUMINOUS_INTENSITY: {\n        unit: UNITS.cd,\n        prefix: PREFIXES.SHORT['']\n      },\n      AMOUNT_OF_SUBSTANCE: {\n        unit: UNITS.mol,\n        prefix: PREFIXES.SHORT['']\n      },\n      ANGLE: {\n        unit: UNITS.rad,\n        prefix: PREFIXES.SHORT['']\n      },\n      BIT: {\n        unit: UNITS.bits,\n        prefix: PREFIXES.SHORT['']\n      },\n      // Derived units\n      FORCE: {\n        unit: UNITS.N,\n        prefix: PREFIXES.SHORT['']\n      },\n      ENERGY: {\n        unit: UNITS.J,\n        prefix: PREFIXES.SHORT['']\n      },\n      POWER: {\n        unit: UNITS.W,\n        prefix: PREFIXES.SHORT['']\n      },\n      PRESSURE: {\n        unit: UNITS.Pa,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CHARGE: {\n        unit: UNITS.C,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CAPACITANCE: {\n        unit: UNITS.F,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_POTENTIAL: {\n        unit: UNITS.V,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_RESISTANCE: {\n        unit: UNITS.ohm,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_INDUCTANCE: {\n        unit: UNITS.H,\n        prefix: PREFIXES.SHORT['']\n      },\n      ELECTRIC_CONDUCTANCE: {\n        unit: UNITS.S,\n        prefix: PREFIXES.SHORT['']\n      },\n      MAGNETIC_FLUX: {\n        unit: UNITS.Wb,\n        prefix: PREFIXES.SHORT['']\n      },\n      MAGNETIC_FLUX_DENSITY: {\n        unit: UNITS.T,\n        prefix: PREFIXES.SHORT['']\n      },\n      FREQUENCY: {\n        unit: UNITS.Hz,\n        prefix: PREFIXES.SHORT['']\n      }\n    }\n  }; // Clone to create the other unit systems\n\n  UNIT_SYSTEMS.cgs = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));\n  UNIT_SYSTEMS.cgs.LENGTH = {\n    unit: UNITS.m,\n    prefix: PREFIXES.SHORT.c\n  };\n  UNIT_SYSTEMS.cgs.MASS = {\n    unit: UNITS.g,\n    prefix: PREFIXES.SHORT['']\n  };\n  UNIT_SYSTEMS.cgs.FORCE = {\n    unit: UNITS.dyn,\n    prefix: PREFIXES.SHORT['']\n  };\n  UNIT_SYSTEMS.cgs.ENERGY = {\n    unit: UNITS.erg,\n    prefix: PREFIXES.NONE['']\n  }; // there are wholly 4 unique cgs systems for electricity and magnetism,\n  // so let's not worry about it unless somebody complains\n\n  UNIT_SYSTEMS.us = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));\n  UNIT_SYSTEMS.us.LENGTH = {\n    unit: UNITS.ft,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.MASS = {\n    unit: UNITS.lbm,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.TEMPERATURE = {\n    unit: UNITS.degF,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.FORCE = {\n    unit: UNITS.lbf,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.ENERGY = {\n    unit: UNITS.BTU,\n    prefix: PREFIXES.BTU['']\n  };\n  UNIT_SYSTEMS.us.POWER = {\n    unit: UNITS.hp,\n    prefix: PREFIXES.NONE['']\n  };\n  UNIT_SYSTEMS.us.PRESSURE = {\n    unit: UNITS.psi,\n    prefix: PREFIXES.NONE['']\n  }; // Add additional unit systems here.\n  // Choose a unit system to seed the auto unit system.\n\n  UNIT_SYSTEMS.auto = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si)); // Set the current unit system\n\n  var currentUnitSystem = UNIT_SYSTEMS.auto;\n  /**\n   * Set a unit system for formatting derived units.\n   * @param {string} [name] The name of the unit system.\n   */\n\n  Unit.setUnitSystem = function (name) {\n    if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(UNIT_SYSTEMS, name)) {\n      currentUnitSystem = UNIT_SYSTEMS[name];\n    } else {\n      throw new Error('Unit system ' + name + ' does not exist. Choices are: ' + Object.keys(UNIT_SYSTEMS).join(', '));\n    }\n  };\n  /**\n   * Return the current unit system.\n   * @return {string} The current unit system.\n   */\n\n\n  Unit.getUnitSystem = function () {\n    for (var _key in UNIT_SYSTEMS) {\n      if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(UNIT_SYSTEMS, _key)) {\n        if (UNIT_SYSTEMS[_key] === currentUnitSystem) {\n          return _key;\n        }\n      }\n    }\n  };\n  /**\n   * Converters to convert from number to an other numeric type like BigNumber\n   * or Fraction\n   */\n\n\n  Unit.typeConverters = {\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(x + ''); // stringify to prevent constructor error\n    },\n    Fraction: function Fraction(x) {\n      return new _Fraction(x);\n    },\n    Complex: function Complex(x) {\n      return x;\n    },\n    number: function number(x) {\n      return x;\n    }\n  };\n  /**\n   * Retrieve the right convertor function corresponding with the type\n   * of provided exampleValue.\n   *\n   * @param {string} type   A string 'number', 'BigNumber', or 'Fraction'\n   *                        In case of an unknown type,\n   * @return {Function}\n   */\n\n  Unit._getNumberConverter = function (type) {\n    if (!Unit.typeConverters[type]) {\n      throw new TypeError('Unsupported type \"' + type + '\"');\n    }\n\n    return Unit.typeConverters[type];\n  }; // Add dimensions to each built-in unit\n\n\n  for (var _key2 in UNITS) {\n    if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(UNITS, _key2)) {\n      var unit = UNITS[_key2];\n      unit.dimensions = unit.base.dimensions;\n    }\n  } // Create aliases\n\n\n  for (var _name2 in ALIASES) {\n    if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(ALIASES, _name2)) {\n      var _unit2 = UNITS[ALIASES[_name2]];\n      var alias = {};\n\n      for (var _key3 in _unit2) {\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(_unit2, _key3)) {\n          alias[_key3] = _unit2[_key3];\n        }\n      }\n\n      alias.name = _name2;\n      UNITS[_name2] = alias;\n    }\n  }\n  /**\n   * Checks if a character is a valid latin letter (upper or lower case).\n   * Note that this function can be overridden, for example to allow support of other alphabets.\n   * @param {string} c Tested character\n   */\n\n\n  Unit.isValidAlpha = function isValidAlpha(c) {\n    return /^[a-zA-Z]$/.test(c);\n  };\n\n  function assertUnitNameIsValid(name) {\n    for (var i = 0; i < name.length; i++) {\n      c = name.charAt(i);\n\n      if (i === 0 && !Unit.isValidAlpha(c)) {\n        throw new Error('Invalid unit name (must begin with alpha character): \"' + name + '\"');\n      }\n\n      if (i > 0 && !(Unit.isValidAlpha(c) || isDigit(c))) {\n        throw new Error('Invalid unit name (only alphanumeric characters are allowed): \"' + name + '\"');\n      }\n    }\n  }\n  /**\n   * Wrapper around createUnitSingle.\n   * Example:\n   *  createUnit({\n   *    foo: { },\n   *    bar: {\n   *      definition: 'kg/foo',\n   *      aliases: ['ba', 'barr', 'bars'],\n   *      offset: 200\n   *    },\n   *    baz: '4 bar'\n   *  },\n   *  {\n   *    override: true\n   *  })\n   * @param {object} obj      Object map. Each key becomes a unit which is defined by its value.\n   * @param {object} options\n   */\n\n\n  Unit.createUnit = function (obj, options) {\n    if (typeof obj !== 'object') {\n      throw new TypeError(\"createUnit expects first parameter to be of type 'Object'\");\n    } // Remove all units and aliases we are overriding\n\n\n    if (options && options.override) {\n      for (var _key4 in obj) {\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(obj, _key4)) {\n          Unit.deleteUnit(_key4);\n        }\n\n        if (obj[_key4].aliases) {\n          for (var i = 0; i < obj[_key4].aliases.length; i++) {\n            Unit.deleteUnit(obj[_key4].aliases[i]);\n          }\n        }\n      }\n    } // TODO: traverse multiple times until all units have been added\n\n\n    var lastUnit;\n\n    for (var _key5 in obj) {\n      if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(obj, _key5)) {\n        lastUnit = Unit.createUnitSingle(_key5, obj[_key5]);\n      }\n    }\n\n    return lastUnit;\n  };\n  /**\n   * Create a user-defined unit and register it with the Unit type.\n   * Example:\n   *  createUnitSingle('knot', '0.514444444 m/s')\n   *  createUnitSingle('acre', new Unit(43560, 'ft^2'))\n   *\n   * @param {string} name      The name of the new unit. Must be unique. Example: 'knot'\n   * @param {string, Unit, Object} definition      Definition of the unit in terms\n   * of existing units. For example, '0.514444444 m / s'. Can be a Unit, a string,\n   * or an Object. If an Object, may have the following properties:\n   *   - definition {string|Unit} The definition of this unit.\n   *   - prefixes {string} \"none\", \"short\", \"long\", \"binary_short\", or \"binary_long\".\n   *     The default is \"none\".\n   *   - aliases {Array} Array of strings. Example: ['knots', 'kt', 'kts']\n   *   - offset {Numeric} An offset to apply when converting from the unit. For\n   *     example, the offset for celsius is 273.15 and the offset for farhenheit\n   *     is 459.67. Default is 0.\n   *   - baseName {string} If the unit's dimension does not match that of any other\n   *     base unit, the name of the newly create base unit. Otherwise, this property\n   *     has no effect.\n   *\n   * @param {Object} options   (optional) An object containing any of the following\n   * properties:\n   *   - override {boolean} Whether this unit should be allowed to override existing\n   *     units.\n   *\n   * @return {Unit}\n   */\n\n\n  Unit.createUnitSingle = function (name, obj, options) {\n    if (typeof obj === 'undefined' || obj === null) {\n      obj = {};\n    }\n\n    if (typeof name !== 'string') {\n      throw new TypeError(\"createUnitSingle expects first parameter to be of type 'string'\");\n    } // Check collisions with existing units\n\n\n    if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(UNITS, name)) {\n      throw new Error('Cannot create unit \"' + name + '\": a unit with that name already exists');\n    } // TODO: Validate name for collisions with other built-in functions (like abs or cos, for example), and for acceptable variable names. For example, '42' is probably not a valid unit. Nor is '%', since it is also an operator.\n\n\n    assertUnitNameIsValid(name);\n    var defUnit = null; // The Unit from which the new unit will be created.\n\n    var aliases = [];\n    var offset = 0;\n    var definition;\n    var prefixes;\n    var baseName;\n\n    if (obj && obj.type === 'Unit') {\n      defUnit = obj.clone();\n    } else if (typeof obj === 'string') {\n      if (obj !== '') {\n        definition = obj;\n      }\n    } else if (typeof obj === 'object') {\n      definition = obj.definition;\n      prefixes = obj.prefixes;\n      offset = obj.offset;\n      baseName = obj.baseName;\n\n      if (obj.aliases) {\n        aliases = obj.aliases.valueOf(); // aliases could be a Matrix, so convert to Array\n      }\n    } else {\n      throw new TypeError('Cannot create unit \"' + name + '\" from \"' + obj.toString() + '\": expecting \"string\" or \"Unit\" or \"Object\"');\n    }\n\n    if (aliases) {\n      for (var i = 0; i < aliases.length; i++) {\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(UNITS, aliases[i])) {\n          throw new Error('Cannot create alias \"' + aliases[i] + '\": a unit with that name already exists');\n        }\n      }\n    }\n\n    if (definition && typeof definition === 'string' && !defUnit) {\n      try {\n        defUnit = Unit.parse(definition, {\n          allowNoUnits: true\n        });\n      } catch (ex) {\n        ex.message = 'Could not create unit \"' + name + '\" from \"' + definition + '\": ' + ex.message;\n        throw ex;\n      }\n    } else if (definition && definition.type === 'Unit') {\n      defUnit = definition.clone();\n    }\n\n    aliases = aliases || [];\n    offset = offset || 0;\n\n    if (prefixes && prefixes.toUpperCase) {\n      prefixes = PREFIXES[prefixes.toUpperCase()] || PREFIXES.NONE;\n    } else {\n      prefixes = PREFIXES.NONE;\n    } // If defUnit is null, it is because the user did not\n    // specify a defintion. So create a new base dimension.\n\n\n    var newUnit = {};\n\n    if (!defUnit) {\n      // Add a new base dimension\n      baseName = baseName || name + '_STUFF'; // foo --> foo_STUFF, or the essence of foo\n\n      if (BASE_DIMENSIONS.indexOf(baseName) >= 0) {\n        throw new Error('Cannot create new base unit \"' + name + '\": a base unit with that name already exists (and cannot be overridden)');\n      }\n\n      BASE_DIMENSIONS.push(baseName); // Push 0 onto existing base units\n\n      for (var b in BASE_UNITS) {\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(BASE_UNITS, b)) {\n          BASE_UNITS[b].dimensions[BASE_DIMENSIONS.length - 1] = 0;\n        }\n      } // Add the new base unit\n\n\n      var newBaseUnit = {\n        dimensions: []\n      };\n\n      for (var _i6 = 0; _i6 < BASE_DIMENSIONS.length; _i6++) {\n        newBaseUnit.dimensions[_i6] = 0;\n      }\n\n      newBaseUnit.dimensions[BASE_DIMENSIONS.length - 1] = 1;\n      newBaseUnit.key = baseName;\n      BASE_UNITS[baseName] = newBaseUnit;\n      newUnit = {\n        name: name,\n        value: 1,\n        dimensions: BASE_UNITS[baseName].dimensions.slice(0),\n        prefixes: prefixes,\n        offset: offset,\n        base: BASE_UNITS[baseName]\n      };\n      currentUnitSystem[baseName] = {\n        unit: newUnit,\n        prefix: PREFIXES.NONE['']\n      };\n    } else {\n      newUnit = {\n        name: name,\n        value: defUnit.value,\n        dimensions: defUnit.dimensions.slice(0),\n        prefixes: prefixes,\n        offset: offset\n      }; // Create a new base if no matching base exists\n\n      var anyMatch = false;\n\n      for (var _i7 in BASE_UNITS) {\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(BASE_UNITS, _i7)) {\n          var match = true;\n\n          for (var j = 0; j < BASE_DIMENSIONS.length; j++) {\n            if (Math.abs((newUnit.dimensions[j] || 0) - (BASE_UNITS[_i7].dimensions[j] || 0)) > 1e-12) {\n              match = false;\n              break;\n            }\n          }\n\n          if (match) {\n            anyMatch = true;\n            newUnit.base = BASE_UNITS[_i7];\n            break;\n          }\n        }\n      }\n\n      if (!anyMatch) {\n        baseName = baseName || name + '_STUFF'; // foo --> foo_STUFF, or the essence of foo\n        // Add the new base unit\n\n        var _newBaseUnit = {\n          dimensions: defUnit.dimensions.slice(0)\n        };\n        _newBaseUnit.key = baseName;\n        BASE_UNITS[baseName] = _newBaseUnit;\n        currentUnitSystem[baseName] = {\n          unit: newUnit,\n          prefix: PREFIXES.NONE['']\n        };\n        newUnit.base = BASE_UNITS[baseName];\n      }\n    }\n\n    Unit.UNITS[name] = newUnit;\n\n    for (var _i8 = 0; _i8 < aliases.length; _i8++) {\n      var aliasName = aliases[_i8];\n      var _alias = {};\n\n      for (var _key6 in newUnit) {\n        if ((0,_utils_object_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(newUnit, _key6)) {\n          _alias[_key6] = newUnit[_key6];\n        }\n      }\n\n      _alias.name = aliasName;\n      Unit.UNITS[aliasName] = _alias;\n    } // delete the memoization cache, since adding a new unit to the array\n    // invalidates all old results\n\n\n    delete _findUnit.cache;\n    return new Unit(null, name);\n  };\n\n  Unit.deleteUnit = function (name) {\n    delete Unit.UNITS[name];\n  }; // expose arrays with prefixes, dimensions, units, systems\n\n\n  Unit.PREFIXES = PREFIXES;\n  Unit.BASE_DIMENSIONS = BASE_DIMENSIONS;\n  Unit.BASE_UNITS = BASE_UNITS;\n  Unit.UNIT_SYSTEMS = UNIT_SYSTEMS;\n  Unit.UNITS = UNITS;\n  return Unit;\n}, {\n  isClass: true\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/unit/Unit.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/unit/function/createUnit.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/unit/function/createUnit.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createCreateUnit\": () => (/* binding */ createCreateUnit)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'createUnit';\nvar dependencies = ['typed', 'Unit'];\nvar createCreateUnit = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Unit\n  } = _ref;\n  /**\n   * Create a user-defined unit and register it with the Unit type.\n   *\n   * Syntax:\n   *\n   *     math.createUnit({\n   *       baseUnit1: {\n   *         aliases: [string, ...]\n   *         prefixes: object\n   *       },\n   *       unit2: {\n   *         definition: string,\n   *         aliases: [string, ...]\n   *         prefixes: object,\n   *         offset: number\n   *       },\n   *       unit3: string    // Shortcut\n   *     })\n   *\n   *     // Another shortcut:\n   *     math.createUnit(string, unit : string, [object])\n   *\n   * Examples:\n   *\n   *     math.createUnit('foo')\n   *     math.createUnit('knot', {definition: '0.514444444 m/s', aliases: ['knots', 'kt', 'kts']})\n   *     math.createUnit('mph', '1 mile/hour')\n   *\n   * @param {string} name      The name of the new unit. Must be unique. Example: 'knot'\n   * @param {string, Unit} definition      Definition of the unit in terms of existing units. For example, '0.514444444 m / s'.\n   * @param {Object} options   (optional) An object containing any of the following properties:\n   *     - `prefixes {string}` \"none\", \"short\", \"long\", \"binary_short\", or \"binary_long\". The default is \"none\".\n   *     - `aliases {Array}` Array of strings. Example: ['knots', 'kt', 'kts']\n   *     - `offset {Numeric}` An offset to apply when converting from the unit. For example, the offset for celsius is 273.15. Default is 0.\n   *\n   * See also:\n   *\n   *     unit\n   *\n   * @return {Unit} The new unit\n   */\n\n  return typed(name, {\n    // General function signature. First parameter is an object where each property is the definition of a new unit. The object keys are the unit names and the values are the definitions. The values can be objects, strings, or Units. If a property is an empty object or an empty string, a new base unit is created. The second parameter is the options.\n    'Object, Object': function ObjectObject(obj, options) {\n      return Unit.createUnit(obj, options);\n    },\n    // Same as above but without the options.\n    Object: function Object(obj) {\n      return Unit.createUnit(obj, {});\n    },\n    // Shortcut method for creating one unit.\n    'string, Unit | string | Object, Object': function stringUnitStringObjectObject(name, def, options) {\n      var obj = {};\n      obj[name] = def;\n      return Unit.createUnit(obj, options);\n    },\n    // Same as above but without the options.\n    'string, Unit | string | Object': function stringUnitStringObject(name, def) {\n      var obj = {};\n      obj[name] = def;\n      return Unit.createUnit(obj, {});\n    },\n    // Without a definition, creates a base unit.\n    string: function string(name) {\n      var obj = {};\n      obj[name] = {};\n      return Unit.createUnit(obj, {});\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/unit/function/createUnit.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/unit/function/splitUnit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/unit/function/splitUnit.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSplitUnit\": () => (/* binding */ createSplitUnit)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n\nvar name = 'splitUnit';\nvar dependencies = ['typed'];\nvar createSplitUnit = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\n   * Split a unit in an array of units whose sum is equal to the original unit.\n   *\n   * Syntax:\n   *\n   *     splitUnit(unit: Unit, parts: Array.<Unit>)\n   *\n   * Example:\n   *\n   *     math.splitUnit(new Unit(1, 'm'), ['feet', 'inch'])\n   *     // [ 3 feet, 3.3700787401575 inch ]\n   *\n   * See also:\n   *\n   *     unit\n   *\n   * @param {Array} [parts] An array of strings or valueless units.\n   * @return {Array} An array of units.\n   */\n\n  return typed(name, {\n    'Unit, Array': function UnitArray(unit, parts) {\n      return unit.splitUnit(parts);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/unit/function/splitUnit.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/unit/function/unit.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/unit/function/unit.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUnitFunction\": () => (/* binding */ createUnitFunction)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n/* harmony import */ var _utils_collection_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/collection.js */ \"./node_modules/mathjs/lib/esm/utils/collection.js\");\n\n\nvar name = 'unit';\nvar dependencies = ['typed', 'Unit']; // This function is named createUnitFunction to prevent a naming conflict with createUnit\n\nvar createUnitFunction = /* #__PURE__ */(0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n  var {\n    typed,\n    Unit\n  } = _ref;\n  /**\n   * Create a unit. Depending on the passed arguments, the function\n   * will create and return a new math.Unit object.\n   * When a matrix is provided, all elements will be converted to units.\n   *\n   * Syntax:\n   *\n   *     math.unit(unit : string)\n   *     math.unit(value : number, unit : string)\n   *\n   * Examples:\n   *\n   *    const a = math.unit(5, 'cm')    // returns Unit 50 mm\n   *    const b = math.unit('23 kg')    // returns Unit 23 kg\n   *    a.to('m')                       // returns Unit 0.05 m\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, number, string, createUnit\n   *\n   * @param {* | Array | Matrix} args   A number and unit.\n   * @return {Unit | Array | Matrix}    The created unit\n   */\n\n  return typed(name, {\n    Unit: function Unit(x) {\n      return x.clone();\n    },\n    string: function string(x) {\n      if (Unit.isValuelessUnit(x)) {\n        return new Unit(null, x); // a pure unit\n      }\n\n      return Unit.parse(x, {\n        allowNoUnits: true\n      }); // a unit with value, like '5cm'\n    },\n    'number | BigNumber | Fraction | Complex, string': function numberBigNumberFractionComplexString(value, unit) {\n      return new Unit(value, unit);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0,_utils_collection_js__WEBPACK_IMPORTED_MODULE_1__.deepMap)(x, this);\n    }\n  });\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/unit/function/unit.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/type/unit/physicalConstants.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/type/unit/physicalConstants.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createSpeedOfLight\": () => (/* binding */ createSpeedOfLight),\n/* harmony export */   \"createGravitationConstant\": () => (/* binding */ createGravitationConstant),\n/* harmony export */   \"createPlanckConstant\": () => (/* binding */ createPlanckConstant),\n/* harmony export */   \"createReducedPlanckConstant\": () => (/* binding */ createReducedPlanckConstant),\n/* harmony export */   \"createMagneticConstant\": () => (/* binding */ createMagneticConstant),\n/* harmony export */   \"createElectricConstant\": () => (/* binding */ createElectricConstant),\n/* harmony export */   \"createVacuumImpedance\": () => (/* binding */ createVacuumImpedance),\n/* harmony export */   \"createCoulomb\": () => (/* binding */ createCoulomb),\n/* harmony export */   \"createElementaryCharge\": () => (/* binding */ createElementaryCharge),\n/* harmony export */   \"createBohrMagneton\": () => (/* binding */ createBohrMagneton),\n/* harmony export */   \"createConductanceQuantum\": () => (/* binding */ createConductanceQuantum),\n/* harmony export */   \"createInverseConductanceQuantum\": () => (/* binding */ createInverseConductanceQuantum),\n/* harmony export */   \"createMagneticFluxQuantum\": () => (/* binding */ createMagneticFluxQuantum),\n/* harmony export */   \"createNuclearMagneton\": () => (/* binding */ createNuclearMagneton),\n/* harmony export */   \"createKlitzing\": () => (/* binding */ createKlitzing),\n/* harmony export */   \"createJosephson\": () => (/* binding */ createJosephson),\n/* harmony export */   \"createBohrRadius\": () => (/* binding */ createBohrRadius),\n/* harmony export */   \"createClassicalElectronRadius\": () => (/* binding */ createClassicalElectronRadius),\n/* harmony export */   \"createElectronMass\": () => (/* binding */ createElectronMass),\n/* harmony export */   \"createFermiCoupling\": () => (/* binding */ createFermiCoupling),\n/* harmony export */   \"createFineStructure\": () => (/* binding */ createFineStructure),\n/* harmony export */   \"createHartreeEnergy\": () => (/* binding */ createHartreeEnergy),\n/* harmony export */   \"createProtonMass\": () => (/* binding */ createProtonMass),\n/* harmony export */   \"createDeuteronMass\": () => (/* binding */ createDeuteronMass),\n/* harmony export */   \"createNeutronMass\": () => (/* binding */ createNeutronMass),\n/* harmony export */   \"createQuantumOfCirculation\": () => (/* binding */ createQuantumOfCirculation),\n/* harmony export */   \"createRydberg\": () => (/* binding */ createRydberg),\n/* harmony export */   \"createThomsonCrossSection\": () => (/* binding */ createThomsonCrossSection),\n/* harmony export */   \"createWeakMixingAngle\": () => (/* binding */ createWeakMixingAngle),\n/* harmony export */   \"createEfimovFactor\": () => (/* binding */ createEfimovFactor),\n/* harmony export */   \"createAtomicMass\": () => (/* binding */ createAtomicMass),\n/* harmony export */   \"createAvogadro\": () => (/* binding */ createAvogadro),\n/* harmony export */   \"createBoltzmann\": () => (/* binding */ createBoltzmann),\n/* harmony export */   \"createFaraday\": () => (/* binding */ createFaraday),\n/* harmony export */   \"createFirstRadiation\": () => (/* binding */ createFirstRadiation),\n/* harmony export */   \"createLoschmidt\": () => (/* binding */ createLoschmidt),\n/* harmony export */   \"createGasConstant\": () => (/* binding */ createGasConstant),\n/* harmony export */   \"createMolarPlanckConstant\": () => (/* binding */ createMolarPlanckConstant),\n/* harmony export */   \"createMolarVolume\": () => (/* binding */ createMolarVolume),\n/* harmony export */   \"createSackurTetrode\": () => (/* binding */ createSackurTetrode),\n/* harmony export */   \"createSecondRadiation\": () => (/* binding */ createSecondRadiation),\n/* harmony export */   \"createStefanBoltzmann\": () => (/* binding */ createStefanBoltzmann),\n/* harmony export */   \"createWienDisplacement\": () => (/* binding */ createWienDisplacement),\n/* harmony export */   \"createMolarMass\": () => (/* binding */ createMolarMass),\n/* harmony export */   \"createMolarMassC12\": () => (/* binding */ createMolarMassC12),\n/* harmony export */   \"createGravity\": () => (/* binding */ createGravity),\n/* harmony export */   \"createPlanckLength\": () => (/* binding */ createPlanckLength),\n/* harmony export */   \"createPlanckMass\": () => (/* binding */ createPlanckMass),\n/* harmony export */   \"createPlanckTime\": () => (/* binding */ createPlanckTime),\n/* harmony export */   \"createPlanckCharge\": () => (/* binding */ createPlanckCharge),\n/* harmony export */   \"createPlanckTemperature\": () => (/* binding */ createPlanckTemperature)\n/* harmony export */ });\n/* harmony import */ var _utils_factory_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/factory.js */ \"./node_modules/mathjs/lib/esm/utils/factory.js\");\n // Source: https://en.wikipedia.org/wiki/Physical_constant\n// Universal constants\n\nvar createSpeedOfLight = /* #__PURE__ */unitFactory('speedOfLight', '299792458', 'm s^-1');\nvar createGravitationConstant = /* #__PURE__ */unitFactory('gravitationConstant', '6.67430e-11', 'm^3 kg^-1 s^-2');\nvar createPlanckConstant = /* #__PURE__ */unitFactory('planckConstant', '6.62607015e-34', 'J s');\nvar createReducedPlanckConstant = /* #__PURE__ */unitFactory('reducedPlanckConstant', '1.0545718176461565e-34', 'J s'); // Electromagnetic constants\n\nvar createMagneticConstant = /* #__PURE__ */unitFactory('magneticConstant', '1.25663706212e-6', 'N A^-2');\nvar createElectricConstant = /* #__PURE__ */unitFactory('electricConstant', '8.8541878128e-12', 'F m^-1');\nvar createVacuumImpedance = /* #__PURE__ */unitFactory('vacuumImpedance', '376.730313667', 'ohm');\nvar createCoulomb = /* #__PURE__ */unitFactory('coulomb', '8.987551792261171e9', 'N m^2 C^-2');\nvar createElementaryCharge = /* #__PURE__ */unitFactory('elementaryCharge', '1.602176634e-19', 'C');\nvar createBohrMagneton = /* #__PURE__ */unitFactory('bohrMagneton', '9.2740100783e-24', 'J T^-1');\nvar createConductanceQuantum = /* #__PURE__ */unitFactory('conductanceQuantum', '7.748091729863649e-5', 'S');\nvar createInverseConductanceQuantum = /* #__PURE__ */unitFactory('inverseConductanceQuantum', '12906.403729652257', 'ohm');\nvar createMagneticFluxQuantum = /* #__PURE__ */unitFactory('magneticFluxQuantum', '2.0678338484619295e-15', 'Wb');\nvar createNuclearMagneton = /* #__PURE__ */unitFactory('nuclearMagneton', '5.0507837461e-27', 'J T^-1');\nvar createKlitzing = /* #__PURE__ */unitFactory('klitzing', '25812.807459304513', 'ohm');\nvar createJosephson = /* #__PURE__ */unitFactory('josephson', '4.835978484169836e14 Hz V', 'Hz V^-1'); // TODO: support for Hz needed\n// Atomic and nuclear constants\n\nvar createBohrRadius = /* #__PURE__ */unitFactory('bohrRadius', '5.29177210903e-11', 'm');\nvar createClassicalElectronRadius = /* #__PURE__ */unitFactory('classicalElectronRadius', '2.8179403262e-15', 'm');\nvar createElectronMass = /* #__PURE__ */unitFactory('electronMass', '9.1093837015e-31', 'kg');\nvar createFermiCoupling = /* #__PURE__ */unitFactory('fermiCoupling', '1.1663787e-5', 'GeV^-2');\nvar createFineStructure = numberFactory('fineStructure', 7.2973525693e-3);\nvar createHartreeEnergy = /* #__PURE__ */unitFactory('hartreeEnergy', '4.3597447222071e-18', 'J');\nvar createProtonMass = /* #__PURE__ */unitFactory('protonMass', '1.67262192369e-27', 'kg');\nvar createDeuteronMass = /* #__PURE__ */unitFactory('deuteronMass', '3.3435830926e-27', 'kg');\nvar createNeutronMass = /* #__PURE__ */unitFactory('neutronMass', '1.6749271613e-27', 'kg');\nvar createQuantumOfCirculation = /* #__PURE__ */unitFactory('quantumOfCirculation', '3.6369475516e-4', 'm^2 s^-1');\nvar createRydberg = /* #__PURE__ */unitFactory('rydberg', '10973731.568160', 'm^-1');\nvar createThomsonCrossSection = /* #__PURE__ */unitFactory('thomsonCrossSection', '6.6524587321e-29', 'm^2');\nvar createWeakMixingAngle = numberFactory('weakMixingAngle', 0.22290);\nvar createEfimovFactor = numberFactory('efimovFactor', 22.7); // Physico-chemical constants\n\nvar createAtomicMass = /* #__PURE__ */unitFactory('atomicMass', '1.66053906660e-27', 'kg');\nvar createAvogadro = /* #__PURE__ */unitFactory('avogadro', '6.02214076e23', 'mol^-1');\nvar createBoltzmann = /* #__PURE__ */unitFactory('boltzmann', '1.380649e-23', 'J K^-1');\nvar createFaraday = /* #__PURE__ */unitFactory('faraday', '96485.33212331001', 'C mol^-1');\nvar createFirstRadiation = /* #__PURE__ */unitFactory('firstRadiation', '3.7417718521927573e-16', 'W m^2'); // export const createSpectralRadiance = /* #__PURE__ */ unitFactory('spectralRadiance', '1.1910429723971881e-16', 'W m^2 sr^-1') // TODO spectralRadiance\n\nvar createLoschmidt = /* #__PURE__ */unitFactory('loschmidt', '2.686780111798444e25', 'm^-3');\nvar createGasConstant = /* #__PURE__ */unitFactory('gasConstant', '8.31446261815324', 'J K^-1 mol^-1');\nvar createMolarPlanckConstant = /* #__PURE__ */unitFactory('molarPlanckConstant', '3.990312712893431e-10', 'J s mol^-1');\nvar createMolarVolume = /* #__PURE__ */unitFactory('molarVolume', '0.022413969545014137', 'm^3 mol^-1');\nvar createSackurTetrode = numberFactory('sackurTetrode', -1.16487052358);\nvar createSecondRadiation = /* #__PURE__ */unitFactory('secondRadiation', '0.014387768775039337', 'm K');\nvar createStefanBoltzmann = /* #__PURE__ */unitFactory('stefanBoltzmann', '5.67037441918443e-8', 'W m^-2 K^-4');\nvar createWienDisplacement = /* #__PURE__ */unitFactory('wienDisplacement', '2.897771955e-3', 'm K'); // Adopted values\n\nvar createMolarMass = /* #__PURE__ */unitFactory('molarMass', '0.99999999965e-3', 'kg mol^-1');\nvar createMolarMassC12 = /* #__PURE__ */unitFactory('molarMassC12', '11.9999999958e-3', 'kg mol^-1');\nvar createGravity = /* #__PURE__ */unitFactory('gravity', '9.80665', 'm s^-2'); // atm is defined in Unit.js\n// Natural units\n\nvar createPlanckLength = /* #__PURE__ */unitFactory('planckLength', '1.616255e-35', 'm');\nvar createPlanckMass = /* #__PURE__ */unitFactory('planckMass', '2.176435e-8', 'kg');\nvar createPlanckTime = /* #__PURE__ */unitFactory('planckTime', '5.391245e-44', 's');\nvar createPlanckCharge = /* #__PURE__ */unitFactory('planckCharge', '1.87554603778e-18', 'C');\nvar createPlanckTemperature = /* #__PURE__ */unitFactory('planckTemperature', '1.416785e+32', 'K'); // helper function to create a factory function which creates a physical constant,\n// a Unit with either a number value or a BigNumber value depending on the configuration\n\nfunction unitFactory(name, valueStr, unitStr) {\n  var dependencies = ['config', 'Unit', 'BigNumber'];\n  return (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref => {\n    var {\n      config,\n      Unit,\n      BigNumber\n    } = _ref; // Note that we can parse into number or BigNumber.\n    // We do not parse into Fractions as that doesn't make sense: we would lose precision of the values\n    // Therefore we dont use Unit.parse()\n\n    var value = config.number === 'BigNumber' ? new BigNumber(valueStr) : parseFloat(valueStr);\n    var unit = new Unit(value, unitStr);\n    unit.fixPrefix = true;\n    return unit;\n  });\n} // helper function to create a factory function which creates a numeric constant,\n// either a number or BigNumber depending on the configuration\n\n\nfunction numberFactory(name, value) {\n  var dependencies = ['config', 'BigNumber'];\n  return (0,_utils_factory_js__WEBPACK_IMPORTED_MODULE_0__.factory)(name, dependencies, _ref2 => {\n    var {\n      config,\n      BigNumber\n    } = _ref2;\n    return config.number === 'BigNumber' ? new BigNumber(value) : value;\n  });\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/type/unit/physicalConstants.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/array.js":
/*!****************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/array.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"arraySize\": () => (/* binding */ arraySize),\n/* harmony export */   \"validate\": () => (/* binding */ validate),\n/* harmony export */   \"validateIndex\": () => (/* binding */ validateIndex),\n/* harmony export */   \"resize\": () => (/* binding */ resize),\n/* harmony export */   \"reshape\": () => (/* binding */ reshape),\n/* harmony export */   \"processSizesWildcard\": () => (/* binding */ processSizesWildcard),\n/* harmony export */   \"squeeze\": () => (/* binding */ squeeze),\n/* harmony export */   \"unsqueeze\": () => (/* binding */ unsqueeze),\n/* harmony export */   \"flatten\": () => (/* binding */ flatten),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"forEach\": () => (/* binding */ forEach),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"filterRegExp\": () => (/* binding */ filterRegExp),\n/* harmony export */   \"join\": () => (/* binding */ join),\n/* harmony export */   \"identify\": () => (/* binding */ identify),\n/* harmony export */   \"generalize\": () => (/* binding */ generalize),\n/* harmony export */   \"getArrayDataType\": () => (/* binding */ getArrayDataType),\n/* harmony export */   \"last\": () => (/* binding */ last),\n/* harmony export */   \"initial\": () => (/* binding */ initial),\n/* harmony export */   \"contains\": () => (/* binding */ contains)\n/* harmony export */ });\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./string.js */ \"./node_modules/mathjs/lib/esm/utils/string.js\");\n/* harmony import */ var _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/DimensionError.js */ \"./node_modules/mathjs/lib/esm/error/DimensionError.js\");\n/* harmony import */ var _error_IndexError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/IndexError.js */ \"./node_modules/mathjs/lib/esm/error/IndexError.js\");\n\n\n\n\n\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\n\nfunction arraySize(x) {\n  var s = [];\n\n  while (Array.isArray(x)) {\n    s.push(x.length);\n    x = x[0];\n  }\n\n  return s;\n}\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\n\nfunction _validate(array, size, dim) {\n  var i;\n  var len = array.length;\n\n  if (len !== size[dim]) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__.DimensionError(len, size[dim]);\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    var dimNext = dim + 1;\n\n    for (i = 0; i < len; i++) {\n      var child = array[i];\n\n      if (!Array.isArray(child)) {\n        throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__.DimensionError(size.length - 1, size.length, '<');\n      }\n\n      _validate(array[i], size, dimNext);\n    }\n  } else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__.DimensionError(size.length + 1, size.length, '>');\n      }\n    }\n  }\n}\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\n\n\nfunction validate(array, size) {\n  var isScalar = size.length === 0;\n\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__.DimensionError(array.length, 0);\n    }\n  } else {\n    // array\n    _validate(array, size, 0);\n  }\n}\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\n\nfunction validateIndex(index, length) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(index) || !(0,_number_js__WEBPACK_IMPORTED_MODULE_2__.isInteger)(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')');\n  }\n\n  if (index < 0 || typeof length === 'number' && index >= length) {\n    throw new _error_IndexError_js__WEBPACK_IMPORTED_MODULE_3__.IndexError(index, length);\n  }\n}\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. Specify for example `null`,\n *                              to clearly see entries that are not explicitly\n *                              set.\n * @return {Array} array         The resized array\n */\n\nfunction resize(array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n  // check the type of the arguments\n  if (!Array.isArray(array) || !Array.isArray(size)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported');\n  } // check whether size contains positive integers\n\n\n  size.forEach(function (value) {\n    if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value) || !(0,_number_js__WEBPACK_IMPORTED_MODULE_2__.isInteger)(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' + '(size: ' + (0,_string_js__WEBPACK_IMPORTED_MODULE_4__.format)(size) + ')');\n    }\n  }); // recursively resize the array\n\n  var _defaultValue = defaultValue !== undefined ? defaultValue : 0;\n\n  _resize(array, size, 0, _defaultValue);\n\n  return array;\n}\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\n\nfunction _resize(array, size, dim, defaultValue) {\n  var i;\n  var elem;\n  var oldLen = array.length;\n  var newLen = size[dim];\n  var minLen = Math.min(oldLen, newLen); // apply new length\n\n  array.length = newLen;\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    var dimNext = dim + 1; // resize existing child arrays\n\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i];\n\n      if (!Array.isArray(elem)) {\n        elem = [elem]; // add a dimension\n\n        array[i] = elem;\n      }\n\n      _resize(elem, size, dimNext, defaultValue);\n    } // create new child arrays\n\n\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = [];\n      array[i] = elem; // resize new child array\n\n      _resize(elem, size, dimNext, defaultValue);\n    }\n  } else {\n    // last dimension\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0];\n      }\n    } // fill new elements with the default value\n\n\n    for (i = minLen; i < newLen; i++) {\n      array[i] = defaultValue;\n    }\n  }\n}\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\n\n\nfunction reshape(array, sizes) {\n  var flatArray = flatten(array);\n  var currentLength = flatArray.length;\n\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (sizes.length === 0) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__.DimensionError(0, currentLength, '!=');\n  }\n\n  sizes = processSizesWildcard(sizes, currentLength);\n  var newLength = product(sizes);\n\n  if (currentLength !== newLength) {\n    throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__.DimensionError(newLength, currentLength, '!=');\n  }\n\n  try {\n    return _reshape(flatArray, sizes);\n  } catch (e) {\n    if (e instanceof _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__.DimensionError) {\n      throw new _error_DimensionError_js__WEBPACK_IMPORTED_MODULE_0__.DimensionError(newLength, currentLength, '!=');\n    }\n\n    throw e;\n  }\n}\n/**\n * Replaces the wildcard -1 in the sizes array.\n * @param {Array.<number>} sizes  List of sizes for each dimension. At most on wildcard.\n * @param {number} currentLength  Number of elements in the array.\n * @throws {Error}                If more than one wildcard or unable to replace it.\n * @returns {Array.<number>}      The sizes array with wildcard replaced.\n */\n\nfunction processSizesWildcard(sizes, currentLength) {\n  var newLength = product(sizes);\n  var processedSizes = sizes.slice();\n  var WILDCARD = -1;\n  var wildCardIndex = sizes.indexOf(WILDCARD);\n  var isMoreThanOneWildcard = sizes.indexOf(WILDCARD, wildCardIndex + 1) >= 0;\n\n  if (isMoreThanOneWildcard) {\n    throw new Error('More than one wildcard in sizes');\n  }\n\n  var hasWildcard = wildCardIndex >= 0;\n  var canReplaceWildcard = currentLength % newLength === 0;\n\n  if (hasWildcard) {\n    if (canReplaceWildcard) {\n      processedSizes[wildCardIndex] = -currentLength / newLength;\n    } else {\n      throw new Error('Could not replace wildcard, since ' + currentLength + ' is no multiple of ' + -newLength);\n    }\n  }\n\n  return processedSizes;\n}\n/**\n * Computes the product of all array elements.\n * @param {Array<number>} array Array of factors\n * @returns {number}            Product of all elements\n */\n\nfunction product(array) {\n  return array.reduce((prev, curr) => prev * curr, 1);\n}\n/**\n * Iteratively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n */\n\n\nfunction _reshape(array, sizes) {\n  // testing if there are enough elements for the requested shape\n  var tmpArray = array;\n  var tmpArray2; // for each dimensions starting by the last one and ignoring the first one\n\n  for (var sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {\n    var size = sizes[sizeIndex];\n    tmpArray2 = []; // aggregate the elements of the current tmpArray in elements of the requested size\n\n    var length = tmpArray.length / size;\n\n    for (var i = 0; i < length; i++) {\n      tmpArray2.push(tmpArray.slice(i * size, (i + 1) * size));\n    } // set it as the new tmpArray for the next loop turn or for return\n\n\n    tmpArray = tmpArray2;\n  }\n\n  return tmpArray;\n}\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\n\n\nfunction squeeze(array, size) {\n  var s = size || arraySize(array); // squeeze outer dimensions\n\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0];\n    s.shift();\n  } // find the first dimension to be squeezed\n\n\n  var dims = s.length;\n\n  while (s[dims - 1] === 1) {\n    dims--;\n  } // squeeze inner dimensions\n\n\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0);\n    s.length = dims;\n  }\n\n  return array;\n}\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\n\nfunction _squeeze(array, dims, dim) {\n  var i, ii;\n\n  if (dim < dims) {\n    var next = dim + 1;\n\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next);\n    }\n  } else {\n    while (Array.isArray(array)) {\n      array = array[0];\n    }\n  }\n\n  return array;\n}\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n *\n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n *\n * @param {Array} array\n * @param {number} dims       Desired number of dimensions of the array\n * @param {number} [outer]    Number of outer dimensions to be added\n * @param {Array} [size] Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\n\n\nfunction unsqueeze(array, dims, outer, size) {\n  var s = size || arraySize(array); // unsqueeze outer dimensions\n\n  if (outer) {\n    for (var i = 0; i < outer; i++) {\n      array = [array];\n      s.unshift(1);\n    }\n  } // unsqueeze inner dimensions\n\n\n  array = _unsqueeze(array, dims, 0);\n\n  while (s.length < dims) {\n    s.push(1);\n  }\n\n  return array;\n}\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\n\nfunction _unsqueeze(array, dims, dim) {\n  var i, ii;\n\n  if (Array.isArray(array)) {\n    var next = dim + 1;\n\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next);\n    }\n  } else {\n    for (var d = dim; d < dims; d++) {\n      array = [array];\n    }\n  }\n\n  return array;\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\n\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) {\n    // if not an array, return as is\n    return array;\n  }\n\n  var flat = [];\n  array.forEach(function callback(value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback); // traverse through sub-arrays recursively\n    } else {\n      flat.push(value);\n    }\n  });\n  return flat;\n}\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\n\nfunction map(array, callback) {\n  return Array.prototype.map.call(array, callback);\n}\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\n\nfunction forEach(array, callback) {\n  Array.prototype.forEach.call(array, callback);\n}\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\n\nfunction filter(array, callback) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, callback);\n}\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\n\nfunction filterRegExp(array, regexp) {\n  if (arraySize(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, entry => regexp.test(entry));\n}\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\n\nfunction join(array, separator) {\n  return Array.prototype.join.call(array, separator);\n}\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array} a  An array\n * @return {Array} An array of objects containing the original value and its identifier\n */\n\nfunction identify(a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected');\n  }\n\n  if (a.length === 0) {\n    return a;\n  }\n\n  var b = [];\n  var count = 0;\n  b[0] = {\n    value: a[0],\n    identifier: 0\n  };\n\n  for (var i = 1; i < a.length; i++) {\n    if (a[i] === a[i - 1]) {\n      count++;\n    } else {\n      count = 0;\n    }\n\n    b.push({\n      value: a[i],\n      identifier: count\n    });\n  }\n\n  return b;\n}\n/**\n * Remove the numeric identifier from the elements\n * @param {array} a  An array\n * @return {array} An array of values without identifiers\n */\n\nfunction generalize(a) {\n  if (!Array.isArray(a)) {\n    throw new TypeError('Array input expected');\n  }\n\n  if (a.length === 0) {\n    return a;\n  }\n\n  var b = [];\n\n  for (var i = 0; i < a.length; i++) {\n    b.push(a[i].value);\n  }\n\n  return b;\n}\n/**\n * Check the datatype of a given object\n * This is a low level implementation that should only be used by\n * parent Matrix classes such as SparseMatrix or DenseMatrix\n * This method does not validate Array Matrix shape\n * @param {Array} array\n * @param {function} typeOf   Callback function to use to determine the type of a value\n * @return {string}\n */\n\nfunction getArrayDataType(array, typeOf) {\n  var type; // to hold type info\n\n  var length = 0; // to hold length value to ensure it has consistent sizes\n\n  for (var i = 0; i < array.length; i++) {\n    var item = array[i];\n    var isArray = Array.isArray(item); // Saving the target matrix row size\n\n    if (i === 0 && isArray) {\n      length = item.length;\n    } // If the current item is an array but the length does not equal the targetVectorSize\n\n\n    if (isArray && item.length !== length) {\n      return undefined;\n    }\n\n    var itemType = isArray ? getArrayDataType(item, typeOf) // recurse into a nested array\n    : typeOf(item);\n\n    if (type === undefined) {\n      type = itemType; // first item\n    } else if (type !== itemType) {\n      return 'mixed';\n    } else {// we're good, everything has the same type so far\n    }\n  }\n\n  return type;\n}\n/**\n * Return the last item from an array\n * @param array\n * @returns {*}\n */\n\nfunction last(array) {\n  return array[array.length - 1];\n}\n/**\n * Get all but the last element of array.\n */\n\nfunction initial(array) {\n  return array.slice(0, array.length - 1);\n}\n/**\n * Test whether an array or string contains an item\n * @param {Array | string} array\n * @param {*} item\n * @return {boolean}\n */\n\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/array.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bitAndBigNumber\": () => (/* binding */ bitAndBigNumber),\n/* harmony export */   \"bitNotBigNumber\": () => (/* binding */ bitNotBigNumber),\n/* harmony export */   \"bitOrBigNumber\": () => (/* binding */ bitOrBigNumber),\n/* harmony export */   \"bitwise\": () => (/* binding */ bitwise),\n/* harmony export */   \"bitXor\": () => (/* binding */ bitXor),\n/* harmony export */   \"leftShiftBigNumber\": () => (/* binding */ leftShiftBigNumber),\n/* harmony export */   \"rightArithShiftBigNumber\": () => (/* binding */ rightArithShiftBigNumber)\n/* harmony export */ });\n/**\n * Bitwise and for Bignumbers\n *\n * Special Cases:\n *   N &  n =  N\n *   n &  0 =  0\n *   n & -1 =  n\n *   n &  n =  n\n *   I &  I =  I\n *  -I & -I = -I\n *   I & -I =  0\n *   I &  n =  n\n *   I & -n =  I\n *  -I &  n =  0\n *  -I & -n = -I\n *\n * @param {BigNumber} x\n * @param {BigNumber} y\n * @return {BigNumber} Result of `x` & `y`, is fully precise\n * @private\n */\nfunction bitAndBigNumber(x, y) {\n  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {\n    throw new Error('Integers expected in function bitAnd');\n  }\n\n  var BigNumber = x.constructor;\n\n  if (x.isNaN() || y.isNaN()) {\n    return new BigNumber(NaN);\n  }\n\n  if (x.isZero() || y.eq(-1) || x.eq(y)) {\n    return x;\n  }\n\n  if (y.isZero() || x.eq(-1)) {\n    return y;\n  }\n\n  if (!x.isFinite() || !y.isFinite()) {\n    if (!x.isFinite() && !y.isFinite()) {\n      if (x.isNegative() === y.isNegative()) {\n        return x;\n      }\n\n      return new BigNumber(0);\n    }\n\n    if (!x.isFinite()) {\n      if (y.isNegative()) {\n        return x;\n      }\n\n      if (x.isNegative()) {\n        return new BigNumber(0);\n      }\n\n      return y;\n    }\n\n    if (!y.isFinite()) {\n      if (x.isNegative()) {\n        return y;\n      }\n\n      if (y.isNegative()) {\n        return new BigNumber(0);\n      }\n\n      return x;\n    }\n  }\n\n  return bitwise(x, y, function (a, b) {\n    return a & b;\n  });\n}\n/**\n * Bitwise not\n * @param {BigNumber} x\n * @return {BigNumber} Result of ~`x`, fully precise\n *\n */\n\nfunction bitNotBigNumber(x) {\n  if (x.isFinite() && !x.isInteger()) {\n    throw new Error('Integer expected in function bitNot');\n  }\n\n  var BigNumber = x.constructor;\n  var prevPrec = BigNumber.precision;\n  BigNumber.config({\n    precision: 1E9\n  });\n  var result = x.plus(new BigNumber(1));\n  result.s = -result.s || null;\n  BigNumber.config({\n    precision: prevPrec\n  });\n  return result;\n}\n/**\n * Bitwise OR for BigNumbers\n *\n * Special Cases:\n *   N |  n =  N\n *   n |  0 =  n\n *   n | -1 = -1\n *   n |  n =  n\n *   I |  I =  I\n *  -I | -I = -I\n *   I | -n = -1\n *   I | -I = -1\n *   I |  n =  I\n *  -I |  n = -I\n *  -I | -n = -n\n *\n * @param {BigNumber} x\n * @param {BigNumber} y\n * @return {BigNumber} Result of `x` | `y`, fully precise\n */\n\nfunction bitOrBigNumber(x, y) {\n  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {\n    throw new Error('Integers expected in function bitOr');\n  }\n\n  var BigNumber = x.constructor;\n\n  if (x.isNaN() || y.isNaN()) {\n    return new BigNumber(NaN);\n  }\n\n  var negOne = new BigNumber(-1);\n\n  if (x.isZero() || y.eq(negOne) || x.eq(y)) {\n    return y;\n  }\n\n  if (y.isZero() || x.eq(negOne)) {\n    return x;\n  }\n\n  if (!x.isFinite() || !y.isFinite()) {\n    if (!x.isFinite() && !x.isNegative() && y.isNegative() || x.isNegative() && !y.isNegative() && !y.isFinite()) {\n      return negOne;\n    }\n\n    if (x.isNegative() && y.isNegative()) {\n      return x.isFinite() ? x : y;\n    }\n\n    return x.isFinite() ? y : x;\n  }\n\n  return bitwise(x, y, function (a, b) {\n    return a | b;\n  });\n}\n/**\n * Applies bitwise function to numbers\n * @param {BigNumber} x\n * @param {BigNumber} y\n * @param {function (a, b)} func\n * @return {BigNumber}\n */\n\nfunction bitwise(x, y, func) {\n  var BigNumber = x.constructor;\n  var xBits, yBits;\n  var xSign = +(x.s < 0);\n  var ySign = +(y.s < 0);\n\n  if (xSign) {\n    xBits = decCoefficientToBinaryString(bitNotBigNumber(x));\n\n    for (var i = 0; i < xBits.length; ++i) {\n      xBits[i] ^= 1;\n    }\n  } else {\n    xBits = decCoefficientToBinaryString(x);\n  }\n\n  if (ySign) {\n    yBits = decCoefficientToBinaryString(bitNotBigNumber(y));\n\n    for (var _i = 0; _i < yBits.length; ++_i) {\n      yBits[_i] ^= 1;\n    }\n  } else {\n    yBits = decCoefficientToBinaryString(y);\n  }\n\n  var minBits, maxBits, minSign;\n\n  if (xBits.length <= yBits.length) {\n    minBits = xBits;\n    maxBits = yBits;\n    minSign = xSign;\n  } else {\n    minBits = yBits;\n    maxBits = xBits;\n    minSign = ySign;\n  }\n\n  var shortLen = minBits.length;\n  var longLen = maxBits.length;\n  var expFuncVal = func(xSign, ySign) ^ 1;\n  var outVal = new BigNumber(expFuncVal ^ 1);\n  var twoPower = new BigNumber(1);\n  var two = new BigNumber(2);\n  var prevPrec = BigNumber.precision;\n  BigNumber.config({\n    precision: 1E9\n  });\n\n  while (shortLen > 0) {\n    if (func(minBits[--shortLen], maxBits[--longLen]) === expFuncVal) {\n      outVal = outVal.plus(twoPower);\n    }\n\n    twoPower = twoPower.times(two);\n  }\n\n  while (longLen > 0) {\n    if (func(minSign, maxBits[--longLen]) === expFuncVal) {\n      outVal = outVal.plus(twoPower);\n    }\n\n    twoPower = twoPower.times(two);\n  }\n\n  BigNumber.config({\n    precision: prevPrec\n  });\n\n  if (expFuncVal === 0) {\n    outVal.s = -outVal.s;\n  }\n\n  return outVal;\n}\n/* Extracted from decimal.js, and edited to specialize. */\n\nfunction decCoefficientToBinaryString(x) {\n  // Convert to string\n  var a = x.d; // array with digits\n\n  var r = a[0] + '';\n\n  for (var i = 1; i < a.length; ++i) {\n    var s = a[i] + '';\n\n    for (var z = 7 - s.length; z--;) {\n      s = '0' + s;\n    }\n\n    r += s;\n  }\n\n  var j = r.length;\n\n  while (r.charAt(j) === '0') {\n    j--;\n  }\n\n  var xe = x.e;\n  var str = r.slice(0, j + 1 || 1);\n  var strL = str.length;\n\n  if (xe > 0) {\n    if (++xe > strL) {\n      // Append zeros.\n      xe -= strL;\n\n      while (xe--) {\n        str += '0';\n      }\n    } else if (xe < strL) {\n      str = str.slice(0, xe) + '.' + str.slice(xe);\n    }\n  } // Convert from base 10 (decimal) to base 2\n\n\n  var arr = [0];\n\n  for (var _i2 = 0; _i2 < str.length;) {\n    var arrL = arr.length;\n\n    while (arrL--) {\n      arr[arrL] *= 10;\n    }\n\n    arr[0] += parseInt(str.charAt(_i2++)); // convert to int\n\n    for (var _j = 0; _j < arr.length; ++_j) {\n      if (arr[_j] > 1) {\n        if (arr[_j + 1] === null || arr[_j + 1] === undefined) {\n          arr[_j + 1] = 0;\n        }\n\n        arr[_j + 1] += arr[_j] >> 1;\n        arr[_j] &= 1;\n      }\n    }\n  }\n\n  return arr.reverse();\n}\n/**\n * Bitwise XOR for BigNumbers\n *\n * Special Cases:\n *   N ^  n =  N\n *   n ^  0 =  n\n *   n ^  n =  0\n *   n ^ -1 = ~n\n *   I ^  n =  I\n *   I ^ -n = -I\n *   I ^ -I = -1\n *  -I ^  n = -I\n *  -I ^ -n =  I\n *\n * @param {BigNumber} x\n * @param {BigNumber} y\n * @return {BigNumber} Result of `x` ^ `y`, fully precise\n *\n */\n\n\nfunction bitXor(x, y) {\n  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {\n    throw new Error('Integers expected in function bitXor');\n  }\n\n  var BigNumber = x.constructor;\n\n  if (x.isNaN() || y.isNaN()) {\n    return new BigNumber(NaN);\n  }\n\n  if (x.isZero()) {\n    return y;\n  }\n\n  if (y.isZero()) {\n    return x;\n  }\n\n  if (x.eq(y)) {\n    return new BigNumber(0);\n  }\n\n  var negOne = new BigNumber(-1);\n\n  if (x.eq(negOne)) {\n    return bitNotBigNumber(y);\n  }\n\n  if (y.eq(negOne)) {\n    return bitNotBigNumber(x);\n  }\n\n  if (!x.isFinite() || !y.isFinite()) {\n    if (!x.isFinite() && !y.isFinite()) {\n      return negOne;\n    }\n\n    return new BigNumber(x.isNegative() === y.isNegative() ? Infinity : -Infinity);\n  }\n\n  return bitwise(x, y, function (a, b) {\n    return a ^ b;\n  });\n}\n/**\n * Bitwise left shift\n *\n * Special Cases:\n *  n << -n = N\n *  n <<  N = N\n *  N <<  n = N\n *  n <<  0 = n\n *  0 <<  n = 0\n *  I <<  I = N\n *  I <<  n = I\n *  n <<  I = I\n *\n * @param {BigNumber} x\n * @param {BigNumber} y\n * @return {BigNumber} Result of `x` << `y`\n *\n */\n\nfunction leftShiftBigNumber(x, y) {\n  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {\n    throw new Error('Integers expected in function leftShift');\n  }\n\n  var BigNumber = x.constructor;\n\n  if (x.isNaN() || y.isNaN() || y.isNegative() && !y.isZero()) {\n    return new BigNumber(NaN);\n  }\n\n  if (x.isZero() || y.isZero()) {\n    return x;\n  }\n\n  if (!x.isFinite() && !y.isFinite()) {\n    return new BigNumber(NaN);\n  } // Math.pow(2, y) is fully precise for y < 55, and fast\n\n\n  if (y.lt(55)) {\n    return x.times(Math.pow(2, y.toNumber()) + '');\n  }\n\n  return x.times(new BigNumber(2).pow(y));\n}\n/*\n * Special Cases:\n *   n >> -n =  N\n *   n >>  N =  N\n *   N >>  n =  N\n *   I >>  I =  N\n *   n >>  0 =  n\n *   I >>  n =  I\n *  -I >>  n = -I\n *  -I >>  I = -I\n *   n >>  I =  I\n *  -n >>  I = -1\n *   0 >>  n =  0\n *\n * @param {BigNumber} value\n * @param {BigNumber} value\n * @return {BigNumber} Result of `x` >> `y`\n *\n */\n\nfunction rightArithShiftBigNumber(x, y) {\n  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {\n    throw new Error('Integers expected in function rightArithShift');\n  }\n\n  var BigNumber = x.constructor;\n\n  if (x.isNaN() || y.isNaN() || y.isNegative() && !y.isZero()) {\n    return new BigNumber(NaN);\n  }\n\n  if (x.isZero() || y.isZero()) {\n    return x;\n  }\n\n  if (!y.isFinite()) {\n    if (x.isNegative()) {\n      return new BigNumber(-1);\n    }\n\n    if (!x.isFinite()) {\n      return new BigNumber(NaN);\n    }\n\n    return new BigNumber(0);\n  } // Math.pow(2, y) is fully precise for y < 55, and fast\n\n\n  if (y.lt(55)) {\n    return x.div(Math.pow(2, y.toNumber()) + '').floor();\n  }\n\n  return x.div(new BigNumber(2).pow(y)).floor();\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/bignumber/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/bignumber/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createBigNumberE\": () => (/* binding */ createBigNumberE),\n/* harmony export */   \"createBigNumberPhi\": () => (/* binding */ createBigNumberPhi),\n/* harmony export */   \"createBigNumberPi\": () => (/* binding */ createBigNumberPi),\n/* harmony export */   \"createBigNumberTau\": () => (/* binding */ createBigNumberTau)\n/* harmony export */ });\n/* harmony import */ var _function_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../function.js */ \"./node_modules/mathjs/lib/esm/utils/function.js\");\n\n/**\n * Calculate BigNumber e\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns e\n */\n\nvar createBigNumberE = (0,_function_js__WEBPACK_IMPORTED_MODULE_0__.memoize)(function (BigNumber) {\n  return new BigNumber(1).exp();\n}, {\n  hasher\n});\n/**\n * Calculate BigNumber golden ratio, phi = (1+sqrt(5))/2\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns phi\n */\n\nvar createBigNumberPhi = (0,_function_js__WEBPACK_IMPORTED_MODULE_0__.memoize)(function (BigNumber) {\n  return new BigNumber(1).plus(new BigNumber(5).sqrt()).div(2);\n}, {\n  hasher\n});\n/**\n * Calculate BigNumber pi.\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns pi\n */\n\nvar createBigNumberPi = (0,_function_js__WEBPACK_IMPORTED_MODULE_0__.memoize)(function (BigNumber) {\n  return BigNumber.acos(-1);\n}, {\n  hasher\n});\n/**\n * Calculate BigNumber tau, tau = 2 * pi\n * @param {function} BigNumber   BigNumber constructor\n * @returns {BigNumber} Returns tau\n */\n\nvar createBigNumberTau = (0,_function_js__WEBPACK_IMPORTED_MODULE_0__.memoize)(function (BigNumber) {\n  return createBigNumberPi(BigNumber).times(2);\n}, {\n  hasher\n});\n/**\n * Create a hash for a BigNumber constructor function. The created has is\n * the configured precision\n * @param {Array} args         Supposed to contain a single entry with\n *                             a BigNumber constructor\n * @return {number} precision\n * @private\n */\n\nfunction hasher(args) {\n  return args[0].precision;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/bignumber/constants.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/bignumber/formatter.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/bignumber/formatter.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"format\": () => (/* binding */ format),\n/* harmony export */   \"toEngineering\": () => (/* binding */ toEngineering),\n/* harmony export */   \"toExponential\": () => (/* binding */ toExponential),\n/* harmony export */   \"toFixed\": () => (/* binding */ toFixed)\n/* harmony export */ });\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\n/**\n * Formats a BigNumber in a given base\n * @param {BigNumber} n\n * @param {number} base\n * @param {number} size\n * @returns {string}\n */\n\nfunction formatBigNumberToBase(n, base, size) {\n  var BigNumberCtor = n.constructor;\n  var big2 = new BigNumberCtor(2);\n  var suffix = '';\n\n  if (size) {\n    if (size < 1) {\n      throw new Error('size must be in greater than 0');\n    }\n\n    if (!(0,_number_js__WEBPACK_IMPORTED_MODULE_0__.isInteger)(size)) {\n      throw new Error('size must be an integer');\n    }\n\n    if (n.greaterThan(big2.pow(size - 1).sub(1)) || n.lessThan(big2.pow(size - 1).mul(-1))) {\n      throw new Error(\"Value must be in range [-2^\".concat(size - 1, \", 2^\").concat(size - 1, \"-1]\"));\n    }\n\n    if (!n.isInteger()) {\n      throw new Error('Value must be an integer');\n    }\n\n    if (n.lessThan(0)) {\n      n = n.add(big2.pow(size));\n    }\n\n    suffix = \"i\".concat(size);\n  }\n\n  switch (base) {\n    case 2:\n      return \"\".concat(n.toBinary()).concat(suffix);\n\n    case 8:\n      return \"\".concat(n.toOctal()).concat(suffix);\n\n    case 16:\n      return \"\".concat(n.toHexadecimal()).concat(suffix);\n\n    default:\n      throw new Error(\"Base \".concat(base, \" not supported \"));\n  }\n}\n/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                         'bin', 'oct, or\n *                         'hex'            Format the number using binary, octal,\n *                                          or hexadecimal notation.\n *                                          For example '0b1101' and '0x10fe'.\n *                     {number} wordSize    The word size in bits to use for formatting\n *                                          in binary, octal, or hexadecimal notation.\n *                                          To be used only with 'bin', 'oct', or 'hex'\n *                                          values for 'notation' option. When this option\n *                                          is defined the value is formatted as a signed\n *                                          twos complement integer of the given word size\n *                                          and the size suffix is appended to the output.\n *                                          For example\n *                                          format(-1, {notation: 'hex', wordSize: 8}) === '0xffi8'.\n *                                          Default value is undefined.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\n\n\nfunction format(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n  var wordSize;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (typeof options === 'number') {\n      precision = options;\n    } else if (options.precision) {\n      precision = options.precision;\n    }\n\n    if (options.wordSize) {\n      wordSize = options.wordSize;\n\n      if (typeof wordSize !== 'number') {\n        throw new Error('Option \"wordSize\" must be a number');\n      }\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision);\n\n    case 'exponential':\n      return toExponential(value, precision);\n\n    case 'engineering':\n      return toEngineering(value, precision);\n\n    case 'bin':\n      return formatBigNumberToBase(value, 2, wordSize);\n\n    case 'oct':\n      return formatBigNumberToBase(value, 8, wordSize);\n\n    case 'hex':\n      return formatBigNumberToBase(value, 16, wordSize);\n\n    case 'auto':\n      {\n        // determine lower and upper bound for exponential notation.\n        // TODO: implement support for upper and lower to be BigNumbers themselves\n        var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n        var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5; // handle special case zero\n\n        if (value.isZero()) return '0'; // determine whether or not to output exponential notation\n\n        var str;\n        var rounded = value.toSignificantDigits(precision);\n        var exp = rounded.e;\n\n        if (exp >= lowerExp && exp < upperExp) {\n          // normal number notation\n          str = rounded.toFixed();\n        } else {\n          // exponential notation\n          str = toExponential(value, precision);\n        } // remove trailing zeros after the decimal point\n\n\n        return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n          var digits = arguments[2];\n          var e = arguments[4];\n          return digits !== '.' ? digits + e : e;\n        });\n      }\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", \"fixed\", \"bin\", \"oct\", or \"hex.');\n  }\n}\n/**\n * Format a BigNumber in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {BigNumber | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\n\nfunction toEngineering(value, precision) {\n  // find nearest lower multiple of 3 for exponent\n  var e = value.e;\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3; // find difference in exponents, and calculate the value without exponent\n\n  var valueWithoutExp = value.mul(Math.pow(10, -newExp));\n  var valueStr = valueWithoutExp.toPrecision(precision);\n\n  if (valueStr.indexOf('e') !== -1) {\n    valueStr = valueWithoutExp.toString();\n  }\n\n  return valueStr + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n}\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\n\nfunction toExponential(value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  } else {\n    return value.toExponential();\n  }\n}\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=undefined] Optional number of decimals after the\n *                                       decimal point. Undefined by default.\n */\n\nfunction toFixed(value, precision) {\n  return value.toFixed(precision);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/bignumber/formatter.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nearlyEqual\": () => (/* binding */ nearlyEqual)\n/* harmony export */ });\n/**\n * Compares two BigNumbers.\n * @param {BigNumber} x       First value to compare\n * @param {BigNumber} y       Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n */\nfunction nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x.eq(y);\n  } // use \"==\" operator, handles infinities\n\n\n  if (x.eq(y)) {\n    return true;\n  } // NaN\n\n\n  if (x.isNaN() || y.isNaN()) {\n    return false;\n  } // at this point x and y should be finite\n\n\n  if (x.isFinite() && y.isFinite()) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = x.minus(y).abs();\n\n    if (diff.isZero()) {\n      return true;\n    } else {\n      // use relative error\n      var max = x.constructor.max(x.abs(), y.abs());\n      return diff.lte(max.times(epsilon));\n    }\n  } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n  return false;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/collection.js":
/*!*********************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/collection.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"containsCollections\": () => (/* binding */ containsCollections),\n/* harmony export */   \"deepForEach\": () => (/* binding */ deepForEach),\n/* harmony export */   \"deepMap\": () => (/* binding */ deepMap),\n/* harmony export */   \"reduce\": () => (/* binding */ reduce),\n/* harmony export */   \"scatter\": () => (/* binding */ scatter)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _error_IndexError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/IndexError.js */ \"./node_modules/mathjs/lib/esm/error/IndexError.js\");\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n\n\n\n/**\n * Test whether an array contains collections\n * @param {Array} array\n * @returns {boolean} Returns true when the array contains one or multiple\n *                    collections (Arrays or Matrices). Returns false otherwise.\n */\n\nfunction containsCollections(array) {\n  for (var i = 0; i < array.length; i++) {\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isCollection)(array[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Recursively loop over all elements in a given multi dimensional array\n * and invoke the callback on each of the elements.\n * @param {Array | Matrix} array\n * @param {Function} callback     The callback method is invoked with one\n *                                parameter: the current element in the array\n */\n\nfunction deepForEach(array, callback) {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isMatrix)(array)) {\n    array = array.valueOf();\n  }\n\n  for (var i = 0, ii = array.length; i < ii; i++) {\n    var value = array[i];\n\n    if (Array.isArray(value)) {\n      deepForEach(value, callback);\n    } else {\n      callback(value);\n    }\n  }\n}\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\n\nfunction deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n}\n/**\n * Reduce a given matrix or array to a new matrix or\n * array with one less dimension, applying the given\n * callback in the selected dimension.\n * @param {Array | Matrix} mat\n * @param {number} dim\n * @param {Function} callback\n * @return {Array | Matrix} res\n */\n\nfunction reduce(mat, dim, callback) {\n  var size = Array.isArray(mat) ? (0,_array_js__WEBPACK_IMPORTED_MODULE_1__.arraySize)(mat) : mat.size();\n\n  if (dim < 0 || dim >= size.length) {\n    // TODO: would be more clear when throwing a DimensionError here\n    throw new _error_IndexError_js__WEBPACK_IMPORTED_MODULE_2__.IndexError(dim, size.length);\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isMatrix)(mat)) {\n    return mat.create(_reduce(mat.valueOf(), dim, callback));\n  } else {\n    return _reduce(mat, dim, callback);\n  }\n}\n/**\n * Recursively reduce a matrix\n * @param {Array} mat\n * @param {number} dim\n * @param {Function} callback\n * @returns {Array} ret\n * @private\n */\n\nfunction _reduce(mat, dim, callback) {\n  var i, ret, val, tran;\n\n  if (dim <= 0) {\n    if (!Array.isArray(mat[0])) {\n      val = mat[0];\n\n      for (i = 1; i < mat.length; i++) {\n        val = callback(val, mat[i]);\n      }\n\n      return val;\n    } else {\n      tran = _switch(mat);\n      ret = [];\n\n      for (i = 0; i < tran.length; i++) {\n        ret[i] = _reduce(tran[i], dim - 1, callback);\n      }\n\n      return ret;\n    }\n  } else {\n    ret = [];\n\n    for (i = 0; i < mat.length; i++) {\n      ret[i] = _reduce(mat[i], dim - 1, callback);\n    }\n\n    return ret;\n  }\n}\n/**\n * Transpose a matrix\n * @param {Array} mat\n * @returns {Array} ret\n * @private\n */\n\n\nfunction _switch(mat) {\n  var I = mat.length;\n  var J = mat[0].length;\n  var i, j;\n  var ret = [];\n\n  for (j = 0; j < J; j++) {\n    var tmp = [];\n\n    for (i = 0; i < I; i++) {\n      tmp.push(mat[i][j]);\n    }\n\n    ret.push(tmp);\n  }\n\n  return ret;\n} // TODO: document function scatter\n\n\nfunction scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {\n  // a arrays\n  var avalues = a._values;\n  var aindex = a._index;\n  var aptr = a._ptr; // vars\n\n  var k, k0, k1, i; // check we need to process values (pattern matrix)\n\n  if (x) {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i); // x(i) = A, check we need to call function this time\n\n        if (update) {\n          // copy value to workspace calling callback function\n          x[i] = inverse ? f(avalues[k], value) : f(value, avalues[k]); // function was called on current row\n\n          u[i] = mark;\n        } else {\n          // copy value to workspace\n          x[i] = avalues[k];\n        }\n      } else {\n        // i exists in C already\n        x[i] = inverse ? f(avalues[k], x[i]) : f(x[i], avalues[k]); // function was called on current row\n\n        u[i] = mark;\n      }\n    }\n  } else {\n    // values in j\n    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n      // row\n      i = aindex[k]; // check value exists in current j\n\n      if (w[i] !== mark) {\n        // i is new entry in j\n        w[i] = mark; // add i to pattern of C\n\n        cindex.push(i);\n      } else {\n        // indicate function was called on current row\n        u[i] = mark;\n      }\n    }\n  }\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/collection.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/complex.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/complex.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"complexEquals\": () => (/* binding */ complexEquals)\n/* harmony export */ });\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n\n/**\n * Test whether two complex values are equal provided a given epsilon.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x\n * @param {Complex} y\n * @param {number} epsilon\n * @returns {boolean}\n */\n\nfunction complexEquals(x, y, epsilon) {\n  return (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.nearlyEqual)(x.re, y.re, epsilon) && (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.nearlyEqual)(x.im, y.im, epsilon);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/complex.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/customs.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/customs.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSafeProperty\": () => (/* binding */ getSafeProperty),\n/* harmony export */   \"setSafeProperty\": () => (/* binding */ setSafeProperty),\n/* harmony export */   \"isSafeProperty\": () => (/* binding */ isSafeProperty),\n/* harmony export */   \"hasSafeProperty\": () => (/* binding */ hasSafeProperty),\n/* harmony export */   \"getSafeProperties\": () => (/* binding */ getSafeProperties),\n/* harmony export */   \"validateSafeMethod\": () => (/* binding */ validateSafeMethod),\n/* harmony export */   \"isSafeMethod\": () => (/* binding */ isSafeMethod),\n/* harmony export */   \"isPlainObject\": () => (/* binding */ isPlainObject)\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\n\nfunction getSafeProperty(object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\n\n\nfunction setSafeProperty(object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    object[prop] = value;\n    return value;\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\nfunction getSafeProperties(object) {\n  return Object.keys(object).filter(prop => (0,_object_js__WEBPACK_IMPORTED_MODULE_0__.hasOwnProperty)(object, prop));\n}\n\nfunction hasSafeProperty(object, prop) {\n  return prop in object;\n}\n/**\n * Test whether a property is safe to use for an object.\n * For example .toString and .constructor are not safe\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\n\n\nfunction isSafeProperty(object, prop) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  } // SAFE: whitelisted\n  // e.g length\n\n\n  if ((0,_object_js__WEBPACK_IMPORTED_MODULE_0__.hasOwnProperty)(safeNativeProperties, prop)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n\n  return true;\n}\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n */\n// TODO: merge this function into assign.js?\n\n\nfunction validateSafeMethod(object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n}\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\n\n\nfunction isSafeMethod(object, method) {\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\n    return false;\n  } // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n\n\n  if ((0,_object_js__WEBPACK_IMPORTED_MODULE_0__.hasOwnProperty)(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n    return false;\n  } // SAFE: whitelisted\n  // e.g toString\n\n\n  if ((0,_object_js__WEBPACK_IMPORTED_MODULE_0__.hasOwnProperty)(safeNativeMethods, method)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n\n  return true;\n}\n\nfunction isPlainObject(object) {\n  return typeof object === 'object' && object && object.constructor === Object;\n}\n\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/customs.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/factory.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/factory.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"factory\": () => (/* binding */ factory),\n/* harmony export */   \"sortFactories\": () => (/* binding */ sortFactories),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"isFactory\": () => (/* binding */ isFactory),\n/* harmony export */   \"assertDependencies\": () => (/* binding */ assertDependencies),\n/* harmony export */   \"isOptionalDependency\": () => (/* binding */ isOptionalDependency),\n/* harmony export */   \"stripOptionalNotation\": () => (/* binding */ stripOptionalNotation)\n/* harmony export */ });\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array.js */ \"./node_modules/mathjs/lib/esm/utils/array.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object.js */ \"./node_modules/mathjs/lib/esm/utils/object.js\");\n\n\n/**\n * Create a factory function, which can be used to inject dependencies.\n *\n * The created functions are memoized, a consecutive call of the factory\n * with the exact same inputs will return the same function instance.\n * The memoized cache is exposed on `factory.cache` and can be cleared\n * if needed.\n *\n * Example:\n *\n *     const name = 'log'\n *     const dependencies = ['config', 'typed', 'divideScalar', 'Complex']\n *\n *     export const createLog = factory(name, dependencies, ({ typed, config, divideScalar, Complex }) => {\n *       // ... create the function log here and return it\n *     }\n *\n * @param {string} name           Name of the function to be created\n * @param {string[]} dependencies The names of all required dependencies\n * @param {function} create       Callback function called with an object with all dependencies\n * @param {Object} [meta]         Optional object with meta information that will be attached\n *                                to the created factory function as property `meta`.\n * @returns {function}\n */\n\nfunction factory(name, dependencies, create, meta) {\n  function assertAndCreate(scope) {\n    // we only pass the requested dependencies to the factory function\n    // to prevent functions to rely on dependencies that are not explicitly\n    // requested.\n    var deps = (0,_object_js__WEBPACK_IMPORTED_MODULE_0__.pickShallow)(scope, dependencies.map(stripOptionalNotation));\n    assertDependencies(name, dependencies, scope);\n    return create(deps);\n  }\n\n  assertAndCreate.isFactory = true;\n  assertAndCreate.fn = name;\n  assertAndCreate.dependencies = dependencies.slice().sort();\n\n  if (meta) {\n    assertAndCreate.meta = meta;\n  }\n\n  return assertAndCreate;\n}\n/**\n * Sort all factories such that when loading in order, the dependencies are resolved.\n *\n * @param {Array} factories\n * @returns {Array} Returns a new array with the sorted factories.\n */\n\nfunction sortFactories(factories) {\n  var factoriesByName = {};\n  factories.forEach(factory => {\n    factoriesByName[factory.fn] = factory;\n  });\n\n  function containsDependency(factory, dependency) {\n    // TODO: detect circular references\n    if (isFactory(factory)) {\n      if ((0,_array_js__WEBPACK_IMPORTED_MODULE_1__.contains)(factory.dependencies, dependency.fn || dependency.name)) {\n        return true;\n      }\n\n      if (factory.dependencies.some(d => containsDependency(factoriesByName[d], dependency))) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var sorted = [];\n\n  function addFactory(factory) {\n    var index = 0;\n\n    while (index < sorted.length && !containsDependency(sorted[index], factory)) {\n      index++;\n    }\n\n    sorted.splice(index, 0, factory);\n  } // sort regular factory functions\n\n\n  factories.filter(isFactory).forEach(addFactory); // sort legacy factory functions AFTER the regular factory functions\n\n  factories.filter(factory => !isFactory(factory)).forEach(addFactory);\n  return sorted;\n} // TODO: comment or cleanup if unused in the end\n\nfunction create(factories) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  sortFactories(factories).forEach(factory => factory(scope));\n  return scope;\n}\n/**\n * Test whether an object is a factory. This is the case when it has\n * properties name, dependencies, and a function create.\n * @param {*} obj\n * @returns {boolean}\n */\n\nfunction isFactory(obj) {\n  return typeof obj === 'function' && typeof obj.fn === 'string' && Array.isArray(obj.dependencies);\n}\n/**\n * Assert that all dependencies of a list with dependencies are available in the provided scope.\n *\n * Will throw an exception when there are dependencies missing.\n *\n * @param {string} name   Name for the function to be created. Used to generate a useful error message\n * @param {string[]} dependencies\n * @param {Object} scope\n */\n\nfunction assertDependencies(name, dependencies, scope) {\n  var allDefined = dependencies.filter(dependency => !isOptionalDependency(dependency)) // filter optionals\n  .every(dependency => scope[dependency] !== undefined);\n\n  if (!allDefined) {\n    var missingDependencies = dependencies.filter(dependency => scope[dependency] === undefined); // TODO: create a custom error class for this, a MathjsError or something like that\n\n    throw new Error(\"Cannot create function \\\"\".concat(name, \"\\\", \") + \"some dependencies are missing: \".concat(missingDependencies.map(d => \"\\\"\".concat(d, \"\\\"\")).join(', '), \".\"));\n  }\n}\nfunction isOptionalDependency(dependency) {\n  return dependency && dependency[0] === '?';\n}\nfunction stripOptionalNotation(dependency) {\n  return dependency && dependency[0] === '?' ? dependency.slice(1) : dependency;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/factory.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/function.js":
/*!*******************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/function.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"memoize\": () => (/* binding */ memoize),\n/* harmony export */   \"memoizeCompare\": () => (/* binding */ memoizeCompare),\n/* harmony export */   \"maxArgumentCount\": () => (/* binding */ maxArgumentCount)\n/* harmony export */ });\n/* harmony import */ var _lruQueue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lruQueue.js */ \"./node_modules/mathjs/lib/esm/utils/lruQueue.js\");\n// function utils\n\n/**\n * Memoize a given function by caching the computed result.\n * The cache of a memoized function can be cleared by deleting the `cache`\n * property of the function.\n *\n * @param {function} fn                     The function to be memoized.\n *                                          Must be a pure function.\n * @param {Object} [options]\n * @param {function(args: Array): string} [options.hasher]\n *    A custom hash builder. Is JSON.stringify by default.\n * @param {number | undefined} [options.limit]\n *    Maximum number of values that may be cached. Undefined indicates\n *    unlimited (default)\n * @return {function}                       Returns the memoized function\n */\n\nfunction memoize(fn) {\n  var {\n    hasher,\n    limit\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  limit = limit == null ? Number.POSITIVE_INFINITY : limit;\n  hasher = hasher == null ? JSON.stringify : hasher;\n  return function memoize() {\n    if (typeof memoize.cache !== 'object') {\n      memoize.cache = {\n        values: new Map(),\n        lru: (0,_lruQueue_js__WEBPACK_IMPORTED_MODULE_0__.lruQueue)(limit || Number.POSITIVE_INFINITY)\n      };\n    }\n\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    var hash = hasher(args);\n\n    if (memoize.cache.values.has(hash)) {\n      memoize.cache.lru.hit(hash);\n      return memoize.cache.values.get(hash);\n    }\n\n    var newVal = fn.apply(fn, args);\n    memoize.cache.values.set(hash, newVal);\n    memoize.cache.values.delete(memoize.cache.lru.hit(hash));\n    return newVal;\n  };\n}\n/**\n * Memoize a given function by caching all results and the arguments,\n * and comparing against the arguments of previous results before\n * executing again.\n * This is less performant than `memoize` which calculates a hash,\n * which is very fast to compare. Use `memoizeCompare` only when it is\n * not possible to create a unique serializable hash from the function\n * arguments.\n * The isEqual function must compare two sets of arguments\n * and return true when equal (can be a deep equality check for example).\n * @param {function} fn\n * @param {function(a: *, b: *) : boolean} isEqual\n * @returns {function}\n */\n\nfunction memoizeCompare(fn, isEqual) {\n  var memoize = function memoize() {\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    for (var c = 0; c < memoize.cache.length; c++) {\n      var cached = memoize.cache[c];\n\n      if (isEqual(args, cached.args)) {\n        // TODO: move this cache entry to the top so recently used entries move up?\n        return cached.res;\n      }\n    }\n\n    var res = fn.apply(fn, args);\n    memoize.cache.unshift({\n      args,\n      res\n    });\n    return res;\n  };\n\n  memoize.cache = [];\n  return memoize;\n}\n/**\n * Find the maximum number of arguments expected by a typed function.\n * @param {function} fn   A typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\n\nfunction maxArgumentCount(fn) {\n  return Object.keys(fn.signatures || {}).reduce(function (args, signature) {\n    var count = (signature.match(/,/g) || []).length + 1;\n    return Math.max(args, count);\n  }, -1);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/function.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/is.js":
/*!*************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/is.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNumber\": () => (/* binding */ isNumber),\n/* harmony export */   \"isBigNumber\": () => (/* binding */ isBigNumber),\n/* harmony export */   \"isComplex\": () => (/* binding */ isComplex),\n/* harmony export */   \"isFraction\": () => (/* binding */ isFraction),\n/* harmony export */   \"isUnit\": () => (/* binding */ isUnit),\n/* harmony export */   \"isString\": () => (/* binding */ isString),\n/* harmony export */   \"isArray\": () => (/* binding */ isArray),\n/* harmony export */   \"isMatrix\": () => (/* binding */ isMatrix),\n/* harmony export */   \"isCollection\": () => (/* binding */ isCollection),\n/* harmony export */   \"isDenseMatrix\": () => (/* binding */ isDenseMatrix),\n/* harmony export */   \"isSparseMatrix\": () => (/* binding */ isSparseMatrix),\n/* harmony export */   \"isRange\": () => (/* binding */ isRange),\n/* harmony export */   \"isIndex\": () => (/* binding */ isIndex),\n/* harmony export */   \"isBoolean\": () => (/* binding */ isBoolean),\n/* harmony export */   \"isResultSet\": () => (/* binding */ isResultSet),\n/* harmony export */   \"isHelp\": () => (/* binding */ isHelp),\n/* harmony export */   \"isFunction\": () => (/* binding */ isFunction),\n/* harmony export */   \"isDate\": () => (/* binding */ isDate),\n/* harmony export */   \"isRegExp\": () => (/* binding */ isRegExp),\n/* harmony export */   \"isObject\": () => (/* binding */ isObject),\n/* harmony export */   \"isNull\": () => (/* binding */ isNull),\n/* harmony export */   \"isUndefined\": () => (/* binding */ isUndefined),\n/* harmony export */   \"isAccessorNode\": () => (/* binding */ isAccessorNode),\n/* harmony export */   \"isArrayNode\": () => (/* binding */ isArrayNode),\n/* harmony export */   \"isAssignmentNode\": () => (/* binding */ isAssignmentNode),\n/* harmony export */   \"isBlockNode\": () => (/* binding */ isBlockNode),\n/* harmony export */   \"isConditionalNode\": () => (/* binding */ isConditionalNode),\n/* harmony export */   \"isConstantNode\": () => (/* binding */ isConstantNode),\n/* harmony export */   \"isFunctionAssignmentNode\": () => (/* binding */ isFunctionAssignmentNode),\n/* harmony export */   \"isFunctionNode\": () => (/* binding */ isFunctionNode),\n/* harmony export */   \"isIndexNode\": () => (/* binding */ isIndexNode),\n/* harmony export */   \"isNode\": () => (/* binding */ isNode),\n/* harmony export */   \"isObjectNode\": () => (/* binding */ isObjectNode),\n/* harmony export */   \"isOperatorNode\": () => (/* binding */ isOperatorNode),\n/* harmony export */   \"isParenthesisNode\": () => (/* binding */ isParenthesisNode),\n/* harmony export */   \"isRangeNode\": () => (/* binding */ isRangeNode),\n/* harmony export */   \"isSymbolNode\": () => (/* binding */ isSymbolNode),\n/* harmony export */   \"isChain\": () => (/* binding */ isChain),\n/* harmony export */   \"typeOf\": () => (/* binding */ typeOf)\n/* harmony export */ });\n// type checks for all known types\n//\n// note that:\n//\n// - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n//   instanceof cannot be used because that would not allow to pass data from\n//   one instance of math.js to another since each has it's own instance of Unit.\n// - check the `isUnit` property via the constructor, so there will be no\n//   matches for \"fake\" instances like plain objects with a property `isUnit`.\n//   That is important for security reasons.\n// - It must not be possible to override the type checks used internally,\n//   for security reasons, so these functions are not exposed in the expression\n//   parser.\nfunction isNumber(x) {\n  return typeof x === 'number';\n}\nfunction isBigNumber(x) {\n  if (!x || typeof x !== 'object' || typeof x.constructor !== 'function') {\n    return false;\n  }\n\n  if (x.isBigNumber === true && typeof x.constructor.prototype === 'object' && x.constructor.prototype.isBigNumber === true) {\n    return true;\n  }\n\n  if (typeof x.constructor.isDecimal === 'function' && x.constructor.isDecimal(x) === true) {\n    return true;\n  }\n\n  return false;\n}\nfunction isComplex(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isComplex === true || false;\n}\nfunction isFraction(x) {\n  return x && typeof x === 'object' && Object.getPrototypeOf(x).isFraction === true || false;\n}\nfunction isUnit(x) {\n  return x && x.constructor.prototype.isUnit === true || false;\n}\nfunction isString(x) {\n  return typeof x === 'string';\n}\nvar isArray = Array.isArray;\nfunction isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix === true || false;\n}\n/**\n * Test whether a value is a collection: an Array or Matrix\n * @param {*} x\n * @returns {boolean} isCollection\n */\n\nfunction isCollection(x) {\n  return Array.isArray(x) || isMatrix(x);\n}\nfunction isDenseMatrix(x) {\n  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nfunction isSparseMatrix(x) {\n  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;\n}\nfunction isRange(x) {\n  return x && x.constructor.prototype.isRange === true || false;\n}\nfunction isIndex(x) {\n  return x && x.constructor.prototype.isIndex === true || false;\n}\nfunction isBoolean(x) {\n  return typeof x === 'boolean';\n}\nfunction isResultSet(x) {\n  return x && x.constructor.prototype.isResultSet === true || false;\n}\nfunction isHelp(x) {\n  return x && x.constructor.prototype.isHelp === true || false;\n}\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\nfunction isDate(x) {\n  return x instanceof Date;\n}\nfunction isRegExp(x) {\n  return x instanceof RegExp;\n}\nfunction isObject(x) {\n  return !!(x && typeof x === 'object' && x.constructor === Object && !isComplex(x) && !isFraction(x));\n}\nfunction isNull(x) {\n  return x === null;\n}\nfunction isUndefined(x) {\n  return x === undefined;\n}\nfunction isAccessorNode(x) {\n  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isArrayNode(x) {\n  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isAssignmentNode(x) {\n  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isBlockNode(x) {\n  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isConditionalNode(x) {\n  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isConstantNode(x) {\n  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isFunctionAssignmentNode(x) {\n  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isFunctionNode(x) {\n  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isIndexNode(x) {\n  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isNode(x) {\n  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isObjectNode(x) {\n  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isOperatorNode(x) {\n  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isParenthesisNode(x) {\n  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isRangeNode(x) {\n  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isSymbolNode(x) {\n  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;\n}\nfunction isChain(x) {\n  return x && x.constructor.prototype.isChain === true || false;\n}\nfunction typeOf(x) {\n  var t = typeof x;\n\n  if (t === 'object') {\n    // JavaScript types\n    if (x === null) return 'null';\n    if (Array.isArray(x)) return 'Array';\n    if (x instanceof Date) return 'Date';\n    if (x instanceof RegExp) return 'RegExp'; // math.js types\n\n    if (isBigNumber(x)) return 'BigNumber';\n    if (isComplex(x)) return 'Complex';\n    if (isFraction(x)) return 'Fraction';\n    if (isMatrix(x)) return 'Matrix';\n    if (isUnit(x)) return 'Unit';\n    if (isIndex(x)) return 'Index';\n    if (isRange(x)) return 'Range';\n    if (isResultSet(x)) return 'ResultSet';\n    if (isNode(x)) return x.type;\n    if (isChain(x)) return 'Chain';\n    if (isHelp(x)) return 'Help';\n    return 'Object';\n  }\n\n  if (t === 'function') return 'Function';\n  return t; // can be 'string', 'number', 'boolean', ...\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/is.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/lruQueue.js":
/*!*******************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/lruQueue.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lruQueue\": () => (/* binding */ lruQueue)\n/* harmony export */ });\n// (c) 2018, Mariusz Nowak\n// SPDX-License-Identifier: ISC\n// Derived from https://github.com/medikoo/lru-queue\nfunction lruQueue(limit) {\n  var size = 0;\n  var base = 1;\n  var queue = Object.create(null);\n  var map = Object.create(null);\n  var index = 0;\n\n  var del = function del(id) {\n    var oldIndex = map[id];\n    if (!oldIndex) return;\n    delete queue[oldIndex];\n    delete map[id];\n    --size;\n    if (base !== oldIndex) return;\n\n    if (!size) {\n      index = 0;\n      base = 1;\n      return;\n    }\n\n    while (!hasOwnProperty.call(queue, ++base)) {\n      continue;\n    }\n  };\n\n  limit = Math.abs(limit);\n  return {\n    hit: function hit(id) {\n      var oldIndex = map[id];\n      var nuIndex = ++index;\n      queue[nuIndex] = id;\n      map[id] = nuIndex;\n\n      if (!oldIndex) {\n        ++size;\n        if (size <= limit) return undefined;\n        id = queue[base];\n        del(id);\n        return id;\n      }\n\n      delete queue[oldIndex];\n      if (base !== oldIndex) return undefined;\n\n      while (!hasOwnProperty.call(queue, ++base)) {\n        continue;\n      }\n\n      return undefined;\n    },\n    delete: del,\n    clear: function clear() {\n      size = index = 0;\n      base = 1;\n      queue = Object.create(null);\n      map = Object.create(null);\n    }\n  };\n}\n;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/lruQueue.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/map.js":
/*!**************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/map.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ObjectWrappingMap\": () => (/* binding */ ObjectWrappingMap),\n/* harmony export */   \"createEmptyMap\": () => (/* binding */ createEmptyMap),\n/* harmony export */   \"createMap\": () => (/* binding */ createMap),\n/* harmony export */   \"toObject\": () => (/* binding */ toObject),\n/* harmony export */   \"isMap\": () => (/* binding */ isMap),\n/* harmony export */   \"assign\": () => (/* binding */ assign)\n/* harmony export */ });\n/* harmony import */ var _customs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./customs.js */ \"./node_modules/mathjs/lib/esm/utils/customs.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n\n/**\n * A map facade on a bare object.\n *\n * The small number of methods needed to implement a scope,\n * forwarding on to the SafeProperty functions. Over time, the codebase\n * will stop using this method, as all objects will be Maps, rather than\n * more security prone objects.\n */\n\nclass ObjectWrappingMap {\n  constructor(object) {\n    this.wrappedObject = object;\n  }\n\n  keys() {\n    return Object.keys(this.wrappedObject);\n  }\n\n  get(key) {\n    return (0,_customs_js__WEBPACK_IMPORTED_MODULE_0__.getSafeProperty)(this.wrappedObject, key);\n  }\n\n  set(key, value) {\n    (0,_customs_js__WEBPACK_IMPORTED_MODULE_0__.setSafeProperty)(this.wrappedObject, key, value);\n    return this;\n  }\n\n  has(key) {\n    return (0,_customs_js__WEBPACK_IMPORTED_MODULE_0__.hasSafeProperty)(this.wrappedObject, key);\n  }\n\n}\n/**\n * Creates an empty map, or whatever your platform's polyfill is.\n *\n * @returns an empty Map or Map like object.\n */\n\nfunction createEmptyMap() {\n  return new Map();\n}\n/**\n * Creates a Map from the given object.\n *\n * @param { Map | { [key: string]: unknown } | undefined } mapOrObject\n * @returns\n */\n\nfunction createMap(mapOrObject) {\n  if (!mapOrObject) {\n    return createEmptyMap();\n  }\n\n  if (isMap(mapOrObject)) {\n    return mapOrObject;\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isObject)(mapOrObject)) {\n    return new ObjectWrappingMap(mapOrObject);\n  }\n\n  throw new Error('createMap can create maps from objects or Maps');\n}\n/**\n * Unwraps a map into an object.\n *\n * @param {Map} map\n * @returns { [key: string]: unknown }\n */\n\nfunction toObject(map) {\n  if (map instanceof ObjectWrappingMap) {\n    return map.wrappedObject;\n  }\n\n  var object = {};\n\n  for (var key of map.keys()) {\n    var value = map.get(key);\n    (0,_customs_js__WEBPACK_IMPORTED_MODULE_0__.setSafeProperty)(object, key, value);\n  }\n\n  return object;\n}\n/**\n * Returns `true` if the passed object appears to be a Map (i.e. duck typing).\n *\n * Methods looked for are `get`, `set`, `keys` and `has`.\n *\n * @param {Map | object} object\n * @returns\n */\n\nfunction isMap(object) {\n  // We can use the fast instanceof, or a slower duck typing check.\n  // The duck typing method needs to cover enough methods to not be confused with DenseMatrix.\n  if (!object) {\n    return false;\n  }\n\n  return object instanceof Map || object instanceof ObjectWrappingMap || typeof object.set === 'function' && typeof object.get === 'function' && typeof object.keys === 'function' && typeof object.has === 'function';\n}\n/**\n * Copies the contents of key-value pairs from each `objects` in to `map`.\n *\n * Object is `objects` can be a `Map` or object.\n *\n * This is the `Map` analog to `Object.assign`.\n */\n\nfunction assign(map) {\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n\n  for (var args of objects) {\n    if (!args) {\n      continue;\n    }\n\n    if (isMap(args)) {\n      for (var key of args.keys()) {\n        map.set(key, args.get(key));\n      }\n    } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isObject)(args)) {\n      for (var _key2 of Object.keys(args)) {\n        map.set(_key2, args[_key2]);\n      }\n    }\n  }\n\n  return map;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/map.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/noop.js":
/*!***************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/noop.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"noBignumber\": () => (/* binding */ noBignumber),\n/* harmony export */   \"noFraction\": () => (/* binding */ noFraction),\n/* harmony export */   \"noMatrix\": () => (/* binding */ noMatrix),\n/* harmony export */   \"noIndex\": () => (/* binding */ noIndex),\n/* harmony export */   \"noSubset\": () => (/* binding */ noSubset)\n/* harmony export */ });\nfunction noBignumber() {\n  throw new Error('No \"bignumber\" implementation available');\n}\nfunction noFraction() {\n  throw new Error('No \"fraction\" implementation available');\n}\nfunction noMatrix() {\n  throw new Error('No \"matrix\" implementation available');\n}\nfunction noIndex() {\n  throw new Error('No \"index\" implementation available');\n}\nfunction noSubset() {\n  throw new Error('No \"matrix\" implementation available');\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/noop.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/number.js":
/*!*****************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/number.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isInteger\": () => (/* binding */ isInteger),\n/* harmony export */   \"sign\": () => (/* binding */ sign),\n/* harmony export */   \"log2\": () => (/* binding */ log2),\n/* harmony export */   \"log10\": () => (/* binding */ log10),\n/* harmony export */   \"log1p\": () => (/* binding */ log1p),\n/* harmony export */   \"cbrt\": () => (/* binding */ cbrt),\n/* harmony export */   \"expm1\": () => (/* binding */ expm1),\n/* harmony export */   \"format\": () => (/* binding */ format),\n/* harmony export */   \"splitNumber\": () => (/* binding */ splitNumber),\n/* harmony export */   \"toEngineering\": () => (/* binding */ toEngineering),\n/* harmony export */   \"toFixed\": () => (/* binding */ toFixed),\n/* harmony export */   \"toExponential\": () => (/* binding */ toExponential),\n/* harmony export */   \"toPrecision\": () => (/* binding */ toPrecision),\n/* harmony export */   \"roundDigits\": () => (/* binding */ roundDigits),\n/* harmony export */   \"digits\": () => (/* binding */ digits),\n/* harmony export */   \"DBL_EPSILON\": () => (/* binding */ DBL_EPSILON),\n/* harmony export */   \"nearlyEqual\": () => (/* binding */ nearlyEqual),\n/* harmony export */   \"acosh\": () => (/* binding */ acosh),\n/* harmony export */   \"asinh\": () => (/* binding */ asinh),\n/* harmony export */   \"atanh\": () => (/* binding */ atanh),\n/* harmony export */   \"cosh\": () => (/* binding */ cosh),\n/* harmony export */   \"sinh\": () => (/* binding */ sinh),\n/* harmony export */   \"tanh\": () => (/* binding */ tanh)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\n\nfunction isInteger(value) {\n  if (typeof value === 'boolean') {\n    return true;\n  }\n\n  return isFinite(value) ? value === Math.round(value) : false;\n}\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {number}\n */\n\nvar sign = /* #__PURE__ */Math.sign || function (x) {\n  if (x > 0) {\n    return 1;\n  } else if (x < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n/**\n * Calculate the base-2 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\n\nvar log2 = /* #__PURE__ */Math.log2 || function log2(x) {\n  return Math.log(x) / Math.LN2;\n};\n/**\n * Calculate the base-10 logarithm of a number\n * @param {number} x\n * @returns {number}\n */\n\nvar log10 = /* #__PURE__ */Math.log10 || function log10(x) {\n  return Math.log(x) / Math.LN10;\n};\n/**\n * Calculate the natural logarithm of a number + 1\n * @param {number} x\n * @returns {number}\n */\n\nvar log1p = /* #__PURE__ */Math.log1p || function (x) {\n  return Math.log(x + 1);\n};\n/**\n * Calculate cubic root for a number\n *\n * Code from es6-shim.js:\n *   https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L1564-L1577\n *\n * @param {number} x\n * @returns {number} Returns the cubic root of x\n */\n\nvar cbrt = /* #__PURE__ */Math.cbrt || function cbrt(x) {\n  if (x === 0) {\n    return x;\n  }\n\n  var negate = x < 0;\n  var result;\n\n  if (negate) {\n    x = -x;\n  }\n\n  if (isFinite(x)) {\n    result = Math.exp(Math.log(x) / 3); // from https://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n\n    result = (x / (result * result) + 2 * result) / 3;\n  } else {\n    result = x;\n  }\n\n  return negate ? -result : result;\n};\n/**\n * Calculates exponentiation minus 1\n * @param {number} x\n * @return {number} res\n */\n\nvar expm1 = /* #__PURE__ */Math.expm1 || function expm1(x) {\n  return x >= 2e-4 || x <= -2e-4 ? Math.exp(x) - 1 : x + x * x / 2 + x * x * x / 6;\n};\n/**\n * Formats a number in a given base\n * @param {number} n\n * @param {number} base\n * @param {number} size\n * @returns {string}\n */\n\nfunction formatNumberToBase(n, base, size) {\n  var prefixes = {\n    2: '0b',\n    8: '0o',\n    16: '0x'\n  };\n  var prefix = prefixes[base];\n  var suffix = '';\n\n  if (size) {\n    if (size < 1) {\n      throw new Error('size must be in greater than 0');\n    }\n\n    if (!isInteger(size)) {\n      throw new Error('size must be an integer');\n    }\n\n    if (n > 2 ** (size - 1) - 1 || n < -(2 ** (size - 1))) {\n      throw new Error(\"Value must be in range [-2^\".concat(size - 1, \", 2^\").concat(size - 1, \"-1]\"));\n    }\n\n    if (!isInteger(n)) {\n      throw new Error('Value must be an integer');\n    }\n\n    if (n < 0) {\n      n = n + 2 ** size;\n    }\n\n    suffix = \"i\".concat(size);\n  }\n\n  var sign = '';\n\n  if (n < 0) {\n    n = -n;\n    sign = '-';\n  }\n\n  return \"\".concat(sign).concat(prefix).concat(n.toString(base)).concat(suffix);\n}\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lowerExp` and `upperExp` bounds, and\n *                                          uses exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                         'bin', 'oct, or\n *                         'hex'            Format the number using binary, octal,\n *                                          or hexadecimal notation.\n *                                          For example '0b1101' and '0x10fe'.\n *                     {number} wordSize    The word size in bits to use for formatting\n *                                          in binary, octal, or hexadecimal notation.\n *                                          To be used only with 'bin', 'oct', or 'hex'\n *                                          values for 'notation' option. When this option\n *                                          is defined the value is formatted as a signed\n *                                          twos complement integer of the given word size\n *                                          and the size suffix is appended to the output.\n *                                          For example\n *                                          format(-1, {notation: 'hex', wordSize: 8}) === '0xffi8'.\n *                                          Default value is undefined.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default,\n *                                          not rounding any digits.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12.071, {notation: 'fixed'})                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\n\n\nfunction format(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (value === Infinity) {\n    return 'Infinity';\n  } else if (value === -Infinity) {\n    return '-Infinity';\n  } else if (isNaN(value)) {\n    return 'NaN';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n  var wordSize;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(options)) {\n      precision = options;\n    } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(options.precision)) {\n      precision = options.precision;\n    }\n\n    if (options.wordSize) {\n      wordSize = options.wordSize;\n\n      if (typeof wordSize !== 'number') {\n        throw new Error('Option \"wordSize\" must be a number');\n      }\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return toFixed(value, precision);\n\n    case 'exponential':\n      return toExponential(value, precision);\n\n    case 'engineering':\n      return toEngineering(value, precision);\n\n    case 'bin':\n      return formatNumberToBase(value, 2, wordSize);\n\n    case 'oct':\n      return formatNumberToBase(value, 8, wordSize);\n\n    case 'hex':\n      return formatNumberToBase(value, 16, wordSize);\n\n    case 'auto':\n      // remove trailing zeros after the decimal point\n      return toPrecision(value, precision, options && options).replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return digits !== '.' ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", \"fixed\", \"bin\", \"oct\", or \"hex.');\n  }\n}\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\n\nfunction splitNumber(value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n\n  var sign = match[1];\n  var digits = match[2];\n  var exponent = parseFloat(match[4] || '0');\n  var dot = digits.indexOf('.');\n  exponent += dot !== -1 ? dot - 1 : digits.length - 1;\n  var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n  .replace(/^0*/, function (zeros) {\n    // remove leading zeros, add their count to the exponent\n    exponent -= zeros.length;\n    return '';\n  }).replace(/0*$/, '') // remove trailing zeros\n  .split('').map(function (d) {\n    return parseInt(d);\n  });\n\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  };\n}\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\n\nfunction toEngineering(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var split = splitNumber(value);\n  var rounded = roundDigits(split, precision);\n  var e = rounded.exponent;\n  var c = rounded.coefficients; // find nearest lower multiple of 3 for exponent\n\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(precision)) {\n    // add zeroes to give correct sig figs\n    while (precision > c.length || e - newExp + 1 > c.length) {\n      c.push(0);\n    }\n  } else {\n    // concatenate coefficients with necessary zeros\n    // add zeros if necessary (for example: 1e+8 -> 100e+6)\n    var missingZeros = Math.abs(e - newExp) - (c.length - 1);\n\n    for (var i = 0; i < missingZeros; i++) {\n      c.push(0);\n    }\n  } // find difference in exponents\n\n\n  var expDiff = Math.abs(e - newExp);\n  var decimalIdx = 1; // push decimal index over by expDiff times\n\n  while (expDiff > 0) {\n    decimalIdx++;\n    expDiff--;\n  } // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n\n\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';\n  var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n}\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=undefined]  Optional number of decimals after the\n *                                        decimal point. null by default.\n */\n\nfunction toFixed(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var splitValue = splitNumber(value);\n  var rounded = typeof precision === 'number' ? roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n  // append zeros if needed\n\n  var pp = p + (precision || 0);\n\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  } // prepend zeros if needed\n\n\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  } // insert a dot if needed\n\n\n  if (p < c.length) {\n    c.splice(p, 0, p === 0 ? '0.' : '.');\n  }\n\n  return rounded.sign + c.join('');\n}\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\n\nfunction toExponential(value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // round if needed, else create a clone\n\n\n  var split = splitNumber(value);\n  var rounded = precision ? roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent; // append zeros if needed\n\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  } // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n\n\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;\n}\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n *                                       By default:\n *                                         lowerExp = -3 (incl)\n *                                         upper = +5 (excl)\n * @return {string}\n */\n\nfunction toPrecision(value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // determine lower and upper bound for exponential notation.\n\n\n  var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n  var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5;\n  var split = splitNumber(value);\n  var rounded = precision ? roundDigits(split, precision) : split;\n\n  if (rounded.exponent < lowerExp || rounded.exponent >= upperExp) {\n    // exponential notation\n    return toExponential(value, precision);\n  } else {\n    var c = rounded.coefficients;\n    var e = rounded.exponent; // append trailing zeros\n\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    } // append trailing zeros\n    // TODO: simplify the next statement\n\n\n    c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0))); // prepend zeros\n\n    c = zeros(-e).concat(c);\n    var dot = e > 0 ? e : 0;\n\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return rounded.sign + c.join('');\n  }\n}\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\n\nfunction roundDigits(split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  };\n  var c = rounded.coefficients; // prepend zeros if needed\n\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n\n      while (c[i] === 10) {\n        c.pop();\n\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n}\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\n\nfunction zeros(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\n\n\nfunction digits(value) {\n  return value.toExponential().replace(/e.*$/, '') // remove exponential notation\n  .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n  .length;\n}\n/**\n * Minimum number added to one that makes the result different than one\n */\n\nvar DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\n\nfunction nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x === y;\n  }\n\n  if (x === y) {\n    return true;\n  } // NaN\n\n\n  if (isNaN(x) || isNaN(y)) {\n    return false;\n  } // at this point x and y should be finite\n\n\n  if (isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n\n    if (diff < DBL_EPSILON) {\n      return true;\n    } else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n  return false;\n}\n/**\n * Calculate the hyperbolic arccos of a number\n * @param {number} x\n * @return {number}\n */\n\nvar acosh = Math.acosh || function (x) {\n  return Math.log(Math.sqrt(x * x - 1) + x);\n};\nvar asinh = Math.asinh || function (x) {\n  return Math.log(Math.sqrt(x * x + 1) + x);\n};\n/**\n * Calculate the hyperbolic arctangent of a number\n * @param {number} x\n * @return {number}\n */\n\nvar atanh = Math.atanh || function (x) {\n  return Math.log((1 + x) / (1 - x)) / 2;\n};\n/**\n * Calculate the hyperbolic cosine of a number\n * @param {number} x\n * @returns {number}\n */\n\nvar cosh = Math.cosh || function (x) {\n  return (Math.exp(x) + Math.exp(-x)) / 2;\n};\n/**\n * Calculate the hyperbolic sine of a number\n * @param {number} x\n * @returns {number}\n */\n\nvar sinh = Math.sinh || function (x) {\n  return (Math.exp(x) - Math.exp(-x)) / 2;\n};\n/**\n * Calculate the hyperbolic tangent of a number\n * @param {number} x\n * @returns {number}\n */\n\nvar tanh = Math.tanh || function (x) {\n  var e = Math.exp(2 * x);\n  return (e - 1) / (e + 1);\n};\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/number.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/object.js":
/*!*****************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/object.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"mapObject\": () => (/* binding */ mapObject),\n/* harmony export */   \"extend\": () => (/* binding */ extend),\n/* harmony export */   \"deepExtend\": () => (/* binding */ deepExtend),\n/* harmony export */   \"deepStrictEqual\": () => (/* binding */ deepStrictEqual),\n/* harmony export */   \"deepFlatten\": () => (/* binding */ deepFlatten),\n/* harmony export */   \"canDefineProperty\": () => (/* binding */ canDefineProperty),\n/* harmony export */   \"lazy\": () => (/* binding */ lazy),\n/* harmony export */   \"traverse\": () => (/* binding */ traverse),\n/* harmony export */   \"hasOwnProperty\": () => (/* binding */ hasOwnProperty),\n/* harmony export */   \"isLegacyFactory\": () => (/* binding */ isLegacyFactory),\n/* harmony export */   \"get\": () => (/* binding */ get),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"pick\": () => (/* binding */ pick),\n/* harmony export */   \"pickShallow\": () => (/* binding */ pickShallow),\n/* harmony export */   \"values\": () => (/* binding */ values)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\n\nfunction clone(x) {\n  var type = typeof x; // immutable primitive types\n\n  if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n    return x;\n  } // use clone function of the object when available\n\n\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  } // array\n\n\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Date) return new Date(x.valueOf());\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isBigNumber)(x)) return x; // bignumbers are immutable\n\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\n  // object\n\n  return mapObject(x, clone);\n}\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\n\nfunction mapObject(object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n}\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\n\nfunction extend(a, b) {\n  for (var prop in b) {\n    if (hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n\n  return a;\n}\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\n\nfunction deepExtend(a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    // We check against prop not being in Object.prototype or Function.prototype\n    // to prevent polluting for example Object.__proto__.\n    if (hasOwnProperty(b, prop) && !(prop in Object.prototype) && !(prop in Function.prototype)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n\n        if (a[prop] && a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        } else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n\n  return a;\n}\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * Compares values and functions strictly (ie. 2 is not the same as '2').\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\n\nfunction deepStrictEqual(a, b) {\n  var prop, i, len;\n\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!deepStrictEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (typeof a === 'function') {\n    return a === b;\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in b) || !deepStrictEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!(prop in a)) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return a === b;\n  }\n}\n/**\n * Recursively flatten a nested object.\n * @param {Object} nestedObject\n * @return {Object} Returns the flattened object\n */\n\nfunction deepFlatten(nestedObject) {\n  var flattenedObject = {};\n\n  _deepFlatten(nestedObject, flattenedObject);\n\n  return flattenedObject;\n} // helper function used by deepFlatten\n\nfunction _deepFlatten(nestedObject, flattenedObject) {\n  for (var prop in nestedObject) {\n    if (hasOwnProperty(nestedObject, prop)) {\n      var value = nestedObject[prop];\n\n      if (typeof value === 'object' && value !== null) {\n        _deepFlatten(value, flattenedObject);\n      } else {\n        flattenedObject[prop] = value;\n      }\n    }\n  }\n}\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\n\n\nfunction canDefineProperty() {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', {\n        get: function get() {}\n      });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n}\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n *\n * @param {Object} object         Object where to add the property\n * @param {string} prop           Property name\n * @param {Function} valueResolver Function returning the property value. Called\n *                                without arguments.\n */\n\nfunction lazy(object, prop, valueResolver) {\n  var _uninitialized = true;\n\n  var _value;\n\n  Object.defineProperty(object, prop, {\n    get: function get() {\n      if (_uninitialized) {\n        _value = valueResolver();\n        _uninitialized = false;\n      }\n\n      return _value;\n    },\n    set: function set(value) {\n      _value = value;\n      _uninitialized = false;\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string | string[]} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\n\nfunction traverse(object, path) {\n  if (path && typeof path === 'string') {\n    return traverse(object, path.split('.'));\n  }\n\n  var obj = object;\n\n  if (path) {\n    for (var i = 0; i < path.length; i++) {\n      var key = path[i];\n\n      if (!(key in obj)) {\n        obj[key] = {};\n      }\n\n      obj = obj[key];\n    }\n  }\n\n  return obj;\n}\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\n\nfunction hasOwnProperty(object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n}\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\n\nfunction isLegacyFactory(object) {\n  return object && typeof object.factory === 'function';\n}\n/**\n * Get a nested property from an object\n * @param {Object} object\n * @param {string | string[]} path\n * @returns {Object}\n */\n\nfunction get(object, path) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return get(object, path.split('.'));\n    } else {\n      return object[path];\n    }\n  }\n\n  var child = object;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n    child = child ? child[key] : undefined;\n  }\n\n  return child;\n}\n/**\n * Set a nested property in an object\n * Mutates the object itself\n * If the path doesn't exist, it will be created\n * @param {Object} object\n * @param {string | string[]} path\n * @param {*} value\n * @returns {Object}\n */\n\nfunction set(object, path, value) {\n  if (typeof path === 'string') {\n    if (isPath(path)) {\n      return set(object, path.split('.'), value);\n    } else {\n      object[path] = value;\n      return object;\n    }\n  }\n\n  var child = object;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    var key = path[i];\n\n    if (child[key] === undefined) {\n      child[key] = {};\n    }\n\n    child = child[key];\n  }\n\n  if (path.length > 0) {\n    var lastKey = path[path.length - 1];\n    child[lastKey] = value;\n  }\n\n  return object;\n}\n/**\n * Create an object composed of the picked object properties\n * @param {Object} object\n * @param {string[]} properties\n * @param {function} [transform] Optional value to transform a value when picking it\n * @return {Object}\n */\n\nfunction pick(object, properties, transform) {\n  var copy = {};\n\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = get(object, key);\n\n    if (value !== undefined) {\n      set(copy, key, transform ? transform(value, key) : value);\n    }\n  }\n\n  return copy;\n}\n/**\n * Shallow version of pick, creating an object composed of the picked object properties\n * but not for nested properties\n * @param {Object} object\n * @param {string[]} properties\n * @return {Object}\n */\n\nfunction pickShallow(object, properties) {\n  var copy = {};\n\n  for (var i = 0; i < properties.length; i++) {\n    var key = properties[i];\n    var value = object[key];\n\n    if (value !== undefined) {\n      copy[key] = value;\n    }\n  }\n\n  return copy;\n}\nfunction values(object) {\n  return Object.keys(object).map(key => object[key]);\n} // helper function to test whether a string contains a path like 'user.name'\n\nfunction isPath(str) {\n  return str.indexOf('.') !== -1;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/object.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/product.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/product.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"product\": () => (/* binding */ product)\n/* harmony export */ });\n/** @param {number} i\n *  @param {number} n\n *  @returns {number} product of i to n\n */\nfunction product(i, n) {\n  if (n < i) {\n    return 1;\n  }\n\n  if (n === i) {\n    return n;\n  }\n\n  var half = n + i >> 1; // divide (n + i) by 2 and truncate to integer\n\n  return product(i, half) * product(half + 1, n);\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/product.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/utils/string.js":
/*!*****************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/utils/string.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"endsWith\": () => (/* binding */ endsWith),\n/* harmony export */   \"format\": () => (/* binding */ format),\n/* harmony export */   \"stringify\": () => (/* binding */ stringify),\n/* harmony export */   \"escape\": () => (/* binding */ escape),\n/* harmony export */   \"compareText\": () => (/* binding */ compareText)\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/mathjs/lib/esm/utils/is.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ \"./node_modules/mathjs/lib/esm/utils/number.js\");\n/* harmony import */ var _bignumber_formatter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bignumber/formatter.js */ \"./node_modules/mathjs/lib/esm/utils/bignumber/formatter.js\");\n\n\n\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\n\nfunction endsWith(text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return text.substring(start, end) === search;\n}\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7)                // '0.2857142857142857'\n *     math.format(math.pi, 3)         // '3.14'\n *     math.format(new Complex(2, 3))  // '2 + 3i'\n *     math.format('hello')            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\n\nfunction format(value, options) {\n  if (typeof value === 'number') {\n    return (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.format)(value, options);\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isBigNumber)(value)) {\n    return (0,_bignumber_formatter_js__WEBPACK_IMPORTED_MODULE_2__.format)(value, options);\n  } // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n\n\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return value.s * value.n + '/' + value.d;\n    } else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n\n  if (value && typeof value === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    } else if (value && value.toString(options) !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString(options);\n    } else {\n      var entries = Object.keys(value).map(key => {\n        return '\"' + key + '\": ' + format(value[key], options);\n      });\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n\n  return String(value);\n}\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\n\nfunction stringify(value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n\n  while (i < text.length) {\n    var c = text.charAt(i);\n\n    if (c === '\\\\') {\n      escaped += c;\n      i++;\n      c = text.charAt(i);\n\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\'; // no valid escape character -> escape it\n      }\n\n      escaped += c;\n    } else if (c === '\"') {\n      escaped += '\\\\\"';\n    } else {\n      escaped += c;\n    }\n\n    i++;\n  }\n\n  return '\"' + escaped + '\"';\n}\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\n\nfunction escape(value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return text;\n}\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\n\nfunction formatArray(array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n\n    for (var i = 0; i < len; i++) {\n      if (i !== 0) {\n        str += ', ';\n      }\n\n      str += formatArray(array[i], options);\n    }\n\n    str += ']';\n    return str;\n  } else {\n    return format(array, options);\n  }\n}\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction looksLikeFraction(value) {\n  return value && typeof value === 'object' && typeof value.s === 'number' && typeof value.n === 'number' && typeof value.d === 'number' || false;\n}\n/**\n * Compare two strings\n * @param {string} x\n * @param {string} y\n * @returns {number}\n */\n\n\nfunction compareText(x, y) {\n  // we don't want to convert numbers to string, only accept string input\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(x)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf)(x) + ', index: 0)');\n  }\n\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(y)) {\n    throw new TypeError('Unexpected type of argument in function compareText ' + '(expected: string or Array or Matrix, actual: ' + (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.typeOf)(y) + ', index: 1)');\n  }\n\n  return x === y ? 0 : x > y ? 1 : -1;\n}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/utils/string.js?");

/***/ }),

/***/ "./node_modules/mathjs/lib/esm/version.js":
/*!************************************************!*\
  !*** ./node_modules/mathjs/lib/esm/version.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"version\": () => (/* binding */ version)\n/* harmony export */ });\nvar version = '9.5.0'; // Note: This file is automatically generated when building math.js.\n// Changes made in this file will be overwritten.\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/mathjs/lib/esm/version.js?");

/***/ }),

/***/ "./node_modules/seedrandom/index.js":
/*!******************************************!*\
  !*** ./node_modules/seedrandom/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = __webpack_require__(/*! ./lib/alea */ \"./node_modules/seedrandom/lib/alea.js\"); // xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\n\n\nvar xor128 = __webpack_require__(/*! ./lib/xor128 */ \"./node_modules/seedrandom/lib/xor128.js\"); // xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\n\n\nvar xorwow = __webpack_require__(/*! ./lib/xorwow */ \"./node_modules/seedrandom/lib/xorwow.js\"); // xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\n\n\nvar xorshift7 = __webpack_require__(/*! ./lib/xorshift7 */ \"./node_modules/seedrandom/lib/xorshift7.js\"); // xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\n\n\nvar xor4096 = __webpack_require__(/*! ./lib/xor4096 */ \"./node_modules/seedrandom/lib/xor4096.js\"); // Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\n\n\nvar tychei = __webpack_require__(/*! ./lib/tychei */ \"./node_modules/seedrandom/lib/tychei.js\"); // The original ARC4-based prng included in this library.\n// Period: ~2^1600\n\n\nvar sr = __webpack_require__(/*! ./seedrandom */ \"./node_modules/seedrandom/seedrandom.js\");\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\nmodule.exports = sr;\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/seedrandom/index.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/alea.js":
/*!*********************************************!*\
  !*** ./node_modules/seedrandom/lib/alea.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n(function (global, module, define) {\n  function Alea(seed) {\n    var me = this,\n        mash = Mash();\n\n    me.next = function () {\n      var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n\n      me.s0 = me.s1;\n      me.s1 = me.s2;\n      return me.s2 = t - (me.c = t | 0);\n    }; // Apply the seeding algorithm from Baagoe.\n\n\n    me.c = 1;\n    me.s0 = mash(' ');\n    me.s1 = mash(' ');\n    me.s2 = mash(' ');\n    me.s0 -= mash(seed);\n\n    if (me.s0 < 0) {\n      me.s0 += 1;\n    }\n\n    me.s1 -= mash(seed);\n\n    if (me.s1 < 0) {\n      me.s1 += 1;\n    }\n\n    me.s2 -= mash(seed);\n\n    if (me.s2 < 0) {\n      me.s2 += 1;\n    }\n\n    mash = null;\n  }\n\n  function copy(f, t) {\n    t.c = f.c;\n    t.s0 = f.s0;\n    t.s1 = f.s1;\n    t.s2 = f.s2;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    var xg = new Alea(seed),\n        state = opts && opts.state,\n        prng = xg.next;\n\n    prng.int32 = function () {\n      return xg.next() * 0x100000000 | 0;\n    };\n\n    prng.double = function () {\n      return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n    };\n\n    prng.quick = prng;\n\n    if (state) {\n      if (typeof state == 'object') copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  function Mash() {\n    var n = 0xefc8249d;\n\n    var mash = function (data) {\n      data = String(data);\n\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    return mash;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return impl;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    this.alea = impl;\n  }\n})(this,  true && module, // present in node.js\n__webpack_require__.amdD // present with an AMD loader\n);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/seedrandom/lib/alea.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/tychei.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/tychei.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this,\n        strseed = ''; // Set up generator function.\n\n    me.next = function () {\n      var b = me.b,\n          c = me.c,\n          d = me.d,\n          a = me.a;\n      b = b << 25 ^ b >>> 7 ^ c;\n      c = c - d | 0;\n      d = d << 24 ^ d >>> 8 ^ a;\n      a = a - b | 0;\n      me.b = b = b << 20 ^ b >>> 12 ^ c;\n      me.c = c = c - d | 0;\n      me.d = d << 16 ^ c >>> 16 ^ a;\n      return me.a = a - b | 0;\n    };\n    /* The following is non-inverted tyche, which has better internal\n     * bit diffusion, but which is about 25% slower than tyche-i in JS.\n    me.next = function() {\n      var a = me.a, b = me.b, c = me.c, d = me.d;\n      a = (me.a + me.b | 0) >>> 0;\n      d = me.d ^ a; d = d << 16 ^ d >>> 16;\n      c = me.c + d | 0;\n      b = me.b ^ c; b = b << 12 ^ d >>> 20;\n      me.a = a = a + b | 0;\n      d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n      me.c = c = c + d | 0;\n      b = b ^ c;\n      return me.b = (b << 7 ^ b >>> 25);\n    }\n    */\n\n\n    me.a = 0;\n    me.b = 0;\n    me.c = 2654435769 | 0;\n    me.d = 1367130551;\n\n    if (seed === Math.floor(seed)) {\n      // Integer seed.\n      me.a = seed / 0x100000000 | 0;\n      me.b = seed | 0;\n    } else {\n      // String seed.\n      strseed += seed;\n    } // Mix in string seed, then discard an initial batch of 64 values.\n\n\n    for (var k = 0; k < strseed.length + 20; k++) {\n      me.b ^= strseed.charCodeAt(k) | 0;\n      me.next();\n    }\n  }\n\n  function copy(f, t) {\n    t.a = f.a;\n    t.b = f.b;\n    t.c = f.c;\n    t.d = f.d;\n    return t;\n  }\n\n  ;\n\n  function impl(seed, opts) {\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function () {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (typeof state == 'object') copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return impl;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    this.tychei = impl;\n  }\n})(this,  true && module, // present in node.js\n__webpack_require__.amdD // present with an AMD loader\n);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/seedrandom/lib/tychei.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor128.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xor128.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this,\n        strseed = '';\n    me.x = 0;\n    me.y = 0;\n    me.z = 0;\n    me.w = 0; // Set up generator function.\n\n    me.next = function () {\n      var t = me.x ^ me.x << 11;\n      me.x = me.y;\n      me.y = me.z;\n      me.z = me.w;\n      return me.w ^= me.w >>> 19 ^ t ^ t >>> 8;\n    };\n\n    if (seed === (seed | 0)) {\n      // Integer seed.\n      me.x = seed;\n    } else {\n      // String seed.\n      strseed += seed;\n    } // Mix in string seed, then discard an initial batch of 64 values.\n\n\n    for (var k = 0; k < strseed.length + 64; k++) {\n      me.x ^= strseed.charCodeAt(k) | 0;\n      me.next();\n    }\n  }\n\n  function copy(f, t) {\n    t.x = f.x;\n    t.y = f.y;\n    t.z = f.z;\n    t.w = f.w;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function () {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (typeof state == 'object') copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return impl;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    this.xor128 = impl;\n  }\n})(this,  true && module, // present in node.js\n__webpack_require__.amdD // present with an AMD loader\n);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/seedrandom/lib/xor128.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xor4096.js":
/*!************************************************!*\
  !*** ./node_modules/seedrandom/lib/xor4096.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this; // Set up generator function.\n\n    me.next = function () {\n      var w = me.w,\n          X = me.X,\n          i = me.i,\n          t,\n          v; // Update Weyl generator.\n\n      me.w = w = w + 0x61c88647 | 0; // Update xor generator.\n\n      v = X[i + 34 & 127];\n      t = X[i = i + 1 & 127];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12; // Update Xor generator array state.\n\n      v = X[i] = v ^ t;\n      me.i = i; // Result is the combination.\n\n      return v + (w ^ w >>> 16) | 0;\n    };\n\n    function init(me, seed) {\n      var t,\n          v,\n          i,\n          j,\n          w,\n          X = [],\n          limit = 128;\n\n      if (seed === (seed | 0)) {\n        // Numeric seeds initialize v, which is used to generates X.\n        v = seed;\n        seed = null;\n      } else {\n        // String seeds are mixed into v and X one character at a time.\n        seed = seed + '\\0';\n        v = 0;\n        limit = Math.max(limit, seed.length);\n      } // Initialize circular array and weyl value.\n\n\n      for (i = 0, j = -32; j < limit; ++j) {\n        // Put the unicode characters into the array, and shuffle them.\n        if (seed) v ^= seed.charCodeAt((j + 32) % seed.length); // After 32 shuffles, take v as the starting w value.\n\n        if (j === 0) w = v;\n        v ^= v << 10;\n        v ^= v >>> 15;\n        v ^= v << 4;\n        v ^= v >>> 13;\n\n        if (j >= 0) {\n          w = w + 0x61c88647 | 0; // Weyl.\n\n          t = X[j & 127] ^= v + w; // Combine xor and weyl to init array.\n\n          i = 0 == t ? i + 1 : 0; // Count zeroes.\n        }\n      } // We have detected all zeroes; make the key nonzero.\n\n\n      if (i >= 128) {\n        X[(seed && seed.length || 0) & 127] = -1;\n      } // Run the generator 512 times to further mix the state before using it.\n      // Factoring this as a function slows the main generator, so it is just\n      // unrolled here.  The weyl generator is not advanced while warming up.\n\n\n      i = 127;\n\n      for (j = 4 * 128; j > 0; --j) {\n        v = X[i + 34 & 127];\n        t = X[i = i + 1 & 127];\n        v ^= v << 13;\n        t ^= t << 17;\n        v ^= v >>> 15;\n        t ^= t >>> 12;\n        X[i] = v ^ t;\n      } // Storing state as object members is faster than using closure variables.\n\n\n      me.w = w;\n      me.X = X;\n      me.i = i;\n    }\n\n    init(me, seed);\n  }\n\n  function copy(f, t) {\n    t.i = f.i;\n    t.w = f.w;\n    t.X = f.X.slice();\n    return t;\n  }\n\n  ;\n\n  function impl(seed, opts) {\n    if (seed == null) seed = +new Date();\n\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function () {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (state.X) copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return impl;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    this.xor4096 = impl;\n  }\n})(this, // window object or global\n true && module, // present in node.js\n__webpack_require__.amdD // present with an AMD loader\n);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/seedrandom/lib/xor4096.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorshift7.js":
/*!**************************************************!*\
  !*** ./node_modules/seedrandom/lib/xorshift7.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this; // Set up generator function.\n\n    me.next = function () {\n      // Update xor generator.\n      var X = me.x,\n          i = me.i,\n          t,\n          v,\n          w;\n      t = X[i];\n      t ^= t >>> 7;\n      v = t ^ t << 24;\n      t = X[i + 1 & 7];\n      v ^= t ^ t >>> 10;\n      t = X[i + 3 & 7];\n      v ^= t ^ t >>> 3;\n      t = X[i + 4 & 7];\n      v ^= t ^ t << 7;\n      t = X[i + 7 & 7];\n      t = t ^ t << 13;\n      v ^= t ^ t << 9;\n      X[i] = v;\n      me.i = i + 1 & 7;\n      return v;\n    };\n\n    function init(me, seed) {\n      var j,\n          w,\n          X = [];\n\n      if (seed === (seed | 0)) {\n        // Seed state array using a 32-bit integer.\n        w = X[0] = seed;\n      } else {\n        // Seed state using a string.\n        seed = '' + seed;\n\n        for (j = 0; j < seed.length; ++j) {\n          X[j & 7] = X[j & 7] << 15 ^ seed.charCodeAt(j) + X[j + 1 & 7] << 13;\n        }\n      } // Enforce an array length of 8, not all zeroes.\n\n\n      while (X.length < 8) X.push(0);\n\n      for (j = 0; j < 8 && X[j] === 0; ++j);\n\n      if (j == 8) w = X[7] = -1;else w = X[j];\n      me.x = X;\n      me.i = 0; // Discard an initial 256 values.\n\n      for (j = 256; j > 0; --j) {\n        me.next();\n      }\n    }\n\n    init(me, seed);\n  }\n\n  function copy(f, t) {\n    t.x = f.x.slice();\n    t.i = f.i;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    if (seed == null) seed = +new Date();\n\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function () {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (state.x) copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return impl;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    this.xorshift7 = impl;\n  }\n})(this,  true && module, // present in node.js\n__webpack_require__.amdD // present with an AMD loader\n);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/seedrandom/lib/xorshift7.js?");

/***/ }),

/***/ "./node_modules/seedrandom/lib/xorwow.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/lib/xorwow.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function (global, module, define) {\n  function XorGen(seed) {\n    var me = this,\n        strseed = ''; // Set up generator function.\n\n    me.next = function () {\n      var t = me.x ^ me.x >>> 2;\n      me.x = me.y;\n      me.y = me.z;\n      me.z = me.w;\n      me.w = me.v;\n      return (me.d = me.d + 362437 | 0) + (me.v = me.v ^ me.v << 4 ^ (t ^ t << 1)) | 0;\n    };\n\n    me.x = 0;\n    me.y = 0;\n    me.z = 0;\n    me.w = 0;\n    me.v = 0;\n\n    if (seed === (seed | 0)) {\n      // Integer seed.\n      me.x = seed;\n    } else {\n      // String seed.\n      strseed += seed;\n    } // Mix in string seed, then discard an initial batch of 64 values.\n\n\n    for (var k = 0; k < strseed.length + 64; k++) {\n      me.x ^= strseed.charCodeAt(k) | 0;\n\n      if (k == strseed.length) {\n        me.d = me.x << 10 ^ me.x >>> 4;\n      }\n\n      me.next();\n    }\n  }\n\n  function copy(f, t) {\n    t.x = f.x;\n    t.y = f.y;\n    t.z = f.z;\n    t.w = f.w;\n    t.v = f.v;\n    t.d = f.d;\n    return t;\n  }\n\n  function impl(seed, opts) {\n    var xg = new XorGen(seed),\n        state = opts && opts.state,\n        prng = function () {\n      return (xg.next() >>> 0) / 0x100000000;\n    };\n\n    prng.double = function () {\n      do {\n        var top = xg.next() >>> 11,\n            bot = (xg.next() >>> 0) / 0x100000000,\n            result = (top + bot) / (1 << 21);\n      } while (result === 0);\n\n      return result;\n    };\n\n    prng.int32 = xg.next;\n    prng.quick = prng;\n\n    if (state) {\n      if (typeof state == 'object') copy(state, xg);\n\n      prng.state = function () {\n        return copy(xg, {});\n      };\n    }\n\n    return prng;\n  }\n\n  if (module && module.exports) {\n    module.exports = impl;\n  } else if (__webpack_require__.amdD && __webpack_require__.amdO) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return impl;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    this.xorwow = impl;\n  }\n})(this,  true && module, // present in node.js\n__webpack_require__.amdD // present with an AMD loader\n);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/seedrandom/lib/xorwow.js?");

/***/ }),

/***/ "./node_modules/seedrandom/seedrandom.js":
/*!***********************************************!*\
  !*** ./node_modules/seedrandom/seedrandom.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n(function (global, pool, math) {\n  //\n  // The following constants are related to IEEE 754 limits.\n  //\n  var width = 256,\n      // each RC4 output is 0 <= x < 256\n  chunks = 6,\n      // at least six RC4 outputs for each double\n  digits = 52,\n      // there are 52 significant digits in a double\n  rngname = 'random',\n      // rngname: name for Math.random and Math.seedrandom\n  startdenom = math.pow(width, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask = width - 1,\n      nodecrypto; // node.js crypto module, initialized at the bottom.\n  //\n  // seedrandom()\n  // This is the seedrandom function described above.\n  //\n\n  function seedrandom(seed, options, callback) {\n    var key = [];\n    options = options == true ? {\n      entropy: true\n    } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n    var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed == null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n    var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n    // randomness in every bit of the mantissa of the IEEE 754 value.\n\n    var prng = function () {\n      var n = arc4.g(chunks),\n          // Start with a numerator n < 2 ^ 48\n      d = startdenom,\n          //   and denominator d = 2 ^ 48.\n      x = 0; //   and no 'extra last byte'.\n\n      while (n < significance) {\n        // Fill up all significant digits by\n        n = (n + x) * width; //   shifting numerator and\n\n        d *= width; //   denominator and generating a\n\n        x = arc4.g(1); //   new least-significant-byte.\n      }\n\n      while (n >= overflow) {\n        // To avoid rounding up, before adding\n        n /= 2; //   last byte, shift everything\n\n        d /= 2; //   right using integer math until\n\n        x >>>= 1; //   we have exactly the desired bits.\n      }\n\n      return (n + x) / d; // Form the number within [0, 1).\n    };\n\n    prng.int32 = function () {\n      return arc4.g(4) | 0;\n    };\n\n    prng.quick = function () {\n      return arc4.g(4) / 0x100000000;\n    };\n\n    prng.double = prng; // Mix the randomness into accumulated entropy.\n\n    mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n    return (options.pass || callback || function (prng, seed, is_math_call, state) {\n      if (state) {\n        // Load the arc4 state from the given state if it has an S array.\n        if (state.S) {\n          copy(state, arc4);\n        } // Only provide the .state method if requested via options.state.\n\n\n        prng.state = function () {\n          return copy(arc4, {});\n        };\n      } // If called as a method of Math (Math.seedrandom()), mutate\n      // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n      if (is_math_call) {\n        math[rngname] = prng;\n        return seed;\n      } // Otherwise, it is a newer calling convention, so return the\n      // prng directly.\n      else return prng;\n    })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n  } //\n  // ARC4\n  //\n  // An ARC4 implementation.  The constructor takes a key in the form of\n  // an array of at most (width) integers that should be 0 <= x < (width).\n  //\n  // The g(count) method returns a pseudorandom integer that concatenates\n  // the next (count) outputs from ARC4.  Its return value is a number x\n  // that is in the range 0 <= x < (width ^ count).\n  //\n\n\n  function ARC4(key) {\n    var t,\n        keylen = key.length,\n        me = this,\n        i = 0,\n        j = me.i = me.j = 0,\n        s = me.S = []; // The empty key [] is treated as [0].\n\n    if (!keylen) {\n      key = [keylen++];\n    } // Set up S using the standard key scheduling algorithm.\n\n\n    while (i < width) {\n      s[i] = i++;\n    }\n\n    for (i = 0; i < width; i++) {\n      s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n      s[j] = t;\n    } // The \"g\" method returns the next (count) outputs as one number.\n\n\n    (me.g = function (count) {\n      // Using instance members instead of closure state nearly doubles speed.\n      var t,\n          r = 0,\n          i = me.i,\n          j = me.j,\n          s = me.S;\n\n      while (count--) {\n        t = s[i = mask & i + 1];\n        r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n      }\n\n      me.i = i;\n      me.j = j;\n      return r; // For robust unpredictability, the function call below automatically\n      // discards an initial batch of values.  This is called RC4-drop[256].\n      // See http://google.com/search?q=rsa+fluhrer+response&btnI\n    })(width);\n  } //\n  // copy()\n  // Copies internal state of ARC4 to or from a plain object.\n  //\n\n\n  function copy(f, t) {\n    t.i = f.i;\n    t.j = f.j;\n    t.S = f.S.slice();\n    return t;\n  }\n\n  ; //\n  // flatten()\n  // Converts an object tree to nested arrays of strings.\n  //\n\n  function flatten(obj, depth) {\n    var result = [],\n        typ = typeof obj,\n        prop;\n\n    if (depth && typ == 'object') {\n      for (prop in obj) {\n        try {\n          result.push(flatten(obj[prop], depth - 1));\n        } catch (e) {}\n      }\n    }\n\n    return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n  } //\n  // mixkey()\n  // Mixes a string seed into a key that is an array of integers, and\n  // returns a shortened string seed that is equivalent to the result key.\n  //\n\n\n  function mixkey(seed, key) {\n    var stringseed = seed + '',\n        smear,\n        j = 0;\n\n    while (j < stringseed.length) {\n      key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n    }\n\n    return tostring(key);\n  } //\n  // autoseed()\n  // Returns an object for autoseeding, using window.crypto and Node crypto\n  // module if available.\n  //\n\n\n  function autoseed() {\n    try {\n      var out;\n\n      if (nodecrypto && (out = nodecrypto.randomBytes)) {\n        // The use of 'out' to remember randomBytes makes tight minified code.\n        out = out(width);\n      } else {\n        out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n      }\n\n      return tostring(out);\n    } catch (e) {\n      var browser = global.navigator,\n          plugins = browser && browser.plugins;\n      return [+new Date(), global, plugins, global.screen, tostring(pool)];\n    }\n  } //\n  // tostring()\n  // Converts an array of charcodes to a string\n  //\n\n\n  function tostring(a) {\n    return String.fromCharCode.apply(0, a);\n  } //\n  // When seedrandom.js is loaded, we immediately mix a few bits\n  // from the built-in RNG into the entropy pool.  Because we do\n  // not want to interfere with deterministic PRNG state later,\n  // seedrandom will not call math.random on its own again after\n  // initialization.\n  //\n\n\n  mixkey(math.random(), pool); //\n  // Nodejs and AMD support: export the implementation as a module using\n  // either convention.\n  //\n\n  if ( true && module.exports) {\n    module.exports = seedrandom; // When in node.js, try using crypto package for autoseeding.\n\n    try {\n      nodecrypto = __webpack_require__(/*! crypto */ \"?d4c0\");\n    } catch (ex) {}\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return seedrandom;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {} // End anonymous scope, and pass initial values.\n\n})( // global: `self` in browsers (including strict mode and web workers),\n// otherwise `this` in Node and other environments\ntypeof self !== 'undefined' ? self : this, [], // pool: entropy pool starts empty\nMath // math: package containing random, pow, and seedrandom\n);\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/seedrandom/seedrandom.js?");

/***/ }),

/***/ "./node_modules/three/build/three.module.js":
/*!**************************************************!*\
  !*** ./node_modules/three/build/three.module.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ACESFilmicToneMapping\": () => (/* binding */ ACESFilmicToneMapping),\n/* harmony export */   \"AddEquation\": () => (/* binding */ AddEquation),\n/* harmony export */   \"AddOperation\": () => (/* binding */ AddOperation),\n/* harmony export */   \"AdditiveAnimationBlendMode\": () => (/* binding */ AdditiveAnimationBlendMode),\n/* harmony export */   \"AdditiveBlending\": () => (/* binding */ AdditiveBlending),\n/* harmony export */   \"AlphaFormat\": () => (/* binding */ AlphaFormat),\n/* harmony export */   \"AlwaysDepth\": () => (/* binding */ AlwaysDepth),\n/* harmony export */   \"AlwaysStencilFunc\": () => (/* binding */ AlwaysStencilFunc),\n/* harmony export */   \"AmbientLight\": () => (/* binding */ AmbientLight),\n/* harmony export */   \"AmbientLightProbe\": () => (/* binding */ AmbientLightProbe),\n/* harmony export */   \"AnimationClip\": () => (/* binding */ AnimationClip),\n/* harmony export */   \"AnimationLoader\": () => (/* binding */ AnimationLoader),\n/* harmony export */   \"AnimationMixer\": () => (/* binding */ AnimationMixer),\n/* harmony export */   \"AnimationObjectGroup\": () => (/* binding */ AnimationObjectGroup),\n/* harmony export */   \"AnimationUtils\": () => (/* binding */ AnimationUtils),\n/* harmony export */   \"ArcCurve\": () => (/* binding */ ArcCurve),\n/* harmony export */   \"ArrayCamera\": () => (/* binding */ ArrayCamera),\n/* harmony export */   \"ArrowHelper\": () => (/* binding */ ArrowHelper),\n/* harmony export */   \"Audio\": () => (/* binding */ Audio),\n/* harmony export */   \"AudioAnalyser\": () => (/* binding */ AudioAnalyser),\n/* harmony export */   \"AudioContext\": () => (/* binding */ AudioContext),\n/* harmony export */   \"AudioListener\": () => (/* binding */ AudioListener),\n/* harmony export */   \"AudioLoader\": () => (/* binding */ AudioLoader),\n/* harmony export */   \"AxesHelper\": () => (/* binding */ AxesHelper),\n/* harmony export */   \"AxisHelper\": () => (/* binding */ AxisHelper),\n/* harmony export */   \"BackSide\": () => (/* binding */ BackSide),\n/* harmony export */   \"BasicDepthPacking\": () => (/* binding */ BasicDepthPacking),\n/* harmony export */   \"BasicShadowMap\": () => (/* binding */ BasicShadowMap),\n/* harmony export */   \"BinaryTextureLoader\": () => (/* binding */ BinaryTextureLoader),\n/* harmony export */   \"Bone\": () => (/* binding */ Bone),\n/* harmony export */   \"BooleanKeyframeTrack\": () => (/* binding */ BooleanKeyframeTrack),\n/* harmony export */   \"BoundingBoxHelper\": () => (/* binding */ BoundingBoxHelper),\n/* harmony export */   \"Box2\": () => (/* binding */ Box2),\n/* harmony export */   \"Box3\": () => (/* binding */ Box3),\n/* harmony export */   \"Box3Helper\": () => (/* binding */ Box3Helper),\n/* harmony export */   \"BoxBufferGeometry\": () => (/* binding */ BoxGeometry),\n/* harmony export */   \"BoxGeometry\": () => (/* binding */ BoxGeometry),\n/* harmony export */   \"BoxHelper\": () => (/* binding */ BoxHelper),\n/* harmony export */   \"BufferAttribute\": () => (/* binding */ BufferAttribute),\n/* harmony export */   \"BufferGeometry\": () => (/* binding */ BufferGeometry),\n/* harmony export */   \"BufferGeometryLoader\": () => (/* binding */ BufferGeometryLoader),\n/* harmony export */   \"ByteType\": () => (/* binding */ ByteType),\n/* harmony export */   \"Cache\": () => (/* binding */ Cache),\n/* harmony export */   \"Camera\": () => (/* binding */ Camera),\n/* harmony export */   \"CameraHelper\": () => (/* binding */ CameraHelper),\n/* harmony export */   \"CanvasRenderer\": () => (/* binding */ CanvasRenderer),\n/* harmony export */   \"CanvasTexture\": () => (/* binding */ CanvasTexture),\n/* harmony export */   \"CatmullRomCurve3\": () => (/* binding */ CatmullRomCurve3),\n/* harmony export */   \"CineonToneMapping\": () => (/* binding */ CineonToneMapping),\n/* harmony export */   \"CircleBufferGeometry\": () => (/* binding */ CircleGeometry),\n/* harmony export */   \"CircleGeometry\": () => (/* binding */ CircleGeometry),\n/* harmony export */   \"ClampToEdgeWrapping\": () => (/* binding */ ClampToEdgeWrapping),\n/* harmony export */   \"Clock\": () => (/* binding */ Clock),\n/* harmony export */   \"Color\": () => (/* binding */ Color),\n/* harmony export */   \"ColorKeyframeTrack\": () => (/* binding */ ColorKeyframeTrack),\n/* harmony export */   \"CompressedTexture\": () => (/* binding */ CompressedTexture),\n/* harmony export */   \"CompressedTextureLoader\": () => (/* binding */ CompressedTextureLoader),\n/* harmony export */   \"ConeBufferGeometry\": () => (/* binding */ ConeGeometry),\n/* harmony export */   \"ConeGeometry\": () => (/* binding */ ConeGeometry),\n/* harmony export */   \"CubeCamera\": () => (/* binding */ CubeCamera),\n/* harmony export */   \"CubeReflectionMapping\": () => (/* binding */ CubeReflectionMapping),\n/* harmony export */   \"CubeRefractionMapping\": () => (/* binding */ CubeRefractionMapping),\n/* harmony export */   \"CubeTexture\": () => (/* binding */ CubeTexture),\n/* harmony export */   \"CubeTextureLoader\": () => (/* binding */ CubeTextureLoader),\n/* harmony export */   \"CubeUVReflectionMapping\": () => (/* binding */ CubeUVReflectionMapping),\n/* harmony export */   \"CubeUVRefractionMapping\": () => (/* binding */ CubeUVRefractionMapping),\n/* harmony export */   \"CubicBezierCurve\": () => (/* binding */ CubicBezierCurve),\n/* harmony export */   \"CubicBezierCurve3\": () => (/* binding */ CubicBezierCurve3),\n/* harmony export */   \"CubicInterpolant\": () => (/* binding */ CubicInterpolant),\n/* harmony export */   \"CullFaceBack\": () => (/* binding */ CullFaceBack),\n/* harmony export */   \"CullFaceFront\": () => (/* binding */ CullFaceFront),\n/* harmony export */   \"CullFaceFrontBack\": () => (/* binding */ CullFaceFrontBack),\n/* harmony export */   \"CullFaceNone\": () => (/* binding */ CullFaceNone),\n/* harmony export */   \"Curve\": () => (/* binding */ Curve),\n/* harmony export */   \"CurvePath\": () => (/* binding */ CurvePath),\n/* harmony export */   \"CustomBlending\": () => (/* binding */ CustomBlending),\n/* harmony export */   \"CustomToneMapping\": () => (/* binding */ CustomToneMapping),\n/* harmony export */   \"CylinderBufferGeometry\": () => (/* binding */ CylinderGeometry),\n/* harmony export */   \"CylinderGeometry\": () => (/* binding */ CylinderGeometry),\n/* harmony export */   \"Cylindrical\": () => (/* binding */ Cylindrical),\n/* harmony export */   \"DataTexture\": () => (/* binding */ DataTexture),\n/* harmony export */   \"DataTexture2DArray\": () => (/* binding */ DataTexture2DArray),\n/* harmony export */   \"DataTexture3D\": () => (/* binding */ DataTexture3D),\n/* harmony export */   \"DataTextureLoader\": () => (/* binding */ DataTextureLoader),\n/* harmony export */   \"DataUtils\": () => (/* binding */ DataUtils),\n/* harmony export */   \"DecrementStencilOp\": () => (/* binding */ DecrementStencilOp),\n/* harmony export */   \"DecrementWrapStencilOp\": () => (/* binding */ DecrementWrapStencilOp),\n/* harmony export */   \"DefaultLoadingManager\": () => (/* binding */ DefaultLoadingManager),\n/* harmony export */   \"DepthFormat\": () => (/* binding */ DepthFormat),\n/* harmony export */   \"DepthStencilFormat\": () => (/* binding */ DepthStencilFormat),\n/* harmony export */   \"DepthTexture\": () => (/* binding */ DepthTexture),\n/* harmony export */   \"DirectionalLight\": () => (/* binding */ DirectionalLight),\n/* harmony export */   \"DirectionalLightHelper\": () => (/* binding */ DirectionalLightHelper),\n/* harmony export */   \"DiscreteInterpolant\": () => (/* binding */ DiscreteInterpolant),\n/* harmony export */   \"DodecahedronBufferGeometry\": () => (/* binding */ DodecahedronGeometry),\n/* harmony export */   \"DodecahedronGeometry\": () => (/* binding */ DodecahedronGeometry),\n/* harmony export */   \"DoubleSide\": () => (/* binding */ DoubleSide),\n/* harmony export */   \"DstAlphaFactor\": () => (/* binding */ DstAlphaFactor),\n/* harmony export */   \"DstColorFactor\": () => (/* binding */ DstColorFactor),\n/* harmony export */   \"DynamicBufferAttribute\": () => (/* binding */ DynamicBufferAttribute),\n/* harmony export */   \"DynamicCopyUsage\": () => (/* binding */ DynamicCopyUsage),\n/* harmony export */   \"DynamicDrawUsage\": () => (/* binding */ DynamicDrawUsage),\n/* harmony export */   \"DynamicReadUsage\": () => (/* binding */ DynamicReadUsage),\n/* harmony export */   \"EdgesGeometry\": () => (/* binding */ EdgesGeometry),\n/* harmony export */   \"EdgesHelper\": () => (/* binding */ EdgesHelper),\n/* harmony export */   \"EllipseCurve\": () => (/* binding */ EllipseCurve),\n/* harmony export */   \"EqualDepth\": () => (/* binding */ EqualDepth),\n/* harmony export */   \"EqualStencilFunc\": () => (/* binding */ EqualStencilFunc),\n/* harmony export */   \"EquirectangularReflectionMapping\": () => (/* binding */ EquirectangularReflectionMapping),\n/* harmony export */   \"EquirectangularRefractionMapping\": () => (/* binding */ EquirectangularRefractionMapping),\n/* harmony export */   \"Euler\": () => (/* binding */ Euler),\n/* harmony export */   \"EventDispatcher\": () => (/* binding */ EventDispatcher),\n/* harmony export */   \"ExtrudeBufferGeometry\": () => (/* binding */ ExtrudeGeometry),\n/* harmony export */   \"ExtrudeGeometry\": () => (/* binding */ ExtrudeGeometry),\n/* harmony export */   \"FaceColors\": () => (/* binding */ FaceColors),\n/* harmony export */   \"FileLoader\": () => (/* binding */ FileLoader),\n/* harmony export */   \"FlatShading\": () => (/* binding */ FlatShading),\n/* harmony export */   \"Float16BufferAttribute\": () => (/* binding */ Float16BufferAttribute),\n/* harmony export */   \"Float32Attribute\": () => (/* binding */ Float32Attribute),\n/* harmony export */   \"Float32BufferAttribute\": () => (/* binding */ Float32BufferAttribute),\n/* harmony export */   \"Float64Attribute\": () => (/* binding */ Float64Attribute),\n/* harmony export */   \"Float64BufferAttribute\": () => (/* binding */ Float64BufferAttribute),\n/* harmony export */   \"FloatType\": () => (/* binding */ FloatType),\n/* harmony export */   \"Fog\": () => (/* binding */ Fog),\n/* harmony export */   \"FogExp2\": () => (/* binding */ FogExp2),\n/* harmony export */   \"Font\": () => (/* binding */ Font),\n/* harmony export */   \"FontLoader\": () => (/* binding */ FontLoader),\n/* harmony export */   \"FrontSide\": () => (/* binding */ FrontSide),\n/* harmony export */   \"Frustum\": () => (/* binding */ Frustum),\n/* harmony export */   \"GLBufferAttribute\": () => (/* binding */ GLBufferAttribute),\n/* harmony export */   \"GLSL1\": () => (/* binding */ GLSL1),\n/* harmony export */   \"GLSL3\": () => (/* binding */ GLSL3),\n/* harmony export */   \"GammaEncoding\": () => (/* binding */ GammaEncoding),\n/* harmony export */   \"GreaterDepth\": () => (/* binding */ GreaterDepth),\n/* harmony export */   \"GreaterEqualDepth\": () => (/* binding */ GreaterEqualDepth),\n/* harmony export */   \"GreaterEqualStencilFunc\": () => (/* binding */ GreaterEqualStencilFunc),\n/* harmony export */   \"GreaterStencilFunc\": () => (/* binding */ GreaterStencilFunc),\n/* harmony export */   \"GridHelper\": () => (/* binding */ GridHelper),\n/* harmony export */   \"Group\": () => (/* binding */ Group),\n/* harmony export */   \"HalfFloatType\": () => (/* binding */ HalfFloatType),\n/* harmony export */   \"HemisphereLight\": () => (/* binding */ HemisphereLight),\n/* harmony export */   \"HemisphereLightHelper\": () => (/* binding */ HemisphereLightHelper),\n/* harmony export */   \"HemisphereLightProbe\": () => (/* binding */ HemisphereLightProbe),\n/* harmony export */   \"IcosahedronBufferGeometry\": () => (/* binding */ IcosahedronGeometry),\n/* harmony export */   \"IcosahedronGeometry\": () => (/* binding */ IcosahedronGeometry),\n/* harmony export */   \"ImageBitmapLoader\": () => (/* binding */ ImageBitmapLoader),\n/* harmony export */   \"ImageLoader\": () => (/* binding */ ImageLoader),\n/* harmony export */   \"ImageUtils\": () => (/* binding */ ImageUtils),\n/* harmony export */   \"ImmediateRenderObject\": () => (/* binding */ ImmediateRenderObject),\n/* harmony export */   \"IncrementStencilOp\": () => (/* binding */ IncrementStencilOp),\n/* harmony export */   \"IncrementWrapStencilOp\": () => (/* binding */ IncrementWrapStencilOp),\n/* harmony export */   \"InstancedBufferAttribute\": () => (/* binding */ InstancedBufferAttribute),\n/* harmony export */   \"InstancedBufferGeometry\": () => (/* binding */ InstancedBufferGeometry),\n/* harmony export */   \"InstancedInterleavedBuffer\": () => (/* binding */ InstancedInterleavedBuffer),\n/* harmony export */   \"InstancedMesh\": () => (/* binding */ InstancedMesh),\n/* harmony export */   \"Int16Attribute\": () => (/* binding */ Int16Attribute),\n/* harmony export */   \"Int16BufferAttribute\": () => (/* binding */ Int16BufferAttribute),\n/* harmony export */   \"Int32Attribute\": () => (/* binding */ Int32Attribute),\n/* harmony export */   \"Int32BufferAttribute\": () => (/* binding */ Int32BufferAttribute),\n/* harmony export */   \"Int8Attribute\": () => (/* binding */ Int8Attribute),\n/* harmony export */   \"Int8BufferAttribute\": () => (/* binding */ Int8BufferAttribute),\n/* harmony export */   \"IntType\": () => (/* binding */ IntType),\n/* harmony export */   \"InterleavedBuffer\": () => (/* binding */ InterleavedBuffer),\n/* harmony export */   \"InterleavedBufferAttribute\": () => (/* binding */ InterleavedBufferAttribute),\n/* harmony export */   \"Interpolant\": () => (/* binding */ Interpolant),\n/* harmony export */   \"InterpolateDiscrete\": () => (/* binding */ InterpolateDiscrete),\n/* harmony export */   \"InterpolateLinear\": () => (/* binding */ InterpolateLinear),\n/* harmony export */   \"InterpolateSmooth\": () => (/* binding */ InterpolateSmooth),\n/* harmony export */   \"InvertStencilOp\": () => (/* binding */ InvertStencilOp),\n/* harmony export */   \"JSONLoader\": () => (/* binding */ JSONLoader),\n/* harmony export */   \"KeepStencilOp\": () => (/* binding */ KeepStencilOp),\n/* harmony export */   \"KeyframeTrack\": () => (/* binding */ KeyframeTrack),\n/* harmony export */   \"LOD\": () => (/* binding */ LOD),\n/* harmony export */   \"LatheBufferGeometry\": () => (/* binding */ LatheGeometry),\n/* harmony export */   \"LatheGeometry\": () => (/* binding */ LatheGeometry),\n/* harmony export */   \"Layers\": () => (/* binding */ Layers),\n/* harmony export */   \"LensFlare\": () => (/* binding */ LensFlare),\n/* harmony export */   \"LessDepth\": () => (/* binding */ LessDepth),\n/* harmony export */   \"LessEqualDepth\": () => (/* binding */ LessEqualDepth),\n/* harmony export */   \"LessEqualStencilFunc\": () => (/* binding */ LessEqualStencilFunc),\n/* harmony export */   \"LessStencilFunc\": () => (/* binding */ LessStencilFunc),\n/* harmony export */   \"Light\": () => (/* binding */ Light),\n/* harmony export */   \"LightProbe\": () => (/* binding */ LightProbe),\n/* harmony export */   \"Line\": () => (/* binding */ Line),\n/* harmony export */   \"Line3\": () => (/* binding */ Line3),\n/* harmony export */   \"LineBasicMaterial\": () => (/* binding */ LineBasicMaterial),\n/* harmony export */   \"LineCurve\": () => (/* binding */ LineCurve),\n/* harmony export */   \"LineCurve3\": () => (/* binding */ LineCurve3),\n/* harmony export */   \"LineDashedMaterial\": () => (/* binding */ LineDashedMaterial),\n/* harmony export */   \"LineLoop\": () => (/* binding */ LineLoop),\n/* harmony export */   \"LinePieces\": () => (/* binding */ LinePieces),\n/* harmony export */   \"LineSegments\": () => (/* binding */ LineSegments),\n/* harmony export */   \"LineStrip\": () => (/* binding */ LineStrip),\n/* harmony export */   \"LinearEncoding\": () => (/* binding */ LinearEncoding),\n/* harmony export */   \"LinearFilter\": () => (/* binding */ LinearFilter),\n/* harmony export */   \"LinearInterpolant\": () => (/* binding */ LinearInterpolant),\n/* harmony export */   \"LinearMipMapLinearFilter\": () => (/* binding */ LinearMipMapLinearFilter),\n/* harmony export */   \"LinearMipMapNearestFilter\": () => (/* binding */ LinearMipMapNearestFilter),\n/* harmony export */   \"LinearMipmapLinearFilter\": () => (/* binding */ LinearMipmapLinearFilter),\n/* harmony export */   \"LinearMipmapNearestFilter\": () => (/* binding */ LinearMipmapNearestFilter),\n/* harmony export */   \"LinearToneMapping\": () => (/* binding */ LinearToneMapping),\n/* harmony export */   \"Loader\": () => (/* binding */ Loader),\n/* harmony export */   \"LoaderUtils\": () => (/* binding */ LoaderUtils),\n/* harmony export */   \"LoadingManager\": () => (/* binding */ LoadingManager),\n/* harmony export */   \"LogLuvEncoding\": () => (/* binding */ LogLuvEncoding),\n/* harmony export */   \"LoopOnce\": () => (/* binding */ LoopOnce),\n/* harmony export */   \"LoopPingPong\": () => (/* binding */ LoopPingPong),\n/* harmony export */   \"LoopRepeat\": () => (/* binding */ LoopRepeat),\n/* harmony export */   \"LuminanceAlphaFormat\": () => (/* binding */ LuminanceAlphaFormat),\n/* harmony export */   \"LuminanceFormat\": () => (/* binding */ LuminanceFormat),\n/* harmony export */   \"MOUSE\": () => (/* binding */ MOUSE),\n/* harmony export */   \"Material\": () => (/* binding */ Material),\n/* harmony export */   \"MaterialLoader\": () => (/* binding */ MaterialLoader),\n/* harmony export */   \"Math\": () => (/* binding */ MathUtils),\n/* harmony export */   \"MathUtils\": () => (/* binding */ MathUtils),\n/* harmony export */   \"Matrix3\": () => (/* binding */ Matrix3),\n/* harmony export */   \"Matrix4\": () => (/* binding */ Matrix4),\n/* harmony export */   \"MaxEquation\": () => (/* binding */ MaxEquation),\n/* harmony export */   \"Mesh\": () => (/* binding */ Mesh),\n/* harmony export */   \"MeshBasicMaterial\": () => (/* binding */ MeshBasicMaterial),\n/* harmony export */   \"MeshDepthMaterial\": () => (/* binding */ MeshDepthMaterial),\n/* harmony export */   \"MeshDistanceMaterial\": () => (/* binding */ MeshDistanceMaterial),\n/* harmony export */   \"MeshFaceMaterial\": () => (/* binding */ MeshFaceMaterial),\n/* harmony export */   \"MeshLambertMaterial\": () => (/* binding */ MeshLambertMaterial),\n/* harmony export */   \"MeshMatcapMaterial\": () => (/* binding */ MeshMatcapMaterial),\n/* harmony export */   \"MeshNormalMaterial\": () => (/* binding */ MeshNormalMaterial),\n/* harmony export */   \"MeshPhongMaterial\": () => (/* binding */ MeshPhongMaterial),\n/* harmony export */   \"MeshPhysicalMaterial\": () => (/* binding */ MeshPhysicalMaterial),\n/* harmony export */   \"MeshStandardMaterial\": () => (/* binding */ MeshStandardMaterial),\n/* harmony export */   \"MeshToonMaterial\": () => (/* binding */ MeshToonMaterial),\n/* harmony export */   \"MinEquation\": () => (/* binding */ MinEquation),\n/* harmony export */   \"MirroredRepeatWrapping\": () => (/* binding */ MirroredRepeatWrapping),\n/* harmony export */   \"MixOperation\": () => (/* binding */ MixOperation),\n/* harmony export */   \"MultiMaterial\": () => (/* binding */ MultiMaterial),\n/* harmony export */   \"MultiplyBlending\": () => (/* binding */ MultiplyBlending),\n/* harmony export */   \"MultiplyOperation\": () => (/* binding */ MultiplyOperation),\n/* harmony export */   \"NearestFilter\": () => (/* binding */ NearestFilter),\n/* harmony export */   \"NearestMipMapLinearFilter\": () => (/* binding */ NearestMipMapLinearFilter),\n/* harmony export */   \"NearestMipMapNearestFilter\": () => (/* binding */ NearestMipMapNearestFilter),\n/* harmony export */   \"NearestMipmapLinearFilter\": () => (/* binding */ NearestMipmapLinearFilter),\n/* harmony export */   \"NearestMipmapNearestFilter\": () => (/* binding */ NearestMipmapNearestFilter),\n/* harmony export */   \"NeverDepth\": () => (/* binding */ NeverDepth),\n/* harmony export */   \"NeverStencilFunc\": () => (/* binding */ NeverStencilFunc),\n/* harmony export */   \"NoBlending\": () => (/* binding */ NoBlending),\n/* harmony export */   \"NoColors\": () => (/* binding */ NoColors),\n/* harmony export */   \"NoToneMapping\": () => (/* binding */ NoToneMapping),\n/* harmony export */   \"NormalAnimationBlendMode\": () => (/* binding */ NormalAnimationBlendMode),\n/* harmony export */   \"NormalBlending\": () => (/* binding */ NormalBlending),\n/* harmony export */   \"NotEqualDepth\": () => (/* binding */ NotEqualDepth),\n/* harmony export */   \"NotEqualStencilFunc\": () => (/* binding */ NotEqualStencilFunc),\n/* harmony export */   \"NumberKeyframeTrack\": () => (/* binding */ NumberKeyframeTrack),\n/* harmony export */   \"Object3D\": () => (/* binding */ Object3D),\n/* harmony export */   \"ObjectLoader\": () => (/* binding */ ObjectLoader),\n/* harmony export */   \"ObjectSpaceNormalMap\": () => (/* binding */ ObjectSpaceNormalMap),\n/* harmony export */   \"OctahedronBufferGeometry\": () => (/* binding */ OctahedronGeometry),\n/* harmony export */   \"OctahedronGeometry\": () => (/* binding */ OctahedronGeometry),\n/* harmony export */   \"OneFactor\": () => (/* binding */ OneFactor),\n/* harmony export */   \"OneMinusDstAlphaFactor\": () => (/* binding */ OneMinusDstAlphaFactor),\n/* harmony export */   \"OneMinusDstColorFactor\": () => (/* binding */ OneMinusDstColorFactor),\n/* harmony export */   \"OneMinusSrcAlphaFactor\": () => (/* binding */ OneMinusSrcAlphaFactor),\n/* harmony export */   \"OneMinusSrcColorFactor\": () => (/* binding */ OneMinusSrcColorFactor),\n/* harmony export */   \"OrthographicCamera\": () => (/* binding */ OrthographicCamera),\n/* harmony export */   \"PCFShadowMap\": () => (/* binding */ PCFShadowMap),\n/* harmony export */   \"PCFSoftShadowMap\": () => (/* binding */ PCFSoftShadowMap),\n/* harmony export */   \"PMREMGenerator\": () => (/* binding */ PMREMGenerator),\n/* harmony export */   \"ParametricBufferGeometry\": () => (/* binding */ ParametricGeometry),\n/* harmony export */   \"ParametricGeometry\": () => (/* binding */ ParametricGeometry),\n/* harmony export */   \"Particle\": () => (/* binding */ Particle),\n/* harmony export */   \"ParticleBasicMaterial\": () => (/* binding */ ParticleBasicMaterial),\n/* harmony export */   \"ParticleSystem\": () => (/* binding */ ParticleSystem),\n/* harmony export */   \"ParticleSystemMaterial\": () => (/* binding */ ParticleSystemMaterial),\n/* harmony export */   \"Path\": () => (/* binding */ Path),\n/* harmony export */   \"PerspectiveCamera\": () => (/* binding */ PerspectiveCamera),\n/* harmony export */   \"Plane\": () => (/* binding */ Plane),\n/* harmony export */   \"PlaneBufferGeometry\": () => (/* binding */ PlaneGeometry),\n/* harmony export */   \"PlaneGeometry\": () => (/* binding */ PlaneGeometry),\n/* harmony export */   \"PlaneHelper\": () => (/* binding */ PlaneHelper),\n/* harmony export */   \"PointCloud\": () => (/* binding */ PointCloud),\n/* harmony export */   \"PointCloudMaterial\": () => (/* binding */ PointCloudMaterial),\n/* harmony export */   \"PointLight\": () => (/* binding */ PointLight),\n/* harmony export */   \"PointLightHelper\": () => (/* binding */ PointLightHelper),\n/* harmony export */   \"Points\": () => (/* binding */ Points),\n/* harmony export */   \"PointsMaterial\": () => (/* binding */ PointsMaterial),\n/* harmony export */   \"PolarGridHelper\": () => (/* binding */ PolarGridHelper),\n/* harmony export */   \"PolyhedronBufferGeometry\": () => (/* binding */ PolyhedronGeometry),\n/* harmony export */   \"PolyhedronGeometry\": () => (/* binding */ PolyhedronGeometry),\n/* harmony export */   \"PositionalAudio\": () => (/* binding */ PositionalAudio),\n/* harmony export */   \"PropertyBinding\": () => (/* binding */ PropertyBinding),\n/* harmony export */   \"PropertyMixer\": () => (/* binding */ PropertyMixer),\n/* harmony export */   \"QuadraticBezierCurve\": () => (/* binding */ QuadraticBezierCurve),\n/* harmony export */   \"QuadraticBezierCurve3\": () => (/* binding */ QuadraticBezierCurve3),\n/* harmony export */   \"Quaternion\": () => (/* binding */ Quaternion),\n/* harmony export */   \"QuaternionKeyframeTrack\": () => (/* binding */ QuaternionKeyframeTrack),\n/* harmony export */   \"QuaternionLinearInterpolant\": () => (/* binding */ QuaternionLinearInterpolant),\n/* harmony export */   \"REVISION\": () => (/* binding */ REVISION),\n/* harmony export */   \"RGBADepthPacking\": () => (/* binding */ RGBADepthPacking),\n/* harmony export */   \"RGBAFormat\": () => (/* binding */ RGBAFormat),\n/* harmony export */   \"RGBAIntegerFormat\": () => (/* binding */ RGBAIntegerFormat),\n/* harmony export */   \"RGBA_ASTC_10x10_Format\": () => (/* binding */ RGBA_ASTC_10x10_Format),\n/* harmony export */   \"RGBA_ASTC_10x5_Format\": () => (/* binding */ RGBA_ASTC_10x5_Format),\n/* harmony export */   \"RGBA_ASTC_10x6_Format\": () => (/* binding */ RGBA_ASTC_10x6_Format),\n/* harmony export */   \"RGBA_ASTC_10x8_Format\": () => (/* binding */ RGBA_ASTC_10x8_Format),\n/* harmony export */   \"RGBA_ASTC_12x10_Format\": () => (/* binding */ RGBA_ASTC_12x10_Format),\n/* harmony export */   \"RGBA_ASTC_12x12_Format\": () => (/* binding */ RGBA_ASTC_12x12_Format),\n/* harmony export */   \"RGBA_ASTC_4x4_Format\": () => (/* binding */ RGBA_ASTC_4x4_Format),\n/* harmony export */   \"RGBA_ASTC_5x4_Format\": () => (/* binding */ RGBA_ASTC_5x4_Format),\n/* harmony export */   \"RGBA_ASTC_5x5_Format\": () => (/* binding */ RGBA_ASTC_5x5_Format),\n/* harmony export */   \"RGBA_ASTC_6x5_Format\": () => (/* binding */ RGBA_ASTC_6x5_Format),\n/* harmony export */   \"RGBA_ASTC_6x6_Format\": () => (/* binding */ RGBA_ASTC_6x6_Format),\n/* harmony export */   \"RGBA_ASTC_8x5_Format\": () => (/* binding */ RGBA_ASTC_8x5_Format),\n/* harmony export */   \"RGBA_ASTC_8x6_Format\": () => (/* binding */ RGBA_ASTC_8x6_Format),\n/* harmony export */   \"RGBA_ASTC_8x8_Format\": () => (/* binding */ RGBA_ASTC_8x8_Format),\n/* harmony export */   \"RGBA_BPTC_Format\": () => (/* binding */ RGBA_BPTC_Format),\n/* harmony export */   \"RGBA_ETC2_EAC_Format\": () => (/* binding */ RGBA_ETC2_EAC_Format),\n/* harmony export */   \"RGBA_PVRTC_2BPPV1_Format\": () => (/* binding */ RGBA_PVRTC_2BPPV1_Format),\n/* harmony export */   \"RGBA_PVRTC_4BPPV1_Format\": () => (/* binding */ RGBA_PVRTC_4BPPV1_Format),\n/* harmony export */   \"RGBA_S3TC_DXT1_Format\": () => (/* binding */ RGBA_S3TC_DXT1_Format),\n/* harmony export */   \"RGBA_S3TC_DXT3_Format\": () => (/* binding */ RGBA_S3TC_DXT3_Format),\n/* harmony export */   \"RGBA_S3TC_DXT5_Format\": () => (/* binding */ RGBA_S3TC_DXT5_Format),\n/* harmony export */   \"RGBDEncoding\": () => (/* binding */ RGBDEncoding),\n/* harmony export */   \"RGBEEncoding\": () => (/* binding */ RGBEEncoding),\n/* harmony export */   \"RGBEFormat\": () => (/* binding */ RGBEFormat),\n/* harmony export */   \"RGBFormat\": () => (/* binding */ RGBFormat),\n/* harmony export */   \"RGBIntegerFormat\": () => (/* binding */ RGBIntegerFormat),\n/* harmony export */   \"RGBM16Encoding\": () => (/* binding */ RGBM16Encoding),\n/* harmony export */   \"RGBM7Encoding\": () => (/* binding */ RGBM7Encoding),\n/* harmony export */   \"RGB_ETC1_Format\": () => (/* binding */ RGB_ETC1_Format),\n/* harmony export */   \"RGB_ETC2_Format\": () => (/* binding */ RGB_ETC2_Format),\n/* harmony export */   \"RGB_PVRTC_2BPPV1_Format\": () => (/* binding */ RGB_PVRTC_2BPPV1_Format),\n/* harmony export */   \"RGB_PVRTC_4BPPV1_Format\": () => (/* binding */ RGB_PVRTC_4BPPV1_Format),\n/* harmony export */   \"RGB_S3TC_DXT1_Format\": () => (/* binding */ RGB_S3TC_DXT1_Format),\n/* harmony export */   \"RGFormat\": () => (/* binding */ RGFormat),\n/* harmony export */   \"RGIntegerFormat\": () => (/* binding */ RGIntegerFormat),\n/* harmony export */   \"RawShaderMaterial\": () => (/* binding */ RawShaderMaterial),\n/* harmony export */   \"Ray\": () => (/* binding */ Ray),\n/* harmony export */   \"Raycaster\": () => (/* binding */ Raycaster),\n/* harmony export */   \"RectAreaLight\": () => (/* binding */ RectAreaLight),\n/* harmony export */   \"RedFormat\": () => (/* binding */ RedFormat),\n/* harmony export */   \"RedIntegerFormat\": () => (/* binding */ RedIntegerFormat),\n/* harmony export */   \"ReinhardToneMapping\": () => (/* binding */ ReinhardToneMapping),\n/* harmony export */   \"RepeatWrapping\": () => (/* binding */ RepeatWrapping),\n/* harmony export */   \"ReplaceStencilOp\": () => (/* binding */ ReplaceStencilOp),\n/* harmony export */   \"ReverseSubtractEquation\": () => (/* binding */ ReverseSubtractEquation),\n/* harmony export */   \"RingBufferGeometry\": () => (/* binding */ RingGeometry),\n/* harmony export */   \"RingGeometry\": () => (/* binding */ RingGeometry),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_10x10_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_10x10_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_10x5_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_10x5_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_10x6_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_10x6_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_10x8_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_10x8_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_12x10_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_12x10_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_12x12_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_12x12_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_4x4_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_4x4_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_5x4_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_5x4_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_5x5_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_5x5_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_6x5_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_6x5_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_6x6_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_6x6_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_8x5_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_8x5_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_8x6_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_8x6_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_8x8_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_8x8_Format),\n/* harmony export */   \"Scene\": () => (/* binding */ Scene),\n/* harmony export */   \"SceneUtils\": () => (/* binding */ SceneUtils),\n/* harmony export */   \"ShaderChunk\": () => (/* binding */ ShaderChunk),\n/* harmony export */   \"ShaderLib\": () => (/* binding */ ShaderLib),\n/* harmony export */   \"ShaderMaterial\": () => (/* binding */ ShaderMaterial),\n/* harmony export */   \"ShadowMaterial\": () => (/* binding */ ShadowMaterial),\n/* harmony export */   \"Shape\": () => (/* binding */ Shape),\n/* harmony export */   \"ShapeBufferGeometry\": () => (/* binding */ ShapeGeometry),\n/* harmony export */   \"ShapeGeometry\": () => (/* binding */ ShapeGeometry),\n/* harmony export */   \"ShapePath\": () => (/* binding */ ShapePath),\n/* harmony export */   \"ShapeUtils\": () => (/* binding */ ShapeUtils),\n/* harmony export */   \"ShortType\": () => (/* binding */ ShortType),\n/* harmony export */   \"Skeleton\": () => (/* binding */ Skeleton),\n/* harmony export */   \"SkeletonHelper\": () => (/* binding */ SkeletonHelper),\n/* harmony export */   \"SkinnedMesh\": () => (/* binding */ SkinnedMesh),\n/* harmony export */   \"SmoothShading\": () => (/* binding */ SmoothShading),\n/* harmony export */   \"Sphere\": () => (/* binding */ Sphere),\n/* harmony export */   \"SphereBufferGeometry\": () => (/* binding */ SphereGeometry),\n/* harmony export */   \"SphereGeometry\": () => (/* binding */ SphereGeometry),\n/* harmony export */   \"Spherical\": () => (/* binding */ Spherical),\n/* harmony export */   \"SphericalHarmonics3\": () => (/* binding */ SphericalHarmonics3),\n/* harmony export */   \"SplineCurve\": () => (/* binding */ SplineCurve),\n/* harmony export */   \"SpotLight\": () => (/* binding */ SpotLight),\n/* harmony export */   \"SpotLightHelper\": () => (/* binding */ SpotLightHelper),\n/* harmony export */   \"Sprite\": () => (/* binding */ Sprite),\n/* harmony export */   \"SpriteMaterial\": () => (/* binding */ SpriteMaterial),\n/* harmony export */   \"SrcAlphaFactor\": () => (/* binding */ SrcAlphaFactor),\n/* harmony export */   \"SrcAlphaSaturateFactor\": () => (/* binding */ SrcAlphaSaturateFactor),\n/* harmony export */   \"SrcColorFactor\": () => (/* binding */ SrcColorFactor),\n/* harmony export */   \"StaticCopyUsage\": () => (/* binding */ StaticCopyUsage),\n/* harmony export */   \"StaticDrawUsage\": () => (/* binding */ StaticDrawUsage),\n/* harmony export */   \"StaticReadUsage\": () => (/* binding */ StaticReadUsage),\n/* harmony export */   \"StereoCamera\": () => (/* binding */ StereoCamera),\n/* harmony export */   \"StreamCopyUsage\": () => (/* binding */ StreamCopyUsage),\n/* harmony export */   \"StreamDrawUsage\": () => (/* binding */ StreamDrawUsage),\n/* harmony export */   \"StreamReadUsage\": () => (/* binding */ StreamReadUsage),\n/* harmony export */   \"StringKeyframeTrack\": () => (/* binding */ StringKeyframeTrack),\n/* harmony export */   \"SubtractEquation\": () => (/* binding */ SubtractEquation),\n/* harmony export */   \"SubtractiveBlending\": () => (/* binding */ SubtractiveBlending),\n/* harmony export */   \"TOUCH\": () => (/* binding */ TOUCH),\n/* harmony export */   \"TangentSpaceNormalMap\": () => (/* binding */ TangentSpaceNormalMap),\n/* harmony export */   \"TetrahedronBufferGeometry\": () => (/* binding */ TetrahedronGeometry),\n/* harmony export */   \"TetrahedronGeometry\": () => (/* binding */ TetrahedronGeometry),\n/* harmony export */   \"TextBufferGeometry\": () => (/* binding */ TextGeometry),\n/* harmony export */   \"TextGeometry\": () => (/* binding */ TextGeometry),\n/* harmony export */   \"Texture\": () => (/* binding */ Texture),\n/* harmony export */   \"TextureLoader\": () => (/* binding */ TextureLoader),\n/* harmony export */   \"TorusBufferGeometry\": () => (/* binding */ TorusGeometry),\n/* harmony export */   \"TorusGeometry\": () => (/* binding */ TorusGeometry),\n/* harmony export */   \"TorusKnotBufferGeometry\": () => (/* binding */ TorusKnotGeometry),\n/* harmony export */   \"TorusKnotGeometry\": () => (/* binding */ TorusKnotGeometry),\n/* harmony export */   \"Triangle\": () => (/* binding */ Triangle),\n/* harmony export */   \"TriangleFanDrawMode\": () => (/* binding */ TriangleFanDrawMode),\n/* harmony export */   \"TriangleStripDrawMode\": () => (/* binding */ TriangleStripDrawMode),\n/* harmony export */   \"TrianglesDrawMode\": () => (/* binding */ TrianglesDrawMode),\n/* harmony export */   \"TubeBufferGeometry\": () => (/* binding */ TubeGeometry),\n/* harmony export */   \"TubeGeometry\": () => (/* binding */ TubeGeometry),\n/* harmony export */   \"UVMapping\": () => (/* binding */ UVMapping),\n/* harmony export */   \"Uint16Attribute\": () => (/* binding */ Uint16Attribute),\n/* harmony export */   \"Uint16BufferAttribute\": () => (/* binding */ Uint16BufferAttribute),\n/* harmony export */   \"Uint32Attribute\": () => (/* binding */ Uint32Attribute),\n/* harmony export */   \"Uint32BufferAttribute\": () => (/* binding */ Uint32BufferAttribute),\n/* harmony export */   \"Uint8Attribute\": () => (/* binding */ Uint8Attribute),\n/* harmony export */   \"Uint8BufferAttribute\": () => (/* binding */ Uint8BufferAttribute),\n/* harmony export */   \"Uint8ClampedAttribute\": () => (/* binding */ Uint8ClampedAttribute),\n/* harmony export */   \"Uint8ClampedBufferAttribute\": () => (/* binding */ Uint8ClampedBufferAttribute),\n/* harmony export */   \"Uniform\": () => (/* binding */ Uniform),\n/* harmony export */   \"UniformsLib\": () => (/* binding */ UniformsLib),\n/* harmony export */   \"UniformsUtils\": () => (/* binding */ UniformsUtils),\n/* harmony export */   \"UnsignedByteType\": () => (/* binding */ UnsignedByteType),\n/* harmony export */   \"UnsignedInt248Type\": () => (/* binding */ UnsignedInt248Type),\n/* harmony export */   \"UnsignedIntType\": () => (/* binding */ UnsignedIntType),\n/* harmony export */   \"UnsignedShort4444Type\": () => (/* binding */ UnsignedShort4444Type),\n/* harmony export */   \"UnsignedShort5551Type\": () => (/* binding */ UnsignedShort5551Type),\n/* harmony export */   \"UnsignedShort565Type\": () => (/* binding */ UnsignedShort565Type),\n/* harmony export */   \"UnsignedShortType\": () => (/* binding */ UnsignedShortType),\n/* harmony export */   \"VSMShadowMap\": () => (/* binding */ VSMShadowMap),\n/* harmony export */   \"Vector2\": () => (/* binding */ Vector2),\n/* harmony export */   \"Vector3\": () => (/* binding */ Vector3),\n/* harmony export */   \"Vector4\": () => (/* binding */ Vector4),\n/* harmony export */   \"VectorKeyframeTrack\": () => (/* binding */ VectorKeyframeTrack),\n/* harmony export */   \"Vertex\": () => (/* binding */ Vertex),\n/* harmony export */   \"VertexColors\": () => (/* binding */ VertexColors),\n/* harmony export */   \"VideoTexture\": () => (/* binding */ VideoTexture),\n/* harmony export */   \"WebGL1Renderer\": () => (/* binding */ WebGL1Renderer),\n/* harmony export */   \"WebGLCubeRenderTarget\": () => (/* binding */ WebGLCubeRenderTarget),\n/* harmony export */   \"WebGLMultipleRenderTargets\": () => (/* binding */ WebGLMultipleRenderTargets),\n/* harmony export */   \"WebGLMultisampleRenderTarget\": () => (/* binding */ WebGLMultisampleRenderTarget),\n/* harmony export */   \"WebGLRenderTarget\": () => (/* binding */ WebGLRenderTarget),\n/* harmony export */   \"WebGLRenderTargetCube\": () => (/* binding */ WebGLRenderTargetCube),\n/* harmony export */   \"WebGLRenderer\": () => (/* binding */ WebGLRenderer),\n/* harmony export */   \"WebGLUtils\": () => (/* binding */ WebGLUtils),\n/* harmony export */   \"WireframeGeometry\": () => (/* binding */ WireframeGeometry),\n/* harmony export */   \"WireframeHelper\": () => (/* binding */ WireframeHelper),\n/* harmony export */   \"WrapAroundEnding\": () => (/* binding */ WrapAroundEnding),\n/* harmony export */   \"XHRLoader\": () => (/* binding */ XHRLoader),\n/* harmony export */   \"ZeroCurvatureEnding\": () => (/* binding */ ZeroCurvatureEnding),\n/* harmony export */   \"ZeroFactor\": () => (/* binding */ ZeroFactor),\n/* harmony export */   \"ZeroSlopeEnding\": () => (/* binding */ ZeroSlopeEnding),\n/* harmony export */   \"ZeroStencilOp\": () => (/* binding */ ZeroStencilOp),\n/* harmony export */   \"sRGBEncoding\": () => (/* binding */ sRGBEncoding)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */const REVISION='129';const MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};const TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};const CullFaceNone=0;const CullFaceBack=1;const CullFaceFront=2;const CullFaceFrontBack=3;const BasicShadowMap=0;const PCFShadowMap=1;const PCFSoftShadowMap=2;const VSMShadowMap=3;const FrontSide=0;const BackSide=1;const DoubleSide=2;const FlatShading=1;const SmoothShading=2;const NoBlending=0;const NormalBlending=1;const AdditiveBlending=2;const SubtractiveBlending=3;const MultiplyBlending=4;const CustomBlending=5;const AddEquation=100;const SubtractEquation=101;const ReverseSubtractEquation=102;const MinEquation=103;const MaxEquation=104;const ZeroFactor=200;const OneFactor=201;const SrcColorFactor=202;const OneMinusSrcColorFactor=203;const SrcAlphaFactor=204;const OneMinusSrcAlphaFactor=205;const DstAlphaFactor=206;const OneMinusDstAlphaFactor=207;const DstColorFactor=208;const OneMinusDstColorFactor=209;const SrcAlphaSaturateFactor=210;const NeverDepth=0;const AlwaysDepth=1;const LessDepth=2;const LessEqualDepth=3;const EqualDepth=4;const GreaterEqualDepth=5;const GreaterDepth=6;const NotEqualDepth=7;const MultiplyOperation=0;const MixOperation=1;const AddOperation=2;const NoToneMapping=0;const LinearToneMapping=1;const ReinhardToneMapping=2;const CineonToneMapping=3;const ACESFilmicToneMapping=4;const CustomToneMapping=5;const UVMapping=300;const CubeReflectionMapping=301;const CubeRefractionMapping=302;const EquirectangularReflectionMapping=303;const EquirectangularRefractionMapping=304;const CubeUVReflectionMapping=306;const CubeUVRefractionMapping=307;const RepeatWrapping=1000;const ClampToEdgeWrapping=1001;const MirroredRepeatWrapping=1002;const NearestFilter=1003;const NearestMipmapNearestFilter=1004;const NearestMipMapNearestFilter=1004;const NearestMipmapLinearFilter=1005;const NearestMipMapLinearFilter=1005;const LinearFilter=1006;const LinearMipmapNearestFilter=1007;const LinearMipMapNearestFilter=1007;const LinearMipmapLinearFilter=1008;const LinearMipMapLinearFilter=1008;const UnsignedByteType=1009;const ByteType=1010;const ShortType=1011;const UnsignedShortType=1012;const IntType=1013;const UnsignedIntType=1014;const FloatType=1015;const HalfFloatType=1016;const UnsignedShort4444Type=1017;const UnsignedShort5551Type=1018;const UnsignedShort565Type=1019;const UnsignedInt248Type=1020;const AlphaFormat=1021;const RGBFormat=1022;const RGBAFormat=1023;const LuminanceFormat=1024;const LuminanceAlphaFormat=1025;const RGBEFormat=RGBAFormat;const DepthFormat=1026;const DepthStencilFormat=1027;const RedFormat=1028;const RedIntegerFormat=1029;const RGFormat=1030;const RGIntegerFormat=1031;const RGBIntegerFormat=1032;const RGBAIntegerFormat=1033;const RGB_S3TC_DXT1_Format=33776;const RGBA_S3TC_DXT1_Format=33777;const RGBA_S3TC_DXT3_Format=33778;const RGBA_S3TC_DXT5_Format=33779;const RGB_PVRTC_4BPPV1_Format=35840;const RGB_PVRTC_2BPPV1_Format=35841;const RGBA_PVRTC_4BPPV1_Format=35842;const RGBA_PVRTC_2BPPV1_Format=35843;const RGB_ETC1_Format=36196;const RGB_ETC2_Format=37492;const RGBA_ETC2_EAC_Format=37496;const RGBA_ASTC_4x4_Format=37808;const RGBA_ASTC_5x4_Format=37809;const RGBA_ASTC_5x5_Format=37810;const RGBA_ASTC_6x5_Format=37811;const RGBA_ASTC_6x6_Format=37812;const RGBA_ASTC_8x5_Format=37813;const RGBA_ASTC_8x6_Format=37814;const RGBA_ASTC_8x8_Format=37815;const RGBA_ASTC_10x5_Format=37816;const RGBA_ASTC_10x6_Format=37817;const RGBA_ASTC_10x8_Format=37818;const RGBA_ASTC_10x10_Format=37819;const RGBA_ASTC_12x10_Format=37820;const RGBA_ASTC_12x12_Format=37821;const RGBA_BPTC_Format=36492;const SRGB8_ALPHA8_ASTC_4x4_Format=37840;const SRGB8_ALPHA8_ASTC_5x4_Format=37841;const SRGB8_ALPHA8_ASTC_5x5_Format=37842;const SRGB8_ALPHA8_ASTC_6x5_Format=37843;const SRGB8_ALPHA8_ASTC_6x6_Format=37844;const SRGB8_ALPHA8_ASTC_8x5_Format=37845;const SRGB8_ALPHA8_ASTC_8x6_Format=37846;const SRGB8_ALPHA8_ASTC_8x8_Format=37847;const SRGB8_ALPHA8_ASTC_10x5_Format=37848;const SRGB8_ALPHA8_ASTC_10x6_Format=37849;const SRGB8_ALPHA8_ASTC_10x8_Format=37850;const SRGB8_ALPHA8_ASTC_10x10_Format=37851;const SRGB8_ALPHA8_ASTC_12x10_Format=37852;const SRGB8_ALPHA8_ASTC_12x12_Format=37853;const LoopOnce=2200;const LoopRepeat=2201;const LoopPingPong=2202;const InterpolateDiscrete=2300;const InterpolateLinear=2301;const InterpolateSmooth=2302;const ZeroCurvatureEnding=2400;const ZeroSlopeEnding=2401;const WrapAroundEnding=2402;const NormalAnimationBlendMode=2500;const AdditiveAnimationBlendMode=2501;const TrianglesDrawMode=0;const TriangleStripDrawMode=1;const TriangleFanDrawMode=2;const LinearEncoding=3000;const sRGBEncoding=3001;const GammaEncoding=3007;const RGBEEncoding=3002;const LogLuvEncoding=3003;const RGBM7Encoding=3004;const RGBM16Encoding=3005;const RGBDEncoding=3006;const BasicDepthPacking=3200;const RGBADepthPacking=3201;const TangentSpaceNormalMap=0;const ObjectSpaceNormalMap=1;const ZeroStencilOp=0;const KeepStencilOp=7680;const ReplaceStencilOp=7681;const IncrementStencilOp=7682;const DecrementStencilOp=7683;const IncrementWrapStencilOp=34055;const DecrementWrapStencilOp=34056;const InvertStencilOp=5386;const NeverStencilFunc=512;const LessStencilFunc=513;const EqualStencilFunc=514;const LessEqualStencilFunc=515;const GreaterStencilFunc=516;const NotEqualStencilFunc=517;const GreaterEqualStencilFunc=518;const AlwaysStencilFunc=519;const StaticDrawUsage=35044;const DynamicDrawUsage=35048;const StreamDrawUsage=35040;const StaticReadUsage=35045;const DynamicReadUsage=35049;const StreamReadUsage=35041;const StaticCopyUsage=35046;const DynamicCopyUsage=35050;const StreamCopyUsage=35042;const GLSL1='100';const GLSL3='300 es';/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */class EventDispatcher{addEventListener(type,listener){if(this._listeners===undefined)this._listeners={};const listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[];}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener);}}hasEventListener(type,listener){if(this._listeners===undefined)return false;const listeners=this._listeners;return listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1;}removeEventListener(type,listener){if(this._listeners===undefined)return;const listeners=this._listeners;const listenerArray=listeners[type];if(listenerArray!==undefined){const index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1);}}}dispatchEvent(event){if(this._listeners===undefined)return;const listeners=this._listeners;const listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;// Make a copy, in case listeners are removed while iterating.\nconst array=listenerArray.slice(0);for(let i=0,l=array.length;i<l;i++){array[i].call(this,event);}event.target=null;}}}const _lut=[];for(let i=0;i<256;i++){_lut[i]=(i<16?'0':'')+i.toString(16);}let _seed=1234567;const DEG2RAD=Math.PI/180;const RAD2DEG=180/Math.PI;// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID(){const d0=Math.random()*0xffffffff|0;const d1=Math.random()*0xffffffff|0;const d2=Math.random()*0xffffffff|0;const d3=Math.random()*0xffffffff|0;const uuid=_lut[d0&0xff]+_lut[d0>>8&0xff]+_lut[d0>>16&0xff]+_lut[d0>>24&0xff]+'-'+_lut[d1&0xff]+_lut[d1>>8&0xff]+'-'+_lut[d1>>16&0x0f|0x40]+_lut[d1>>24&0xff]+'-'+_lut[d2&0x3f|0x80]+_lut[d2>>8&0xff]+'-'+_lut[d2>>16&0xff]+_lut[d2>>24&0xff]+_lut[d3&0xff]+_lut[d3>>8&0xff]+_lut[d3>>16&0xff]+_lut[d3>>24&0xff];// .toUpperCase() here flattens concatenated strings to save heap memory space.\nreturn uuid.toUpperCase();}function clamp(value,min,max){return Math.max(min,Math.min(max,value));}// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo(n,m){return(n%m+m)%m;}// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1);}// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp(x,y,value){if(x!==y){return(value-x)/(y-x);}else{return 0;}}// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp(x,y,t){return(1-t)*x+t*y;}// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp(x,y,lambda,dt){return lerp(x,y,1-Math.exp(-lambda*dt));}// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong(x,length=1){return length-Math.abs(euclideanModulo(x,length*2)-length);}// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x);}function smootherstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10);}// Random integer from <low, high> interval\nfunction randInt(low,high){return low+Math.floor(Math.random()*(high-low+1));}// Random float from <low, high> interval\nfunction randFloat(low,high){return low+Math.random()*(high-low);}// Random float from <-range/2, range/2> interval\nfunction randFloatSpread(range){return range*(0.5-Math.random());}// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom(s){if(s!==undefined)_seed=s%2147483647;// Park-Miller algorithm\n_seed=_seed*16807%2147483647;return(_seed-1)/2147483646;}function degToRad(degrees){return degrees*DEG2RAD;}function radToDeg(radians){return radians*RAD2DEG;}function isPowerOfTwo(value){return(value&value-1)===0&&value!==0;}function ceilPowerOfTwo(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2));}function floorPowerOfTwo(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2));}function setQuaternionFromProperEuler(q,a,b,c,order){// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n// rotations are applied to the axes in the order specified by 'order'\n// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n// angles are in radians\nconst cos=Math.cos;const sin=Math.sin;const c2=cos(b/2);const s2=sin(b/2);const c13=cos((a+c)/2);const s13=sin((a+c)/2);const c1_3=cos((a-c)/2);const s1_3=sin((a-c)/2);const c3_1=cos((c-a)/2);const s3_1=sin((c-a)/2);switch(order){case'XYX':q.set(c2*s13,s2*c1_3,s2*s1_3,c2*c13);break;case'YZY':q.set(s2*s1_3,c2*s13,s2*c1_3,c2*c13);break;case'ZXZ':q.set(s2*c1_3,s2*s1_3,c2*s13,c2*c13);break;case'XZX':q.set(c2*s13,s2*s3_1,s2*c3_1,c2*c13);break;case'YXY':q.set(s2*c3_1,c2*s13,s2*s3_1,c2*c13);break;case'ZYZ':q.set(s2*s3_1,s2*c3_1,c2*s13,c2*c13);break;default:console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: '+order);}}var MathUtils=/*#__PURE__*/Object.freeze({__proto__:null,DEG2RAD:DEG2RAD,RAD2DEG:RAD2DEG,generateUUID:generateUUID,clamp:clamp,euclideanModulo:euclideanModulo,mapLinear:mapLinear,inverseLerp:inverseLerp,lerp:lerp,damp:damp,pingpong:pingpong,smoothstep:smoothstep,smootherstep:smootherstep,randInt:randInt,randFloat:randFloat,randFloatSpread:randFloatSpread,seededRandom:seededRandom,degToRad:degToRad,radToDeg:radToDeg,isPowerOfTwo:isPowerOfTwo,ceilPowerOfTwo:ceilPowerOfTwo,floorPowerOfTwo:floorPowerOfTwo,setQuaternionFromProperEuler:setQuaternionFromProperEuler});class Vector2{constructor(x=0,y=0){this.x=x;this.y=y;}get width(){return this.x;}set width(value){this.x=value;}get height(){return this.y;}set height(value){this.y=value;}set(x,y){this.x=x;this.y=y;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y);}copy(v){this.x=v.x;this.y=v.y;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;return this;}addScalar(s){this.x+=s;this.y+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;return this;}subScalar(s){this.x-=s;this.y-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;}multiply(v){this.x*=v.x;this.y*=v.y;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;return this;}divide(v){this.x/=v.x;this.y/=v.y;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}applyMatrix3(m){const x=this.x,y=this.y;const e=m.elements;this.x=e[0]*x+e[3]*y+e[6];this.y=e[1]*x+e[4]*y+e[7];return this;}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this;}negate(){this.x=-this.x;this.y=-this.y;return this;}dot(v){return this.x*v.x+this.y*v.y;}cross(v){return this.x*v.y-this.y*v.x;}lengthSq(){return this.x*this.x+this.y*this.y;}length(){return Math.sqrt(this.x*this.x+this.y*this.y);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y);}normalize(){return this.divideScalar(this.length()||1);}angle(){// computes the angle in radians with respect to the positive x-axis\nconst angle=Math.atan2(-this.y,-this.x)+Math.PI;return angle;}distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy;}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;return this;}equals(v){return v.x===this.x&&v.y===this.y;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);return this;}rotateAround(center,angle){const c=Math.cos(angle),s=Math.sin(angle);const x=this.x-center.x;const y=this.y-center.y;this.x=x*c-y*s+center.x;this.y=x*s+y*c+center.y;return this;}random(){this.x=Math.random();this.y=Math.random();return this;}}Vector2.prototype.isVector2=true;class Matrix3{constructor(){this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');}}set(n11,n12,n13,n21,n22,n23,n31,n32,n33){const te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this;}identity(){this.set(1,0,0,0,1,0,0,0,1);return this;}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this;}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrix3Column(this,0);yAxis.setFromMatrix3Column(this,1);zAxis.setFromMatrix3Column(this,2);return this;}setFromMatrix4(m){const me=m.elements;this.set(me[0],me[4],me[8],me[1],me[5],me[9],me[2],me[6],me[10]);return this;}multiply(m){return this.multiplyMatrices(this,m);}premultiply(m){return this.multiplyMatrices(m,this);}multiplyMatrices(a,b){const ae=a.elements;const be=b.elements;const te=this.elements;const a11=ae[0],a12=ae[3],a13=ae[6];const a21=ae[1],a22=ae[4],a23=ae[7];const a31=ae[2],a32=ae[5],a33=ae[8];const b11=be[0],b12=be[3],b13=be[6];const b21=be[1],b22=be[4],b23=be[7];const b31=be[2],b32=be[5],b33=be[8];te[0]=a11*b11+a12*b21+a13*b31;te[3]=a11*b12+a12*b22+a13*b32;te[6]=a11*b13+a12*b23+a13*b33;te[1]=a21*b11+a22*b21+a23*b31;te[4]=a21*b12+a22*b22+a23*b32;te[7]=a21*b13+a22*b23+a23*b33;te[2]=a31*b11+a32*b21+a33*b31;te[5]=a31*b12+a32*b22+a33*b32;te[8]=a31*b13+a32*b23+a33*b33;return this;}multiplyScalar(s){const te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;}determinant(){const te=this.elements;const a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;}invert(){const te=this.elements,n11=te[0],n21=te[1],n31=te[2],n12=te[3],n22=te[4],n32=te[5],n13=te[6],n23=te[7],n33=te[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(det===0)return this.set(0,0,0,0,0,0,0,0,0);const detInv=1/det;te[0]=t11*detInv;te[1]=(n31*n23-n33*n21)*detInv;te[2]=(n32*n21-n31*n22)*detInv;te[3]=t12*detInv;te[4]=(n33*n11-n31*n13)*detInv;te[5]=(n31*n12-n32*n11)*detInv;te[6]=t13*detInv;te[7]=(n21*n13-n23*n11)*detInv;te[8]=(n22*n11-n21*n12)*detInv;return this;}transpose(){let tmp;const m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;}getNormalMatrix(matrix4){return this.setFromMatrix4(matrix4).invert().transpose();}transposeIntoArray(r){const m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this;}setUvTransform(tx,ty,sx,sy,rotation,cx,cy){const c=Math.cos(rotation);const s=Math.sin(rotation);this.set(sx*c,sx*s,-sx*(c*cx+s*cy)+cx+tx,-sy*s,sy*c,-sy*(-s*cx+c*cy)+cy+ty,0,0,1);return this;}scale(sx,sy){const te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this;}rotate(theta){const c=Math.cos(theta);const s=Math.sin(theta);const te=this.elements;const a11=te[0],a12=te[3],a13=te[6];const a21=te[1],a22=te[4],a23=te[7];te[0]=c*a11+s*a21;te[3]=c*a12+s*a22;te[6]=c*a13+s*a23;te[1]=-s*a11+c*a21;te[4]=-s*a12+c*a22;te[7]=-s*a13+c*a23;return this;}translate(tx,ty){const te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this;}equals(matrix){const te=this.elements;const me=matrix.elements;for(let i=0;i<9;i++){if(te[i]!==me[i])return false;}return true;}fromArray(array,offset=0){for(let i=0;i<9;i++){this.elements[i]=array[i+offset];}return this;}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array;}clone(){return new this.constructor().fromArray(this.elements);}}Matrix3.prototype.isMatrix3=true;let _canvas;class ImageUtils{static getDataURL(image){if(/^data:/i.test(image.src)){return image.src;}if(typeof HTMLCanvasElement=='undefined'){return image.src;}let canvas;if(image instanceof HTMLCanvasElement){canvas=image;}else{if(_canvas===undefined)_canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');_canvas.width=image.width;_canvas.height=image.height;const context=_canvas.getContext('2d');if(image instanceof ImageData){context.putImageData(image,0,0);}else{context.drawImage(image,0,0,image.width,image.height);}canvas=_canvas;}if(canvas.width>2048||canvas.height>2048){console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons',image);return canvas.toDataURL('image/jpeg',0.6);}else{return canvas.toDataURL('image/png');}}}let textureId=0;class Texture extends EventDispatcher{constructor(image=Texture.DEFAULT_IMAGE,mapping=Texture.DEFAULT_MAPPING,wrapS=ClampToEdgeWrapping,wrapT=ClampToEdgeWrapping,magFilter=LinearFilter,minFilter=LinearMipmapLinearFilter,format=RGBAFormat,type=UnsignedByteType,anisotropy=1,encoding=LinearEncoding){super();Object.defineProperty(this,'id',{value:textureId++});this.uuid=generateUUID();this.name='';this.image=image;this.mipmaps=[];this.mapping=mapping;this.wrapS=wrapS;this.wrapT=wrapT;this.magFilter=magFilter;this.minFilter=minFilter;this.anisotropy=anisotropy;this.format=format;this.internalFormat=null;this.type=type;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,1);this.center=new Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new Matrix3();this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n//\n// Also changing the encoding after already used by a Material will not automatically make the Material\n// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\nthis.encoding=encoding;this.version=0;this.onUpdate=null;}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y);}clone(){return new this.constructor().copy(this);}copy(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this;}toJSON(meta){const isRootObject=meta===undefined||typeof meta==='string';if(!isRootObject&&meta.textures[this.uuid]!==undefined){return meta.textures[this.uuid];}const output={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){// TODO: Move to THREE.Image\nconst image=this.image;if(image.uuid===undefined){image.uuid=generateUUID();// UGH\n}if(!isRootObject&&meta.images[image.uuid]===undefined){let url;if(Array.isArray(image)){// process array of images e.g. CubeTexture\nurl=[];for(let i=0,l=image.length;i<l;i++){// check cube texture with data textures\nif(image[i].isDataTexture){url.push(serializeImage(image[i].image));}else{url.push(serializeImage(image[i]));}}}else{// process single image\nurl=serializeImage(image);}meta.images[image.uuid]={uuid:image.uuid,url:url};}output.image=image.uuid;}if(!isRootObject){meta.textures[this.uuid]=output;}return output;}dispose(){this.dispatchEvent({type:'dispose'});}transformUv(uv){if(this.mapping!==UVMapping)return uv;uv.applyMatrix3(this.matrix);if(uv.x<0||uv.x>1){switch(this.wrapS){case RepeatWrapping:uv.x=uv.x-Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=uv.x<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.x)%2)===1){uv.x=Math.ceil(uv.x)-uv.x;}else{uv.x=uv.x-Math.floor(uv.x);}break;}}if(uv.y<0||uv.y>1){switch(this.wrapT){case RepeatWrapping:uv.y=uv.y-Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=uv.y<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.y)%2)===1){uv.y=Math.ceil(uv.y)-uv.y;}else{uv.y=uv.y-Math.floor(uv.y);}break;}}if(this.flipY){uv.y=1-uv.y;}return uv;}set needsUpdate(value){if(value===true)this.version++;}}Texture.DEFAULT_IMAGE=undefined;Texture.DEFAULT_MAPPING=UVMapping;Texture.prototype.isTexture=true;function serializeImage(image){if(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){// default images\nreturn ImageUtils.getDataURL(image);}else{if(image.data){// images of DataTexture\nreturn{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name};}else{console.warn('THREE.Texture: Unable to serialize Texture.');return{};}}}class Vector4{constructor(x=0,y=0,z=0,w=1){this.x=x;this.y=y;this.z=z;this.w=w;}get width(){return this.z;}set width(value){this.z=value;}get height(){return this.w;}set height(value){this.w=value;}set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;this.w=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setZ(z){this.z=z;return this;}setW(w){this.w=w;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w);}copy(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this;}addScalar(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this;}subScalar(s){this.x-=s;this.y-=s;this.z-=s;this.w-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;}multiply(v){this.x*=v.x;this.y*=v.y;this.z*=v.z;this.w*=v.w;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this;}applyMatrix4(m){const x=this.x,y=this.y,z=this.z,w=this.w;const e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}setAxisAngleFromQuaternion(q){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n// q is assumed to be normalized\nthis.w=2*Math.acos(q.w);const s=Math.sqrt(1-q.w*q.w);if(s<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s;}return this;}setAxisAngleFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nlet angle,x,y,z;// variables for result\nconst epsilon=0.01,// margin to allow for rounding errors\nepsilon2=0.1,// margin to distinguish between 0 and 180 degrees\nte=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){// singularity found\n// first check for identity matrix which must have +1 for all terms\n// in leading diagonal and zero in other terms\nif(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){// this singularity is identity matrix so angle = 0\nthis.set(1,0,0,0);return this;// zero angle, arbitrary axis\n}// otherwise this singularity is angle = 180\nangle=Math.PI;const xx=(m11+1)/2;const yy=(m22+1)/2;const zz=(m33+1)/2;const xy=(m12+m21)/4;const xz=(m13+m31)/4;const yz=(m23+m32)/4;if(xx>yy&&xx>zz){// m11 is the largest diagonal term\nif(xx<epsilon){x=0;y=0.707106781;z=0.707106781;}else{x=Math.sqrt(xx);y=xy/x;z=xz/x;}}else if(yy>zz){// m22 is the largest diagonal term\nif(yy<epsilon){x=0.707106781;y=0;z=0.707106781;}else{y=Math.sqrt(yy);x=xy/y;z=yz/y;}}else{// m33 is the largest diagonal term so base result on this\nif(zz<epsilon){x=0.707106781;y=0.707106781;z=0;}else{z=Math.sqrt(zz);x=xz/z;y=yz/z;}}this.set(x,y,z,angle);return this;// return 180 deg rotation\n}// as we have reached here there are no singularities so we can handle normally\nlet s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));// used to normalize\nif(Math.abs(s)<0.001)s=1;// prevent divide by zero, should not happen if matrix is orthogonal and should be\n// caught by singularity test above, but I've left it in just in case\nthis.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this;}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,Math.min(max.w,this.w));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));this.w=Math.max(minVal,Math.min(maxVal,this.w));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this;}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this;}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w;}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);}normalize(){return this.divideScalar(this.length()||1);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;this.w=v1.w+(v2.w-v1.w)*alpha;return this;}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this;}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this;}}Vector4.prototype.isVector4=true;/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/class WebGLRenderTarget extends EventDispatcher{constructor(width,height,options){super();this.width=width;this.height=height;this.depth=1;this.scissor=new Vector4(0,0,width,height);this.scissorTest=false;this.viewport=new Vector4(0,0,width,height);options=options||{};this.texture=new Texture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.image={};this.texture.image.width=width;this.texture.image.height=height;this.texture.image.depth=1;this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;this.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:false;this.depthTexture=options.depthTexture!==undefined?options.depthTexture:null;}setTexture(texture){texture.image={width:this.width,height:this.height,depth:this.depth};this.texture=texture;}setSize(width,height,depth=1){if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width;this.height=height;this.depth=depth;this.texture.image.width=width;this.texture.image.height=height;this.texture.image.depth=depth;this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);}clone(){return new this.constructor().copy(this);}copy(source){this.width=source.width;this.height=source.height;this.depth=source.depth;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.texture.image={...this.texture.image};// See #20328.\nthis.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this;}dispose(){this.dispatchEvent({type:'dispose'});}}WebGLRenderTarget.prototype.isWebGLRenderTarget=true;class WebGLMultipleRenderTargets extends WebGLRenderTarget{constructor(width,height,count){super(width,height);const texture=this.texture;this.texture=[];for(let i=0;i<count;i++){this.texture[i]=texture.clone();}}setSize(width,height,depth=1){if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width;this.height=height;this.depth=depth;for(let i=0,il=this.texture.length;i<il;i++){this.texture[i].image.width=width;this.texture[i].image.height=height;this.texture[i].image.depth=depth;}this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);return this;}copy(source){this.dispose();this.width=source.width;this.height=source.height;this.depth=source.depth;this.viewport.set(0,0,this.width,this.height);this.scissor.set(0,0,this.width,this.height);this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;this.texture.length=0;for(let i=0,il=source.texture.length;i<il;i++){this.texture[i]=source.texture[i].clone();}return this;}}WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets=true;class WebGLMultisampleRenderTarget extends WebGLRenderTarget{constructor(width,height,options){super(width,height,options);this.samples=4;}copy(source){super.copy.call(this,source);this.samples=source.samples;return this;}}WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget=true;class Quaternion{constructor(x=0,y=0,z=0,w=1){this._x=x;this._y=y;this._z=z;this._w=w;}static slerp(qa,qb,qm,t){console.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');return qm.slerpQuaternions(qa,qb,t);}static slerpFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){// fuzz-free, array-based Quaternion SLERP operation\nlet x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3];const x1=src1[srcOffset1+0],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];if(t===0){dst[dstOffset+0]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;return;}if(t===1){dst[dstOffset+0]=x1;dst[dstOffset+1]=y1;dst[dstOffset+2]=z1;dst[dstOffset+3]=w1;return;}if(w0!==w1||x0!==x1||y0!==y1||z0!==z1){let s=1-t;const cos=x0*x1+y0*y1+z0*z1+w0*w1,dir=cos>=0?1:-1,sqrSin=1-cos*cos;// Skip the Slerp for tiny steps to avoid numeric problems:\nif(sqrSin>Number.EPSILON){const sin=Math.sqrt(sqrSin),len=Math.atan2(sin,cos*dir);s=Math.sin(s*len)/sin;t=Math.sin(t*len)/sin;}const tDir=t*dir;x0=x0*s+x1*tDir;y0=y0*s+y1*tDir;z0=z0*s+z1*tDir;w0=w0*s+w1*tDir;// Normalize in case we just did a lerp:\nif(s===1-t){const f=1/Math.sqrt(x0*x0+y0*y0+z0*z0+w0*w0);x0*=f;y0*=f;z0*=f;w0*=f;}}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;}static multiplyQuaternionsFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){const x0=src0[srcOffset0];const y0=src0[srcOffset0+1];const z0=src0[srcOffset0+2];const w0=src0[srcOffset0+3];const x1=src1[srcOffset1];const y1=src1[srcOffset1+1];const z1=src1[srcOffset1+2];const w1=src1[srcOffset1+3];dst[dstOffset]=x0*w1+w0*x1+y0*z1-z0*y1;dst[dstOffset+1]=y0*w1+w0*y1+z0*x1-x0*z1;dst[dstOffset+2]=z0*w1+w0*z1+x0*y1-y0*x1;dst[dstOffset+3]=w0*w1-x0*x1-y0*y1-z0*z1;return dst;}get x(){return this._x;}set x(value){this._x=value;this._onChangeCallback();}get y(){return this._y;}set y(value){this._y=value;this._onChangeCallback();}get z(){return this._z;}set z(value){this._z=value;this._onChangeCallback();}get w(){return this._w;}set w(value){this._w=value;this._onChangeCallback();}set(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._onChangeCallback();return this;}clone(){return new this.constructor(this._x,this._y,this._z,this._w);}copy(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this._onChangeCallback();return this;}setFromEuler(euler,update){if(!(euler&&euler.isEuler)){throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');}const x=euler._x,y=euler._y,z=euler._z,order=euler._order;// http://www.mathworks.com/matlabcentral/fileexchange/\n// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n//\tcontent/SpinCalc.m\nconst cos=Math.cos;const sin=Math.sin;const c1=cos(x/2);const c2=cos(y/2);const c3=cos(z/2);const s1=sin(x/2);const s2=sin(y/2);const s3=sin(z/2);switch(order){case'XYZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'YXZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'ZXY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'ZYX':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'YZX':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'XZY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;default:console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: '+order);}if(update!==false)this._onChangeCallback();return this;}setFromAxisAngle(axis,angle){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n// assumes axis is normalized\nconst halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this._onChangeCallback();return this;}setFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nconst te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33;if(trace>0){const s=0.5/Math.sqrt(trace+1.0);this._w=0.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s;}else if(m11>m22&&m11>m33){const s=2.0*Math.sqrt(1.0+m11-m22-m33);this._w=(m32-m23)/s;this._x=0.25*s;this._y=(m12+m21)/s;this._z=(m13+m31)/s;}else if(m22>m33){const s=2.0*Math.sqrt(1.0+m22-m11-m33);this._w=(m13-m31)/s;this._x=(m12+m21)/s;this._y=0.25*s;this._z=(m23+m32)/s;}else{const s=2.0*Math.sqrt(1.0+m33-m11-m22);this._w=(m21-m12)/s;this._x=(m13+m31)/s;this._y=(m23+m32)/s;this._z=0.25*s;}this._onChangeCallback();return this;}setFromUnitVectors(vFrom,vTo){// assumes direction vectors vFrom and vTo are normalized\nlet r=vFrom.dot(vTo)+1;if(r<Number.EPSILON){// vFrom and vTo point in opposite directions\nr=0;if(Math.abs(vFrom.x)>Math.abs(vFrom.z)){this._x=-vFrom.y;this._y=vFrom.x;this._z=0;this._w=r;}else{this._x=0;this._y=-vFrom.z;this._z=vFrom.y;this._w=r;}}else{// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\nthis._x=vFrom.y*vTo.z-vFrom.z*vTo.y;this._y=vFrom.z*vTo.x-vFrom.x*vTo.z;this._z=vFrom.x*vTo.y-vFrom.y*vTo.x;this._w=r;}return this.normalize();}angleTo(q){return 2*Math.acos(Math.abs(clamp(this.dot(q),-1,1)));}rotateTowards(q,step){const angle=this.angleTo(q);if(angle===0)return this;const t=Math.min(1,step/angle);this.slerp(q,t);return this;}identity(){return this.set(0,0,0,1);}invert(){// quaternion is assumed to have unit length\nreturn this.conjugate();}conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this;}dot(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w;}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);}normalize(){let l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l;}this._onChangeCallback();return this;}multiply(q,p){if(p!==undefined){console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(q,p);}return this.multiplyQuaternions(this,q);}premultiply(q){return this.multiplyQuaternions(q,this);}multiplyQuaternions(a,b){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\nconst qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;const qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this._onChangeCallback();return this;}slerp(qb,t){if(t===0)return this;if(t===1)return this.copy(qb);const x=this._x,y=this._y,z=this._z,w=this._w;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\nlet cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this._w=w;this._x=x;this._y=y;this._z=z;return this;}const sqrSinHalfTheta=1.0-cosHalfTheta*cosHalfTheta;if(sqrSinHalfTheta<=Number.EPSILON){const s=1-t;this._w=s*w+t*this._w;this._x=s*x+t*this._x;this._y=s*y+t*this._y;this._z=s*z+t*this._z;this.normalize();this._onChangeCallback();return this;}const sinHalfTheta=Math.sqrt(sqrSinHalfTheta);const halfTheta=Math.atan2(sinHalfTheta,cosHalfTheta);const ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this._onChangeCallback();return this;}slerpQuaternions(qa,qb,t){this.copy(qa).slerp(qb,t);}equals(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w;}fromArray(array,offset=0){this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this._onChangeCallback();return this;}toArray(array=[],offset=0){array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array;}fromBufferAttribute(attribute,index){this._x=attribute.getX(index);this._y=attribute.getY(index);this._z=attribute.getZ(index);this._w=attribute.getW(index);return this;}_onChange(callback){this._onChangeCallback=callback;return this;}_onChangeCallback(){}}Quaternion.prototype.isQuaternion=true;class Vector3{constructor(x=0,y=0,z=0){this.x=x;this.y=y;this.z=z;}set(x,y,z){if(z===undefined)z=this.z;// sprite.scale.set(x,y)\nthis.x=x;this.y=y;this.z=z;return this;}setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;return this;}setX(x){this.x=x;return this;}setY(y){this.y=y;return this;}setZ(z){this.z=z;return this;}setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error('index is out of range: '+index);}return this;}getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+index);}}clone(){return new this.constructor(this.x,this.y,this.z);}copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;}add(v,w){if(w!==undefined){console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;}addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this;}addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;}addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this;}sub(v,w){if(w!==undefined){console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;}subScalar(s){this.x-=s;this.y-=s;this.z-=s;return this;}subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;}multiply(v,w){if(w!==undefined){console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(v,w);}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this;}multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this;}multiplyVectors(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;}applyEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');}return this.applyQuaternion(_quaternion$4.setFromEuler(euler));}applyAxisAngle(axis,angle){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis,angle));}applyMatrix3(m){const x=this.x,y=this.y,z=this.z;const e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this;}applyNormalMatrix(m){return this.applyMatrix3(m).normalize();}applyMatrix4(m){const x=this.x,y=this.y,z=this.z;const e=m.elements;const w=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*w;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*w;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*w;return this;}applyQuaternion(q){const x=this.x,y=this.y,z=this.z;const qx=q.x,qy=q.y,qz=q.z,qw=q.w;// calculate quat * vector\nconst ix=qw*x+qy*z-qz*y;const iy=qw*y+qz*x-qx*z;const iz=qw*z+qx*y-qy*x;const iw=-qx*x-qy*y-qz*z;// calculate result * inverse quat\nthis.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;}project(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);}unproject(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);}transformDirection(m){// input: THREE.Matrix4 affine matrix\n// vector interpreted as a direction\nconst x=this.x,y=this.y,z=this.z;const e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;return this.normalize();}divide(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this;}divideScalar(scalar){return this.multiplyScalar(1/scalar);}min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this;}max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this;}clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this;}clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));return this;}clampLength(min,max){const length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;}ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;}round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;}roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this;}negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this;}dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;}// TODO lengthSquared?\nlengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z;}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);}normalize(){return this.divideScalar(this.length()||1);}setLength(length){return this.normalize().multiplyScalar(length);}lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this;}lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;return this;}cross(v,w){if(w!==undefined){console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(v,w);}return this.crossVectors(this,v);}crossVectors(a,b){const ax=a.x,ay=a.y,az=a.z;const bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;}projectOnVector(v){const denominator=v.lengthSq();if(denominator===0)return this.set(0,0,0);const scalar=v.dot(this)/denominator;return this.copy(v).multiplyScalar(scalar);}projectOnPlane(planeNormal){_vector$c.copy(this).projectOnVector(planeNormal);return this.sub(_vector$c);}reflect(normal){// reflect incident vector off plane orthogonal to normal\n// normal is assumed to have unit length\nreturn this.sub(_vector$c.copy(normal).multiplyScalar(2*this.dot(normal)));}angleTo(v){const denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(denominator===0)return Math.PI/2;const theta=this.dot(v)/denominator;// clamp, to handle numerical problems\nreturn Math.acos(clamp(theta,-1,1));}distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}distanceToSquared(v){const dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;}manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z);}setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta);}setFromSphericalCoords(radius,phi,theta){const sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this;}setFromCylindrical(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y);}setFromCylindricalCoords(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this;}setFromMatrixPosition(m){const e=m.elements;this.x=e[12];this.y=e[13];this.z=e[14];return this;}setFromMatrixScale(m){const sx=this.setFromMatrixColumn(m,0).length();const sy=this.setFromMatrixColumn(m,1).length();const sz=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=sz;return this;}setFromMatrixColumn(m,index){return this.fromArray(m.elements,index*4);}setFromMatrix3Column(m,index){return this.fromArray(m.elements,index*3);}equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z;}fromArray(array,offset=0){this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this;}toArray(array=[],offset=0){array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array;}fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this;}random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this;}}Vector3.prototype.isVector3=true;const _vector$c=/*@__PURE__*/new Vector3();const _quaternion$4=/*@__PURE__*/new Quaternion();class Box3{constructor(min=new Vector3(+Infinity,+Infinity,+Infinity),max=new Vector3(-Infinity,-Infinity,-Infinity)){this.min=min;this.max=max;}set(min,max){this.min.copy(min);this.max.copy(max);return this;}setFromArray(array){let minX=+Infinity;let minY=+Infinity;let minZ=+Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=-Infinity;for(let i=0,l=array.length;i<l;i+=3){const x=array[i];const y=array[i+1];const z=array[i+2];if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}setFromBufferAttribute(attribute){let minX=+Infinity;let minY=+Infinity;let minZ=+Infinity;let maxX=-Infinity;let maxY=-Infinity;let maxZ=-Infinity;for(let i=0,l=attribute.count;i<l;i++){const x=attribute.getX(i);const y=attribute.getY(i);const z=attribute.getZ(i);if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;}setFromCenterAndSize(center,size){const halfSize=_vector$b.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}setFromObject(object){this.makeEmpty();return this.expandByObject(object);}clone(){return new this.constructor().copy(this);}copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}makeEmpty(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;}getCenter(target){if(target===undefined){console.warn('THREE.Box3: .getCenter() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}getSize(target){if(target===undefined){console.warn('THREE.Box3: .getSize() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min);}expandByPoint(point){this.min.min(point);this.max.max(point);return this;}expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}expandByObject(object){// Computes the world-axis-aligned bounding box of an object (including its children),\n// accounting for both the object's, and children's, world transforms\nobject.updateWorldMatrix(false,false);const geometry=object.geometry;if(geometry!==undefined){if(geometry.boundingBox===null){geometry.computeBoundingBox();}_box$3.copy(geometry.boundingBox);_box$3.applyMatrix4(object.matrixWorld);this.union(_box$3);}const children=object.children;for(let i=0,l=children.length;i<l;i++){this.expandByObject(children[i]);}return this;}containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?false:true;}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z;}getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box3: .getParameter() target is now required');target=new Vector3();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z));}intersectsBox(box){// using 6 splitting planes to rule out intersections.\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?false:true;}intersectsSphere(sphere){// Find the point on the AABB closest to the sphere center.\nthis.clampPoint(sphere.center,_vector$b);// If that point is inside the sphere, the AABB and sphere intersect.\nreturn _vector$b.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius;}intersectsPlane(plane){// We compute the minimum and maximum dot product values. If those values\n// are on the same side (back or front) of the plane, then there is no intersection.\nlet min,max;if(plane.normal.x>0){min=plane.normal.x*this.min.x;max=plane.normal.x*this.max.x;}else{min=plane.normal.x*this.max.x;max=plane.normal.x*this.min.x;}if(plane.normal.y>0){min+=plane.normal.y*this.min.y;max+=plane.normal.y*this.max.y;}else{min+=plane.normal.y*this.max.y;max+=plane.normal.y*this.min.y;}if(plane.normal.z>0){min+=plane.normal.z*this.min.z;max+=plane.normal.z*this.max.z;}else{min+=plane.normal.z*this.max.z;max+=plane.normal.z*this.min.z;}return min<=-plane.constant&&max>=-plane.constant;}intersectsTriangle(triangle){if(this.isEmpty()){return false;}// compute box center and extents\nthis.getCenter(_center);_extents.subVectors(this.max,_center);// translate triangle to aabb origin\n_v0$2.subVectors(triangle.a,_center);_v1$7.subVectors(triangle.b,_center);_v2$3.subVectors(triangle.c,_center);// compute edge vectors for triangle\n_f0.subVectors(_v1$7,_v0$2);_f1.subVectors(_v2$3,_v1$7);_f2.subVectors(_v0$2,_v2$3);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\nlet axes=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];if(!satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents)){return false;}// test 3 face normals from the aabb\naxes=[1,0,0,0,1,0,0,0,1];if(!satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents)){return false;}// finally testing the face normal of the triangle\n// use already existing triangle edge vectors here\n_triangleNormal.crossVectors(_f0,_f1);axes=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z];return satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents);}clampPoint(point,target){if(target===undefined){console.warn('THREE.Box3: .clampPoint() target is now required');target=new Vector3();}return target.copy(point).clamp(this.min,this.max);}distanceToPoint(point){const clampedPoint=_vector$b.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}getBoundingSphere(target){if(target===undefined){console.error('THREE.Box3: .getBoundingSphere() target is now required');//target = new Sphere(); // removed to avoid cyclic dependency\n}this.getCenter(target.center);target.radius=this.getSize(_vector$b).length()*0.5;return target;}intersect(box){this.min.max(box.min);this.max.min(box.max);// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\nif(this.isEmpty())this.makeEmpty();return this;}union(box){this.min.min(box.min);this.max.max(box.max);return this;}applyMatrix4(matrix){// transform of empty box is an empty box.\nif(this.isEmpty())return this;// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);// 000\n_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);// 001\n_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);// 010\n_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);// 011\n_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);// 100\n_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);// 101\n_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);// 110\n_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);// 111\nthis.setFromPoints(_points);return this;}translate(offset){this.min.add(offset);this.max.add(offset);return this;}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}Box3.prototype.isBox3=true;const _points=[/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3()];const _vector$b=/*@__PURE__*/new Vector3();const _box$3=/*@__PURE__*/new Box3();// triangle centered vertices\nconst _v0$2=/*@__PURE__*/new Vector3();const _v1$7=/*@__PURE__*/new Vector3();const _v2$3=/*@__PURE__*/new Vector3();// triangle edge vectors\nconst _f0=/*@__PURE__*/new Vector3();const _f1=/*@__PURE__*/new Vector3();const _f2=/*@__PURE__*/new Vector3();const _center=/*@__PURE__*/new Vector3();const _extents=/*@__PURE__*/new Vector3();const _triangleNormal=/*@__PURE__*/new Vector3();const _testAxis=/*@__PURE__*/new Vector3();function satForAxes(axes,v0,v1,v2,extents){for(let i=0,j=axes.length-3;i<=j;i+=3){_testAxis.fromArray(axes,i);// project the aabb onto the seperating axis\nconst r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z);// project all 3 vertices of the triangle onto the seperating axis\nconst p0=v0.dot(_testAxis);const p1=v1.dot(_testAxis);const p2=v2.dot(_testAxis);// actual test, basically see if either of the most extreme of the triangle points intersects r\nif(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r){// points of the projected triangle are outside the projected half-length of the aabb\n// the axis is seperating and we can exit\nreturn false;}}return true;}const _box$2=/*@__PURE__*/new Box3();const _v1$6=/*@__PURE__*/new Vector3();const _toFarthestPoint=/*@__PURE__*/new Vector3();const _toPoint=/*@__PURE__*/new Vector3();class Sphere{constructor(center=new Vector3(),radius=-1){this.center=center;this.radius=radius;}set(center,radius){this.center.copy(center);this.radius=radius;return this;}setFromPoints(points,optionalCenter){const center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter);}else{_box$2.setFromPoints(points).getCenter(center);}let maxRadiusSq=0;for(let i=0,il=points.length;i<il;i++){maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]));}this.radius=Math.sqrt(maxRadiusSq);return this;}copy(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;}isEmpty(){return this.radius<0;}makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this;}containsPoint(point){return point.distanceToSquared(this.center)<=this.radius*this.radius;}distanceToPoint(point){return point.distanceTo(this.center)-this.radius;}intersectsSphere(sphere){const radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum;}intersectsBox(box){return box.intersectsSphere(this);}intersectsPlane(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius;}clampPoint(point,target){const deltaLengthSq=this.center.distanceToSquared(point);if(target===undefined){console.warn('THREE.Sphere: .clampPoint() target is now required');target=new Vector3();}target.copy(point);if(deltaLengthSq>this.radius*this.radius){target.sub(this.center).normalize();target.multiplyScalar(this.radius).add(this.center);}return target;}getBoundingBox(target){if(target===undefined){console.warn('THREE.Sphere: .getBoundingBox() target is now required');target=new Box3();}if(this.isEmpty()){// Empty sphere produces empty bounding box\ntarget.makeEmpty();return target;}target.set(this.center,this.center);target.expandByScalar(this.radius);return target;}applyMatrix4(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;}translate(offset){this.center.add(offset);return this;}expandByPoint(point){// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n_toPoint.subVectors(point,this.center);const lengthSq=_toPoint.lengthSq();if(lengthSq>this.radius*this.radius){const length=Math.sqrt(lengthSq);const missingRadiusHalf=(length-this.radius)*0.5;// Nudge this sphere towards the target point. Add half the missing distance to radius,\n// and the other half to position. This gives a tighter enclosure, instead of if\n// the whole missing distance were just added to radius.\nthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf/length));this.radius+=missingRadiusHalf;}return this;}union(sphere){// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n// To enclose another sphere into this sphere, we only need to enclose two points:\n// 1) Enclose the farthest point on the other sphere into this sphere.\n// 2) Enclose the opposite point of the farthest point into this sphere.\n_toFarthestPoint.subVectors(sphere.center,this.center).normalize().multiplyScalar(sphere.radius);this.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));this.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));return this;}equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;}clone(){return new this.constructor().copy(this);}}const _vector$a=/*@__PURE__*/new Vector3();const _segCenter=/*@__PURE__*/new Vector3();const _segDir=/*@__PURE__*/new Vector3();const _diff=/*@__PURE__*/new Vector3();const _edge1=/*@__PURE__*/new Vector3();const _edge2=/*@__PURE__*/new Vector3();const _normal$1=/*@__PURE__*/new Vector3();class Ray{constructor(origin=new Vector3(),direction=new Vector3(0,0,-1)){this.origin=origin;this.direction=direction;}set(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;}copy(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;}at(t,target){if(target===undefined){console.warn('THREE.Ray: .at() target is now required');target=new Vector3();}return target.copy(this.direction).multiplyScalar(t).add(this.origin);}lookAt(v){this.direction.copy(v).sub(this.origin).normalize();return this;}recast(t){this.origin.copy(this.at(t,_vector$a));return this;}closestPointToPoint(point,target){if(target===undefined){console.warn('THREE.Ray: .closestPointToPoint() target is now required');target=new Vector3();}target.subVectors(point,this.origin);const directionDistance=target.dot(this.direction);if(directionDistance<0){return target.copy(this.origin);}return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);}distanceToPoint(point){return Math.sqrt(this.distanceSqToPoint(point));}distanceSqToPoint(point){const directionDistance=_vector$a.subVectors(point,this.origin).dot(this.direction);// point behind the ray\nif(directionDistance<0){return this.origin.distanceToSquared(point);}_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return _vector$a.distanceToSquared(point);}distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n// It returns the min distance between the ray and the segment\n// defined by v0 and v1\n// It can also set two optional targets :\n// - The closest point on the ray\n// - The closest point on the segment\n_segCenter.copy(v0).add(v1).multiplyScalar(0.5);_segDir.copy(v1).sub(v0).normalize();_diff.copy(this.origin).sub(_segCenter);const segExtent=v0.distanceTo(v1)*0.5;const a01=-this.direction.dot(_segDir);const b0=_diff.dot(this.direction);const b1=-_diff.dot(_segDir);const c=_diff.lengthSq();const det=Math.abs(1-a01*a01);let s0,s1,sqrDist,extDet;if(det>0){// The ray and segment are not parallel.\ns0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){// region 0\n// Minimum at interior points of ray and segment.\nconst invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c;}else{// region 1\ns1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{// region 5\ns1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{if(s1<=-extDet){// region 4\ns0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}else if(s1<=extDet){// region 3\ns0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c;}else{// region 2\ns0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}}else{// Ray and segment are parallel.\ns1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);}if(optionalPointOnSegment){optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);}return sqrDist;}intersectSphere(sphere,target){_vector$a.subVectors(sphere.center,this.origin);const tca=_vector$a.dot(this.direction);const d2=_vector$a.dot(_vector$a)-tca*tca;const radius2=sphere.radius*sphere.radius;if(d2>radius2)return null;const thc=Math.sqrt(radius2-d2);// t0 = first intersect point - entrance on front of sphere\nconst t0=tca-thc;// t1 = second intersect point - exit point on back of sphere\nconst t1=tca+thc;// test to see if both t0 and t1 are behind the ray - if so, return null\nif(t0<0&&t1<0)return null;// test to see if t0 is behind the ray:\n// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n// in order to always return an intersect point that is in front of the ray.\nif(t0<0)return this.at(t1,target);// else t0 is in front of the ray, so return the first collision point scaled by t0\nreturn this.at(t0,target);}intersectsSphere(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius;}distanceToPlane(plane){const denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin\nif(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined\nreturn null;}const t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;// Return if the ray never intersects the plane\nreturn t>=0?t:null;}intersectPlane(plane,target){const t=this.distanceToPlane(plane);if(t===null){return null;}return this.at(t,target);}intersectsPlane(plane){// check if the ray lies on the plane first\nconst distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true;}const denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true;}// ray origin is behind the plane (and is pointing behind it)\nreturn false;}intersectBox(box,target){let tmin,tmax,tymin,tymax,tzmin,tzmax;const invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;const origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx;}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx;}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry;}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry;}if(tmin>tymax||tymin>tmax)return null;// These lines also handle the case where tmin or tmax is NaN\n// (result of 0 * Infinity). x !== x returns true if x is NaN\nif(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz;}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz;}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;//return point closest to the ray (positive side)\nif(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,target);}intersectsBox(box){return this.intersectBox(box,_vector$a)!==null;}intersectTriangle(a,b,c,backfaceCulling,target){// Compute the offset origin, edges, and normal.\n// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n_edge1.subVectors(b,a);_edge2.subVectors(c,a);_normal$1.crossVectors(_edge1,_edge2);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\nlet DdN=this.direction.dot(_normal$1);let sign;if(DdN>0){if(backfaceCulling)return null;sign=1;}else if(DdN<0){sign=-1;DdN=-DdN;}else{return null;}_diff.subVectors(this.origin,a);const DdQxE2=sign*this.direction.dot(_edge2.crossVectors(_diff,_edge2));// b1 < 0, no intersection\nif(DdQxE2<0){return null;}const DdE1xQ=sign*this.direction.dot(_edge1.cross(_diff));// b2 < 0, no intersection\nif(DdE1xQ<0){return null;}// b1+b2 > 1, no intersection\nif(DdQxE2+DdE1xQ>DdN){return null;}// Line intersects triangle, check if ray does.\nconst QdN=-sign*_diff.dot(_normal$1);// t < 0, no intersection\nif(QdN<0){return null;}// Ray intersects triangle.\nreturn this.at(QdN/DdN,target);}applyMatrix4(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this;}equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);}clone(){return new this.constructor().copy(this);}}class Matrix4{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');}}set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){const te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;}identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;}clone(){return new Matrix4().fromArray(this.elements);}copy(m){const te=this.elements;const me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];te[9]=me[9];te[10]=me[10];te[11]=me[11];te[12]=me[12];te[13]=me[13];te[14]=me[14];te[15]=me[15];return this;}copyPosition(m){const te=this.elements,me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this;}setFromMatrix3(m){const me=m.elements;this.set(me[0],me[3],me[6],0,me[1],me[4],me[7],0,me[2],me[5],me[8],0,0,0,0,1);return this;}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this;}makeBasis(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this;}extractRotation(m){// this method does not support reflection matrices\nconst te=this.elements;const me=m.elements;const scaleX=1/_v1$5.setFromMatrixColumn(m,0).length();const scaleY=1/_v1$5.setFromMatrixColumn(m,1).length();const scaleZ=1/_v1$5.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}makeRotationFromEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');}const te=this.elements;const x=euler.x,y=euler.y,z=euler.z;const a=Math.cos(x),b=Math.sin(x);const c=Math.cos(y),d=Math.sin(y);const e=Math.cos(z),f=Math.sin(z);if(euler.order==='XYZ'){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else if(euler.order==='YXZ'){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c;}else if(euler.order==='ZXY'){const ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b;te[4]=-a*f;te[8]=de+cf*b;te[1]=cf+de*b;te[5]=a*e;te[9]=df-ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c;}else if(euler.order==='ZYX'){const ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=be*d-af;te[8]=ae*d+bf;te[1]=c*f;te[5]=bf*d+ae;te[9]=af*d-be;te[2]=-d;te[6]=b*c;te[10]=a*c;}else if(euler.order==='YZX'){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f;}else if(euler.order==='XZY'){const ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=ac*f+bd;te[5]=a*e;te[9]=ad*f-bc;te[2]=bc*f-ad;te[6]=b*e;te[10]=bd*f+ac;}// bottom row\nte[3]=0;te[7]=0;te[11]=0;// last column\nte[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}makeRotationFromQuaternion(q){return this.compose(_zero,q,_one);}lookAt(eye,target,up){const te=this.elements;_z.subVectors(eye,target);if(_z.lengthSq()===0){// eye and target are in the same position\n_z.z=1;}_z.normalize();_x.crossVectors(up,_z);if(_x.lengthSq()===0){// up and z are parallel\nif(Math.abs(up.z)===1){_z.x+=0.0001;}else{_z.z+=0.0001;}_z.normalize();_x.crossVectors(up,_z);}_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this;}multiply(m,n){if(n!==undefined){console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(m,n);}return this.multiplyMatrices(this,m);}premultiply(m){return this.multiplyMatrices(m,this);}multiplyMatrices(a,b){const ae=a.elements;const be=b.elements;const te=this.elements;const a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];const a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];const a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];const a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];const b11=be[0],b12=be[4],b13=be[8],b14=be[12];const b21=be[1],b22=be[5],b23=be[9],b24=be[13];const b31=be[2],b32=be[6],b33=be[10],b34=be[14];const b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;}multiplyScalar(s){const te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;}determinant(){const te=this.elements;const n11=te[0],n12=te[4],n13=te[8],n14=te[12];const n21=te[1],n22=te[5],n23=te[9],n24=te[13];const n31=te[2],n32=te[6],n33=te[10],n34=te[14];const n41=te[3],n42=te[7],n43=te[11],n44=te[15];//TODO: make this more efficient\n//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\nreturn n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31);}transpose(){const te=this.elements;let tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;}setPosition(x,y,z){const te=this.elements;if(x.isVector3){te[12]=x.x;te[13]=x.y;te[14]=x.z;}else{te[12]=x;te[13]=y;te[14]=z;}return this;}invert(){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\nconst te=this.elements,n11=te[0],n21=te[1],n31=te[2],n41=te[3],n12=te[4],n22=te[5],n32=te[6],n42=te[7],n13=te[8],n23=te[9],n33=te[10],n43=te[11],n14=te[12],n24=te[13],n34=te[14],n44=te[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;const det=n11*t11+n21*t12+n31*t13+n41*t14;if(det===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const detInv=1/det;te[0]=t11*detInv;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*detInv;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*detInv;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*detInv;te[4]=t12*detInv;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*detInv;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*detInv;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*detInv;te[8]=t13*detInv;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*detInv;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*detInv;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*detInv;te[12]=t14*detInv;te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*detInv;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*detInv;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*detInv;return this;}scale(v){const te=this.elements;const x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;}getMaxScaleOnAxis(){const te=this.elements;const scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];const scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];const scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,scaleYSq,scaleZSq));}makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;}makeRotationX(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this;}makeRotationY(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this;}makeRotationZ(theta){const c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this;}makeRotationAxis(axis,angle){// Based on http://www.gamedev.net/reference/articles/article1199.asp\nconst c=Math.cos(angle);const s=Math.sin(angle);const t=1-c;const x=axis.x,y=axis.y,z=axis.z;const tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this;}makeScale(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this;}makeShear(xy,xz,yx,yz,zx,zy){this.set(1,yx,zx,0,xy,1,zy,0,xz,yz,1,0,0,0,0,1);return this;}compose(position,quaternion,scale){const te=this.elements;const x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w;const x2=x+x,y2=y+y,z2=z+z;const xx=x*x2,xy=x*y2,xz=x*z2;const yy=y*y2,yz=y*z2,zz=z*z2;const wx=w*x2,wy=w*y2,wz=w*z2;const sx=scale.x,sy=scale.y,sz=scale.z;te[0]=(1-(yy+zz))*sx;te[1]=(xy+wz)*sx;te[2]=(xz-wy)*sx;te[3]=0;te[4]=(xy-wz)*sy;te[5]=(1-(xx+zz))*sy;te[6]=(yz+wx)*sy;te[7]=0;te[8]=(xz+wy)*sz;te[9]=(yz-wx)*sz;te[10]=(1-(xx+yy))*sz;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this;}decompose(position,quaternion,scale){const te=this.elements;let sx=_v1$5.set(te[0],te[1],te[2]).length();const sy=_v1$5.set(te[4],te[5],te[6]).length();const sz=_v1$5.set(te[8],te[9],te[10]).length();// if determine is negative, we need to invert one scale\nconst det=this.determinant();if(det<0)sx=-sx;position.x=te[12];position.y=te[13];position.z=te[14];// scale the rotation part\n_m1$2.copy(this);const invSX=1/sx;const invSY=1/sy;const invSZ=1/sz;_m1$2.elements[0]*=invSX;_m1$2.elements[1]*=invSX;_m1$2.elements[2]*=invSX;_m1$2.elements[4]*=invSY;_m1$2.elements[5]*=invSY;_m1$2.elements[6]*=invSY;_m1$2.elements[8]*=invSZ;_m1$2.elements[9]*=invSZ;_m1$2.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1$2);scale.x=sx;scale.y=sy;scale.z=sz;return this;}makePerspective(left,right,top,bottom,near,far){if(far===undefined){console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');}const te=this.elements;const x=2*near/(right-left);const y=2*near/(top-bottom);const a=(right+left)/(right-left);const b=(top+bottom)/(top-bottom);const c=-(far+near)/(far-near);const d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this;}makeOrthographic(left,right,top,bottom,near,far){const te=this.elements;const w=1.0/(right-left);const h=1.0/(top-bottom);const p=1.0/(far-near);const x=(right+left)*w;const y=(top+bottom)*h;const z=(far+near)*p;te[0]=2*w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2*h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;}equals(matrix){const te=this.elements;const me=matrix.elements;for(let i=0;i<16;i++){if(te[i]!==me[i])return false;}return true;}fromArray(array,offset=0){for(let i=0;i<16;i++){this.elements[i]=array[i+offset];}return this;}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array;}}Matrix4.prototype.isMatrix4=true;const _v1$5=/*@__PURE__*/new Vector3();const _m1$2=/*@__PURE__*/new Matrix4();const _zero=/*@__PURE__*/new Vector3(0,0,0);const _one=/*@__PURE__*/new Vector3(1,1,1);const _x=/*@__PURE__*/new Vector3();const _y=/*@__PURE__*/new Vector3();const _z=/*@__PURE__*/new Vector3();const _matrix$1=/*@__PURE__*/new Matrix4();const _quaternion$3=/*@__PURE__*/new Quaternion();class Euler{constructor(x=0,y=0,z=0,order=Euler.DefaultOrder){this._x=x;this._y=y;this._z=z;this._order=order;}get x(){return this._x;}set x(value){this._x=value;this._onChangeCallback();}get y(){return this._y;}set y(value){this._y=value;this._onChangeCallback();}get z(){return this._z;}set z(value){this._z=value;this._onChangeCallback();}get order(){return this._order;}set order(value){this._order=value;this._onChangeCallback();}set(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this._onChangeCallback();return this;}clone(){return new this.constructor(this._x,this._y,this._z,this._order);}copy(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._onChangeCallback();return this;}setFromRotationMatrix(m,order,update){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nconst te=m.elements;const m11=te[0],m12=te[4],m13=te[8];const m21=te[1],m22=te[5],m23=te[9];const m31=te[2],m32=te[6],m33=te[10];order=order||this._order;switch(order){case'XYZ':this._y=Math.asin(clamp(m13,-1,1));if(Math.abs(m13)<0.9999999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11);}else{this._x=Math.atan2(m32,m22);this._z=0;}break;case'YXZ':this._x=Math.asin(-clamp(m23,-1,1));if(Math.abs(m23)<0.9999999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22);}else{this._y=Math.atan2(-m31,m11);this._z=0;}break;case'ZXY':this._x=Math.asin(clamp(m32,-1,1));if(Math.abs(m32)<0.9999999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22);}else{this._y=0;this._z=Math.atan2(m21,m11);}break;case'ZYX':this._y=Math.asin(-clamp(m31,-1,1));if(Math.abs(m31)<0.9999999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11);}else{this._x=0;this._z=Math.atan2(-m12,m22);}break;case'YZX':this._z=Math.asin(clamp(m21,-1,1));if(Math.abs(m21)<0.9999999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11);}else{this._x=0;this._y=Math.atan2(m13,m33);}break;case'XZY':this._z=Math.asin(-clamp(m12,-1,1));if(Math.abs(m12)<0.9999999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11);}else{this._x=Math.atan2(-m23,m33);this._y=0;}break;default:console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: '+order);}this._order=order;if(update!==false)this._onChangeCallback();return this;}setFromQuaternion(q,order,update){_matrix$1.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(_matrix$1,order,update);}setFromVector3(v,order){return this.set(v.x,v.y,v.z,order||this._order);}reorder(newOrder){// WARNING: this discards revolution information -bhouston\n_quaternion$3.setFromEuler(this);return this.setFromQuaternion(_quaternion$3,newOrder);}equals(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order;}fromArray(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this._onChangeCallback();return this;}toArray(array=[],offset=0){array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array;}toVector3(optionalResult){if(optionalResult){return optionalResult.set(this._x,this._y,this._z);}else{return new Vector3(this._x,this._y,this._z);}}_onChange(callback){this._onChangeCallback=callback;return this;}_onChangeCallback(){}}Euler.prototype.isEuler=true;Euler.DefaultOrder='XYZ';Euler.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];class Layers{constructor(){this.mask=1|0;}set(channel){this.mask=1<<channel|0;}enable(channel){this.mask|=1<<channel|0;}enableAll(){this.mask=0xffffffff|0;}toggle(channel){this.mask^=1<<channel|0;}disable(channel){this.mask&=~(1<<channel|0);}disableAll(){this.mask=0;}test(layers){return(this.mask&layers.mask)!==0;}}let _object3DId=0;const _v1$4=/*@__PURE__*/new Vector3();const _q1=/*@__PURE__*/new Quaternion();const _m1$1=/*@__PURE__*/new Matrix4();const _target=/*@__PURE__*/new Vector3();const _position$3=/*@__PURE__*/new Vector3();const _scale$2=/*@__PURE__*/new Vector3();const _quaternion$2=/*@__PURE__*/new Quaternion();const _xAxis=/*@__PURE__*/new Vector3(1,0,0);const _yAxis=/*@__PURE__*/new Vector3(0,1,0);const _zAxis=/*@__PURE__*/new Vector3(0,0,1);const _addedEvent={type:'added'};const _removedEvent={type:'removed'};class Object3D extends EventDispatcher{constructor(){super();Object.defineProperty(this,'id',{value:_object3DId++});this.uuid=generateUUID();this.name='';this.type='Object3D';this.parent=null;this.children=[];this.up=Object3D.DefaultUp.clone();const position=new Vector3();const rotation=new Euler();const quaternion=new Quaternion();const scale=new Vector3(1,1,1);function onRotationChange(){quaternion.setFromEuler(rotation,false);}function onQuaternionChange(){rotation.setFromQuaternion(quaternion,undefined,false);}rotation._onChange(onRotationChange);quaternion._onChange(onQuaternionChange);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:position},rotation:{configurable:true,enumerable:true,value:rotation},quaternion:{configurable:true,enumerable:true,value:quaternion},scale:{configurable:true,enumerable:true,value:scale},modelViewMatrix:{value:new Matrix4()},normalMatrix:{value:new Matrix3()}});this.matrix=new Matrix4();this.matrixWorld=new Matrix4();this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new Layers();this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.animations=[];this.userData={};}onBeforeRender(){}onAfterRender(){}applyMatrix4(matrix){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);}applyQuaternion(q){this.quaternion.premultiply(q);return this;}setRotationFromAxisAngle(axis,angle){// assumes axis is normalized\nthis.quaternion.setFromAxisAngle(axis,angle);}setRotationFromEuler(euler){this.quaternion.setFromEuler(euler,true);}setRotationFromMatrix(m){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nthis.quaternion.setFromRotationMatrix(m);}setRotationFromQuaternion(q){// assumes q is normalized\nthis.quaternion.copy(q);}rotateOnAxis(axis,angle){// rotate object on axis in object space\n// axis is assumed to be normalized\n_q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(_q1);return this;}rotateOnWorldAxis(axis,angle){// rotate object on axis in world space\n// axis is assumed to be normalized\n// method assumes no rotated parent\n_q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(_q1);return this;}rotateX(angle){return this.rotateOnAxis(_xAxis,angle);}rotateY(angle){return this.rotateOnAxis(_yAxis,angle);}rotateZ(angle){return this.rotateOnAxis(_zAxis,angle);}translateOnAxis(axis,distance){// translate object by distance along axis in object space\n// axis is assumed to be normalized\n_v1$4.copy(axis).applyQuaternion(this.quaternion);this.position.add(_v1$4.multiplyScalar(distance));return this;}translateX(distance){return this.translateOnAxis(_xAxis,distance);}translateY(distance){return this.translateOnAxis(_yAxis,distance);}translateZ(distance){return this.translateOnAxis(_zAxis,distance);}localToWorld(vector){return vector.applyMatrix4(this.matrixWorld);}worldToLocal(vector){return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());}lookAt(x,y,z){// This method does not support objects having non-uniformly-scaled parent(s)\nif(x.isVector3){_target.copy(x);}else{_target.set(x,y,z);}const parent=this.parent;this.updateWorldMatrix(true,false);_position$3.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){_m1$1.lookAt(_position$3,_target,this.up);}else{_m1$1.lookAt(_target,_position$3,this.up);}this.quaternion.setFromRotationMatrix(_m1$1);if(parent){_m1$1.extractRotation(parent.matrixWorld);_q1.setFromRotationMatrix(_m1$1);this.quaternion.premultiply(_q1.invert());}}add(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++){this.add(arguments[i]);}return this;}if(object===this){console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.',object);return this;}if(object&&object.isObject3D){if(object.parent!==null){object.parent.remove(object);}object.parent=this;this.children.push(object);object.dispatchEvent(_addedEvent);}else{console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.',object);}return this;}remove(object){if(arguments.length>1){for(let i=0;i<arguments.length;i++){this.remove(arguments[i]);}return this;}const index=this.children.indexOf(object);if(index!==-1){object.parent=null;this.children.splice(index,1);object.dispatchEvent(_removedEvent);}return this;}removeFromParent(){const parent=this.parent;if(parent!==null){parent.remove(this);}return this;}clear(){for(let i=0;i<this.children.length;i++){const object=this.children[i];object.parent=null;object.dispatchEvent(_removedEvent);}this.children.length=0;return this;}attach(object){// adds object as a child of this, while maintaining the object's world transform\nthis.updateWorldMatrix(true,false);_m1$1.copy(this.matrixWorld).invert();if(object.parent!==null){object.parent.updateWorldMatrix(true,false);_m1$1.multiply(object.parent.matrixWorld);}object.applyMatrix4(_m1$1);this.add(object);object.updateWorldMatrix(false,true);return this;}getObjectById(id){return this.getObjectByProperty('id',id);}getObjectByName(name){return this.getObjectByProperty('name',name);}getObjectByProperty(name,value){if(this[name]===value)return this;for(let i=0,l=this.children.length;i<l;i++){const child=this.children[i];const object=child.getObjectByProperty(name,value);if(object!==undefined){return object;}}return undefined;}getWorldPosition(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldPosition() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);return target.setFromMatrixPosition(this.matrixWorld);}getWorldQuaternion(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');target=new Quaternion();}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position$3,target,_scale$2);return target;}getWorldScale(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldScale() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position$3,_quaternion$2,target);return target;}getWorldDirection(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldDirection() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);const e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize();}raycast(){}traverse(callback){callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].traverse(callback);}}traverseVisible(callback){if(this.visible===false)return;callback(this);const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].traverseVisible(callback);}}traverseAncestors(callback){const parent=this.parent;if(parent!==null){callback(parent);parent.traverseAncestors(callback);}}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;}updateMatrixWorld(force){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}// update children\nconst children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(force);}}updateWorldMatrix(updateParents,updateChildren){const parent=this.parent;if(updateParents===true&&parent!==null){parent.updateWorldMatrix(true,false);}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}// update children\nif(updateChildren===true){const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].updateWorldMatrix(false,true);}}}toJSON(meta){// meta is a string when called from JSON.stringify\nconst isRootObject=meta===undefined||typeof meta==='string';const output={};// meta is a hash used to collect geometries, materials.\n// not providing it implies that this is the root object\n// being serialized.\nif(isRootObject){// initialize meta obj\nmeta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}};output.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'};}// standard Object3D serialization\nconst object={};object.uuid=this.uuid;object.type=this.type;if(this.name!=='')object.name=this.name;if(this.castShadow===true)object.castShadow=true;if(this.receiveShadow===true)object.receiveShadow=true;if(this.visible===false)object.visible=false;if(this.frustumCulled===false)object.frustumCulled=false;if(this.renderOrder!==0)object.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=='{}')object.userData=this.userData;object.layers=this.layers.mask;object.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)object.matrixAutoUpdate=false;// object specific properties\nif(this.isInstancedMesh){object.type='InstancedMesh';object.count=this.count;object.instanceMatrix=this.instanceMatrix.toJSON();if(this.instanceColor!==null)object.instanceColor=this.instanceColor.toJSON();}//\nfunction serialize(library,element){if(library[element.uuid]===undefined){library[element.uuid]=element.toJSON(meta);}return element.uuid;}if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);const parameters=this.geometry.parameters;if(parameters!==undefined&&parameters.shapes!==undefined){const shapes=parameters.shapes;if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];serialize(meta.shapes,shape);}}else{serialize(meta.shapes,shapes);}}}if(this.isSkinnedMesh){object.bindMode=this.bindMode;object.bindMatrix=this.bindMatrix.toArray();if(this.skeleton!==undefined){serialize(meta.skeletons,this.skeleton);object.skeleton=this.skeleton.uuid;}}if(this.material!==undefined){if(Array.isArray(this.material)){const uuids=[];for(let i=0,l=this.material.length;i<l;i++){uuids.push(serialize(meta.materials,this.material[i]));}object.material=uuids;}else{object.material=serialize(meta.materials,this.material);}}//\nif(this.children.length>0){object.children=[];for(let i=0;i<this.children.length;i++){object.children.push(this.children[i].toJSON(meta).object);}}//\nif(this.animations.length>0){object.animations=[];for(let i=0;i<this.animations.length;i++){const animation=this.animations[i];object.animations.push(serialize(meta.animations,animation));}}if(isRootObject){const geometries=extractFromCache(meta.geometries);const materials=extractFromCache(meta.materials);const textures=extractFromCache(meta.textures);const images=extractFromCache(meta.images);const shapes=extractFromCache(meta.shapes);const skeletons=extractFromCache(meta.skeletons);const animations=extractFromCache(meta.animations);if(geometries.length>0)output.geometries=geometries;if(materials.length>0)output.materials=materials;if(textures.length>0)output.textures=textures;if(images.length>0)output.images=images;if(shapes.length>0)output.shapes=shapes;if(skeletons.length>0)output.skeletons=skeletons;if(animations.length>0)output.animations=animations;}output.object=object;return output;// extract data from the cache hash\n// remove metadata on each item\n// and return as array\nfunction extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data);}return values;}}clone(recursive){return new this.constructor().copy(this,recursive);}copy(source,recursive=true){this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.rotation.order=source.rotation.order;this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));if(recursive===true){for(let i=0;i<source.children.length;i++){const child=source.children[i];this.add(child.clone());}}return this;}}Object3D.DefaultUp=new Vector3(0,1,0);Object3D.DefaultMatrixAutoUpdate=true;Object3D.prototype.isObject3D=true;const _vector1=/*@__PURE__*/new Vector3();const _vector2$1=/*@__PURE__*/new Vector3();const _normalMatrix=/*@__PURE__*/new Matrix3();class Plane{constructor(normal=new Vector3(1,0,0),constant=0){// normal is assumed to be normalized\nthis.normal=normal;this.constant=constant;}set(normal,constant){this.normal.copy(normal);this.constant=constant;return this;}setComponents(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this;}setFromNormalAndCoplanarPoint(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this;}setFromCoplanarPoints(a,b,c){const normal=_vector1.subVectors(c,b).cross(_vector2$1.subVectors(a,b)).normalize();// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\nthis.setFromNormalAndCoplanarPoint(normal,a);return this;}copy(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this;}normalize(){// Note: will lead to a divide by zero if the plane is invalid.\nconst inverseNormalLength=1.0/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this;}negate(){this.constant*=-1;this.normal.negate();return this;}distanceToPoint(point){return this.normal.dot(point)+this.constant;}distanceToSphere(sphere){return this.distanceToPoint(sphere.center)-sphere.radius;}projectPoint(point,target){if(target===undefined){console.warn('THREE.Plane: .projectPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);}intersectLine(line,target){if(target===undefined){console.warn('THREE.Plane: .intersectLine() target is now required');target=new Vector3();}const direction=line.delta(_vector1);const denominator=this.normal.dot(direction);if(denominator===0){// line is coplanar, return origin\nif(this.distanceToPoint(line.start)===0){return target.copy(line.start);}// Unsure if this is the correct method to handle this case.\nreturn null;}const t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return null;}return target.copy(direction).multiplyScalar(t).add(line.start);}intersectsLine(line){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\nconst startSign=this.distanceToPoint(line.start);const endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0;}intersectsBox(box){return box.intersectsPlane(this);}intersectsSphere(sphere){return sphere.intersectsPlane(this);}coplanarPoint(target){if(target===undefined){console.warn('THREE.Plane: .coplanarPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.constant);}applyMatrix4(matrix,optionalNormalMatrix){const normalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix);const referencePoint=this.coplanarPoint(_vector1).applyMatrix4(matrix);const normal=this.normal.applyMatrix3(normalMatrix).normalize();this.constant=-referencePoint.dot(normal);return this;}translate(offset){this.constant-=offset.dot(this.normal);return this;}equals(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant;}clone(){return new this.constructor().copy(this);}}Plane.prototype.isPlane=true;const _v0$1=/*@__PURE__*/new Vector3();const _v1$3=/*@__PURE__*/new Vector3();const _v2$2=/*@__PURE__*/new Vector3();const _v3$1=/*@__PURE__*/new Vector3();const _vab=/*@__PURE__*/new Vector3();const _vac=/*@__PURE__*/new Vector3();const _vbc=/*@__PURE__*/new Vector3();const _vap=/*@__PURE__*/new Vector3();const _vbp=/*@__PURE__*/new Vector3();const _vcp=/*@__PURE__*/new Vector3();class Triangle{constructor(a=new Vector3(),b=new Vector3(),c=new Vector3()){this.a=a;this.b=b;this.c=c;}static getNormal(a,b,c,target){if(target===undefined){console.warn('THREE.Triangle: .getNormal() target is now required');target=new Vector3();}target.subVectors(c,b);_v0$1.subVectors(a,b);target.cross(_v0$1);const targetLengthSq=target.lengthSq();if(targetLengthSq>0){return target.multiplyScalar(1/Math.sqrt(targetLengthSq));}return target.set(0,0,0);}// static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\nstatic getBarycoord(point,a,b,c,target){_v0$1.subVectors(c,a);_v1$3.subVectors(b,a);_v2$2.subVectors(point,a);const dot00=_v0$1.dot(_v0$1);const dot01=_v0$1.dot(_v1$3);const dot02=_v0$1.dot(_v2$2);const dot11=_v1$3.dot(_v1$3);const dot12=_v1$3.dot(_v2$2);const denom=dot00*dot11-dot01*dot01;if(target===undefined){console.warn('THREE.Triangle: .getBarycoord() target is now required');target=new Vector3();}// collinear or singular triangle\nif(denom===0){// arbitrary location outside of triangle?\n// not sure if this is the best idea, maybe should be returning undefined\nreturn target.set(-2,-1,-1);}const invDenom=1/denom;const u=(dot11*dot02-dot01*dot12)*invDenom;const v=(dot00*dot12-dot01*dot02)*invDenom;// barycentric coordinates must always sum to 1\nreturn target.set(1-u-v,v,u);}static containsPoint(point,a,b,c){this.getBarycoord(point,a,b,c,_v3$1);return _v3$1.x>=0&&_v3$1.y>=0&&_v3$1.x+_v3$1.y<=1;}static getUV(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,_v3$1);target.set(0,0);target.addScaledVector(uv1,_v3$1.x);target.addScaledVector(uv2,_v3$1.y);target.addScaledVector(uv3,_v3$1.z);return target;}static isFrontFacing(a,b,c,direction){_v0$1.subVectors(c,b);_v1$3.subVectors(a,b);// strictly front facing\nreturn _v0$1.cross(_v1$3).dot(direction)<0?true:false;}set(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;}setFromPointsAndIndices(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this;}clone(){return new this.constructor().copy(this);}copy(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;}getArea(){_v0$1.subVectors(this.c,this.b);_v1$3.subVectors(this.a,this.b);return _v0$1.cross(_v1$3).length()*0.5;}getMidpoint(target){if(target===undefined){console.warn('THREE.Triangle: .getMidpoint() target is now required');target=new Vector3();}return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);}getNormal(target){return Triangle.getNormal(this.a,this.b,this.c,target);}getPlane(target){if(target===undefined){console.warn('THREE.Triangle: .getPlane() target is now required');target=new Plane();}return target.setFromCoplanarPoints(this.a,this.b,this.c);}getBarycoord(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target);}getUV(point,uv1,uv2,uv3,target){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,target);}containsPoint(point){return Triangle.containsPoint(point,this.a,this.b,this.c);}isFrontFacing(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction);}intersectsBox(box){return box.intersectsTriangle(this);}closestPointToPoint(p,target){if(target===undefined){console.warn('THREE.Triangle: .closestPointToPoint() target is now required');target=new Vector3();}const a=this.a,b=this.b,c=this.c;let v,w;// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n// basically, we're distinguishing which of the voronoi regions of the triangle\n// the point lies in with the minimum amount of redundant computation.\n_vab.subVectors(b,a);_vac.subVectors(c,a);_vap.subVectors(p,a);const d1=_vab.dot(_vap);const d2=_vac.dot(_vap);if(d1<=0&&d2<=0){// vertex region of A; barycentric coords (1, 0, 0)\nreturn target.copy(a);}_vbp.subVectors(p,b);const d3=_vab.dot(_vbp);const d4=_vac.dot(_vbp);if(d3>=0&&d4<=d3){// vertex region of B; barycentric coords (0, 1, 0)\nreturn target.copy(b);}const vc=d1*d4-d3*d2;if(vc<=0&&d1>=0&&d3<=0){v=d1/(d1-d3);// edge region of AB; barycentric coords (1-v, v, 0)\nreturn target.copy(a).addScaledVector(_vab,v);}_vcp.subVectors(p,c);const d5=_vab.dot(_vcp);const d6=_vac.dot(_vcp);if(d6>=0&&d5<=d6){// vertex region of C; barycentric coords (0, 0, 1)\nreturn target.copy(c);}const vb=d5*d2-d1*d6;if(vb<=0&&d2>=0&&d6<=0){w=d2/(d2-d6);// edge region of AC; barycentric coords (1-w, 0, w)\nreturn target.copy(a).addScaledVector(_vac,w);}const va=d3*d6-d5*d4;if(va<=0&&d4-d3>=0&&d5-d6>=0){_vbc.subVectors(c,b);w=(d4-d3)/(d4-d3+(d5-d6));// edge region of BC; barycentric coords (0, 1-w, w)\nreturn target.copy(b).addScaledVector(_vbc,w);// edge region of BC\n}// face region\nconst denom=1/(va+vb+vc);// u = va * denom\nv=vb*denom;w=vc*denom;return target.copy(a).addScaledVector(_vab,v).addScaledVector(_vac,w);}equals(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c);}}let materialId=0;class Material extends EventDispatcher{constructor(){super();Object.defineProperty(this,'id',{value:materialId++});this.uuid=generateUUID();this.name='';this.type='Material';this.fog=true;this.blending=NormalBlending;this.side=FrontSide;this.vertexColors=false;this.opacity=1;this.transparent=false;this.blendSrc=SrcAlphaFactor;this.blendDst=OneMinusSrcAlphaFactor;this.blendEquation=AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.stencilWriteMask=0xff;this.stencilFunc=AlwaysStencilFunc;this.stencilRef=0;this.stencilFuncMask=0xff;this.stencilFail=KeepStencilOp;this.stencilZFail=KeepStencilOp;this.stencilZPass=KeepStencilOp;this.stencilWrite=false;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;// override the renderer's default precision for this material\nthis.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.alphaToCoverage=false;this.premultipliedAlpha=false;this.visible=true;this.toneMapped=true;this.userData={};this.version=0;}onBuild()/* shaderobject, renderer */{}onBeforeCompile()/* shaderobject, renderer */{}customProgramCacheKey(){return this.onBeforeCompile.toString();}setValues(values){if(values===undefined)return;for(const key in values){const newValue=values[key];if(newValue===undefined){console.warn('THREE.Material: \\''+key+'\\' parameter is undefined.');continue;}// for backward compatability if shading is set in the constructor\nif(key==='shading'){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=newValue===FlatShading?true:false;continue;}const currentValue=this[key];if(currentValue===undefined){console.warn('THREE.'+this.type+': \\''+key+'\\' is not a property of this material.');continue;}if(currentValue&&currentValue.isColor){currentValue.set(newValue);}else if(currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3){currentValue.copy(newValue);}else{this[key]=newValue;}}}toJSON(meta){const isRoot=meta===undefined||typeof meta==='string';if(isRoot){meta={textures:{},images:{}};}const data={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};// standard Material serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.color&&this.color.isColor)data.color=this.color.getHex();if(this.roughness!==undefined)data.roughness=this.roughness;if(this.metalness!==undefined)data.metalness=this.metalness;if(this.sheen&&this.sheen.isColor)data.sheen=this.sheen.getHex();if(this.emissive&&this.emissive.isColor)data.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)data.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)data.specular=this.specular.getHex();if(this.shininess!==undefined)data.shininess=this.shininess;if(this.clearcoat!==undefined)data.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)data.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid;}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid;}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid;data.clearcoatNormalScale=this.clearcoatNormalScale.toArray();}if(this.map&&this.map.isTexture)data.map=this.map.toJSON(meta).uuid;if(this.matcap&&this.matcap.isTexture)data.matcap=this.matcap.toJSON(meta).uuid;if(this.alphaMap&&this.alphaMap.isTexture)data.alphaMap=this.alphaMap.toJSON(meta).uuid;if(this.lightMap&&this.lightMap.isTexture){data.lightMap=this.lightMap.toJSON(meta).uuid;data.lightMapIntensity=this.lightMapIntensity;}if(this.aoMap&&this.aoMap.isTexture){data.aoMap=this.aoMap.toJSON(meta).uuid;data.aoMapIntensity=this.aoMapIntensity;}if(this.bumpMap&&this.bumpMap.isTexture){data.bumpMap=this.bumpMap.toJSON(meta).uuid;data.bumpScale=this.bumpScale;}if(this.normalMap&&this.normalMap.isTexture){data.normalMap=this.normalMap.toJSON(meta).uuid;data.normalMapType=this.normalMapType;data.normalScale=this.normalScale.toArray();}if(this.displacementMap&&this.displacementMap.isTexture){data.displacementMap=this.displacementMap.toJSON(meta).uuid;data.displacementScale=this.displacementScale;data.displacementBias=this.displacementBias;}if(this.roughnessMap&&this.roughnessMap.isTexture)data.roughnessMap=this.roughnessMap.toJSON(meta).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)data.metalnessMap=this.metalnessMap.toJSON(meta).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)data.emissiveMap=this.emissiveMap.toJSON(meta).uuid;if(this.specularMap&&this.specularMap.isTexture)data.specularMap=this.specularMap.toJSON(meta).uuid;if(this.envMap&&this.envMap.isTexture){data.envMap=this.envMap.toJSON(meta).uuid;if(this.combine!==undefined)data.combine=this.combine;}if(this.envMapIntensity!==undefined)data.envMapIntensity=this.envMapIntensity;if(this.reflectivity!==undefined)data.reflectivity=this.reflectivity;if(this.refractionRatio!==undefined)data.refractionRatio=this.refractionRatio;if(this.gradientMap&&this.gradientMap.isTexture){data.gradientMap=this.gradientMap.toJSON(meta).uuid;}if(this.transmission!==undefined)data.transmission=this.transmission;if(this.transmissionMap&&this.transmissionMap.isTexture)data.transmissionMap=this.transmissionMap.toJSON(meta).uuid;if(this.thickness!==undefined)data.thickness=this.thickness;if(this.thicknessMap&&this.thicknessMap.isTexture)data.thicknessMap=this.thicknessMap.toJSON(meta).uuid;if(this.attenuationDistance!==undefined)data.attenuationDistance=this.attenuationDistance;if(this.attenuationColor!==undefined)data.attenuationColor=this.attenuationColor.getHex();if(this.size!==undefined)data.size=this.size;if(this.shadowSide!==null)data.shadowSide=this.shadowSide;if(this.sizeAttenuation!==undefined)data.sizeAttenuation=this.sizeAttenuation;if(this.blending!==NormalBlending)data.blending=this.blending;if(this.side!==FrontSide)data.side=this.side;if(this.vertexColors)data.vertexColors=true;if(this.opacity<1)data.opacity=this.opacity;if(this.transparent===true)data.transparent=this.transparent;data.depthFunc=this.depthFunc;data.depthTest=this.depthTest;data.depthWrite=this.depthWrite;data.colorWrite=this.colorWrite;data.stencilWrite=this.stencilWrite;data.stencilWriteMask=this.stencilWriteMask;data.stencilFunc=this.stencilFunc;data.stencilRef=this.stencilRef;data.stencilFuncMask=this.stencilFuncMask;data.stencilFail=this.stencilFail;data.stencilZFail=this.stencilZFail;data.stencilZPass=this.stencilZPass;// rotation (SpriteMaterial)\nif(this.rotation&&this.rotation!==0)data.rotation=this.rotation;if(this.polygonOffset===true)data.polygonOffset=true;if(this.polygonOffsetFactor!==0)data.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)data.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth&&this.linewidth!==1)data.linewidth=this.linewidth;if(this.dashSize!==undefined)data.dashSize=this.dashSize;if(this.gapSize!==undefined)data.gapSize=this.gapSize;if(this.scale!==undefined)data.scale=this.scale;if(this.dithering===true)data.dithering=true;if(this.alphaTest>0)data.alphaTest=this.alphaTest;if(this.alphaToCoverage===true)data.alphaToCoverage=this.alphaToCoverage;if(this.premultipliedAlpha===true)data.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)data.wireframe=this.wireframe;if(this.wireframeLinewidth>1)data.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=='round')data.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=='round')data.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)data.morphTargets=true;if(this.morphNormals===true)data.morphNormals=true;if(this.flatShading===true)data.flatShading=this.flatShading;if(this.visible===false)data.visible=false;if(this.toneMapped===false)data.toneMapped=false;if(JSON.stringify(this.userData)!=='{}')data.userData=this.userData;// TODO: Copied from Object3D.toJSON\nfunction extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data);}return values;}if(isRoot){const textures=extractFromCache(meta.textures);const images=extractFromCache(meta.images);if(textures.length>0)data.textures=textures;if(images.length>0)data.images=images;}return data;}clone(){return new this.constructor().copy(this);}copy(source){this.name=source.name;this.fog=source.fog;this.blending=source.blending;this.side=source.side;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;const srcPlanes=source.clippingPlanes;let dstPlanes=null;if(srcPlanes!==null){const n=srcPlanes.length;dstPlanes=new Array(n);for(let i=0;i!==n;++i){dstPlanes[i]=srcPlanes[i].clone();}}this.clippingPlanes=dstPlanes;this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.alphaToCoverage=source.alphaToCoverage;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=JSON.parse(JSON.stringify(source.userData));return this;}dispose(){this.dispatchEvent({type:'dispose'});}set needsUpdate(value){if(value===true)this.version++;}}Material.prototype.isMaterial=true;const _colorKeywords={'aliceblue':0xF0F8FF,'antiquewhite':0xFAEBD7,'aqua':0x00FFFF,'aquamarine':0x7FFFD4,'azure':0xF0FFFF,'beige':0xF5F5DC,'bisque':0xFFE4C4,'black':0x000000,'blanchedalmond':0xFFEBCD,'blue':0x0000FF,'blueviolet':0x8A2BE2,'brown':0xA52A2A,'burlywood':0xDEB887,'cadetblue':0x5F9EA0,'chartreuse':0x7FFF00,'chocolate':0xD2691E,'coral':0xFF7F50,'cornflowerblue':0x6495ED,'cornsilk':0xFFF8DC,'crimson':0xDC143C,'cyan':0x00FFFF,'darkblue':0x00008B,'darkcyan':0x008B8B,'darkgoldenrod':0xB8860B,'darkgray':0xA9A9A9,'darkgreen':0x006400,'darkgrey':0xA9A9A9,'darkkhaki':0xBDB76B,'darkmagenta':0x8B008B,'darkolivegreen':0x556B2F,'darkorange':0xFF8C00,'darkorchid':0x9932CC,'darkred':0x8B0000,'darksalmon':0xE9967A,'darkseagreen':0x8FBC8F,'darkslateblue':0x483D8B,'darkslategray':0x2F4F4F,'darkslategrey':0x2F4F4F,'darkturquoise':0x00CED1,'darkviolet':0x9400D3,'deeppink':0xFF1493,'deepskyblue':0x00BFFF,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1E90FF,'firebrick':0xB22222,'floralwhite':0xFFFAF0,'forestgreen':0x228B22,'fuchsia':0xFF00FF,'gainsboro':0xDCDCDC,'ghostwhite':0xF8F8FF,'gold':0xFFD700,'goldenrod':0xDAA520,'gray':0x808080,'green':0x008000,'greenyellow':0xADFF2F,'grey':0x808080,'honeydew':0xF0FFF0,'hotpink':0xFF69B4,'indianred':0xCD5C5C,'indigo':0x4B0082,'ivory':0xFFFFF0,'khaki':0xF0E68C,'lavender':0xE6E6FA,'lavenderblush':0xFFF0F5,'lawngreen':0x7CFC00,'lemonchiffon':0xFFFACD,'lightblue':0xADD8E6,'lightcoral':0xF08080,'lightcyan':0xE0FFFF,'lightgoldenrodyellow':0xFAFAD2,'lightgray':0xD3D3D3,'lightgreen':0x90EE90,'lightgrey':0xD3D3D3,'lightpink':0xFFB6C1,'lightsalmon':0xFFA07A,'lightseagreen':0x20B2AA,'lightskyblue':0x87CEFA,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xB0C4DE,'lightyellow':0xFFFFE0,'lime':0x00FF00,'limegreen':0x32CD32,'linen':0xFAF0E6,'magenta':0xFF00FF,'maroon':0x800000,'mediumaquamarine':0x66CDAA,'mediumblue':0x0000CD,'mediumorchid':0xBA55D3,'mediumpurple':0x9370DB,'mediumseagreen':0x3CB371,'mediumslateblue':0x7B68EE,'mediumspringgreen':0x00FA9A,'mediumturquoise':0x48D1CC,'mediumvioletred':0xC71585,'midnightblue':0x191970,'mintcream':0xF5FFFA,'mistyrose':0xFFE4E1,'moccasin':0xFFE4B5,'navajowhite':0xFFDEAD,'navy':0x000080,'oldlace':0xFDF5E6,'olive':0x808000,'olivedrab':0x6B8E23,'orange':0xFFA500,'orangered':0xFF4500,'orchid':0xDA70D6,'palegoldenrod':0xEEE8AA,'palegreen':0x98FB98,'paleturquoise':0xAFEEEE,'palevioletred':0xDB7093,'papayawhip':0xFFEFD5,'peachpuff':0xFFDAB9,'peru':0xCD853F,'pink':0xFFC0CB,'plum':0xDDA0DD,'powderblue':0xB0E0E6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xFF0000,'rosybrown':0xBC8F8F,'royalblue':0x4169E1,'saddlebrown':0x8B4513,'salmon':0xFA8072,'sandybrown':0xF4A460,'seagreen':0x2E8B57,'seashell':0xFFF5EE,'sienna':0xA0522D,'silver':0xC0C0C0,'skyblue':0x87CEEB,'slateblue':0x6A5ACD,'slategray':0x708090,'slategrey':0x708090,'snow':0xFFFAFA,'springgreen':0x00FF7F,'steelblue':0x4682B4,'tan':0xD2B48C,'teal':0x008080,'thistle':0xD8BFD8,'tomato':0xFF6347,'turquoise':0x40E0D0,'violet':0xEE82EE,'wheat':0xF5DEB3,'white':0xFFFFFF,'whitesmoke':0xF5F5F5,'yellow':0xFFFF00,'yellowgreen':0x9ACD32};const _hslA={h:0,s:0,l:0};const _hslB={h:0,s:0,l:0};function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p;}function SRGBToLinear(c){return c<0.04045?c*0.0773993808:Math.pow(c*0.9478672986+0.0521327014,2.4);}function LinearToSRGB(c){return c<0.0031308?c*12.92:1.055*Math.pow(c,0.41666)-0.055;}class Color{constructor(r,g,b){if(g===undefined&&b===undefined){// r is THREE.Color, hex or string\nreturn this.set(r);}return this.setRGB(r,g,b);}set(value){if(value&&value.isColor){this.copy(value);}else if(typeof value==='number'){this.setHex(value);}else if(typeof value==='string'){this.setStyle(value);}return this;}setScalar(scalar){this.r=scalar;this.g=scalar;this.b=scalar;return this;}setHex(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;}setRGB(r,g,b){this.r=r;this.g=g;this.b=b;return this;}setHSL(h,s,l){// h,s,l ranges are in 0.0 - 1.0\nh=euclideanModulo(h,1);s=clamp(s,0,1);l=clamp(l,0,1);if(s===0){this.r=this.g=this.b=l;}else{const p=l<=0.5?l*(1+s):l+s-l*s;const q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3);}return this;}setStyle(style){function handleAlpha(string){if(string===undefined)return;if(parseFloat(string)<1){console.warn('THREE.Color: Alpha component of '+style+' will be ignored.');}}let m;if(m=/^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)){// rgb / hsl\nlet color;const name=m[1];const components=m[2];switch(name){case'rgb':case'rgba':if(color=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(255,0,0) rgba(255,0,0,0.5)\nthis.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;handleAlpha(color[4]);return this;}if(color=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\nthis.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;handleAlpha(color[4]);return this;}break;case'hsl':case'hsla':if(color=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\nconst h=parseFloat(color[1])/360;const s=parseInt(color[2],10)/100;const l=parseInt(color[3],10)/100;handleAlpha(color[4]);return this.setHSL(h,s,l);}break;}}else if(m=/^\\#([A-Fa-f\\d]+)$/.exec(style)){// hex color\nconst hex=m[1];const size=hex.length;if(size===3){// #ff0\nthis.r=parseInt(hex.charAt(0)+hex.charAt(0),16)/255;this.g=parseInt(hex.charAt(1)+hex.charAt(1),16)/255;this.b=parseInt(hex.charAt(2)+hex.charAt(2),16)/255;return this;}else if(size===6){// #ff0000\nthis.r=parseInt(hex.charAt(0)+hex.charAt(1),16)/255;this.g=parseInt(hex.charAt(2)+hex.charAt(3),16)/255;this.b=parseInt(hex.charAt(4)+hex.charAt(5),16)/255;return this;}}if(style&&style.length>0){return this.setColorName(style);}return this;}setColorName(style){// color keywords\nconst hex=_colorKeywords[style.toLowerCase()];if(hex!==undefined){// red\nthis.setHex(hex);}else{// unknown color\nconsole.warn('THREE.Color: Unknown color '+style);}return this;}clone(){return new this.constructor(this.r,this.g,this.b);}copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;}copyGammaToLinear(color,gammaFactor=2.0){this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this;}copyLinearToGamma(color,gammaFactor=2.0){const safeInverse=gammaFactor>0?1.0/gammaFactor:1.0;this.r=Math.pow(color.r,safeInverse);this.g=Math.pow(color.g,safeInverse);this.b=Math.pow(color.b,safeInverse);return this;}convertGammaToLinear(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this;}convertLinearToGamma(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this;}copySRGBToLinear(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this;}copyLinearToSRGB(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this;}convertSRGBToLinear(){this.copySRGBToLinear(this);return this;}convertLinearToSRGB(){this.copyLinearToSRGB(this);return this;}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;}getHexString(){return('000000'+this.getHex().toString(16)).slice(-6);}getHSL(target){// h,s,l ranges are in 0.0 - 1.0\nif(target===undefined){console.warn('THREE.Color: .getHSL() target is now required');target={h:0,s:0,l:0};}const r=this.r,g=this.g,b=this.b;const max=Math.max(r,g,b);const min=Math.min(r,g,b);let hue,saturation;const lightness=(min+max)/2.0;if(min===max){hue=0;saturation=0;}else{const delta=max-min;saturation=lightness<=0.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break;}hue/=6;}target.h=hue;target.s=saturation;target.l=lightness;return target;}getStyle(){return'rgb('+(this.r*255|0)+','+(this.g*255|0)+','+(this.b*255|0)+')';}offsetHSL(h,s,l){this.getHSL(_hslA);_hslA.h+=h;_hslA.s+=s;_hslA.l+=l;this.setHSL(_hslA.h,_hslA.s,_hslA.l);return this;}add(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this;}addColors(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this;}addScalar(s){this.r+=s;this.g+=s;this.b+=s;return this;}sub(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this;}multiply(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this;}multiplyScalar(s){this.r*=s;this.g*=s;this.b*=s;return this;}lerp(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this;}lerpColors(color1,color2,alpha){this.r=color1.r+(color2.r-color1.r)*alpha;this.g=color1.g+(color2.g-color1.g)*alpha;this.b=color1.b+(color2.b-color1.b)*alpha;return this;}lerpHSL(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);const h=lerp(_hslA.h,_hslB.h,alpha);const s=lerp(_hslA.s,_hslB.s,alpha);const l=lerp(_hslA.l,_hslB.l,alpha);this.setHSL(h,s,l);return this;}equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b;}fromArray(array,offset=0){this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this;}toArray(array=[],offset=0){array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array;}fromBufferAttribute(attribute,index){this.r=attribute.getX(index);this.g=attribute.getY(index);this.b=attribute.getZ(index);if(attribute.normalized===true){// assuming Uint8Array\nthis.r/=255;this.g/=255;this.b/=255;}return this;}toJSON(){return this.getHex();}}Color.NAMES=_colorKeywords;Color.prototype.isColor=true;Color.prototype.r=1;Color.prototype.g=1;Color.prototype.b=1;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>\n * }\n */class MeshBasicMaterial extends Material{constructor(parameters){super();this.type='MeshBasicMaterial';this.color=new Color(0xffffff);// emissive\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;return this;}}MeshBasicMaterial.prototype.isMeshBasicMaterial=true;const _vector$9=/*@__PURE__*/new Vector3();const _vector2=/*@__PURE__*/new Vector2();class BufferAttribute{constructor(array,itemSize,normalized){if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.name='';this.array=array;this.itemSize=itemSize;this.count=array!==undefined?array.length/itemSize:0;this.normalized=normalized===true;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;}onUploadCallback(){}set needsUpdate(value){if(value===true)this.version++;}setUsage(value){this.usage=value;return this;}copy(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.usage=source.usage;return this;}copyAt(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(let i=0,l=this.itemSize;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;}copyArray(array){this.array.set(array);return this;}copyColorsArray(colors){const array=this.array;let offset=0;for(let i=0,l=colors.length;i<l;i++){let color=colors[i];if(color===undefined){console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',i);color=new Color();}array[offset++]=color.r;array[offset++]=color.g;array[offset++]=color.b;}return this;}copyVector2sArray(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',i);vector=new Vector2();}array[offset++]=vector.x;array[offset++]=vector.y;}return this;}copyVector3sArray(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',i);vector=new Vector3();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;}return this;}copyVector4sArray(vectors){const array=this.array;let offset=0;for(let i=0,l=vectors.length;i<l;i++){let vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',i);vector=new Vector4();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w;}return this;}applyMatrix3(m){if(this.itemSize===2){for(let i=0,l=this.count;i<l;i++){_vector2.fromBufferAttribute(this,i);_vector2.applyMatrix3(m);this.setXY(i,_vector2.x,_vector2.y);}}else if(this.itemSize===3){for(let i=0,l=this.count;i<l;i++){_vector$9.fromBufferAttribute(this,i);_vector$9.applyMatrix3(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}}return this;}applyMatrix4(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.applyMatrix4(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}applyNormalMatrix(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.applyNormalMatrix(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}transformDirection(m){for(let i=0,l=this.count;i<l;i++){_vector$9.x=this.getX(i);_vector$9.y=this.getY(i);_vector$9.z=this.getZ(i);_vector$9.transformDirection(m);this.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}set(value,offset=0){this.array.set(value,offset);return this;}getX(index){return this.array[index*this.itemSize];}setX(index,x){this.array[index*this.itemSize]=x;return this;}getY(index){return this.array[index*this.itemSize+1];}setY(index,y){this.array[index*this.itemSize+1]=y;return this;}getZ(index){return this.array[index*this.itemSize+2];}setZ(index,z){this.array[index*this.itemSize+2]=z;return this;}getW(index){return this.array[index*this.itemSize+3];}setW(index,w){this.array[index*this.itemSize+3]=w;return this;}setXY(index,x,y){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;return this;}setXYZ(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this;}setXYZW(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this;}onUpload(callback){this.onUploadCallback=callback;return this;}clone(){return new this.constructor(this.array,this.itemSize).copy(this);}toJSON(){const data={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};if(this.name!=='')data.name=this.name;if(this.usage!==StaticDrawUsage)data.usage=this.usage;if(this.updateRange.offset!==0||this.updateRange.count!==-1)data.updateRange=this.updateRange;return data;}}BufferAttribute.prototype.isBufferAttribute=true;//\nclass Int8BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int8Array(array),itemSize,normalized);}}class Uint8BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint8Array(array),itemSize,normalized);}}class Uint8ClampedBufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint8ClampedArray(array),itemSize,normalized);}}class Int16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int16Array(array),itemSize,normalized);}}class Uint16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint16Array(array),itemSize,normalized);}}class Int32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Int32Array(array),itemSize,normalized);}}class Uint32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint32Array(array),itemSize,normalized);}}class Float16BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Uint16Array(array),itemSize,normalized);}}Float16BufferAttribute.prototype.isFloat16BufferAttribute=true;class Float32BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Float32Array(array),itemSize,normalized);}}class Float64BufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized){super(new Float64Array(array),itemSize,normalized);}}function arrayMax(array){if(array.length===0)return-Infinity;let max=array[0];for(let i=1,l=array.length;i<l;++i){if(array[i]>max)max=array[i];}return max;}const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function getTypedArray(type,buffer){return new TYPED_ARRAYS[type](buffer);}let _id=0;const _m1=/*@__PURE__*/new Matrix4();const _obj=/*@__PURE__*/new Object3D();const _offset=/*@__PURE__*/new Vector3();const _box$1=/*@__PURE__*/new Box3();const _boxMorphTargets=/*@__PURE__*/new Box3();const _vector$8=/*@__PURE__*/new Vector3();class BufferGeometry extends EventDispatcher{constructor(){super();Object.defineProperty(this,'id',{value:_id++});this.uuid=generateUUID();this.name='';this.type='BufferGeometry';this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=false;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={};}getIndex(){return this.index;}setIndex(index){if(Array.isArray(index)){this.index=new(arrayMax(index)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(index,1);}else{this.index=index;}return this;}getAttribute(name){return this.attributes[name];}setAttribute(name,attribute){this.attributes[name]=attribute;return this;}deleteAttribute(name){delete this.attributes[name];return this;}hasAttribute(name){return this.attributes[name]!==undefined;}addGroup(start,count,materialIndex=0){this.groups.push({start:start,count:count,materialIndex:materialIndex});}clearGroups(){this.groups=[];}setDrawRange(start,count){this.drawRange.start=start;this.drawRange.count=count;}applyMatrix4(matrix){const position=this.attributes.position;if(position!==undefined){position.applyMatrix4(matrix);position.needsUpdate=true;}const normal=this.attributes.normal;if(normal!==undefined){const normalMatrix=new Matrix3().getNormalMatrix(matrix);normal.applyNormalMatrix(normalMatrix);normal.needsUpdate=true;}const tangent=this.attributes.tangent;if(tangent!==undefined){tangent.transformDirection(matrix);tangent.needsUpdate=true;}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}return this;}applyQuaternion(q){_m1.makeRotationFromQuaternion(q);this.applyMatrix4(_m1);return this;}rotateX(angle){// rotate geometry around world x-axis\n_m1.makeRotationX(angle);this.applyMatrix4(_m1);return this;}rotateY(angle){// rotate geometry around world y-axis\n_m1.makeRotationY(angle);this.applyMatrix4(_m1);return this;}rotateZ(angle){// rotate geometry around world z-axis\n_m1.makeRotationZ(angle);this.applyMatrix4(_m1);return this;}translate(x,y,z){// translate geometry\n_m1.makeTranslation(x,y,z);this.applyMatrix4(_m1);return this;}scale(x,y,z){// scale geometry\n_m1.makeScale(x,y,z);this.applyMatrix4(_m1);return this;}lookAt(vector){_obj.lookAt(vector);_obj.updateMatrix();this.applyMatrix4(_obj.matrix);return this;}center(){this.computeBoundingBox();this.boundingBox.getCenter(_offset).negate();this.translate(_offset.x,_offset.y,_offset.z);return this;}setFromPoints(points){const position=[];for(let i=0,l=points.length;i<l;i++){const point=points[i];position.push(point.x,point.y,point.z||0);}this.setAttribute('position',new Float32BufferAttribute(position,3));return this;}computeBoundingBox(){if(this.boundingBox===null){this.boundingBox=new Box3();}const position=this.attributes.position;const morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingBox.set(new Vector3(-Infinity,-Infinity,-Infinity),new Vector3(+Infinity,+Infinity,+Infinity));return;}if(position!==undefined){this.boundingBox.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_box$1.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$8.addVectors(this.boundingBox.min,_box$1.min);this.boundingBox.expandByPoint(_vector$8);_vector$8.addVectors(this.boundingBox.max,_box$1.max);this.boundingBox.expandByPoint(_vector$8);}else{this.boundingBox.expandByPoint(_box$1.min);this.boundingBox.expandByPoint(_box$1.max);}}}}else{this.boundingBox.makeEmpty();}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this);}}computeBoundingSphere(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}const position=this.attributes.position;const morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingSphere.set(new Vector3(),Infinity);return;}if(position){// first, find the center of the bounding sphere\nconst center=this.boundingSphere.center;_box$1.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];_boxMorphTargets.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$8.addVectors(_box$1.min,_boxMorphTargets.min);_box$1.expandByPoint(_vector$8);_vector$8.addVectors(_box$1.max,_boxMorphTargets.max);_box$1.expandByPoint(_vector$8);}else{_box$1.expandByPoint(_boxMorphTargets.min);_box$1.expandByPoint(_boxMorphTargets.max);}}}_box$1.getCenter(center);// second, try to find a boundingSphere with a radius smaller than the\n// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\nlet maxRadiusSq=0;for(let i=0,il=position.count;i<il;i++){_vector$8.fromBufferAttribute(position,i);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$8));}// process morph attributes if present\nif(morphAttributesPosition){for(let i=0,il=morphAttributesPosition.length;i<il;i++){const morphAttribute=morphAttributesPosition[i];const morphTargetsRelative=this.morphTargetsRelative;for(let j=0,jl=morphAttribute.count;j<jl;j++){_vector$8.fromBufferAttribute(morphAttribute,j);if(morphTargetsRelative){_offset.fromBufferAttribute(position,j);_vector$8.add(_offset);}maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$8));}}}this.boundingSphere.radius=Math.sqrt(maxRadiusSq);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this);}}}computeFaceNormals(){// backwards compatibility\n}computeTangents(){const index=this.index;const attributes=this.attributes;// based on http://www.terathon.com/code/tangent.html\n// (per vertex tangents)\nif(index===null||attributes.position===undefined||attributes.normal===undefined||attributes.uv===undefined){console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');return;}const indices=index.array;const positions=attributes.position.array;const normals=attributes.normal.array;const uvs=attributes.uv.array;const nVertices=positions.length/3;if(attributes.tangent===undefined){this.setAttribute('tangent',new BufferAttribute(new Float32Array(4*nVertices),4));}const tangents=attributes.tangent.array;const tan1=[],tan2=[];for(let i=0;i<nVertices;i++){tan1[i]=new Vector3();tan2[i]=new Vector3();}const vA=new Vector3(),vB=new Vector3(),vC=new Vector3(),uvA=new Vector2(),uvB=new Vector2(),uvC=new Vector2(),sdir=new Vector3(),tdir=new Vector3();function handleTriangle(a,b,c){vA.fromArray(positions,a*3);vB.fromArray(positions,b*3);vC.fromArray(positions,c*3);uvA.fromArray(uvs,a*2);uvB.fromArray(uvs,b*2);uvC.fromArray(uvs,c*2);vB.sub(vA);vC.sub(vA);uvB.sub(uvA);uvC.sub(uvA);const r=1.0/(uvB.x*uvC.y-uvC.x*uvB.y);// silently ignore degenerate uv triangles having coincident or colinear vertices\nif(!isFinite(r))return;sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC,-uvB.y).multiplyScalar(r);tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB,-uvC.x).multiplyScalar(r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir);}let groups=this.groups;if(groups.length===0){groups=[{start:0,count:indices.length}];}for(let i=0,il=groups.length;i<il;++i){const group=groups[i];const start=group.start;const count=group.count;for(let j=start,jl=start+count;j<jl;j+=3){handleTriangle(indices[j+0],indices[j+1],indices[j+2]);}}const tmp=new Vector3(),tmp2=new Vector3();const n=new Vector3(),n2=new Vector3();function handleVertex(v){n.fromArray(normals,v*3);n2.copy(n);const t=tan1[v];// Gram-Schmidt orthogonalize\ntmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();// Calculate handedness\ntmp2.crossVectors(n2,t);const test=tmp2.dot(tan2[v]);const w=test<0.0?-1.0:1.0;tangents[v*4]=tmp.x;tangents[v*4+1]=tmp.y;tangents[v*4+2]=tmp.z;tangents[v*4+3]=w;}for(let i=0,il=groups.length;i<il;++i){const group=groups[i];const start=group.start;const count=group.count;for(let j=start,jl=start+count;j<jl;j+=3){handleVertex(indices[j+0]);handleVertex(indices[j+1]);handleVertex(indices[j+2]);}}}computeVertexNormals(){const index=this.index;const positionAttribute=this.getAttribute('position');if(positionAttribute!==undefined){let normalAttribute=this.getAttribute('normal');if(normalAttribute===undefined){normalAttribute=new BufferAttribute(new Float32Array(positionAttribute.count*3),3);this.setAttribute('normal',normalAttribute);}else{// reset existing normals to zero\nfor(let i=0,il=normalAttribute.count;i<il;i++){normalAttribute.setXYZ(i,0,0,0);}}const pA=new Vector3(),pB=new Vector3(),pC=new Vector3();const nA=new Vector3(),nB=new Vector3(),nC=new Vector3();const cb=new Vector3(),ab=new Vector3();// indexed elements\nif(index){for(let i=0,il=index.count;i<il;i+=3){const vA=index.getX(i+0);const vB=index.getX(i+1);const vC=index.getX(i+2);pA.fromBufferAttribute(positionAttribute,vA);pB.fromBufferAttribute(positionAttribute,vB);pC.fromBufferAttribute(positionAttribute,vC);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);nA.fromBufferAttribute(normalAttribute,vA);nB.fromBufferAttribute(normalAttribute,vB);nC.fromBufferAttribute(normalAttribute,vC);nA.add(cb);nB.add(cb);nC.add(cb);normalAttribute.setXYZ(vA,nA.x,nA.y,nA.z);normalAttribute.setXYZ(vB,nB.x,nB.y,nB.z);normalAttribute.setXYZ(vC,nC.x,nC.y,nC.z);}}else{// non-indexed elements (unconnected triangle soup)\nfor(let i=0,il=positionAttribute.count;i<il;i+=3){pA.fromBufferAttribute(positionAttribute,i+0);pB.fromBufferAttribute(positionAttribute,i+1);pC.fromBufferAttribute(positionAttribute,i+2);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normalAttribute.setXYZ(i+0,cb.x,cb.y,cb.z);normalAttribute.setXYZ(i+1,cb.x,cb.y,cb.z);normalAttribute.setXYZ(i+2,cb.x,cb.y,cb.z);}}this.normalizeNormals();normalAttribute.needsUpdate=true;}}merge(geometry,offset){if(!(geometry&&geometry.isBufferGeometry)){console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',geometry);return;}if(offset===undefined){offset=0;console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '+'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');}const attributes=this.attributes;for(const key in attributes){if(geometry.attributes[key]===undefined)continue;const attribute1=attributes[key];const attributeArray1=attribute1.array;const attribute2=geometry.attributes[key];const attributeArray2=attribute2.array;const attributeOffset=attribute2.itemSize*offset;const length=Math.min(attributeArray2.length,attributeArray1.length-attributeOffset);for(let i=0,j=attributeOffset;i<length;i++,j++){attributeArray1[j]=attributeArray2[i];}}return this;}normalizeNormals(){const normals=this.attributes.normal;for(let i=0,il=normals.count;i<il;i++){_vector$8.fromBufferAttribute(normals,i);_vector$8.normalize();normals.setXYZ(i,_vector$8.x,_vector$8.y,_vector$8.z);}}toNonIndexed(){function convertBufferAttribute(attribute,indices){const array=attribute.array;const itemSize=attribute.itemSize;const normalized=attribute.normalized;const array2=new array.constructor(indices.length*itemSize);let index=0,index2=0;for(let i=0,l=indices.length;i<l;i++){index=indices[i]*itemSize;for(let j=0;j<itemSize;j++){array2[index2++]=array[index++];}}return new BufferAttribute(array2,itemSize,normalized);}//\nif(this.index===null){console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');return this;}const geometry2=new BufferGeometry();const indices=this.index.array;const attributes=this.attributes;// attributes\nfor(const name in attributes){const attribute=attributes[name];const newAttribute=convertBufferAttribute(attribute,indices);geometry2.setAttribute(name,newAttribute);}// morph attributes\nconst morphAttributes=this.morphAttributes;for(const name in morphAttributes){const morphArray=[];const morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(let i=0,il=morphAttribute.length;i<il;i++){const attribute=morphAttribute[i];const newAttribute=convertBufferAttribute(attribute,indices);morphArray.push(newAttribute);}geometry2.morphAttributes[name]=morphArray;}geometry2.morphTargetsRelative=this.morphTargetsRelative;// groups\nconst groups=this.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];geometry2.addGroup(group.start,group.count,group.materialIndex);}return geometry2;}toJSON(){const data={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};// standard BufferGeometry serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(Object.keys(this.userData).length>0)data.userData=this.userData;if(this.parameters!==undefined){const parameters=this.parameters;for(const key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}// for simplicity the code assumes attributes are not shared across geometries, see #15811\ndata.data={attributes:{}};const index=this.index;if(index!==null){data.data.index={type:index.array.constructor.name,array:Array.prototype.slice.call(index.array)};}const attributes=this.attributes;for(const key in attributes){const attribute=attributes[key];data.data.attributes[key]=attribute.toJSON(data.data);}const morphAttributes={};let hasMorphAttributes=false;for(const key in this.morphAttributes){const attributeArray=this.morphAttributes[key];const array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];array.push(attribute.toJSON(data.data));}if(array.length>0){morphAttributes[key]=array;hasMorphAttributes=true;}}if(hasMorphAttributes){data.data.morphAttributes=morphAttributes;data.data.morphTargetsRelative=this.morphTargetsRelative;}const groups=this.groups;if(groups.length>0){data.data.groups=JSON.parse(JSON.stringify(groups));}const boundingSphere=this.boundingSphere;if(boundingSphere!==null){data.data.boundingSphere={center:boundingSphere.center.toArray(),radius:boundingSphere.radius};}return data;}clone(){/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */return new BufferGeometry().copy(this);}copy(source){// reset\nthis.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;// used for storing cloned, shared data\nconst data={};// name\nthis.name=source.name;// index\nconst index=source.index;if(index!==null){this.setIndex(index.clone(data));}// attributes\nconst attributes=source.attributes;for(const name in attributes){const attribute=attributes[name];this.setAttribute(name,attribute.clone(data));}// morph attributes\nconst morphAttributes=source.morphAttributes;for(const name in morphAttributes){const array=[];const morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(let i=0,l=morphAttribute.length;i<l;i++){array.push(morphAttribute[i].clone(data));}this.morphAttributes[name]=array;}this.morphTargetsRelative=source.morphTargetsRelative;// groups\nconst groups=source.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];this.addGroup(group.start,group.count,group.materialIndex);}// bounding box\nconst boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere\nconst boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// draw range\nthis.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;// user data\nthis.userData=source.userData;return this;}dispose(){this.dispatchEvent({type:'dispose'});}}BufferGeometry.prototype.isBufferGeometry=true;const _inverseMatrix$2=/*@__PURE__*/new Matrix4();const _ray$2=/*@__PURE__*/new Ray();const _sphere$3=/*@__PURE__*/new Sphere();const _vA$1=/*@__PURE__*/new Vector3();const _vB$1=/*@__PURE__*/new Vector3();const _vC$1=/*@__PURE__*/new Vector3();const _tempA=/*@__PURE__*/new Vector3();const _tempB=/*@__PURE__*/new Vector3();const _tempC=/*@__PURE__*/new Vector3();const _morphA=/*@__PURE__*/new Vector3();const _morphB=/*@__PURE__*/new Vector3();const _morphC=/*@__PURE__*/new Vector3();const _uvA$1=/*@__PURE__*/new Vector2();const _uvB$1=/*@__PURE__*/new Vector2();const _uvC$1=/*@__PURE__*/new Vector2();const _intersectionPoint=/*@__PURE__*/new Vector3();const _intersectionPointWorld=/*@__PURE__*/new Vector3();class Mesh extends Object3D{constructor(geometry=new BufferGeometry(),material=new MeshBasicMaterial()){super();this.type='Mesh';this.geometry=geometry;this.material=material;this.updateMorphTargets();}copy(source){super.copy(source);if(source.morphTargetInfluences!==undefined){this.morphTargetInfluences=source.morphTargetInfluences.slice();}if(source.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary);}this.material=source.material;this.geometry=source.geometry;return this;}updateMorphTargets(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}}raycast(raycaster,intersects){const geometry=this.geometry;const material=this.material;const matrixWorld=this.matrixWorld;if(material===undefined)return;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$3.copy(geometry.boundingSphere);_sphere$3.applyMatrix4(matrixWorld);if(raycaster.ray.intersectsSphere(_sphere$3)===false)return;//\n_inverseMatrix$2.copy(matrixWorld).invert();_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);// Check boundingBox before continuing\nif(geometry.boundingBox!==null){if(_ray$2.intersectsBox(geometry.boundingBox)===false)return;}let intersection;if(geometry.isBufferGeometry){const index=geometry.index;const position=geometry.attributes.position;const morphPosition=geometry.morphAttributes.position;const morphTargetsRelative=geometry.morphTargetsRelative;const uv=geometry.attributes.uv;const uv2=geometry.attributes.uv2;const groups=geometry.groups;const drawRange=geometry.drawRange;if(index!==null){// indexed buffer geometry\nif(Array.isArray(material)){for(let i=0,il=groups.length;i<il;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];const start=Math.max(group.start,drawRange.start);const end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(let j=start,jl=end;j<jl;j+=3){const a=index.getX(j);const b=index.getX(j+1);const c=index.getX(j+2);intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i+=3){const a=index.getX(i);const b=index.getX(i+1);const c=index.getX(i+2);intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in indexed buffer semantics\nintersects.push(intersection);}}}}else if(position!==undefined){// non-indexed buffer geometry\nif(Array.isArray(material)){for(let i=0,il=groups.length;i<il;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];const start=Math.max(group.start,drawRange.start);const end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(let j=start,jl=end;j<jl;j+=3){const a=j;const b=j+1;const c=j+2;intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in non-indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{const start=Math.max(0,drawRange.start);const end=Math.min(position.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i+=3){const a=i;const b=i+1;const c=i+2;intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in non-indexed buffer semantics\nintersects.push(intersection);}}}}}else if(geometry.isGeometry){console.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}}Mesh.prototype.isMesh=true;function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){let intersect;if(material.side===BackSide){intersect=ray.intersectTriangle(pC,pB,pA,true,point);}else{intersect=ray.intersectTriangle(pA,pB,pC,material.side!==DoubleSide,point);}if(intersect===null)return null;_intersectionPointWorld.copy(point);_intersectionPointWorld.applyMatrix4(object.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_intersectionPointWorld);if(distance<raycaster.near||distance>raycaster.far)return null;return{distance:distance,point:_intersectionPointWorld.clone(),object:object};}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c){_vA$1.fromBufferAttribute(position,a);_vB$1.fromBufferAttribute(position,b);_vC$1.fromBufferAttribute(position,c);const morphInfluences=object.morphTargetInfluences;if(material.morphTargets&&morphPosition&&morphInfluences){_morphA.set(0,0,0);_morphB.set(0,0,0);_morphC.set(0,0,0);for(let i=0,il=morphPosition.length;i<il;i++){const influence=morphInfluences[i];const morphAttribute=morphPosition[i];if(influence===0)continue;_tempA.fromBufferAttribute(morphAttribute,a);_tempB.fromBufferAttribute(morphAttribute,b);_tempC.fromBufferAttribute(morphAttribute,c);if(morphTargetsRelative){_morphA.addScaledVector(_tempA,influence);_morphB.addScaledVector(_tempB,influence);_morphC.addScaledVector(_tempC,influence);}else{_morphA.addScaledVector(_tempA.sub(_vA$1),influence);_morphB.addScaledVector(_tempB.sub(_vB$1),influence);_morphC.addScaledVector(_tempC.sub(_vC$1),influence);}}_vA$1.add(_morphA);_vB$1.add(_morphB);_vC$1.add(_morphC);}if(object.isSkinnedMesh){object.boneTransform(a,_vA$1);object.boneTransform(b,_vB$1);object.boneTransform(c,_vC$1);}const intersection=checkIntersection(object,material,raycaster,ray,_vA$1,_vB$1,_vC$1,_intersectionPoint);if(intersection){if(uv){_uvA$1.fromBufferAttribute(uv,a);_uvB$1.fromBufferAttribute(uv,b);_uvC$1.fromBufferAttribute(uv,c);intersection.uv=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2());}if(uv2){_uvA$1.fromBufferAttribute(uv2,a);_uvB$1.fromBufferAttribute(uv2,b);_uvC$1.fromBufferAttribute(uv2,c);intersection.uv2=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2());}const face={a:a,b:b,c:c,normal:new Vector3(),materialIndex:0};Triangle.getNormal(_vA$1,_vB$1,_vC$1,face.normal);intersection.face=face;}return intersection;}class BoxGeometry extends BufferGeometry{constructor(width=1,height=1,depth=1,widthSegments=1,heightSegments=1,depthSegments=1){super();this.type='BoxGeometry';this.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};const scope=this;// segments\nwidthSegments=Math.floor(widthSegments);heightSegments=Math.floor(heightSegments);depthSegments=Math.floor(depthSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet numberOfVertices=0;let groupStart=0;// build each side of the box geometry\nbuildPlane('z','y','x',-1,-1,depth,height,width,depthSegments,heightSegments,0);// px\nbuildPlane('z','y','x',1,-1,depth,height,-width,depthSegments,heightSegments,1);// nx\nbuildPlane('x','z','y',1,1,width,depth,height,widthSegments,depthSegments,2);// py\nbuildPlane('x','z','y',1,-1,width,depth,-height,widthSegments,depthSegments,3);// ny\nbuildPlane('x','y','z',1,-1,width,height,depth,widthSegments,heightSegments,4);// pz\nbuildPlane('x','y','z',-1,-1,width,height,-depth,widthSegments,heightSegments,5);// nz\n// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){const segmentWidth=width/gridX;const segmentHeight=height/gridY;const widthHalf=width/2;const heightHalf=height/2;const depthHalf=depth/2;const gridX1=gridX+1;const gridY1=gridY+1;let vertexCounter=0;let groupCount=0;const vector=new Vector3();// generate vertices, normals and uvs\nfor(let iy=0;iy<gridY1;iy++){const y=iy*segmentHeight-heightHalf;for(let ix=0;ix<gridX1;ix++){const x=ix*segmentWidth-widthHalf;// set values to correct vector component\nvector[u]=x*udir;vector[v]=y*vdir;vector[w]=depthHalf;// now apply vector to vertex buffer\nvertices.push(vector.x,vector.y,vector.z);// set values to correct vector component\nvector[u]=0;vector[v]=0;vector[w]=depth>0?1:-1;// now apply vector to normal buffer\nnormals.push(vector.x,vector.y,vector.z);// uvs\nuvs.push(ix/gridX);uvs.push(1-iy/gridY);// counters\nvertexCounter+=1;}}// indices\n// 1. you need three indices to draw a single face\n// 2. a single segment consists of two faces\n// 3. so we need to generate six (2*3) indices per segment\nfor(let iy=0;iy<gridY;iy++){for(let ix=0;ix<gridX;ix++){const a=numberOfVertices+ix+gridX1*iy;const b=numberOfVertices+ix+gridX1*(iy+1);const c=numberOfVertices+(ix+1)+gridX1*(iy+1);const d=numberOfVertices+(ix+1)+gridX1*iy;// faces\nindices.push(a,b,d);indices.push(b,c,d);// increase counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,materialIndex);// calculate new start value for groups\ngroupStart+=groupCount;// update total number of vertices\nnumberOfVertices+=vertexCounter;}}}/**\n * Uniform Utilities\n */function cloneUniforms(src){const dst={};for(const u in src){dst[u]={};for(const p in src[u]){const property=src[u][p];if(property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture||property.isQuaternion)){dst[u][p]=property.clone();}else if(Array.isArray(property)){dst[u][p]=property.slice();}else{dst[u][p]=property;}}}return dst;}function mergeUniforms(uniforms){const merged={};for(let u=0;u<uniforms.length;u++){const tmp=cloneUniforms(uniforms[u]);for(const p in tmp){merged[p]=tmp[p];}}return merged;}// Legacy\nconst UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";var default_fragment=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */class ShaderMaterial extends Material{constructor(parameters){super();this.type='ShaderMaterial';this.defines={};this.uniforms={};this.vertexShader=default_vertex;this.fragmentShader=default_fragment;this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;// set to use scene fog\nthis.lights=false;// set to use scene lights\nthis.clipping=false;// set to use user-defined clipping planes\nthis.morphTargets=false;// set to use morph targets\nthis.morphNormals=false;// set to use morph normals\nthis.extensions={derivatives:false,// set to use derivatives\nfragDepth:false,// set to use fragment depth values\ndrawBuffers:false,// set to use draw buffers\nshaderTextureLOD:false// set to use shader texture LOD\n};// When rendered geometry doesn't include these attributes but the material does,\n// use these default values in WebGL. This avoids errors when buffer data is missing.\nthis.defaultAttributeValues={'color':[1,1,1],'uv':[0,0],'uv2':[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;this.glslVersion=null;if(parameters!==undefined){if(parameters.attributes!==undefined){console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');}this.setValues(parameters);}}copy(source){super.copy(source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.extensions=Object.assign({},source.extensions);this.glslVersion=source.glslVersion;return this;}toJSON(meta){const data=super.toJSON(meta);data.glslVersion=this.glslVersion;data.uniforms={};for(const name in this.uniforms){const uniform=this.uniforms[name];const value=uniform.value;if(value&&value.isTexture){data.uniforms[name]={type:'t',value:value.toJSON(meta).uuid};}else if(value&&value.isColor){data.uniforms[name]={type:'c',value:value.getHex()};}else if(value&&value.isVector2){data.uniforms[name]={type:'v2',value:value.toArray()};}else if(value&&value.isVector3){data.uniforms[name]={type:'v3',value:value.toArray()};}else if(value&&value.isVector4){data.uniforms[name]={type:'v4',value:value.toArray()};}else if(value&&value.isMatrix3){data.uniforms[name]={type:'m3',value:value.toArray()};}else if(value&&value.isMatrix4){data.uniforms[name]={type:'m4',value:value.toArray()};}else{data.uniforms[name]={value:value};// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n}}if(Object.keys(this.defines).length>0)data.defines=this.defines;data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;const extensions={};for(const key in this.extensions){if(this.extensions[key]===true)extensions[key]=true;}if(Object.keys(extensions).length>0)data.extensions=extensions;return data;}}ShaderMaterial.prototype.isShaderMaterial=true;class Camera extends Object3D{constructor(){super();this.type='Camera';this.matrixWorldInverse=new Matrix4();this.projectionMatrix=new Matrix4();this.projectionMatrixInverse=new Matrix4();}copy(source,recursive){super.copy(source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);return this;}getWorldDirection(target){if(target===undefined){console.warn('THREE.Camera: .getWorldDirection() target is now required');target=new Vector3();}this.updateWorldMatrix(true,false);const e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize();}updateMatrixWorld(force){super.updateMatrixWorld(force);this.matrixWorldInverse.copy(this.matrixWorld).invert();}updateWorldMatrix(updateParents,updateChildren){super.updateWorldMatrix(updateParents,updateChildren);this.matrixWorldInverse.copy(this.matrixWorld).invert();}clone(){return new this.constructor().copy(this);}}Camera.prototype.isCamera=true;class PerspectiveCamera extends Camera{constructor(fov=50,aspect=1,near=0.1,far=2000){super();this.type='PerspectiveCamera';this.fov=fov;this.zoom=1;this.near=near;this.far=far;this.focus=10;this.aspect=aspect;this.view=null;this.filmGauge=35;// width of the film (default in millimeters)\nthis.filmOffset=0;// horizontal film offset (same unit as gauge)\nthis.updateProjectionMatrix();}copy(source,recursive){super.copy(source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=source.view===null?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this;}/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */setFocalLength(focalLength){/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */const vExtentSlope=0.5*this.getFilmHeight()/focalLength;this.fov=RAD2DEG*2*Math.atan(vExtentSlope);this.updateProjectionMatrix();}/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */getFocalLength(){const vExtentSlope=Math.tan(DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/vExtentSlope;}getEffectiveFOV(){return RAD2DEG*2*Math.atan(Math.tan(DEG2RAD*0.5*this.fov)/this.zoom);}getFilmWidth(){// film not completely covered in portrait format (aspect < 1)\nreturn this.filmGauge*Math.min(this.aspect,1);}getFilmHeight(){// film not completely covered in landscape format (aspect > 1)\nreturn this.filmGauge/Math.max(this.aspect,1);}/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */setViewOffset(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();}clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();}updateProjectionMatrix(){const near=this.near;let top=near*Math.tan(DEG2RAD*0.5*this.fov)/this.zoom;let height=2*top;let width=this.aspect*height;let left=-0.5*width;const view=this.view;if(this.view!==null&&this.view.enabled){const fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight;}const skew=this.filmOffset;if(skew!==0)left+=near*skew/this.getFilmWidth();this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();}toJSON(meta){const data=super.toJSON(meta);data.object.fov=this.fov;data.object.zoom=this.zoom;data.object.near=this.near;data.object.far=this.far;data.object.focus=this.focus;data.object.aspect=this.aspect;if(this.view!==null)data.object.view=Object.assign({},this.view);data.object.filmGauge=this.filmGauge;data.object.filmOffset=this.filmOffset;return data;}}PerspectiveCamera.prototype.isPerspectiveCamera=true;const fov=90,aspect=1;class CubeCamera extends Object3D{constructor(near,far,renderTarget){super();this.type='CubeCamera';if(renderTarget.isWebGLCubeRenderTarget!==true){console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');return;}this.renderTarget=renderTarget;const cameraPX=new PerspectiveCamera(fov,aspect,near,far);cameraPX.layers=this.layers;cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3(1,0,0));this.add(cameraPX);const cameraNX=new PerspectiveCamera(fov,aspect,near,far);cameraNX.layers=this.layers;cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3(-1,0,0));this.add(cameraNX);const cameraPY=new PerspectiveCamera(fov,aspect,near,far);cameraPY.layers=this.layers;cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3(0,1,0));this.add(cameraPY);const cameraNY=new PerspectiveCamera(fov,aspect,near,far);cameraNY.layers=this.layers;cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3(0,-1,0));this.add(cameraNY);const cameraPZ=new PerspectiveCamera(fov,aspect,near,far);cameraPZ.layers=this.layers;cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3(0,0,1));this.add(cameraPZ);const cameraNZ=new PerspectiveCamera(fov,aspect,near,far);cameraNZ.layers=this.layers;cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3(0,0,-1));this.add(cameraNZ);}update(renderer,scene){if(this.parent===null)this.updateMatrixWorld();const renderTarget=this.renderTarget;const[cameraPX,cameraNX,cameraPY,cameraNY,cameraPZ,cameraNZ]=this.children;const currentXrEnabled=renderer.xr.enabled;const currentRenderTarget=renderer.getRenderTarget();renderer.xr.enabled=false;const generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=false;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget);renderer.xr.enabled=currentXrEnabled;}}class CubeTexture extends Texture{constructor(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){images=images!==undefined?images:[];mapping=mapping!==undefined?mapping:CubeReflectionMapping;format=format!==undefined?format:RGBFormat;super(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);// Why CubeTexture._needsFlipEnvMap is necessary:\n//\n// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n// when using WebGLCubeRenderTarget.texture as a cube texture.\nthis._needsFlipEnvMap=true;this.flipY=false;}get images(){return this.image;}set images(value){this.image=value;}}CubeTexture.prototype.isCubeTexture=true;class WebGLCubeRenderTarget extends WebGLRenderTarget{constructor(size,options,dummy){if(Number.isInteger(options)){console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');options=dummy;}super(size,size,options);options=options||{};this.texture=new CubeTexture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.texture._needsFlipEnvMap=false;}fromEquirectangularTexture(renderer,texture){this.texture.type=texture.type;this.texture.format=RGBAFormat;// see #18859\nthis.texture.encoding=texture.encoding;this.texture.generateMipmaps=texture.generateMipmaps;this.texture.minFilter=texture.minFilter;this.texture.magFilter=texture.magFilter;const shader={uniforms:{tEquirect:{value:null}},vertexShader:/* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,fragmentShader:/* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`};const geometry=new BoxGeometry(5,5,5);const material=new ShaderMaterial({name:'CubemapFromEquirect',uniforms:cloneUniforms(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,side:BackSide,blending:NoBlending});material.uniforms.tEquirect.value=texture;const mesh=new Mesh(geometry,material);const currentMinFilter=texture.minFilter;// Avoid blurred poles\nif(texture.minFilter===LinearMipmapLinearFilter)texture.minFilter=LinearFilter;const camera=new CubeCamera(1,10,this);camera.update(renderer,mesh);texture.minFilter=currentMinFilter;mesh.geometry.dispose();mesh.material.dispose();return this;}clear(renderer,color,depth,stencil){const currentRenderTarget=renderer.getRenderTarget();for(let i=0;i<6;i++){renderer.setRenderTarget(this,i);renderer.clear(color,depth,stencil);}renderer.setRenderTarget(currentRenderTarget);}}WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=true;const _sphere$2=/*@__PURE__*/new Sphere();const _vector$7=/*@__PURE__*/new Vector3();class Frustum{constructor(p0=new Plane(),p1=new Plane(),p2=new Plane(),p3=new Plane(),p4=new Plane(),p5=new Plane()){this.planes=[p0,p1,p2,p3,p4,p5];}set(p0,p1,p2,p3,p4,p5){const planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this;}copy(frustum){const planes=this.planes;for(let i=0;i<6;i++){planes[i].copy(frustum.planes[i]);}return this;}setFromProjectionMatrix(m){const planes=this.planes;const me=m.elements;const me0=me[0],me1=me[1],me2=me[2],me3=me[3];const me4=me[4],me5=me[5],me6=me[6],me7=me[7];const me8=me[8],me9=me[9],me10=me[10],me11=me[11];const me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this;}intersectsObject(object){const geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(_sphere$2);}intersectsSprite(sprite){_sphere$2.center.set(0,0,0);_sphere$2.radius=0.7071067811865476;_sphere$2.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(_sphere$2);}intersectsSphere(sphere){const planes=this.planes;const center=sphere.center;const negRadius=-sphere.radius;for(let i=0;i<6;i++){const distance=planes[i].distanceToPoint(center);if(distance<negRadius){return false;}}return true;}intersectsBox(box){const planes=this.planes;for(let i=0;i<6;i++){const plane=planes[i];// corner at max distance\n_vector$7.x=plane.normal.x>0?box.max.x:box.min.x;_vector$7.y=plane.normal.y>0?box.max.y:box.min.y;_vector$7.z=plane.normal.z>0?box.max.z:box.min.z;if(plane.distanceToPoint(_vector$7)<0){return false;}}return true;}containsPoint(point){const planes=this.planes;for(let i=0;i<6;i++){if(planes[i].distanceToPoint(point)<0){return false;}}return true;}clone(){return new this.constructor().copy(this);}}function WebGLAnimation(){let context=null;let isAnimating=false;let animationLoop=null;let requestId=null;function onAnimationFrame(time,frame){animationLoop(time,frame);requestId=context.requestAnimationFrame(onAnimationFrame);}return{start:function(){if(isAnimating===true)return;if(animationLoop===null)return;requestId=context.requestAnimationFrame(onAnimationFrame);isAnimating=true;},stop:function(){context.cancelAnimationFrame(requestId);isAnimating=false;},setAnimationLoop:function(callback){animationLoop=callback;},setContext:function(value){context=value;}};}function WebGLAttributes(gl,capabilities){const isWebGL2=capabilities.isWebGL2;const buffers=new WeakMap();function createBuffer(attribute,bufferType){const array=attribute.array;const usage=attribute.usage;const buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();let type=5126;if(array instanceof Float32Array){type=5126;}else if(array instanceof Float64Array){console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');}else if(array instanceof Uint16Array){if(attribute.isFloat16BufferAttribute){if(isWebGL2){type=5131;}else{console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');}}else{type=5123;}}else if(array instanceof Int16Array){type=5122;}else if(array instanceof Uint32Array){type=5125;}else if(array instanceof Int32Array){type=5124;}else if(array instanceof Int8Array){type=5120;}else if(array instanceof Uint8Array){type=5121;}else if(array instanceof Uint8ClampedArray){type=5121;}return{buffer:buffer,type:type,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version};}function updateBuffer(buffer,attribute,bufferType){const array=attribute.array;const updateRange=attribute.updateRange;gl.bindBuffer(bufferType,buffer);if(updateRange.count===-1){// Not using update ranges\ngl.bufferSubData(bufferType,0,array);}else{if(isWebGL2){gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array,updateRange.offset,updateRange.count);}else{gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count));}updateRange.count=-1;// reset range\n}}//\nfunction get(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;return buffers.get(attribute);}function remove(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;const data=buffers.get(attribute);if(data){gl.deleteBuffer(data.buffer);buffers.delete(attribute);}}function update(attribute,bufferType){if(attribute.isGLBufferAttribute){const cached=buffers.get(attribute);if(!cached||cached.version<attribute.version){buffers.set(attribute,{buffer:attribute.buffer,type:attribute.type,bytesPerElement:attribute.elementSize,version:attribute.version});}return;}if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;const data=buffers.get(attribute);if(data===undefined){buffers.set(attribute,createBuffer(attribute,bufferType));}else if(data.version<attribute.version){updateBuffer(data.buffer,attribute,bufferType);data.version=attribute.version;}}return{get:get,remove:remove,update:update};}class PlaneGeometry extends BufferGeometry{constructor(width=1,height=1,widthSegments=1,heightSegments=1){super();this.type='PlaneGeometry';this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};const width_half=width/2;const height_half=height/2;const gridX=Math.floor(widthSegments);const gridY=Math.floor(heightSegments);const gridX1=gridX+1;const gridY1=gridY+1;const segment_width=width/gridX;const segment_height=height/gridY;//\nconst indices=[];const vertices=[];const normals=[];const uvs=[];for(let iy=0;iy<gridY1;iy++){const y=iy*segment_height-height_half;for(let ix=0;ix<gridX1;ix++){const x=ix*segment_width-width_half;vertices.push(x,-y,0);normals.push(0,0,1);uvs.push(ix/gridX);uvs.push(1-iy/gridY);}}for(let iy=0;iy<gridY;iy++){for(let ix=0;ix<gridX;ix++){const a=ix+gridX1*iy;const b=ix+gridX1*(iy+1);const c=ix+1+gridX1*(iy+1);const d=ix+1+gridX1*iy;indices.push(a,b,d);indices.push(b,c,d);}}this.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}var alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";var alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";var aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";var aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";var begin_vertex=\"vec3 transformed = vec3( position );\";var beginnormal_vertex=\"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";var bsdfs=\"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";var bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";var clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";var clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";var clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";var clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";var color_fragment=\"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";var color_pars_fragment=\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_pars_vertex=\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_vertex=\"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";var common=\"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";var cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";var defaultnormal_vertex=\"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";var displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";var displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";var emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";var emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";var encodings_fragment=\"gl_FragColor = linearToOutputTexel( gl_FragColor );\";var encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";var envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";var envmap_common_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";var envmap_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";var envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";var envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";var fog_vertex=\"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";var fog_pars_vertex=\"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";var fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";var fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";var gradientmap_pars_fragment=\"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";var lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";var lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";var lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";var lights_pars_begin=\"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";var envmap_physical_pars_fragment=\"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";var lights_toon_fragment=\"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";var lights_toon_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";var lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), rawDiffuseColor, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), rawDiffuseColor, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";var lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";var lights_fragment_begin=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";var lights_fragment_maps=\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";var lights_fragment_end=\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";var logdepthbuf_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";var logdepthbuf_pars_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";var logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";var logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";var map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";var map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";var map_particle_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";var map_particle_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";var metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";var morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";var morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";var morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";var normal_fragment_begin=\"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";var normal_fragment_maps=\"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";var normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";var clearcoat_normal_fragment_begin=\"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";var clearcoat_normal_fragment_maps=\"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";var clearcoat_pars_fragment=\"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";var packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";var premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";var project_vertex=\"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";var dithering_fragment=\"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";var dithering_pars_fragment=\"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";var roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";var roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";var shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";var shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";var shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";var shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";var skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";var skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";var skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";var skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";var specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";var specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";var tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";var tonemapping_pars_fragment=\"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";var transmission_fragment=\"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSNMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 f0 = vec3( pow( ior - 1.0, 2.0 ) / pow( ior + 1.0, 2.0 ) );\\n\\tvec3 f90 = vec3( 1.0 );\\n\\tvec3 f_transmission = totalTransmission * getIBLVolumeRefraction(\\n\\t\\tnormal, v, viewDir, roughnessFactor, diffuseColor.rgb, f0, f90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance);\\n\\tdiffuseColor.rgb = mix( diffuseColor.rgb, f_transmission, totalTransmission );\\n#endif\";var transmission_pars_fragment=\"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, vec3 viewDir, float perceptualRoughness, vec3 baseColor, vec3 f0, vec3 f90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\tfloat NdotV = saturate(dot(n, viewDir));\\n\\t\\tvec2 brdf = integrateSpecularBRDF(NdotV, perceptualRoughness);\\n\\t\\tvec3 specularColor = f0 * brdf.x + f90 * brdf.y;\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif\";var uv_pars_fragment=\"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";var uv_pars_vertex=\"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";var uv_vertex=\"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";var uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";var uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";var uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";var worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";var background_frag=\"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var background_vert=\"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";var cube_frag=\"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var cube_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";var depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";var depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";var distanceRGBA_frag=\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";var distanceRGBA_vert=\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";var equirect_frag=\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var equirect_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";var linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshmatcap_frag=\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshmatcap_vert=\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";var meshtoon_frag=\"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshtoon_vert=\"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphysical_frag=\"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform vec3 attenuationColor;\\n\\tuniform float attenuationDistance;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t\\tfloat thicknessFactor = thickness;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\tvec3 rawDiffuseColor = diffuseColor.rgb;\\n\\t#include <transmission_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphysical_vert=\"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}\";var normal_frag=\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";var normal_vert=\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";var points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";var shadow_frag=\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var shadow_vert=\"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var sprite_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var sprite_vert=\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";const ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmission_fragment:transmission_fragment,transmission_pars_fragment:transmission_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert};/**\n * Uniforms library for shared webgl shaders\n */const UniformsLib={common:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},map:{value:null},uvTransform:{value:new Matrix3()},uv2Transform:{value:new Matrix3()},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1.0},refractionRatio:{value:0.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:0.00025},fogNear:{value:1},fogFar:{value:2000},fogColor:{value:new Color(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\nrectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},size:{value:1.0},scale:{value:1.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}},sprite:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},center:{value:new Vector2(0.5,0.5)},rotation:{value:0.0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3()}}};const ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},specular:{value:new Color(0x111111)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},roughness:{value:1.0},metalness:{value:0.0},envMapIntensity:{value:1}// temporary\n}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3()},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3()},nearDistance:{value:1},farDistance:{value:1000}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0x00000)},opacity:{value:1.0}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0x000000)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Vector2()},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};function WebGLBackground(renderer,cubemaps,state,objects,premultipliedAlpha){const clearColor=new Color(0x000000);let clearAlpha=0;let planeMesh;let boxMesh;let currentBackground=null;let currentBackgroundVersion=0;let currentTonemapping=null;function render(renderList,scene){let forceClear=false;let background=scene.isScene===true?scene.background:null;if(background&&background.isTexture){background=cubemaps.get(background);}// Ignore background in AR\n// TODO: Reconsider this.\nconst xr=renderer.xr;const session=xr.getSession&&xr.getSession();if(session&&session.environmentBlendMode==='additive'){background=null;}if(background===null){setClear(clearColor,clearAlpha);}else if(background&&background.isColor){setClear(background,1);forceClear=true;}if(renderer.autoClear||forceClear){renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);}if(background&&(background.isCubeTexture||background.mapping===CubeUVReflectionMapping)){if(boxMesh===undefined){boxMesh=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:'BackgroundCubeMaterial',uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:false,depthWrite:false,fog:false}));boxMesh.geometry.deleteAttribute('normal');boxMesh.geometry.deleteAttribute('uv');boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld);};// enable code injection for non-built-in material\nObject.defineProperty(boxMesh.material,'envMap',{get:function(){return this.uniforms.envMap.value;}});objects.update(boxMesh);}boxMesh.material.uniforms.envMap.value=background;boxMesh.material.uniforms.flipEnvMap.value=background.isCubeTexture&&background._needsFlipEnvMap?-1:1;if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){boxMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null);}else if(background&&background.isTexture){if(planeMesh===undefined){planeMesh=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:'BackgroundMaterial',uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:false,depthWrite:false,fog:false}));planeMesh.geometry.deleteAttribute('normal');// enable code injection for non-built-in material\nObject.defineProperty(planeMesh.material,'map',{get:function(){return this.uniforms.t2D.value;}});objects.update(planeMesh);}planeMesh.material.uniforms.t2D.value=background;if(background.matrixAutoUpdate===true){background.updateMatrix();}planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){planeMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null);}}function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha);}return{getClearColor:function(){return clearColor;},setClearColor:function(color,alpha=1){clearColor.set(color);clearAlpha=alpha;setClear(clearColor,clearAlpha);},getClearAlpha:function(){return clearAlpha;},setClearAlpha:function(alpha){clearAlpha=alpha;setClear(clearColor,clearAlpha);},render:render};}function WebGLBindingStates(gl,extensions,attributes,capabilities){const maxVertexAttributes=gl.getParameter(34921);const extension=capabilities.isWebGL2?null:extensions.get('OES_vertex_array_object');const vaoAvailable=capabilities.isWebGL2||extension!==null;const bindingStates={};const defaultState=createBindingState(null);let currentState=defaultState;function setup(object,material,program,geometry,index){let updateBuffers=false;if(vaoAvailable){const state=getBindingState(geometry,program,material);if(currentState!==state){currentState=state;bindVertexArrayObject(currentState.object);}updateBuffers=needsUpdate(geometry,index);if(updateBuffers)saveCache(geometry,index);}else{const wireframe=material.wireframe===true;if(currentState.geometry!==geometry.id||currentState.program!==program.id||currentState.wireframe!==wireframe){currentState.geometry=geometry.id;currentState.program=program.id;currentState.wireframe=wireframe;updateBuffers=true;}}if(object.isInstancedMesh===true){updateBuffers=true;}if(index!==null){attributes.update(index,34963);}if(updateBuffers){setupVertexAttributes(object,material,program,geometry);if(index!==null){gl.bindBuffer(34963,attributes.get(index).buffer);}}}function createVertexArrayObject(){if(capabilities.isWebGL2)return gl.createVertexArray();return extension.createVertexArrayOES();}function bindVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.bindVertexArray(vao);return extension.bindVertexArrayOES(vao);}function deleteVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.deleteVertexArray(vao);return extension.deleteVertexArrayOES(vao);}function getBindingState(geometry,program,material){const wireframe=material.wireframe===true;let programMap=bindingStates[geometry.id];if(programMap===undefined){programMap={};bindingStates[geometry.id]=programMap;}let stateMap=programMap[program.id];if(stateMap===undefined){stateMap={};programMap[program.id]=stateMap;}let state=stateMap[wireframe];if(state===undefined){state=createBindingState(createVertexArrayObject());stateMap[wireframe]=state;}return state;}function createBindingState(vao){const newAttributes=[];const enabledAttributes=[];const attributeDivisors=[];for(let i=0;i<maxVertexAttributes;i++){newAttributes[i]=0;enabledAttributes[i]=0;attributeDivisors[i]=0;}return{// for backward compatibility on non-VAO support browser\ngeometry:null,program:null,wireframe:false,newAttributes:newAttributes,enabledAttributes:enabledAttributes,attributeDivisors:attributeDivisors,object:vao,attributes:{},index:null};}function needsUpdate(geometry,index){const cachedAttributes=currentState.attributes;const geometryAttributes=geometry.attributes;let attributesNum=0;for(const key in geometryAttributes){const cachedAttribute=cachedAttributes[key];const geometryAttribute=geometryAttributes[key];if(cachedAttribute===undefined)return true;if(cachedAttribute.attribute!==geometryAttribute)return true;if(cachedAttribute.data!==geometryAttribute.data)return true;attributesNum++;}if(currentState.attributesNum!==attributesNum)return true;if(currentState.index!==index)return true;return false;}function saveCache(geometry,index){const cache={};const attributes=geometry.attributes;let attributesNum=0;for(const key in attributes){const attribute=attributes[key];const data={};data.attribute=attribute;if(attribute.data){data.data=attribute.data;}cache[key]=data;attributesNum++;}currentState.attributes=cache;currentState.attributesNum=attributesNum;currentState.index=index;}function initAttributes(){const newAttributes=currentState.newAttributes;for(let i=0,il=newAttributes.length;i<il;i++){newAttributes[i]=0;}}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0);}function enableAttributeAndDivisor(attribute,meshPerAttribute){const newAttributes=currentState.newAttributes;const enabledAttributes=currentState.enabledAttributes;const attributeDivisors=currentState.attributeDivisors;newAttributes[attribute]=1;if(enabledAttributes[attribute]===0){gl.enableVertexAttribArray(attribute);enabledAttributes[attribute]=1;}if(attributeDivisors[attribute]!==meshPerAttribute){const extension=capabilities.isWebGL2?gl:extensions.get('ANGLE_instanced_arrays');extension[capabilities.isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](attribute,meshPerAttribute);attributeDivisors[attribute]=meshPerAttribute;}}function disableUnusedAttributes(){const newAttributes=currentState.newAttributes;const enabledAttributes=currentState.enabledAttributes;for(let i=0,il=enabledAttributes.length;i<il;i++){if(enabledAttributes[i]!==newAttributes[i]){gl.disableVertexAttribArray(i);enabledAttributes[i]=0;}}}function vertexAttribPointer(index,size,type,normalized,stride,offset){if(capabilities.isWebGL2===true&&(type===5124||type===5125)){gl.vertexAttribIPointer(index,size,type,stride,offset);}else{gl.vertexAttribPointer(index,size,type,normalized,stride,offset);}}function setupVertexAttributes(object,material,program,geometry){if(capabilities.isWebGL2===false&&(object.isInstancedMesh||geometry.isInstancedBufferGeometry)){if(extensions.get('ANGLE_instanced_arrays')===null)return;}initAttributes();const geometryAttributes=geometry.attributes;const programAttributes=program.getAttributes();const materialDefaultAttributeValues=material.defaultAttributeValues;for(const name in programAttributes){const programAttribute=programAttributes[name];if(programAttribute>=0){const geometryAttribute=geometryAttributes[name];if(geometryAttribute!==undefined){const normalized=geometryAttribute.normalized;const size=geometryAttribute.itemSize;const attribute=attributes.get(geometryAttribute);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;const bytesPerElement=attribute.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){const data=geometryAttribute.data;const stride=data.stride;const offset=geometryAttribute.offset;if(data&&data.isInstancedInterleavedBuffer){enableAttributeAndDivisor(programAttribute,data.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=data.meshPerAttribute*data.count;}}else{enableAttribute(programAttribute);}gl.bindBuffer(34962,buffer);vertexAttribPointer(programAttribute,size,type,normalized,stride*bytesPerElement,offset*bytesPerElement);}else{if(geometryAttribute.isInstancedBufferAttribute){enableAttributeAndDivisor(programAttribute,geometryAttribute.meshPerAttribute);if(geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=geometryAttribute.meshPerAttribute*geometryAttribute.count;}}else{enableAttribute(programAttribute);}gl.bindBuffer(34962,buffer);vertexAttribPointer(programAttribute,size,type,normalized,0,0);}}else if(name==='instanceMatrix'){const attribute=attributes.get(object.instanceMatrix);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;enableAttributeAndDivisor(programAttribute+0,1);enableAttributeAndDivisor(programAttribute+1,1);enableAttributeAndDivisor(programAttribute+2,1);enableAttributeAndDivisor(programAttribute+3,1);gl.bindBuffer(34962,buffer);gl.vertexAttribPointer(programAttribute+0,4,type,false,64,0);gl.vertexAttribPointer(programAttribute+1,4,type,false,64,16);gl.vertexAttribPointer(programAttribute+2,4,type,false,64,32);gl.vertexAttribPointer(programAttribute+3,4,type,false,64,48);}else if(name==='instanceColor'){const attribute=attributes.get(object.instanceColor);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;const buffer=attribute.buffer;const type=attribute.type;enableAttributeAndDivisor(programAttribute,1);gl.bindBuffer(34962,buffer);gl.vertexAttribPointer(programAttribute,3,type,false,12,0);}else if(materialDefaultAttributeValues!==undefined){const value=materialDefaultAttributeValues[name];if(value!==undefined){switch(value.length){case 2:gl.vertexAttrib2fv(programAttribute,value);break;case 3:gl.vertexAttrib3fv(programAttribute,value);break;case 4:gl.vertexAttrib4fv(programAttribute,value);break;default:gl.vertexAttrib1fv(programAttribute,value);}}}}}disableUnusedAttributes();}function dispose(){reset();for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometryId];}}function releaseStatesOfGeometry(geometry){if(bindingStates[geometry.id]===undefined)return;const programMap=bindingStates[geometry.id];for(const programId in programMap){const stateMap=programMap[programId];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometry.id];}function releaseStatesOfProgram(program){for(const geometryId in bindingStates){const programMap=bindingStates[geometryId];if(programMap[program.id]===undefined)continue;const stateMap=programMap[program.id];for(const wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[program.id];}}function reset(){resetDefaultState();if(currentState===defaultState)return;currentState=defaultState;bindVertexArrayObject(currentState.object);}// for backward-compatilibity\nfunction resetDefaultState(){defaultState.geometry=null;defaultState.program=null;defaultState.wireframe=false;}return{setup:setup,reset:reset,resetDefaultState:resetDefaultState,dispose:dispose,releaseStatesOfGeometry:releaseStatesOfGeometry,releaseStatesOfProgram:releaseStatesOfProgram,initAttributes:initAttributes,enableAttribute:enableAttribute,disableUnusedAttributes:disableUnusedAttributes};}function WebGLBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;function setMode(value){mode=value;}function render(start,count){gl.drawArrays(mode,start,count);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;let extension,methodName;if(isWebGL2){extension=gl;methodName='drawArraysInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawArraysInstancedANGLE';if(extension===null){console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,start,count,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.render=render;this.renderInstances=renderInstances;}function WebGLCapabilities(gl,extensions,parameters){let maxAnisotropy;function getMaxAnisotropy(){if(maxAnisotropy!==undefined)return maxAnisotropy;if(extensions.has('EXT_texture_filter_anisotropic')===true){const extension=extensions.get('EXT_texture_filter_anisotropic');maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);}else{maxAnisotropy=0;}return maxAnisotropy;}function getMaxPrecision(precision){if(precision==='highp'){if(gl.getShaderPrecisionFormat(35633,36338).precision>0&&gl.getShaderPrecisionFormat(35632,36338).precision>0){return'highp';}precision='mediump';}if(precision==='mediump'){if(gl.getShaderPrecisionFormat(35633,36337).precision>0&&gl.getShaderPrecisionFormat(35632,36337).precision>0){return'mediump';}}return'lowp';}/* eslint-disable no-undef */const isWebGL2=typeof WebGL2RenderingContext!=='undefined'&&gl instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!=='undefined'&&gl instanceof WebGL2ComputeRenderingContext;/* eslint-enable no-undef */let precision=parameters.precision!==undefined?parameters.precision:'highp';const maxPrecision=getMaxPrecision(precision);if(maxPrecision!==precision){console.warn('THREE.WebGLRenderer:',precision,'not supported, using',maxPrecision,'instead.');precision=maxPrecision;}const drawBuffers=isWebGL2||extensions.has('WEBGL_draw_buffers');const logarithmicDepthBuffer=parameters.logarithmicDepthBuffer===true;const maxTextures=gl.getParameter(34930);const maxVertexTextures=gl.getParameter(35660);const maxTextureSize=gl.getParameter(3379);const maxCubemapSize=gl.getParameter(34076);const maxAttributes=gl.getParameter(34921);const maxVertexUniforms=gl.getParameter(36347);const maxVaryings=gl.getParameter(36348);const maxFragmentUniforms=gl.getParameter(36349);const vertexTextures=maxVertexTextures>0;const floatFragmentTextures=isWebGL2||extensions.has('OES_texture_float');const floatVertexTextures=vertexTextures&&floatFragmentTextures;const maxSamples=isWebGL2?gl.getParameter(36183):0;return{isWebGL2:isWebGL2,drawBuffers:drawBuffers,getMaxAnisotropy:getMaxAnisotropy,getMaxPrecision:getMaxPrecision,precision:precision,logarithmicDepthBuffer:logarithmicDepthBuffer,maxTextures:maxTextures,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples};}function WebGLClipping(properties){const scope=this;let globalState=null,numGlobalPlanes=0,localClippingEnabled=false,renderingShadows=false;const plane=new Plane(),viewNormalMatrix=new Matrix3(),uniform={value:null,needsUpdate:false};this.uniform=uniform;this.numPlanes=0;this.numIntersection=0;this.init=function(planes,enableLocalClipping,camera){const enabled=planes.length!==0||enableLocalClipping||// enable state of previous frame - the clipping code has to\n// run another frame in order to reset the state:\nnumGlobalPlanes!==0||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled;};this.beginShadows=function(){renderingShadows=true;projectPlanes(null);};this.endShadows=function(){renderingShadows=false;resetGlobalState();};this.setState=function(material,camera,useCache){const planes=material.clippingPlanes,clipIntersection=material.clipIntersection,clipShadows=material.clipShadows;const materialProperties=properties.get(material);if(!localClippingEnabled||planes===null||planes.length===0||renderingShadows&&!clipShadows){// there's no local clipping\nif(renderingShadows){// there's no global clipping\nprojectPlanes(null);}else{resetGlobalState();}}else{const nGlobal=renderingShadows?0:numGlobalPlanes,lGlobal=nGlobal*4;let dstArray=materialProperties.clippingState||null;uniform.value=dstArray;// ensure unique state\ndstArray=projectPlanes(planes,camera,lGlobal,useCache);for(let i=0;i!==lGlobal;++i){dstArray[i]=globalState[i];}materialProperties.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=nGlobal;}};function resetGlobalState(){if(uniform.value!==globalState){uniform.value=globalState;uniform.needsUpdate=numGlobalPlanes>0;}scope.numPlanes=numGlobalPlanes;scope.numIntersection=0;}function projectPlanes(planes,camera,dstOffset,skipTransform){const nPlanes=planes!==null?planes.length:0;let dstArray=null;if(nPlanes!==0){dstArray=uniform.value;if(skipTransform!==true||dstArray===null){const flatSize=dstOffset+nPlanes*4,viewMatrix=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(viewMatrix);if(dstArray===null||dstArray.length<flatSize){dstArray=new Float32Array(flatSize);}for(let i=0,i4=dstOffset;i!==nPlanes;++i,i4+=4){plane.copy(planes[i]).applyMatrix4(viewMatrix,viewNormalMatrix);plane.normal.toArray(dstArray,i4);dstArray[i4+3]=plane.constant;}}uniform.value=dstArray;uniform.needsUpdate=true;}scope.numPlanes=nPlanes;scope.numIntersection=0;return dstArray;}}function WebGLCubeMaps(renderer){let cubemaps=new WeakMap();function mapTextureMapping(texture,mapping){if(mapping===EquirectangularReflectionMapping){texture.mapping=CubeReflectionMapping;}else if(mapping===EquirectangularRefractionMapping){texture.mapping=CubeRefractionMapping;}return texture;}function get(texture){if(texture&&texture.isTexture){const mapping=texture.mapping;if(mapping===EquirectangularReflectionMapping||mapping===EquirectangularRefractionMapping){if(cubemaps.has(texture)){const cubemap=cubemaps.get(texture).texture;return mapTextureMapping(cubemap,texture.mapping);}else{const image=texture.image;if(image&&image.height>0){const currentRenderTarget=renderer.getRenderTarget();const renderTarget=new WebGLCubeRenderTarget(image.height/2);renderTarget.fromEquirectangularTexture(renderer,texture);cubemaps.set(texture,renderTarget);renderer.setRenderTarget(currentRenderTarget);texture.addEventListener('dispose',onTextureDispose);return mapTextureMapping(renderTarget.texture,texture.mapping);}else{// image not yet ready. try the conversion next frame\nreturn null;}}}}return texture;}function onTextureDispose(event){const texture=event.target;texture.removeEventListener('dispose',onTextureDispose);const cubemap=cubemaps.get(texture);if(cubemap!==undefined){cubemaps.delete(texture);cubemap.dispose();}}function dispose(){cubemaps=new WeakMap();}return{get:get,dispose:dispose};}function WebGLExtensions(gl){const extensions={};function getExtension(name){if(extensions[name]!==undefined){return extensions[name];}let extension;switch(name){case'WEBGL_depth_texture':extension=gl.getExtension('WEBGL_depth_texture')||gl.getExtension('MOZ_WEBGL_depth_texture')||gl.getExtension('WEBKIT_WEBGL_depth_texture');break;case'EXT_texture_filter_anisotropic':extension=gl.getExtension('EXT_texture_filter_anisotropic')||gl.getExtension('MOZ_EXT_texture_filter_anisotropic')||gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');break;case'WEBGL_compressed_texture_s3tc':extension=gl.getExtension('WEBGL_compressed_texture_s3tc')||gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');break;case'WEBGL_compressed_texture_pvrtc':extension=gl.getExtension('WEBGL_compressed_texture_pvrtc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');break;default:extension=gl.getExtension(name);}extensions[name]=extension;return extension;}return{has:function(name){return getExtension(name)!==null;},init:function(capabilities){if(capabilities.isWebGL2){getExtension('EXT_color_buffer_float');}else{getExtension('WEBGL_depth_texture');getExtension('OES_texture_float');getExtension('OES_texture_half_float');getExtension('OES_texture_half_float_linear');getExtension('OES_standard_derivatives');getExtension('OES_element_index_uint');getExtension('OES_vertex_array_object');getExtension('ANGLE_instanced_arrays');}getExtension('OES_texture_float_linear');getExtension('EXT_color_buffer_half_float');},get:function(name){const extension=getExtension(name);if(extension===null){console.warn('THREE.WebGLRenderer: '+name+' extension not supported.');}return extension;}};}function WebGLGeometries(gl,attributes,info,bindingStates){const geometries={};const wireframeAttributes=new WeakMap();function onGeometryDispose(event){const geometry=event.target;if(geometry.index!==null){attributes.remove(geometry.index);}for(const name in geometry.attributes){attributes.remove(geometry.attributes[name]);}geometry.removeEventListener('dispose',onGeometryDispose);delete geometries[geometry.id];const attribute=wireframeAttributes.get(geometry);if(attribute){attributes.remove(attribute);wireframeAttributes.delete(geometry);}bindingStates.releaseStatesOfGeometry(geometry);if(geometry.isInstancedBufferGeometry===true){delete geometry._maxInstanceCount;}//\ninfo.memory.geometries--;}function get(object,geometry){if(geometries[geometry.id]===true)return geometry;geometry.addEventListener('dispose',onGeometryDispose);geometries[geometry.id]=true;info.memory.geometries++;return geometry;}function update(geometry){const geometryAttributes=geometry.attributes;// Updating index buffer in VAO now. See WebGLBindingStates.\nfor(const name in geometryAttributes){attributes.update(geometryAttributes[name],34962);}// morph targets\nconst morphAttributes=geometry.morphAttributes;for(const name in morphAttributes){const array=morphAttributes[name];for(let i=0,l=array.length;i<l;i++){attributes.update(array[i],34962);}}}function updateWireframeAttribute(geometry){const indices=[];const geometryIndex=geometry.index;const geometryPosition=geometry.attributes.position;let version=0;if(geometryIndex!==null){const array=geometryIndex.array;version=geometryIndex.version;for(let i=0,l=array.length;i<l;i+=3){const a=array[i+0];const b=array[i+1];const c=array[i+2];indices.push(a,b,b,c,c,a);}}else{const array=geometryPosition.array;version=geometryPosition.version;for(let i=0,l=array.length/3-1;i<l;i+=3){const a=i+0;const b=i+1;const c=i+2;indices.push(a,b,b,c,c,a);}}const attribute=new(arrayMax(indices)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);attribute.version=version;// Updating index buffer in VAO now. See WebGLBindingStates\n//\nconst previousAttribute=wireframeAttributes.get(geometry);if(previousAttribute)attributes.remove(previousAttribute);//\nwireframeAttributes.set(geometry,attribute);}function getWireframeAttribute(geometry){const currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){const geometryIndex=geometry.index;if(geometryIndex!==null){// if the attribute is obsolete, create a new one\nif(currentAttribute.version<geometryIndex.version){updateWireframeAttribute(geometry);}}}else{updateWireframeAttribute(geometry);}return wireframeAttributes.get(geometry);}return{get:get,update:update,getWireframeAttribute:getWireframeAttribute};}function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;function setMode(value){mode=value;}let type,bytesPerElement;function setIndex(value){type=value.type;bytesPerElement=value.bytesPerElement;}function render(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;let extension,methodName;if(isWebGL2){extension=gl;methodName='drawElementsInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawElementsInstancedANGLE';if(extension===null){console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,count,type,start*bytesPerElement,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.setIndex=setIndex;this.render=render;this.renderInstances=renderInstances;}function WebGLInfo(gl){const memory={geometries:0,textures:0};const render={frame:0,calls:0,triangles:0,points:0,lines:0};function update(count,mode,instanceCount){render.calls++;switch(mode){case 4:render.triangles+=instanceCount*(count/3);break;case 1:render.lines+=instanceCount*(count/2);break;case 3:render.lines+=instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error('THREE.WebGLInfo: Unknown draw mode:',mode);break;}}function reset(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0;}return{memory:memory,render:render,programs:null,autoReset:true,reset:reset,update:update};}function numericalSort(a,b){return a[0]-b[0];}function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1]);}function WebGLMorphtargets(gl){const influencesList={};const morphInfluences=new Float32Array(8);const workInfluences=[];for(let i=0;i<8;i++){workInfluences[i]=[i,0];}function update(object,geometry,material,program){const objectInfluences=object.morphTargetInfluences;// When object doesn't have morph target influences defined, we treat it as a 0-length array\n// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\nconst length=objectInfluences===undefined?0:objectInfluences.length;let influences=influencesList[geometry.id];if(influences===undefined){// initialise list\ninfluences=[];for(let i=0;i<length;i++){influences[i]=[i,0];}influencesList[geometry.id]=influences;}// Collect influences\nfor(let i=0;i<length;i++){const influence=influences[i];influence[0]=i;influence[1]=objectInfluences[i];}influences.sort(absNumericalSort);for(let i=0;i<8;i++){if(i<length&&influences[i][1]){workInfluences[i][0]=influences[i][0];workInfluences[i][1]=influences[i][1];}else{workInfluences[i][0]=Number.MAX_SAFE_INTEGER;workInfluences[i][1]=0;}}workInfluences.sort(numericalSort);const morphTargets=material.morphTargets&&geometry.morphAttributes.position;const morphNormals=material.morphNormals&&geometry.morphAttributes.normal;let morphInfluencesSum=0;for(let i=0;i<8;i++){const influence=workInfluences[i];const index=influence[0];const value=influence[1];if(index!==Number.MAX_SAFE_INTEGER&&value){if(morphTargets&&geometry.getAttribute('morphTarget'+i)!==morphTargets[index]){geometry.setAttribute('morphTarget'+i,morphTargets[index]);}if(morphNormals&&geometry.getAttribute('morphNormal'+i)!==morphNormals[index]){geometry.setAttribute('morphNormal'+i,morphNormals[index]);}morphInfluences[i]=value;morphInfluencesSum+=value;}else{if(morphTargets&&geometry.hasAttribute('morphTarget'+i)===true){geometry.deleteAttribute('morphTarget'+i);}if(morphNormals&&geometry.hasAttribute('morphNormal'+i)===true){geometry.deleteAttribute('morphNormal'+i);}morphInfluences[i]=0;}}// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n// This allows us to switch between absolute morphs and relative morphs without changing shader code\n// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\nconst morphBaseInfluence=geometry.morphTargetsRelative?1:1-morphInfluencesSum;program.getUniforms().setValue(gl,'morphTargetBaseInfluence',morphBaseInfluence);program.getUniforms().setValue(gl,'morphTargetInfluences',morphInfluences);}return{update:update};}function WebGLObjects(gl,geometries,attributes,info){let updateMap=new WeakMap();function update(object){const frame=info.render.frame;const geometry=object.geometry;const buffergeometry=geometries.get(object,geometry);// Update once per frame\nif(updateMap.get(buffergeometry)!==frame){geometries.update(buffergeometry);updateMap.set(buffergeometry,frame);}if(object.isInstancedMesh){if(object.hasEventListener('dispose',onInstancedMeshDispose)===false){object.addEventListener('dispose',onInstancedMeshDispose);}attributes.update(object.instanceMatrix,34962);if(object.instanceColor!==null){attributes.update(object.instanceColor,34962);}}return buffergeometry;}function dispose(){updateMap=new WeakMap();}function onInstancedMeshDispose(event){const instancedMesh=event.target;instancedMesh.removeEventListener('dispose',onInstancedMeshDispose);attributes.remove(instancedMesh.instanceMatrix);if(instancedMesh.instanceColor!==null)attributes.remove(instancedMesh.instanceColor);}return{update:update,dispose:dispose};}class DataTexture2DArray extends Texture{constructor(data=null,width=1,height=1,depth=1){super(null);this.image={data,width,height,depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}}DataTexture2DArray.prototype.isDataTexture2DArray=true;class DataTexture3D extends Texture{constructor(data=null,width=1,height=1,depth=1){// We're going to add .setXXX() methods for setting properties later.\n// Users can still set in DataTexture3D directly.\n//\n//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n// \ttexture.anisotropy = 16;\n//\n// See #14839\nsuper(null);this.image={data,width,height,depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.wrapR=ClampToEdgeWrapping;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}}DataTexture3D.prototype.isDataTexture3D=true;/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */const emptyTexture=new Texture();const emptyTexture2dArray=new DataTexture2DArray();const emptyTexture3d=new DataTexture3D();const emptyCubeTexture=new CubeTexture();// --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\nconst arrayCacheF32=[];const arrayCacheI32=[];// Float32Array caches used for uploading Matrix uniforms\nconst mat4array=new Float32Array(16);const mat3array=new Float32Array(9);const mat2array=new Float32Array(4);// Flattening for arrays of vectors and matrices\nfunction flatten(array,nBlocks,blockSize){const firstElem=array[0];if(firstElem<=0||firstElem>0)return array;// unoptimized: ! isNaN( firstElem )\n// see http://jacksondunstan.com/articles/983\nconst n=nBlocks*blockSize;let r=arrayCacheF32[n];if(r===undefined){r=new Float32Array(n);arrayCacheF32[n]=r;}if(nBlocks!==0){firstElem.toArray(r,0);for(let i=1,offset=0;i!==nBlocks;++i){offset+=blockSize;array[i].toArray(r,offset);}}return r;}function arraysEqual(a,b){if(a.length!==b.length)return false;for(let i=0,l=a.length;i<l;i++){if(a[i]!==b[i])return false;}return true;}function copyArray(a,b){for(let i=0,l=b.length;i<l;i++){a[i]=b[i];}}// Texture unit allocation\nfunction allocTexUnits(textures,n){let r=arrayCacheI32[n];if(r===undefined){r=new Int32Array(n);arrayCacheI32[n]=r;}for(let i=0;i!==n;++i){r[i]=textures.allocateTextureUnit();}return r;}// --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\nfunction setValueV1f(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1f(this.addr,v);cache[0]=v;}// Single float vector (from flat array or THREE.VectorN)\nfunction setValueV2f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y){gl.uniform2f(this.addr,v.x,v.y);cache[0]=v.x;cache[1]=v.y;}}else{if(arraysEqual(cache,v))return;gl.uniform2fv(this.addr,v);copyArray(cache,v);}}function setValueV3f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z){gl.uniform3f(this.addr,v.x,v.y,v.z);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;}}else if(v.r!==undefined){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b){gl.uniform3f(this.addr,v.r,v.g,v.b);cache[0]=v.r;cache[1]=v.g;cache[2]=v.b;}}else{if(arraysEqual(cache,v))return;gl.uniform3fv(this.addr,v);copyArray(cache,v);}}function setValueV4f(gl,v){const cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w){gl.uniform4f(this.addr,v.x,v.y,v.z,v.w);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;cache[3]=v.w;}}else{if(arraysEqual(cache,v))return;gl.uniform4fv(this.addr,v);copyArray(cache,v);}}// Single matrix (from flat array or THREE.MatrixN)\nfunction setValueM2(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix2fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat2array.set(elements);gl.uniformMatrix2fv(this.addr,false,mat2array);copyArray(cache,elements);}}function setValueM3(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix3fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat3array.set(elements);gl.uniformMatrix3fv(this.addr,false,mat3array);copyArray(cache,elements);}}function setValueM4(gl,v){const cache=this.cache;const elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix4fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat4array.set(elements);gl.uniformMatrix4fv(this.addr,false,mat4array);copyArray(cache,elements);}}// Single integer / boolean\nfunction setValueV1i(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1i(this.addr,v);cache[0]=v;}// Single integer / boolean vector (from flat array)\nfunction setValueV2i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2iv(this.addr,v);copyArray(cache,v);}function setValueV3i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3iv(this.addr,v);copyArray(cache,v);}function setValueV4i(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4iv(this.addr,v);copyArray(cache,v);}// Single unsigned integer\nfunction setValueV1ui(gl,v){const cache=this.cache;if(cache[0]===v)return;gl.uniform1ui(this.addr,v);cache[0]=v;}// Single unsigned integer vector (from flat array)\nfunction setValueV2ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2uiv(this.addr,v);copyArray(cache,v);}function setValueV3ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3uiv(this.addr,v);copyArray(cache,v);}function setValueV4ui(gl,v){const cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4uiv(this.addr,v);copyArray(cache,v);}// Single texture (2D / Cube)\nfunction setValueT1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTexture2D(v||emptyTexture,unit);}function setValueT3D1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture3D(v||emptyTexture3d,unit);}function setValueT6(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTextureCube(v||emptyCubeTexture,unit);}function setValueT2DArray1(gl,v,textures){const cache=this.cache;const unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture2DArray(v||emptyTexture2dArray,unit);}// Helper to pick the right setter for the singular case\nfunction getSingularSetter(type){switch(type){case 0x1406:return setValueV1f;// FLOAT\ncase 0x8b50:return setValueV2f;// _VEC2\ncase 0x8b51:return setValueV3f;// _VEC3\ncase 0x8b52:return setValueV4f;// _VEC4\ncase 0x8b5a:return setValueM2;// _MAT2\ncase 0x8b5b:return setValueM3;// _MAT3\ncase 0x8b5c:return setValueM4;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1i;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2i;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3i;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4i;// _VEC4\ncase 0x1405:return setValueV1ui;// UINT\ncase 0x8dc6:return setValueV2ui;// _VEC2\ncase 0x8dc7:return setValueV3ui;// _VEC3\ncase 0x8dc8:return setValueV4ui;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1;case 0x8b5f:// SAMPLER_3D\ncase 0x8dcb:// INT_SAMPLER_3D\ncase 0x8dd3:// UNSIGNED_INT_SAMPLER_3D\nreturn setValueT3D1;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6;case 0x8dc1:// SAMPLER_2D_ARRAY\ncase 0x8dcf:// INT_SAMPLER_2D_ARRAY\ncase 0x8dd7:// UNSIGNED_INT_SAMPLER_2D_ARRAY\ncase 0x8dc4:// SAMPLER_2D_ARRAY_SHADOW\nreturn setValueT2DArray1;}}// Array of scalars\nfunction setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v);}// Array of vectors (from flat array or array of THREE.VectorN)\nfunction setValueV2fArray(gl,v){const data=flatten(v,this.size,2);gl.uniform2fv(this.addr,data);}function setValueV3fArray(gl,v){const data=flatten(v,this.size,3);gl.uniform3fv(this.addr,data);}function setValueV4fArray(gl,v){const data=flatten(v,this.size,4);gl.uniform4fv(this.addr,data);}// Array of matrices (from flat array or array of THREE.MatrixN)\nfunction setValueM2Array(gl,v){const data=flatten(v,this.size,4);gl.uniformMatrix2fv(this.addr,false,data);}function setValueM3Array(gl,v){const data=flatten(v,this.size,9);gl.uniformMatrix3fv(this.addr,false,data);}function setValueM4Array(gl,v){const data=flatten(v,this.size,16);gl.uniformMatrix4fv(this.addr,false,data);}// Array of integer / boolean\nfunction setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v);}// Array of integer / boolean vectors (from flat array)\nfunction setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v);}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v);}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v);}// Array of unsigned integer\nfunction setValueV1uiArray(gl,v){gl.uniform1uiv(this.addr,v);}// Array of unsigned integer vectors (from flat array)\nfunction setValueV2uiArray(gl,v){gl.uniform2uiv(this.addr,v);}function setValueV3uiArray(gl,v){gl.uniform3uiv(this.addr,v);}function setValueV4uiArray(gl,v){gl.uniform4uiv(this.addr,v);}// Array of textures (2D / Cube)\nfunction setValueT1Array(gl,v,textures){const n=v.length;const units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(let i=0;i!==n;++i){textures.safeSetTexture2D(v[i]||emptyTexture,units[i]);}}function setValueT6Array(gl,v,textures){const n=v.length;const units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(let i=0;i!==n;++i){textures.safeSetTextureCube(v[i]||emptyCubeTexture,units[i]);}}// Helper to pick the right setter for a pure (bottom-level) array\nfunction getPureArraySetter(type){switch(type){case 0x1406:return setValueV1fArray;// FLOAT\ncase 0x8b50:return setValueV2fArray;// _VEC2\ncase 0x8b51:return setValueV3fArray;// _VEC3\ncase 0x8b52:return setValueV4fArray;// _VEC4\ncase 0x8b5a:return setValueM2Array;// _MAT2\ncase 0x8b5b:return setValueM3Array;// _MAT3\ncase 0x8b5c:return setValueM4Array;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1iArray;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2iArray;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3iArray;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4iArray;// _VEC4\ncase 0x1405:return setValueV1uiArray;// UINT\ncase 0x8dc6:return setValueV2uiArray;// _VEC2\ncase 0x8dc7:return setValueV3uiArray;// _VEC3\ncase 0x8dc8:return setValueV4uiArray;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1Array;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6Array;}}// --- Uniform Classes ---\nfunction SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}PureArrayUniform.prototype.updateCache=function(data){const cache=this.cache;if(data instanceof Float32Array&&cache.length!==data.length){this.cache=new Float32Array(data.length);}copyArray(cache,data);};function StructuredUniform(id){this.id=id;this.seq=[];this.map={};}StructuredUniform.prototype.setValue=function(gl,value,textures){const seq=this.seq;for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];u.setValue(gl,value[u.id],textures);}};// --- Top-level ---\n// Parser - builds up the property tree from the path strings\nconst RePathPart=/(\\w+)(\\])?(\\[|\\.)?/g;// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\nfunction addUniform(container,uniformObject){container.seq.push(uniformObject);container.map[uniformObject.id]=uniformObject;}function parseUniform(activeInfo,addr,container){const path=activeInfo.name,pathLength=path.length;// reset RegExp object, because of the early exit of a previous run\nRePathPart.lastIndex=0;while(true){const match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex;let id=match[1];const idIsIndex=match[2]===']',subscript=match[3];if(idIsIndex)id=id|0;// convert to integer\nif(subscript===undefined||subscript==='['&&matchEnd+2===pathLength){// bare name or \"pure\" bottom-level array \"[0]\" suffix\naddUniform(container,subscript===undefined?new SingleUniform(id,activeInfo,addr):new PureArrayUniform(id,activeInfo,addr));break;}else{// step into inner node / create it in case it doesn't exist\nconst map=container.map;let next=map[id];if(next===undefined){next=new StructuredUniform(id);addUniform(container,next);}container=next;}}}// Root Container\nfunction WebGLUniforms(gl,program){this.seq=[];this.map={};const n=gl.getProgramParameter(program,35718);for(let i=0;i<n;++i){const info=gl.getActiveUniform(program,i),addr=gl.getUniformLocation(program,info.name);parseUniform(info,addr,this);}}WebGLUniforms.prototype.setValue=function(gl,name,value,textures){const u=this.map[name];if(u!==undefined)u.setValue(gl,value,textures);};WebGLUniforms.prototype.setOptional=function(gl,object,name){const v=object[name];if(v!==undefined)this.setValue(gl,name,v);};// Static interface\nWebGLUniforms.upload=function(gl,seq,values,textures){for(let i=0,n=seq.length;i!==n;++i){const u=seq[i],v=values[u.id];if(v.needsUpdate!==false){// note: always updating when .needsUpdate is undefined\nu.setValue(gl,v.value,textures);}}};WebGLUniforms.seqWithValue=function(seq,values){const r=[];for(let i=0,n=seq.length;i!==n;++i){const u=seq[i];if(u.id in values)r.push(u);}return r;};function WebGLShader(gl,type,string){const shader=gl.createShader(type);gl.shaderSource(shader,string);gl.compileShader(shader);return shader;}let programIdCount=0;function addLineNumbers(string){const lines=string.split('\\n');for(let i=0;i<lines.length;i++){lines[i]=i+1+': '+lines[i];}return lines.join('\\n');}function getEncodingComponents(encoding){switch(encoding){case LinearEncoding:return['Linear','( value )'];case sRGBEncoding:return['sRGB','( value )'];case RGBEEncoding:return['RGBE','( value )'];case RGBM7Encoding:return['RGBM','( value, 7.0 )'];case RGBM16Encoding:return['RGBM','( value, 16.0 )'];case RGBDEncoding:return['RGBD','( value, 256.0 )'];case GammaEncoding:return['Gamma','( value, float( GAMMA_FACTOR ) )'];case LogLuvEncoding:return['LogLuv','( value )'];default:console.warn('THREE.WebGLProgram: Unsupported encoding:',encoding);return['Linear','( value )'];}}function getShaderErrors(gl,shader,type){const status=gl.getShaderParameter(shader,35713);const log=gl.getShaderInfoLog(shader).trim();if(status&&log==='')return'';// --enable-privileged-webgl-extension\n// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\nconst source=gl.getShaderSource(shader);return'THREE.WebGLShader: gl.getShaderInfoLog() '+type+'\\n'+log+addLineNumbers(source);}function getTexelDecodingFunction(functionName,encoding){const components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return '+components[0]+'ToLinear'+components[1]+'; }';}function getTexelEncodingFunction(functionName,encoding){const components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return LinearTo'+components[0]+components[1]+'; }';}function getToneMappingFunction(functionName,toneMapping){let toneMappingName;switch(toneMapping){case LinearToneMapping:toneMappingName='Linear';break;case ReinhardToneMapping:toneMappingName='Reinhard';break;case CineonToneMapping:toneMappingName='OptimizedCineon';break;case ACESFilmicToneMapping:toneMappingName='ACESFilmic';break;case CustomToneMapping:toneMappingName='Custom';break;default:console.warn('THREE.WebGLProgram: Unsupported toneMapping:',toneMapping);toneMappingName='Linear';}return'vec3 '+functionName+'( vec3 color ) { return '+toneMappingName+'ToneMapping( color ); }';}function generateExtensions(parameters){const chunks=[parameters.extensionDerivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.tangentSpaceNormalMap||parameters.clearcoatNormalMap||parameters.flatShading||parameters.shaderID==='physical'?'#extension GL_OES_standard_derivatives : enable':'',(parameters.extensionFragDepth||parameters.logarithmicDepthBuffer)&&parameters.rendererExtensionFragDepth?'#extension GL_EXT_frag_depth : enable':'',parameters.extensionDrawBuffers&&parameters.rendererExtensionDrawBuffers?'#extension GL_EXT_draw_buffers : require':'',(parameters.extensionShaderTextureLOD||parameters.envMap||parameters.transmission>0.0)&&parameters.rendererExtensionShaderTextureLod?'#extension GL_EXT_shader_texture_lod : enable':''];return chunks.filter(filterEmptyLine).join('\\n');}function generateDefines(defines){const chunks=[];for(const name in defines){const value=defines[name];if(value===false)continue;chunks.push('#define '+name+' '+value);}return chunks.join('\\n');}function fetchAttributeLocations(gl,program){const attributes={};const n=gl.getProgramParameter(program,35721);for(let i=0;i<n;i++){const info=gl.getActiveAttrib(program,i);const name=info.name;// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\nattributes[name]=gl.getAttribLocation(program,name);}return attributes;}function filterEmptyLine(string){return string!=='';}function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows);}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection);}// Resolve Includes\nconst includePattern=/^[ \\t]*#include +<([\\w\\d./]+)>/gm;function resolveIncludes(string){return string.replace(includePattern,includeReplacer);}function includeReplacer(match,include){const string=ShaderChunk[include];if(string===undefined){throw new Error('Can not resolve #include <'+include+'>');}return resolveIncludes(string);}// Unroll Loops\nconst deprecatedUnrollLoopPattern=/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;const unrollLoopPattern=/#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;function unrollLoops(string){return string.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer);}function deprecatedLoopReplacer(match,start,end,snippet){console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');return loopReplacer(match,start,end,snippet);}function loopReplacer(match,start,end,snippet){let string='';for(let i=parseInt(start);i<parseInt(end);i++){string+=snippet.replace(/\\[\\s*i\\s*\\]/g,'[ '+i+' ]').replace(/UNROLLED_LOOP_INDEX/g,i);}return string;}//\nfunction generatePrecision(parameters){let precisionstring='precision '+parameters.precision+' float;\\nprecision '+parameters.precision+' int;';if(parameters.precision==='highp'){precisionstring+='\\n#define HIGH_PRECISION';}else if(parameters.precision==='mediump'){precisionstring+='\\n#define MEDIUM_PRECISION';}else if(parameters.precision==='lowp'){precisionstring+='\\n#define LOW_PRECISION';}return precisionstring;}function generateShadowMapTypeDefine(parameters){let shadowMapTypeDefine='SHADOWMAP_TYPE_BASIC';if(parameters.shadowMapType===PCFShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF';}else if(parameters.shadowMapType===PCFSoftShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF_SOFT';}else if(parameters.shadowMapType===VSMShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_VSM';}return shadowMapTypeDefine;}function generateEnvMapTypeDefine(parameters){let envMapTypeDefine='ENVMAP_TYPE_CUBE';if(parameters.envMap){switch(parameters.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE';break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE_UV';break;}}return envMapTypeDefine;}function generateEnvMapModeDefine(parameters){let envMapModeDefine='ENVMAP_MODE_REFLECTION';if(parameters.envMap){switch(parameters.envMapMode){case CubeRefractionMapping:case CubeUVRefractionMapping:envMapModeDefine='ENVMAP_MODE_REFRACTION';break;}}return envMapModeDefine;}function generateEnvMapBlendingDefine(parameters){let envMapBlendingDefine='ENVMAP_BLENDING_NONE';if(parameters.envMap){switch(parameters.combine){case MultiplyOperation:envMapBlendingDefine='ENVMAP_BLENDING_MULTIPLY';break;case MixOperation:envMapBlendingDefine='ENVMAP_BLENDING_MIX';break;case AddOperation:envMapBlendingDefine='ENVMAP_BLENDING_ADD';break;}}return envMapBlendingDefine;}function WebGLProgram(renderer,cacheKey,parameters,bindingStates){const gl=renderer.getContext();const defines=parameters.defines;let vertexShader=parameters.vertexShader;let fragmentShader=parameters.fragmentShader;const shadowMapTypeDefine=generateShadowMapTypeDefine(parameters);const envMapTypeDefine=generateEnvMapTypeDefine(parameters);const envMapModeDefine=generateEnvMapModeDefine(parameters);const envMapBlendingDefine=generateEnvMapBlendingDefine(parameters);const gammaFactorDefine=renderer.gammaFactor>0?renderer.gammaFactor:1.0;const customExtensions=parameters.isWebGL2?'':generateExtensions(parameters);const customDefines=generateDefines(defines);const program=gl.createProgram();let prefixVertex,prefixFragment;let versionString=parameters.glslVersion?'#version '+parameters.glslVersion+'\\n':'';if(parameters.isRawShaderMaterial){prefixVertex=[customDefines].filter(filterEmptyLine).join('\\n');if(prefixVertex.length>0){prefixVertex+='\\n';}prefixFragment=[customExtensions,customDefines].filter(filterEmptyLine).join('\\n');if(prefixFragment.length>0){prefixFragment+='\\n';}}else{prefixVertex=[generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.instancing?'#define USE_INSTANCING':'',parameters.instancingColor?'#define USE_INSTANCING_COLOR':'',parameters.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+gammaFactorDefine,'#define MAX_BONES '+parameters.maxBones,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.displacementMap&&parameters.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.transmission?'#define USE_TRANSMISSION':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.thicknessMap?'#define USE_THICKNESSMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.vertexAlphas?'#define USE_COLOR_ALPHA':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.skinning?'#define USE_SKINNING':'',parameters.useVertexTexture?'#define BONE_TEXTURE':'',parameters.morphTargets?'#define USE_MORPHTARGETS':'',parameters.morphNormals&&parameters.flatShading===false?'#define USE_MORPHNORMALS':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.sizeAttenuation?'#define USE_SIZEATTENUATION':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;','#ifdef USE_INSTANCING','\tattribute mat4 instanceMatrix;','#endif','#ifdef USE_INSTANCING_COLOR','\tattribute vec3 instanceColor;','#endif','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_TANGENT','\tattribute vec4 tangent;','#endif','#if defined( USE_COLOR_ALPHA )','\tattribute vec4 color;','#elif defined( USE_COLOR )','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\\n'].filter(filterEmptyLine).join('\\n');prefixFragment=[customExtensions,generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.alphaTest?'#define ALPHATEST '+parameters.alphaTest+(parameters.alphaTest%1?'':'.0'):'',// add '.0' if integer\n'#define GAMMA_FACTOR '+gammaFactorDefine,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.matcap?'#define USE_MATCAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapTypeDefine:'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.envMap?'#define '+envMapBlendingDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.sheen?'#define USE_SHEEN':'',parameters.transmission?'#define USE_TRANSMISSION':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.thicknessMap?'#define USE_THICKNESSMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors||parameters.instancingColor?'#define USE_COLOR':'',parameters.vertexAlphas?'#define USE_COLOR_ALPHA':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.gradientMap?'#define USE_GRADIENTMAP':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',parameters.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;',parameters.toneMapping!==NoToneMapping?'#define TONE_MAPPING':'',parameters.toneMapping!==NoToneMapping?ShaderChunk['tonemapping_pars_fragment']:'',// this code is required here because it is used by the toneMapping() function defined below\nparameters.toneMapping!==NoToneMapping?getToneMappingFunction('toneMapping',parameters.toneMapping):'',parameters.dithering?'#define DITHERING':'',ShaderChunk['encodings_pars_fragment'],// this code is required here because it is used by the various encoding/decoding function defined below\nparameters.map?getTexelDecodingFunction('mapTexelToLinear',parameters.mapEncoding):'',parameters.matcap?getTexelDecodingFunction('matcapTexelToLinear',parameters.matcapEncoding):'',parameters.envMap?getTexelDecodingFunction('envMapTexelToLinear',parameters.envMapEncoding):'',parameters.emissiveMap?getTexelDecodingFunction('emissiveMapTexelToLinear',parameters.emissiveMapEncoding):'',parameters.lightMap?getTexelDecodingFunction('lightMapTexelToLinear',parameters.lightMapEncoding):'',getTexelEncodingFunction('linearToOutputTexel',parameters.outputEncoding),parameters.depthPacking?'#define DEPTH_PACKING '+parameters.depthPacking:'','\\n'].filter(filterEmptyLine).join('\\n');}vertexShader=resolveIncludes(vertexShader);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=resolveIncludes(fragmentShader);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=unrollLoops(vertexShader);fragmentShader=unrollLoops(fragmentShader);if(parameters.isWebGL2&&parameters.isRawShaderMaterial!==true){// GLSL 3.0 conversion for built-in materials and ShaderMaterial\nversionString='#version 300 es\\n';prefixVertex=['#define attribute in','#define varying out','#define texture2D texture'].join('\\n')+'\\n'+prefixVertex;prefixFragment=['#define varying in',parameters.glslVersion===GLSL3?'':'out highp vec4 pc_fragColor;',parameters.glslVersion===GLSL3?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\\n')+'\\n'+prefixFragment;}const vertexGlsl=versionString+prefixVertex+vertexShader;const fragmentGlsl=versionString+prefixFragment+fragmentShader;// console.log( '*VERTEX*', vertexGlsl );\n// console.log( '*FRAGMENT*', fragmentGlsl );\nconst glVertexShader=WebGLShader(gl,35633,vertexGlsl);const glFragmentShader=WebGLShader(gl,35632,fragmentGlsl);gl.attachShader(program,glVertexShader);gl.attachShader(program,glFragmentShader);// Force a particular attribute to index 0.\nif(parameters.index0AttributeName!==undefined){gl.bindAttribLocation(program,0,parameters.index0AttributeName);}else if(parameters.morphTargets===true){// programs with morphTargets displace position out of attribute 0\ngl.bindAttribLocation(program,0,'position');}gl.linkProgram(program);// check for link errors\nif(renderer.debug.checkShaderErrors){const programLog=gl.getProgramInfoLog(program).trim();const vertexLog=gl.getShaderInfoLog(glVertexShader).trim();const fragmentLog=gl.getShaderInfoLog(glFragmentShader).trim();let runnable=true;let haveDiagnostics=true;if(gl.getProgramParameter(program,35714)===false){runnable=false;const vertexErrors=getShaderErrors(gl,glVertexShader,'vertex');const fragmentErrors=getShaderErrors(gl,glFragmentShader,'fragment');console.error('THREE.WebGLProgram: shader error: ',gl.getError(),'35715',gl.getProgramParameter(program,35715),'gl.getProgramInfoLog',programLog,vertexErrors,fragmentErrors);}else if(programLog!==''){console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',programLog);}else if(vertexLog===''||fragmentLog===''){haveDiagnostics=false;}if(haveDiagnostics){this.diagnostics={runnable:runnable,programLog:programLog,vertexShader:{log:vertexLog,prefix:prefixVertex},fragmentShader:{log:fragmentLog,prefix:prefixFragment}};}}// Clean up\n// Crashes in iOS9 and iOS10. #18402\n// gl.detachShader( program, glVertexShader );\n// gl.detachShader( program, glFragmentShader );\ngl.deleteShader(glVertexShader);gl.deleteShader(glFragmentShader);// set up caching for uniform locations\nlet cachedUniforms;this.getUniforms=function(){if(cachedUniforms===undefined){cachedUniforms=new WebGLUniforms(gl,program);}return cachedUniforms;};// set up caching for attribute locations\nlet cachedAttributes;this.getAttributes=function(){if(cachedAttributes===undefined){cachedAttributes=fetchAttributeLocations(gl,program);}return cachedAttributes;};// free resource\nthis.destroy=function(){bindingStates.releaseStatesOfProgram(this);gl.deleteProgram(program);this.program=undefined;};//\nthis.name=parameters.shaderName;this.id=programIdCount++;this.cacheKey=cacheKey;this.usedTimes=1;this.program=program;this.vertexShader=glVertexShader;this.fragmentShader=glFragmentShader;return this;}function WebGLPrograms(renderer,cubemaps,extensions,capabilities,bindingStates,clipping){const programs=[];const isWebGL2=capabilities.isWebGL2;const logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer;const floatVertexTextures=capabilities.floatVertexTextures;const maxVertexUniforms=capabilities.maxVertexUniforms;const vertexTextures=capabilities.vertexTextures;let precision=capabilities.precision;const shaderIDs={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'toon',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'};const parameterNames=['precision','isWebGL2','supportsVertexTextures','outputEncoding','instancing','instancingColor','map','mapEncoding','matcap','matcapEncoding','envMap','envMapMode','envMapEncoding','envMapCubeUV','lightMap','lightMapEncoding','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','objectSpaceNormalMap','tangentSpaceNormalMap','clearcoatMap','clearcoatRoughnessMap','clearcoatNormalMap','displacementMap','specularMap','roughnessMap','metalnessMap','gradientMap','alphaMap','combine','vertexColors','vertexAlphas','vertexTangents','vertexUvs','uvsVertexOnly','fog','useFog','fogExp2','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','numDirLightShadows','numPointLightShadows','numSpotLightShadows','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','alphaTest','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking','dithering','sheen','transmission','transmissionMap','thicknessMap'];function getMaxBones(object){const skeleton=object.skeleton;const bones=skeleton.bones;if(floatVertexTextures){return 1024;}else{// default for when object is not specified\n// ( for example when prebuilding shader to be used with multiple objects )\n//\n//  - leave some extra space for other uniforms\n//  - limit here is ANGLE's 254 max uniform vectors\n//    (up to 54 should be safe)\nconst nVertexUniforms=maxVertexUniforms;const nVertexMatrices=Math.floor((nVertexUniforms-20)/4);const maxBones=Math.min(nVertexMatrices,bones.length);if(maxBones<bones.length){console.warn('THREE.WebGLRenderer: Skeleton has '+bones.length+' bones. This GPU supports '+maxBones+'.');return 0;}return maxBones;}}function getTextureEncodingFromMap(map){let encoding;if(map&&map.isTexture){encoding=map.encoding;}else if(map&&map.isWebGLRenderTarget){console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');encoding=map.texture.encoding;}else{encoding=LinearEncoding;}return encoding;}function getParameters(material,lights,shadows,scene,object){const fog=scene.fog;const environment=material.isMeshStandardMaterial?scene.environment:null;const envMap=cubemaps.get(material.envMap||environment);const shaderID=shaderIDs[material.type];// heuristics to create shader parameters according to lights in the scene\n// (not to blow over maxLights budget)\nconst maxBones=object.isSkinnedMesh?getMaxBones(object):0;if(material.precision!==null){precision=capabilities.getMaxPrecision(material.precision);if(precision!==material.precision){console.warn('THREE.WebGLProgram.getParameters:',material.precision,'not supported, using',precision,'instead.');}}let vertexShader,fragmentShader;if(shaderID){const shader=ShaderLib[shaderID];vertexShader=shader.vertexShader;fragmentShader=shader.fragmentShader;}else{vertexShader=material.vertexShader;fragmentShader=material.fragmentShader;}const currentRenderTarget=renderer.getRenderTarget();const parameters={isWebGL2:isWebGL2,shaderID:shaderID,shaderName:material.type,vertexShader:vertexShader,fragmentShader:fragmentShader,defines:material.defines,isRawShaderMaterial:material.isRawShaderMaterial===true,glslVersion:material.glslVersion,precision:precision,instancing:object.isInstancedMesh===true,instancingColor:object.isInstancedMesh===true&&object.instanceColor!==null,supportsVertexTextures:vertexTextures,outputEncoding:currentRenderTarget!==null?getTextureEncodingFromMap(currentRenderTarget.texture):renderer.outputEncoding,map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap),envMap:!!envMap,envMapMode:envMap&&envMap.mapping,envMapEncoding:getTextureEncodingFromMap(envMap),envMapCubeUV:!!envMap&&(envMap.mapping===CubeUVReflectionMapping||envMap.mapping===CubeUVRefractionMapping),lightMap:!!material.lightMap,lightMapEncoding:getTextureEncodingFromMap(material.lightMap),aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:material.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:material.normalMapType===TangentSpaceNormalMap,clearcoatMap:!!material.clearcoatMap,clearcoatRoughnessMap:!!material.clearcoatRoughnessMap,clearcoatNormalMap:!!material.clearcoatNormalMap,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,alphaMap:!!material.alphaMap,gradientMap:!!material.gradientMap,sheen:!!material.sheen,transmission:!!material.transmission,transmissionMap:!!material.transmissionMap,thicknessMap:!!material.thicknessMap,combine:material.combine,vertexTangents:material.normalMap&&material.vertexTangents,vertexColors:material.vertexColors,vertexAlphas:material.vertexColors===true&&object.geometry&&object.geometry.attributes.color&&object.geometry.attributes.color.itemSize===4,vertexUvs:!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatMap||!!material.clearcoatRoughnessMap||!!material.clearcoatNormalMap||!!material.displacementMap||!!material.transmission||!!material.transmissionMap||!!material.thicknessMap,uvsVertexOnly:!(!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatNormalMap||!!material.transmission||!!material.transmissionMap||!!material.thicknessMap)&&!!material.displacementMap,fog:!!fog,useFog:material.fog,fogExp2:fog&&fog.isFogExp2,flatShading:!!material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:logarithmicDepthBuffer,skinning:object.isSkinnedMesh===true&&maxBones>0,maxBones:maxBones,useVertexTexture:floatVertexTextures,morphTargets:material.morphTargets,morphNormals:material.morphNormals,numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numClippingPlanes:clipping.numPlanes,numClipIntersection:clipping.numIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&shadows.length>0,shadowMapType:renderer.shadowMap.type,toneMapping:material.toneMapped?renderer.toneMapping:NoToneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,alphaTest:material.alphaTest,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,depthPacking:material.depthPacking!==undefined?material.depthPacking:false,index0AttributeName:material.index0AttributeName,extensionDerivatives:material.extensions&&material.extensions.derivatives,extensionFragDepth:material.extensions&&material.extensions.fragDepth,extensionDrawBuffers:material.extensions&&material.extensions.drawBuffers,extensionShaderTextureLOD:material.extensions&&material.extensions.shaderTextureLOD,rendererExtensionFragDepth:isWebGL2||extensions.has('EXT_frag_depth'),rendererExtensionDrawBuffers:isWebGL2||extensions.has('WEBGL_draw_buffers'),rendererExtensionShaderTextureLod:isWebGL2||extensions.has('EXT_shader_texture_lod'),customProgramCacheKey:material.customProgramCacheKey()};return parameters;}function getProgramCacheKey(parameters){const array=[];if(parameters.shaderID){array.push(parameters.shaderID);}else{array.push(parameters.fragmentShader);array.push(parameters.vertexShader);}if(parameters.defines!==undefined){for(const name in parameters.defines){array.push(name);array.push(parameters.defines[name]);}}if(parameters.isRawShaderMaterial===false){for(let i=0;i<parameterNames.length;i++){array.push(parameters[parameterNames[i]]);}array.push(renderer.outputEncoding);array.push(renderer.gammaFactor);}array.push(parameters.customProgramCacheKey);return array.join();}function getUniforms(material){const shaderID=shaderIDs[material.type];let uniforms;if(shaderID){const shader=ShaderLib[shaderID];uniforms=UniformsUtils.clone(shader.uniforms);}else{uniforms=material.uniforms;}return uniforms;}function acquireProgram(parameters,cacheKey){let program;// Check if code has been already compiled\nfor(let p=0,pl=programs.length;p<pl;p++){const preexistingProgram=programs[p];if(preexistingProgram.cacheKey===cacheKey){program=preexistingProgram;++program.usedTimes;break;}}if(program===undefined){program=new WebGLProgram(renderer,cacheKey,parameters,bindingStates);programs.push(program);}return program;}function releaseProgram(program){if(--program.usedTimes===0){// Remove from unordered set\nconst i=programs.indexOf(program);programs[i]=programs[programs.length-1];programs.pop();// Free WebGL resources\nprogram.destroy();}}return{getParameters:getParameters,getProgramCacheKey:getProgramCacheKey,getUniforms:getUniforms,acquireProgram:acquireProgram,releaseProgram:releaseProgram,// Exposed for resource monitoring & error feedback via renderer.info:\nprograms:programs};}function WebGLProperties(){let properties=new WeakMap();function get(object){let map=properties.get(object);if(map===undefined){map={};properties.set(object,map);}return map;}function remove(object){properties.delete(object);}function update(object,key,value){properties.get(object)[key]=value;}function dispose(){properties=new WeakMap();}return{get:get,remove:remove,update:update,dispose:dispose};}function painterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.program!==b.program){return a.program.id-b.program.id;}else if(a.material.id!==b.material.id){return a.material.id-b.material.id;}else if(a.z!==b.z){return a.z-b.z;}else{return a.id-b.id;}}function reversePainterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.z!==b.z){return b.z-a.z;}else{return a.id-b.id;}}function WebGLRenderList(properties){const renderItems=[];let renderItemsIndex=0;const opaque=[];const transmissive=[];const transparent=[];const defaultProgram={id:-1};function init(){renderItemsIndex=0;opaque.length=0;transmissive.length=0;transparent.length=0;}function getNextRenderItem(object,geometry,material,groupOrder,z,group){let renderItem=renderItems[renderItemsIndex];const materialProperties=properties.get(material);if(renderItem===undefined){renderItem={id:object.id,object:object,geometry:geometry,material:material,program:materialProperties.program||defaultProgram,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group};renderItems[renderItemsIndex]=renderItem;}else{renderItem.id=object.id;renderItem.object=object;renderItem.geometry=geometry;renderItem.material=material;renderItem.program=materialProperties.program||defaultProgram;renderItem.groupOrder=groupOrder;renderItem.renderOrder=object.renderOrder;renderItem.z=z;renderItem.group=group;}renderItemsIndex++;return renderItem;}function push(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);if(material.transmission>0.0){transmissive.push(renderItem);}else if(material.transparent===true){transparent.push(renderItem);}else{opaque.push(renderItem);}}function unshift(object,geometry,material,groupOrder,z,group){const renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);if(material.transmission>0.0){transmissive.unshift(renderItem);}else if(material.transparent===true){transparent.unshift(renderItem);}else{opaque.unshift(renderItem);}}function sort(customOpaqueSort,customTransparentSort){if(opaque.length>1)opaque.sort(customOpaqueSort||painterSortStable);if(transmissive.length>1)transmissive.sort(customTransparentSort||reversePainterSortStable);if(transparent.length>1)transparent.sort(customTransparentSort||reversePainterSortStable);}function finish(){// Clear references from inactive renderItems in the list\nfor(let i=renderItemsIndex,il=renderItems.length;i<il;i++){const renderItem=renderItems[i];if(renderItem.id===null)break;renderItem.id=null;renderItem.object=null;renderItem.geometry=null;renderItem.material=null;renderItem.program=null;renderItem.group=null;}}return{opaque:opaque,transmissive:transmissive,transparent:transparent,init:init,push:push,unshift:unshift,finish:finish,sort:sort};}function WebGLRenderLists(properties){let lists=new WeakMap();function get(scene,renderCallDepth){let list;if(lists.has(scene)===false){list=new WebGLRenderList(properties);lists.set(scene,[list]);}else{if(renderCallDepth>=lists.get(scene).length){list=new WebGLRenderList(properties);lists.get(scene).push(list);}else{list=lists.get(scene)[renderCallDepth];}}return list;}function dispose(){lists=new WeakMap();}return{get:get,dispose:dispose};}function UniformsCache(){const lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}let uniforms;switch(light.type){case'DirectionalLight':uniforms={direction:new Vector3(),color:new Color()};break;case'SpotLight':uniforms={position:new Vector3(),direction:new Vector3(),color:new Color(),distance:0,coneCos:0,penumbraCos:0,decay:0};break;case'PointLight':uniforms={position:new Vector3(),color:new Color(),distance:0,decay:0};break;case'HemisphereLight':uniforms={direction:new Vector3(),skyColor:new Color(),groundColor:new Color()};break;case'RectAreaLight':uniforms={color:new Color(),position:new Vector3(),halfWidth:new Vector3(),halfHeight:new Vector3()};break;}lights[light.id]=uniforms;return uniforms;}};}function ShadowUniformsCache(){const lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}let uniforms;switch(light.type){case'DirectionalLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'SpotLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'PointLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2(),shadowCameraNear:1,shadowCameraFar:1000};break;// TODO (abelnation): set RectAreaLight shadow uniforms\n}lights[light.id]=uniforms;return uniforms;}};}let nextVersion=0;function shadowCastingLightsFirst(lightA,lightB){return(lightB.castShadow?1:0)-(lightA.castShadow?1:0);}function WebGLLights(extensions,capabilities){const cache=new UniformsCache();const shadowCache=ShadowUniformsCache();const state={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let i=0;i<9;i++)state.probe.push(new Vector3());const vector3=new Vector3();const matrix4=new Matrix4();const matrix42=new Matrix4();function setup(lights){let r=0,g=0,b=0;for(let i=0;i<9;i++)state.probe[i].set(0,0,0);let directionalLength=0;let pointLength=0;let spotLength=0;let rectAreaLength=0;let hemiLength=0;let numDirectionalShadows=0;let numPointShadows=0;let numSpotShadows=0;lights.sort(shadowCastingLightsFirst);for(let i=0,l=lights.length;i<l;i++){const light=lights[i];const color=light.color;const intensity=light.intensity;const distance=light.distance;const shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight){r+=color.r*intensity;g+=color.g*intensity;b+=color.b*intensity;}else if(light.isLightProbe){for(let j=0;j<9;j++){state.probe[j].addScaledVector(light.sh.coefficients[j],intensity);}}else if(light.isDirectionalLight){const uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.directionalShadow[directionalLength]=shadowUniforms;state.directionalShadowMap[directionalLength]=shadowMap;state.directionalShadowMatrix[directionalLength]=light.shadow.matrix;numDirectionalShadows++;}state.directional[directionalLength]=uniforms;directionalLength++;}else if(light.isSpotLight){const uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.color.copy(color).multiplyScalar(intensity);uniforms.distance=distance;uniforms.coneCos=Math.cos(light.angle);uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra));uniforms.decay=light.decay;if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.spotShadow[spotLength]=shadowUniforms;state.spotShadowMap[spotLength]=shadowMap;state.spotShadowMatrix[spotLength]=light.shadow.matrix;numSpotShadows++;}state.spot[spotLength]=uniforms;spotLength++;}else if(light.isRectAreaLight){const uniforms=cache.get(light);// (a) intensity is the total visible light emitted\n//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n// (b) intensity is the brightness of the light\nuniforms.color.copy(color).multiplyScalar(intensity);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);state.rectArea[rectAreaLength]=uniforms;rectAreaLength++;}else if(light.isPointLight){const uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.distance=light.distance;uniforms.decay=light.decay;if(light.castShadow){const shadow=light.shadow;const shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;shadowUniforms.shadowCameraNear=shadow.camera.near;shadowUniforms.shadowCameraFar=shadow.camera.far;state.pointShadow[pointLength]=shadowUniforms;state.pointShadowMap[pointLength]=shadowMap;state.pointShadowMatrix[pointLength]=light.shadow.matrix;numPointShadows++;}state.point[pointLength]=uniforms;pointLength++;}else if(light.isHemisphereLight){const uniforms=cache.get(light);uniforms.skyColor.copy(light.color).multiplyScalar(intensity);uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);state.hemi[hemiLength]=uniforms;hemiLength++;}}if(rectAreaLength>0){if(capabilities.isWebGL2){// WebGL 2\nstate.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else{// WebGL 1\nif(extensions.has('OES_texture_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else if(extensions.has('OES_texture_half_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_HALF_1;state.rectAreaLTC2=UniformsLib.LTC_HALF_2;}else{console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');}}}state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;const hash=state.hash;if(hash.directionalLength!==directionalLength||hash.pointLength!==pointLength||hash.spotLength!==spotLength||hash.rectAreaLength!==rectAreaLength||hash.hemiLength!==hemiLength||hash.numDirectionalShadows!==numDirectionalShadows||hash.numPointShadows!==numPointShadows||hash.numSpotShadows!==numSpotShadows){state.directional.length=directionalLength;state.spot.length=spotLength;state.rectArea.length=rectAreaLength;state.point.length=pointLength;state.hemi.length=hemiLength;state.directionalShadow.length=numDirectionalShadows;state.directionalShadowMap.length=numDirectionalShadows;state.pointShadow.length=numPointShadows;state.pointShadowMap.length=numPointShadows;state.spotShadow.length=numSpotShadows;state.spotShadowMap.length=numSpotShadows;state.directionalShadowMatrix.length=numDirectionalShadows;state.pointShadowMatrix.length=numPointShadows;state.spotShadowMatrix.length=numSpotShadows;hash.directionalLength=directionalLength;hash.pointLength=pointLength;hash.spotLength=spotLength;hash.rectAreaLength=rectAreaLength;hash.hemiLength=hemiLength;hash.numDirectionalShadows=numDirectionalShadows;hash.numPointShadows=numPointShadows;hash.numSpotShadows=numSpotShadows;state.version=nextVersion++;}}function setupView(lights,camera){let directionalLength=0;let pointLength=0;let spotLength=0;let rectAreaLength=0;let hemiLength=0;const viewMatrix=camera.matrixWorldInverse;for(let i=0,l=lights.length;i<l;i++){const light=lights[i];if(light.isDirectionalLight){const uniforms=state.directional[directionalLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);directionalLength++;}else if(light.isSpotLight){const uniforms=state.spot[spotLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);spotLength++;}else if(light.isRectAreaLight){const uniforms=state.rectArea[rectAreaLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);// extract local rotation of light to derive width/height half vectors\nmatrix42.identity();matrix4.copy(light.matrixWorld);matrix4.premultiply(viewMatrix);matrix42.extractRotation(matrix4);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);uniforms.halfWidth.applyMatrix4(matrix42);uniforms.halfHeight.applyMatrix4(matrix42);rectAreaLength++;}else if(light.isPointLight){const uniforms=state.point[pointLength];uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);pointLength++;}else if(light.isHemisphereLight){const uniforms=state.hemi[hemiLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);uniforms.direction.transformDirection(viewMatrix);uniforms.direction.normalize();hemiLength++;}}}return{setup:setup,setupView:setupView,state:state};}function WebGLRenderState(extensions,capabilities){const lights=new WebGLLights(extensions,capabilities);const lightsArray=[];const shadowsArray=[];function init(){lightsArray.length=0;shadowsArray.length=0;}function pushLight(light){lightsArray.push(light);}function pushShadow(shadowLight){shadowsArray.push(shadowLight);}function setupLights(){lights.setup(lightsArray);}function setupLightsView(camera){lights.setupView(lightsArray,camera);}const state={lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights};return{init:init,state:state,setupLights:setupLights,setupLightsView:setupLightsView,pushLight:pushLight,pushShadow:pushShadow};}function WebGLRenderStates(extensions,capabilities){let renderStates=new WeakMap();function get(scene,renderCallDepth=0){let renderState;if(renderStates.has(scene)===false){renderState=new WebGLRenderState(extensions,capabilities);renderStates.set(scene,[renderState]);}else{if(renderCallDepth>=renderStates.get(scene).length){renderState=new WebGLRenderState(extensions,capabilities);renderStates.get(scene).push(renderState);}else{renderState=renderStates.get(scene)[renderCallDepth];}}return renderState;}function dispose(){renderStates=new WeakMap();}return{get:get,dispose:dispose};}/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */class MeshDepthMaterial extends Material{constructor(parameters){super();this.type='MeshDepthMaterial';this.depthPacking=BasicDepthPacking;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.setValues(parameters);}copy(source){super.copy(source);this.depthPacking=source.depthPacking;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this;}}MeshDepthMaterial.prototype.isMeshDepthMaterial=true;/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */class MeshDistanceMaterial extends Material{constructor(parameters){super();this.type='MeshDistanceMaterial';this.referencePosition=new Vector3();this.nearDistance=1;this.farDistance=1000;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.setValues(parameters);}copy(source){super.copy(source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this;}}MeshDistanceMaterial.prototype.isMeshDistanceMaterial=true;var vsm_frag=\"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";var vsm_vert=\"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";function WebGLShadowMap(_renderer,_objects,_capabilities){let _frustum=new Frustum();const _shadowMapSize=new Vector2(),_viewportSize=new Vector2(),_viewport=new Vector4(),_depthMaterials=[],_distanceMaterials=[],_materialCache={},_maxTextureSize=_capabilities.maxTextureSize;const shadowSide={0:BackSide,1:FrontSide,2:DoubleSide};const shadowMaterialVertical=new ShaderMaterial({defines:{SAMPLE_RATE:2.0/8.0,HALF_SAMPLE_RATE:1.0/8.0},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2()},radius:{value:4.0}},vertexShader:vsm_vert,fragmentShader:vsm_frag});const shadowMaterialHorizontal=shadowMaterialVertical.clone();shadowMaterialHorizontal.defines.HORIZONTAL_PASS=1;const fullScreenTri=new BufferGeometry();fullScreenTri.setAttribute('position',new BufferAttribute(new Float32Array([-1,-1,0.5,3,-1,0.5,-1,3,0.5]),3));const fullScreenMesh=new Mesh(fullScreenTri,shadowMaterialVertical);const scope=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=PCFShadowMap;this.render=function(lights,scene,camera){if(scope.enabled===false)return;if(scope.autoUpdate===false&&scope.needsUpdate===false)return;if(lights.length===0)return;const currentRenderTarget=_renderer.getRenderTarget();const activeCubeFace=_renderer.getActiveCubeFace();const activeMipmapLevel=_renderer.getActiveMipmapLevel();const _state=_renderer.state;// Set GL state for depth map.\n_state.setBlending(NoBlending);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(true);_state.setScissorTest(false);// render depth map\nfor(let i=0,il=lights.length;i<il;i++){const light=lights[i];const shadow=light.shadow;if(shadow===undefined){console.warn('THREE.WebGLShadowMap:',light,'has no shadow.');continue;}if(shadow.autoUpdate===false&&shadow.needsUpdate===false)continue;_shadowMapSize.copy(shadow.mapSize);const shadowFrameExtents=shadow.getFrameExtents();_shadowMapSize.multiply(shadowFrameExtents);_viewportSize.copy(shadow.mapSize);if(_shadowMapSize.x>_maxTextureSize||_shadowMapSize.y>_maxTextureSize){if(_shadowMapSize.x>_maxTextureSize){_viewportSize.x=Math.floor(_maxTextureSize/shadowFrameExtents.x);_shadowMapSize.x=_viewportSize.x*shadowFrameExtents.x;shadow.mapSize.x=_viewportSize.x;}if(_shadowMapSize.y>_maxTextureSize){_viewportSize.y=Math.floor(_maxTextureSize/shadowFrameExtents.y);_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y;shadow.mapSize.y=_viewportSize.y;}}if(shadow.map===null&&!shadow.isPointLightShadow&&this.type===VSMShadowMap){const pars={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.camera.updateProjectionMatrix();}if(shadow.map===null){const pars={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.camera.updateProjectionMatrix();}_renderer.setRenderTarget(shadow.map);_renderer.clear();const viewportCount=shadow.getViewportCount();for(let vp=0;vp<viewportCount;vp++){const viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w);_state.viewport(_viewport);shadow.updateMatrices(light,vp);_frustum=shadow.getFrustum();renderObject(scene,camera,shadow.camera,light,this.type);}// do blur pass for VSM\nif(!shadow.isPointLightShadow&&this.type===VSMShadowMap){VSMPass(shadow,camera);}shadow.needsUpdate=false;}scope.needsUpdate=false;_renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel);};function VSMPass(shadow,camera){const geometry=_objects.update(fullScreenMesh);// vertical pass\nshadowMaterialVertical.uniforms.shadow_pass.value=shadow.map.texture;shadowMaterialVertical.uniforms.resolution.value=shadow.mapSize;shadowMaterialVertical.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.mapPass);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialVertical,fullScreenMesh,null);// horizontal pass\nshadowMaterialHorizontal.uniforms.shadow_pass.value=shadow.mapPass.texture;shadowMaterialHorizontal.uniforms.resolution.value=shadow.mapSize;shadowMaterialHorizontal.uniforms.radius.value=shadow.radius;_renderer.setRenderTarget(shadow.map);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialHorizontal,fullScreenMesh,null);}function getDepthMaterialVariant(useMorphing){const index=useMorphing<<0;let material=_depthMaterials[index];if(material===undefined){material=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:useMorphing});_depthMaterials[index]=material;}return material;}function getDistanceMaterialVariant(useMorphing){const index=useMorphing<<0;let material=_distanceMaterials[index];if(material===undefined){material=new MeshDistanceMaterial({morphTargets:useMorphing});_distanceMaterials[index]=material;}return material;}function getDepthMaterial(object,geometry,material,light,shadowCameraNear,shadowCameraFar,type){let result=null;let getMaterialVariant=getDepthMaterialVariant;let customMaterial=object.customDepthMaterial;if(light.isPointLight===true){getMaterialVariant=getDistanceMaterialVariant;customMaterial=object.customDistanceMaterial;}if(customMaterial===undefined){let useMorphing=false;if(material.morphTargets===true){useMorphing=geometry.morphAttributes&&geometry.morphAttributes.position&&geometry.morphAttributes.position.length>0;}result=getMaterialVariant(useMorphing);}else{result=customMaterial;}if(_renderer.localClippingEnabled&&material.clipShadows===true&&material.clippingPlanes.length!==0){// in this case we need a unique material instance reflecting the\n// appropriate state\nconst keyA=result.uuid,keyB=material.uuid;let materialsForVariant=_materialCache[keyA];if(materialsForVariant===undefined){materialsForVariant={};_materialCache[keyA]=materialsForVariant;}let cachedMaterial=materialsForVariant[keyB];if(cachedMaterial===undefined){cachedMaterial=result.clone();materialsForVariant[keyB]=cachedMaterial;}result=cachedMaterial;}result.visible=material.visible;result.wireframe=material.wireframe;if(type===VSMShadowMap){result.side=material.shadowSide!==null?material.shadowSide:material.side;}else{result.side=material.shadowSide!==null?material.shadowSide:shadowSide[material.side];}result.clipShadows=material.clipShadows;result.clippingPlanes=material.clippingPlanes;result.clipIntersection=material.clipIntersection;result.wireframeLinewidth=material.wireframeLinewidth;result.linewidth=material.linewidth;if(light.isPointLight===true&&result.isMeshDistanceMaterial===true){result.referencePosition.setFromMatrixPosition(light.matrixWorld);result.nearDistance=shadowCameraNear;result.farDistance=shadowCameraFar;}return result;}function renderObject(object,camera,shadowCamera,light,type){if(object.visible===false)return;const visible=object.layers.test(camera.layers);if(visible&&(object.isMesh||object.isLine||object.isPoints)){if((object.castShadow||object.receiveShadow&&type===VSMShadowMap)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);const geometry=_objects.update(object);const material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let k=0,kl=groups.length;k<kl;k++){const group=groups[k];const groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){const depthMaterial=getDepthMaterial(object,geometry,groupMaterial,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,group);}}}else if(material.visible){const depthMaterial=getDepthMaterial(object,geometry,material,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,null);}}}const children=object.children;for(let i=0,l=children.length;i<l;i++){renderObject(children[i],camera,shadowCamera,light,type);}}}function WebGLState(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;function ColorBuffer(){let locked=false;const color=new Vector4();let currentColorMask=null;const currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){if(currentColorMask!==colorMask&&!locked){gl.colorMask(colorMask,colorMask,colorMask,colorMask);currentColorMask=colorMask;}},setLocked:function(lock){locked=lock;},setClear:function(r,g,b,a,premultipliedAlpha){if(premultipliedAlpha===true){r*=a;g*=a;b*=a;}color.set(r,g,b,a);if(currentColorClear.equals(color)===false){gl.clearColor(r,g,b,a);currentColorClear.copy(color);}},reset:function(){locked=false;currentColorMask=null;currentColorClear.set(-1,0,0,0);// set to invalid state\n}};}function DepthBuffer(){let locked=false;let currentDepthMask=null;let currentDepthFunc=null;let currentDepthClear=null;return{setTest:function(depthTest){if(depthTest){enable(2929);}else{disable(2929);}},setMask:function(depthMask){if(currentDepthMask!==depthMask&&!locked){gl.depthMask(depthMask);currentDepthMask=depthMask;}},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc){switch(depthFunc){case NeverDepth:gl.depthFunc(512);break;case AlwaysDepth:gl.depthFunc(519);break;case LessDepth:gl.depthFunc(513);break;case LessEqualDepth:gl.depthFunc(515);break;case EqualDepth:gl.depthFunc(514);break;case GreaterEqualDepth:gl.depthFunc(518);break;case GreaterDepth:gl.depthFunc(516);break;case NotEqualDepth:gl.depthFunc(517);break;default:gl.depthFunc(515);}}else{gl.depthFunc(515);}currentDepthFunc=depthFunc;}},setLocked:function(lock){locked=lock;},setClear:function(depth){if(currentDepthClear!==depth){gl.clearDepth(depth);currentDepthClear=depth;}},reset:function(){locked=false;currentDepthMask=null;currentDepthFunc=null;currentDepthClear=null;}};}function StencilBuffer(){let locked=false;let currentStencilMask=null;let currentStencilFunc=null;let currentStencilRef=null;let currentStencilFuncMask=null;let currentStencilFail=null;let currentStencilZFail=null;let currentStencilZPass=null;let currentStencilClear=null;return{setTest:function(stencilTest){if(!locked){if(stencilTest){enable(2960);}else{disable(2960);}}},setMask:function(stencilMask){if(currentStencilMask!==stencilMask&&!locked){gl.stencilMask(stencilMask);currentStencilMask=stencilMask;}},setFunc:function(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask){gl.stencilFunc(stencilFunc,stencilRef,stencilMask);currentStencilFunc=stencilFunc;currentStencilRef=stencilRef;currentStencilFuncMask=stencilMask;}},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass){gl.stencilOp(stencilFail,stencilZFail,stencilZPass);currentStencilFail=stencilFail;currentStencilZFail=stencilZFail;currentStencilZPass=stencilZPass;}},setLocked:function(lock){locked=lock;},setClear:function(stencil){if(currentStencilClear!==stencil){gl.clearStencil(stencil);currentStencilClear=stencil;}},reset:function(){locked=false;currentStencilMask=null;currentStencilFunc=null;currentStencilRef=null;currentStencilFuncMask=null;currentStencilFail=null;currentStencilZFail=null;currentStencilZPass=null;currentStencilClear=null;}};}//\nconst colorBuffer=new ColorBuffer();const depthBuffer=new DepthBuffer();const stencilBuffer=new StencilBuffer();let enabledCapabilities={};let xrFramebuffer=null;let currentBoundFramebuffers={};let currentProgram=null;let currentBlendingEnabled=false;let currentBlending=null;let currentBlendEquation=null;let currentBlendSrc=null;let currentBlendDst=null;let currentBlendEquationAlpha=null;let currentBlendSrcAlpha=null;let currentBlendDstAlpha=null;let currentPremultipledAlpha=false;let currentFlipSided=null;let currentCullFace=null;let currentLineWidth=null;let currentPolygonOffsetFactor=null;let currentPolygonOffsetUnits=null;const maxTextures=gl.getParameter(35661);let lineWidthAvailable=false;let version=0;const glVersion=gl.getParameter(7938);if(glVersion.indexOf('WebGL')!==-1){version=parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=1.0;}else if(glVersion.indexOf('OpenGL ES')!==-1){version=parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=2.0;}let currentTextureSlot=null;let currentBoundTextures={};const scissorParam=gl.getParameter(3088);const viewportParam=gl.getParameter(2978);const currentScissor=new Vector4().fromArray(scissorParam);const currentViewport=new Vector4().fromArray(viewportParam);function createTexture(type,target,count){const data=new Uint8Array(4);// 4 is required to match default unpack alignment of 4.\nconst texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(let i=0;i<count;i++){gl.texImage2D(target+i,0,6408,1,1,0,6408,5121,data);}return texture;}const emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);// init\ncolorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(LessEqualDepth);setFlipSided(false);setCullFace(CullFaceBack);enable(2884);setBlending(NoBlending);//\nfunction enable(id){if(enabledCapabilities[id]!==true){gl.enable(id);enabledCapabilities[id]=true;}}function disable(id){if(enabledCapabilities[id]!==false){gl.disable(id);enabledCapabilities[id]=false;}}function bindXRFramebuffer(framebuffer){if(framebuffer!==xrFramebuffer){gl.bindFramebuffer(36160,framebuffer);xrFramebuffer=framebuffer;}}function bindFramebuffer(target,framebuffer){if(framebuffer===null&&xrFramebuffer!==null)framebuffer=xrFramebuffer;// use active XR framebuffer if available\nif(currentBoundFramebuffers[target]!==framebuffer){gl.bindFramebuffer(target,framebuffer);currentBoundFramebuffers[target]=framebuffer;if(isWebGL2){// 36009 is equivalent to 36160\nif(target===36009){currentBoundFramebuffers[36160]=framebuffer;}if(target===36160){currentBoundFramebuffers[36009]=framebuffer;}}return true;}return false;}function useProgram(program){if(currentProgram!==program){gl.useProgram(program);currentProgram=program;return true;}return false;}const equationToGL={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779};if(isWebGL2){equationToGL[MinEquation]=32775;equationToGL[MaxEquation]=32776;}else{const extension=extensions.get('EXT_blend_minmax');if(extension!==null){equationToGL[MinEquation]=extension.MIN_EXT;equationToGL[MaxEquation]=extension.MAX_EXT;}}const factorToGL={[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773};function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===NoBlending){if(currentBlendingEnabled===true){disable(3042);currentBlendingEnabled=false;}return;}if(currentBlendingEnabled===false){enable(3042);currentBlendingEnabled=true;}if(blending!==CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==AddEquation||currentBlendEquationAlpha!==AddEquation){gl.blendEquation(32774);currentBlendEquation=AddEquation;currentBlendEquationAlpha=AddEquation;}if(premultipliedAlpha){switch(blending){case NormalBlending:gl.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:gl.blendFunc(1,1);break;case SubtractiveBlending:gl.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:gl.blendFuncSeparate(0,768,0,770);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}else{switch(blending){case NormalBlending:gl.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:gl.blendFunc(770,1);break;case SubtractiveBlending:gl.blendFunc(0,769);break;case MultiplyBlending:gl.blendFunc(0,768);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}currentBlendSrc=null;currentBlendDst=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha;}return;}// custom blending\nblendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha){gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]);currentBlendEquation=blendEquation;currentBlendEquationAlpha=blendEquationAlpha;}if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha){gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]);currentBlendSrc=blendSrc;currentBlendDst=blendDst;currentBlendSrcAlpha=blendSrcAlpha;currentBlendDstAlpha=blendDstAlpha;}currentBlending=blending;currentPremultipledAlpha=null;}function setMaterial(material,frontFaceCW){material.side===DoubleSide?disable(2884):enable(2884);let flipSided=material.side===BackSide;if(frontFaceCW)flipSided=!flipSided;setFlipSided(flipSided);material.blending===NormalBlending&&material.transparent===false?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);const stencilWrite=material.stencilWrite;stencilBuffer.setTest(stencilWrite);if(stencilWrite){stencilBuffer.setMask(material.stencilWriteMask);stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask);stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass);}setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);material.alphaToCoverage===true?enable(32926):disable(32926);}//\nfunction setFlipSided(flipSided){if(currentFlipSided!==flipSided){if(flipSided){gl.frontFace(2304);}else{gl.frontFace(2305);}currentFlipSided=flipSided;}}function setCullFace(cullFace){if(cullFace!==CullFaceNone){enable(2884);if(cullFace!==currentCullFace){if(cullFace===CullFaceBack){gl.cullFace(1029);}else if(cullFace===CullFaceFront){gl.cullFace(1028);}else{gl.cullFace(1032);}}}else{disable(2884);}currentCullFace=cullFace;}function setLineWidth(width){if(width!==currentLineWidth){if(lineWidthAvailable)gl.lineWidth(width);currentLineWidth=width;}}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){enable(32823);if(currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units){gl.polygonOffset(factor,units);currentPolygonOffsetFactor=factor;currentPolygonOffsetUnits=units;}}else{disable(32823);}}function setScissorTest(scissorTest){if(scissorTest){enable(3089);}else{disable(3089);}}// texture\nfunction activeTexture(webglSlot){if(webglSlot===undefined)webglSlot=33984+maxTextures-1;if(currentTextureSlot!==webglSlot){gl.activeTexture(webglSlot);currentTextureSlot=webglSlot;}}function bindTexture(webglType,webglTexture){if(currentTextureSlot===null){activeTexture();}let boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture===undefined){boundTexture={type:undefined,texture:undefined};currentBoundTextures[currentTextureSlot]=boundTexture;}if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture){gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]);boundTexture.type=webglType;boundTexture.texture=webglTexture;}}function unbindTexture(){const boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture!==undefined&&boundTexture.type!==undefined){gl.bindTexture(boundTexture.type,null);boundTexture.type=undefined;boundTexture.texture=undefined;}}function compressedTexImage2D(){try{gl.compressedTexImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage2D(){try{gl.texImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage3D(){try{gl.texImage3D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}//\nfunction scissor(scissor){if(currentScissor.equals(scissor)===false){gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w);currentScissor.copy(scissor);}}function viewport(viewport){if(currentViewport.equals(viewport)===false){gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w);currentViewport.copy(viewport);}}//\nfunction reset(){// reset state\ngl.disable(3042);gl.disable(2884);gl.disable(2929);gl.disable(32823);gl.disable(3089);gl.disable(2960);gl.disable(32926);gl.blendEquation(32774);gl.blendFunc(1,0);gl.blendFuncSeparate(1,0,1,0);gl.colorMask(true,true,true,true);gl.clearColor(0,0,0,0);gl.depthMask(true);gl.depthFunc(513);gl.clearDepth(1);gl.stencilMask(0xffffffff);gl.stencilFunc(519,0,0xffffffff);gl.stencilOp(7680,7680,7680);gl.clearStencil(0);gl.cullFace(1029);gl.frontFace(2305);gl.polygonOffset(0,0);gl.activeTexture(33984);gl.bindFramebuffer(36160,null);if(isWebGL2===true){gl.bindFramebuffer(36009,null);gl.bindFramebuffer(36008,null);}gl.useProgram(null);gl.lineWidth(1);gl.scissor(0,0,gl.canvas.width,gl.canvas.height);gl.viewport(0,0,gl.canvas.width,gl.canvas.height);// reset internals\nenabledCapabilities={};currentTextureSlot=null;currentBoundTextures={};xrFramebuffer=null;currentBoundFramebuffers={};currentProgram=null;currentBlendingEnabled=false;currentBlending=null;currentBlendEquation=null;currentBlendSrc=null;currentBlendDst=null;currentBlendEquationAlpha=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentPremultipledAlpha=false;currentFlipSided=null;currentCullFace=null;currentLineWidth=null;currentPolygonOffsetFactor=null;currentPolygonOffsetUnits=null;currentScissor.set(0,0,gl.canvas.width,gl.canvas.height);currentViewport.set(0,0,gl.canvas.width,gl.canvas.height);colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset();}return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable:enable,disable:disable,bindFramebuffer:bindFramebuffer,bindXRFramebuffer:bindXRFramebuffer,useProgram:useProgram,setBlending:setBlending,setMaterial:setMaterial,setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:setLineWidth,setPolygonOffset:setPolygonOffset,setScissorTest:setScissorTest,activeTexture:activeTexture,bindTexture:bindTexture,unbindTexture:unbindTexture,compressedTexImage2D:compressedTexImage2D,texImage2D:texImage2D,texImage3D:texImage3D,scissor:scissor,viewport:viewport,reset:reset};}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){const isWebGL2=capabilities.isWebGL2;const maxTextures=capabilities.maxTextures;const maxCubemapSize=capabilities.maxCubemapSize;const maxTextureSize=capabilities.maxTextureSize;const maxSamples=capabilities.maxSamples;const _videoTextures=new WeakMap();let _canvas;// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\nlet useOffscreenCanvas=false;try{useOffscreenCanvas=typeof OffscreenCanvas!=='undefined'&&new OffscreenCanvas(1,1).getContext('2d')!==null;}catch(err){// Ignore any errors\n}function createCanvas(width,height){// Use OffscreenCanvas when available. Specially needed in web workers\nreturn useOffscreenCanvas?new OffscreenCanvas(width,height):document.createElementNS('http://www.w3.org/1999/xhtml','canvas');}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){let scale=1;// handle case if texture exceeds max size\nif(image.width>maxSize||image.height>maxSize){scale=maxSize/Math.max(image.width,image.height);}// only perform resize if necessary\nif(scale<1||needsPowerOfTwo===true){// only perform resize for certain image types\nif(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){const floor=needsPowerOfTwo?floorPowerOfTwo:Math.floor;const width=floor(scale*image.width);const height=floor(scale*image.height);if(_canvas===undefined)_canvas=createCanvas(width,height);// cube textures can't reuse the same canvas\nconst canvas=needsNewCanvas?createCanvas(width,height):_canvas;canvas.width=width;canvas.height=height;const context=canvas.getContext('2d');context.drawImage(image,0,0,width,height);console.warn('THREE.WebGLRenderer: Texture has been resized from ('+image.width+'x'+image.height+') to ('+width+'x'+height+').');return canvas;}else{if('data'in image){console.warn('THREE.WebGLRenderer: Image in DataTexture is too big ('+image.width+'x'+image.height+').');}return image;}}return image;}function isPowerOfTwo$1(image){return isPowerOfTwo(image.width)&&isPowerOfTwo(image.height);}function textureNeedsPowerOfTwo(texture){if(isWebGL2)return false;return texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function generateMipmap(target,texture,width,height){_gl.generateMipmap(target);const textureProperties=properties.get(texture);textureProperties.__maxMipLevel=Math.log2(Math.max(width,height));}function getInternalFormat(internalFormatName,glFormat,glType){if(isWebGL2===false)return glFormat;if(internalFormatName!==null){if(_gl[internalFormatName]!==undefined)return _gl[internalFormatName];console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\''+internalFormatName+'\\'');}let internalFormat=glFormat;if(glFormat===6403){if(glType===5126)internalFormat=33326;if(glType===5131)internalFormat=33325;if(glType===5121)internalFormat=33321;}if(glFormat===6407){if(glType===5126)internalFormat=34837;if(glType===5131)internalFormat=34843;if(glType===5121)internalFormat=32849;}if(glFormat===6408){if(glType===5126)internalFormat=34836;if(glType===5131)internalFormat=34842;if(glType===5121)internalFormat=32856;}if(internalFormat===33325||internalFormat===33326||internalFormat===34842||internalFormat===34836){extensions.get('EXT_color_buffer_float');}return internalFormat;}// Fallback filters for non-power-of-2 textures\nfunction filterFallback(f){if(f===NearestFilter||f===NearestMipmapNearestFilter||f===NearestMipmapLinearFilter){return 9728;}return 9729;}//\nfunction onTextureDispose(event){const texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);if(texture.isVideoTexture){_videoTextures.delete(texture);}info.memory.textures--;}function onRenderTargetDispose(event){const renderTarget=event.target;renderTarget.removeEventListener('dispose',onRenderTargetDispose);deallocateRenderTarget(renderTarget);}//\nfunction deallocateTexture(texture){const textureProperties=properties.get(texture);if(textureProperties.__webglInit===undefined)return;_gl.deleteTexture(textureProperties.__webglTexture);properties.remove(texture);}function deallocateRenderTarget(renderTarget){const texture=renderTarget.texture;const renderTargetProperties=properties.get(renderTarget);const textureProperties=properties.get(texture);if(!renderTarget)return;if(textureProperties.__webglTexture!==undefined){_gl.deleteTexture(textureProperties.__webglTexture);info.memory.textures--;}if(renderTarget.depthTexture){renderTarget.depthTexture.dispose();}if(renderTarget.isWebGLCubeRenderTarget){for(let i=0;i<6;i++){_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);}}else{_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);if(renderTargetProperties.__webglMultisampledFramebuffer)_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);if(renderTargetProperties.__webglColorRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);if(renderTargetProperties.__webglDepthRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);}if(renderTarget.isWebGLMultipleRenderTargets){for(let i=0,il=texture.length;i<il;i++){const attachmentProperties=properties.get(texture[i]);if(attachmentProperties.__webglTexture){_gl.deleteTexture(attachmentProperties.__webglTexture);info.memory.textures--;}properties.remove(texture[i]);}}properties.remove(texture);properties.remove(renderTarget);}//\nlet textureUnits=0;function resetTextureUnits(){textureUnits=0;}function allocateTextureUnit(){const textureUnit=textureUnits;if(textureUnit>=maxTextures){console.warn('THREE.WebGLTextures: Trying to use '+textureUnit+' texture units while this GPU supports only '+maxTextures);}textureUnits+=1;return textureUnit;}//\nfunction setTexture2D(texture,slot){const textureProperties=properties.get(texture);if(texture.isVideoTexture)updateVideoTexture(texture);if(texture.version>0&&textureProperties.__version!==texture.version){const image=texture.image;if(image===undefined){console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');}else if(image.complete===false){console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');}else{uploadTexture(textureProperties,texture,slot);return;}}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture);}function setTexture2DArray(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(35866,textureProperties.__webglTexture);}function setTexture3D(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(32879,textureProperties.__webglTexture);}function setTextureCube(texture,slot){const textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadCubeTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);}const wrappingToGL={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648};const filterToGL={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function setTextureParameters(textureType,texture,supportsMips){if(supportsMips){_gl.texParameteri(textureType,10242,wrappingToGL[texture.wrapS]);_gl.texParameteri(textureType,10243,wrappingToGL[texture.wrapT]);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,wrappingToGL[texture.wrapR]);}_gl.texParameteri(textureType,10240,filterToGL[texture.magFilter]);_gl.texParameteri(textureType,10241,filterToGL[texture.minFilter]);}else{_gl.texParameteri(textureType,10242,33071);_gl.texParameteri(textureType,10243,33071);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,33071);}if(texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');}_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter));_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter));if(texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');}}if(extensions.has('EXT_texture_filter_anisotropic')===true){const extension=extensions.get('EXT_texture_filter_anisotropic');if(texture.type===FloatType&&extensions.has('OES_texture_float_linear')===false)return;// verify extension for WebGL 1 and WebGL 2\nif(isWebGL2===false&&texture.type===HalfFloatType&&extensions.has('OES_texture_half_float_linear')===false)return;// verify extension for WebGL 1 only\nif(texture.anisotropy>1||properties.get(texture).__currentAnisotropy){_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy()));properties.get(texture).__currentAnisotropy=texture.anisotropy;}}}function initTexture(textureProperties,texture){if(textureProperties.__webglInit===undefined){textureProperties.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}function uploadTexture(textureProperties,texture,slot){let textureType=3553;if(texture.isDataTexture2DArray)textureType=35866;if(texture.isDataTexture3D)textureType=32879;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);_gl.pixelStorei(37443,0);const needsPowerOfTwo=textureNeedsPowerOfTwo(texture)&&isPowerOfTwo$1(texture.image)===false;const image=resizeImage(texture.image,needsPowerOfTwo,false,maxTextureSize);const supportsMips=isPowerOfTwo$1(image)||isWebGL2,glFormat=utils.convert(texture.format);let glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(textureType,texture,supportsMips);let mipmap;const mipmaps=texture.mipmaps;if(texture.isDepthTexture){// populate depth texture with dummy data\nglInternalFormat=6402;if(isWebGL2){if(texture.type===FloatType){glInternalFormat=36012;}else if(texture.type===UnsignedIntType){glInternalFormat=33190;}else if(texture.type===UnsignedInt248Type){glInternalFormat=35056;}else{glInternalFormat=33189;// WebGL2 requires sized internalformat for glTexImage2D\n}}else{if(texture.type===FloatType){console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');}}// validation checks for WebGL 1\nif(texture.format===DepthFormat&&glInternalFormat===6402){// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType){console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');texture.type=UnsignedShortType;glType=utils.convert(texture.type);}}if(texture.format===DepthStencilFormat&&glInternalFormat===6402){// Depth stencil textures need the DEPTH_STENCIL internal format\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nglInternalFormat=34041;// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedInt248Type){console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');texture.type=UnsignedInt248Type;glType=utils.convert(texture.type);}}//\nstate.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,null);}else if(texture.isDataTexture){// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}}else if(texture.isCompressedTexture){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');}}else{state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}textureProperties.__maxMipLevel=mipmaps.length-1;}else if(texture.isDataTexture2DArray){state.texImage3D(35866,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else if(texture.isDataTexture3D){state.texImage3D(32879,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else{// regular Texture (image, video, canvas)\n// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(let i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,glFormat,glType,image);textureProperties.__maxMipLevel=0;}}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(textureType,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}function uploadCubeTexture(textureProperties,texture,slot){if(texture.image.length!==6)return;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);_gl.pixelStorei(37443,0);const isCompressed=texture&&(texture.isCompressedTexture||texture.image[0].isCompressedTexture);const isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;const cubeImage=[];for(let i=0;i<6;i++){if(!isCompressed&&!isDataTexture){cubeImage[i]=resizeImage(texture.image[i],false,true,maxCubemapSize);}else{cubeImage[i]=isDataTexture?texture.image[i].image:texture.image[i];}}const image=cubeImage[0],supportsMips=isPowerOfTwo$1(image)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);setTextureParameters(34067,texture,supportsMips);let mipmaps;if(isCompressed){for(let i=0;i<6;i++){mipmaps=cubeImage[i].mipmaps;for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');}}else{state.texImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}textureProperties.__maxMipLevel=mipmaps.length-1;}else{mipmaps=texture.mipmaps;for(let i=0;i<6;i++){if(isDataTexture){state.texImage2D(34069+i,0,glInternalFormat,cubeImage[i].width,cubeImage[i].height,0,glFormat,glType,cubeImage[i].data);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];const mipmapImage=mipmap.image[i].image;state.texImage2D(34069+i,j+1,glInternalFormat,mipmapImage.width,mipmapImage.height,0,glFormat,glType,mipmapImage.data);}}else{state.texImage2D(34069+i,0,glInternalFormat,glFormat,glType,cubeImage[i]);for(let j=0;j<mipmaps.length;j++){const mipmap=mipmaps[j];state.texImage2D(34069+i,j+1,glInternalFormat,glFormat,glType,mipmap.image[i]);}}}textureProperties.__maxMipLevel=mipmaps.length;}if(textureNeedsGenerateMipmaps(texture,supportsMips)){// We assume images for cube map have the same size.\ngenerateMipmap(34067,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}// Render targets\n// Setup storage for target texture and bind it to correct framebuffer\nfunction setupFrameBufferTexture(framebuffer,renderTarget,texture,attachment,textureTarget){const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);if(textureTarget===32879||textureTarget===35866){state.texImage3D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,renderTarget.depth,0,glFormat,glType,null);}else{state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);}state.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(texture).__webglTexture,0);state.bindFramebuffer(36160,null);}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\nfunction setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){let glInternalFormat=33189;if(isMultisample){const depthTexture=renderTarget.depthTexture;if(depthTexture&&depthTexture.isDepthTexture){if(depthTexture.type===FloatType){glInternalFormat=36012;}else if(depthTexture.type===UnsignedIntType){glInternalFormat=33190;}}const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,36096,36161,renderbuffer);}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){if(isMultisample){const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,35056,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer);}else{// Use the first texture for MRT so far\nconst texture=renderTarget.isWebGLMultipleRenderTargets===true?renderTarget.texture[0]:renderTarget.texture;const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);if(isMultisample){const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}}_gl.bindRenderbuffer(36161,null);}// Setup resources for a Depth Texture for a FBO (needs an extension)\nfunction setupDepthTexture(framebuffer,renderTarget){const isCube=renderTarget&&renderTarget.isWebGLCubeRenderTarget;if(isCube)throw new Error('Depth Texture with cube render targets is not supported');state.bindFramebuffer(36160,framebuffer);if(!(renderTarget.depthTexture&&renderTarget.depthTexture.isDepthTexture)){throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');}// upload an empty depth texture with framebuffer size\nif(!properties.get(renderTarget.depthTexture).__webglTexture||renderTarget.depthTexture.image.width!==renderTarget.width||renderTarget.depthTexture.image.height!==renderTarget.height){renderTarget.depthTexture.image.width=renderTarget.width;renderTarget.depthTexture.image.height=renderTarget.height;renderTarget.depthTexture.needsUpdate=true;}setTexture2D(renderTarget.depthTexture,0);const webglDepthTexture=properties.get(renderTarget.depthTexture).__webglTexture;if(renderTarget.depthTexture.format===DepthFormat){_gl.framebufferTexture2D(36160,36096,3553,webglDepthTexture,0);}else if(renderTarget.depthTexture.format===DepthStencilFormat){_gl.framebufferTexture2D(36160,33306,3553,webglDepthTexture,0);}else{throw new Error('Unknown depthTexture format');}}// Setup GL resources for a non-texture depth buffer\nfunction setupDepthRenderbuffer(renderTarget){const renderTargetProperties=properties.get(renderTarget);const isCube=renderTarget.isWebGLCubeRenderTarget===true;if(renderTarget.depthTexture){if(isCube)throw new Error('target.depthTexture not supported in Cube render targets');setupDepthTexture(renderTargetProperties.__webglFramebuffer,renderTarget);}else{if(isCube){renderTargetProperties.__webglDepthbuffer=[];for(let i=0;i<6;i++){state.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[i]);renderTargetProperties.__webglDepthbuffer[i]=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i],renderTarget,false);}}else{state.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,false);}}state.bindFramebuffer(36160,null);}// Set up GL resources for the render target\nfunction setupRenderTarget(renderTarget){const texture=renderTarget.texture;const renderTargetProperties=properties.get(renderTarget);const textureProperties=properties.get(texture);renderTarget.addEventListener('dispose',onRenderTargetDispose);if(renderTarget.isWebGLMultipleRenderTargets!==true){textureProperties.__webglTexture=_gl.createTexture();textureProperties.__version=texture.version;info.memory.textures++;}const isCube=renderTarget.isWebGLCubeRenderTarget===true;const isMultipleRenderTargets=renderTarget.isWebGLMultipleRenderTargets===true;const isMultisample=renderTarget.isWebGLMultisampleRenderTarget===true;const isRenderTarget3D=texture.isDataTexture3D||texture.isDataTexture2DArray;const supportsMips=isPowerOfTwo$1(renderTarget)||isWebGL2;// Handles WebGL2 RGBFormat fallback - #18858\nif(isWebGL2&&texture.format===RGBFormat&&(texture.type===FloatType||texture.type===HalfFloatType)){texture.format=RGBAFormat;console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');}// Setup framebuffer\nif(isCube){renderTargetProperties.__webglFramebuffer=[];for(let i=0;i<6;i++){renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer();}}else{renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer();if(isMultipleRenderTargets){if(capabilities.drawBuffers){const textures=renderTarget.texture;for(let i=0,il=textures.length;i<il;i++){const attachmentProperties=properties.get(textures[i]);if(attachmentProperties.__webglTexture===undefined){attachmentProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}}else{console.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');}}else if(isMultisample){if(isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);const glFormat=utils.convert(texture.format);const glType=utils.convert(texture.type);const glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType);const samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);state.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);if(renderTarget.depthBuffer){renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,true);}state.bindFramebuffer(36160,null);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}// Setup color buffer\nif(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,texture,supportsMips);for(let i=0;i<6;i++){setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i],renderTarget,texture,36064,34069+i);}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(34067,texture,renderTarget.width,renderTarget.height);}state.bindTexture(34067,null);}else if(isMultipleRenderTargets){const textures=renderTarget.texture;for(let i=0,il=textures.length;i<il;i++){const attachment=textures[i];const attachmentProperties=properties.get(attachment);state.bindTexture(3553,attachmentProperties.__webglTexture);setTextureParameters(3553,attachment,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,attachment,36064+i,3553);if(textureNeedsGenerateMipmaps(attachment,supportsMips)){generateMipmap(3553,attachment,renderTarget.width,renderTarget.height);}}state.bindTexture(3553,null);}else{let glTextureType=3553;if(isRenderTarget3D){// Render targets containing layers, i.e: Texture 3D and 2d arrays\nif(isWebGL2){const isTexture3D=texture.isDataTexture3D;glTextureType=isTexture3D?32879:35866;}else{console.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');}}state.bindTexture(glTextureType,textureProperties.__webglTexture);setTextureParameters(glTextureType,texture,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,texture,36064,glTextureType);if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(3553,texture,renderTarget.width,renderTarget.height);}state.bindTexture(3553,null);}// Setup depth and stencil buffers\nif(renderTarget.depthBuffer){setupDepthRenderbuffer(renderTarget);}}function updateRenderTargetMipmap(renderTarget){const supportsMips=isPowerOfTwo$1(renderTarget)||isWebGL2;const textures=renderTarget.isWebGLMultipleRenderTargets===true?renderTarget.texture:[renderTarget.texture];for(let i=0,il=textures.length;i<il;i++){const texture=textures[i];if(textureNeedsGenerateMipmaps(texture,supportsMips)){const target=renderTarget.isWebGLCubeRenderTarget?34067:3553;const webglTexture=properties.get(texture).__webglTexture;state.bindTexture(target,webglTexture);generateMipmap(target,texture,renderTarget.width,renderTarget.height);state.bindTexture(target,null);}}}function updateMultisampleRenderTarget(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget){if(isWebGL2){const width=renderTarget.width;const height=renderTarget.height;let mask=16384;if(renderTarget.depthBuffer)mask|=256;if(renderTarget.stencilBuffer)mask|=1024;const renderTargetProperties=properties.get(renderTarget);state.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);state.bindFramebuffer(36009,renderTargetProperties.__webglFramebuffer);_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,9728);state.bindFramebuffer(36008,null);state.bindFramebuffer(36009,renderTargetProperties.__webglMultisampledFramebuffer);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}function getRenderTargetSamples(renderTarget){return isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(maxSamples,renderTarget.samples):0;}function updateVideoTexture(texture){const frame=info.render.frame;// Check the last frame we updated the VideoTexture\nif(_videoTextures.get(texture)!==frame){_videoTextures.set(texture,frame);texture.update();}}// backwards compatibility\nlet warnedTexture2D=false;let warnedTextureCube=false;function safeSetTexture2D(texture,slot){if(texture&&texture.isWebGLRenderTarget){if(warnedTexture2D===false){console.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');warnedTexture2D=true;}texture=texture.texture;}setTexture2D(texture,slot);}function safeSetTextureCube(texture,slot){if(texture&&texture.isWebGLCubeRenderTarget){if(warnedTextureCube===false){console.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');warnedTextureCube=true;}texture=texture.texture;}setTextureCube(texture,slot);}//\nthis.allocateTextureUnit=allocateTextureUnit;this.resetTextureUnits=resetTextureUnits;this.setTexture2D=setTexture2D;this.setTexture2DArray=setTexture2DArray;this.setTexture3D=setTexture3D;this.setTextureCube=setTextureCube;this.setupRenderTarget=setupRenderTarget;this.updateRenderTargetMipmap=updateRenderTargetMipmap;this.updateMultisampleRenderTarget=updateMultisampleRenderTarget;this.safeSetTexture2D=safeSetTexture2D;this.safeSetTextureCube=safeSetTextureCube;}function WebGLUtils(gl,extensions,capabilities){const isWebGL2=capabilities.isWebGL2;function convert(p){let extension;if(p===UnsignedByteType)return 5121;if(p===UnsignedShort4444Type)return 32819;if(p===UnsignedShort5551Type)return 32820;if(p===UnsignedShort565Type)return 33635;if(p===ByteType)return 5120;if(p===ShortType)return 5122;if(p===UnsignedShortType)return 5123;if(p===IntType)return 5124;if(p===UnsignedIntType)return 5125;if(p===FloatType)return 5126;if(p===HalfFloatType){if(isWebGL2)return 5131;extension=extensions.get('OES_texture_half_float');if(extension!==null){return extension.HALF_FLOAT_OES;}else{return null;}}if(p===AlphaFormat)return 6406;if(p===RGBFormat)return 6407;if(p===RGBAFormat)return 6408;if(p===LuminanceFormat)return 6409;if(p===LuminanceAlphaFormat)return 6410;if(p===DepthFormat)return 6402;if(p===DepthStencilFormat)return 34041;if(p===RedFormat)return 6403;// WebGL2 formats.\nif(p===RedIntegerFormat)return 36244;if(p===RGFormat)return 33319;if(p===RGIntegerFormat)return 33320;if(p===RGBIntegerFormat)return 36248;if(p===RGBAIntegerFormat)return 36249;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format){extension=extensions.get('WEBGL_compressed_texture_s3tc');if(extension!==null){if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;}else{return null;}}if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format){extension=extensions.get('WEBGL_compressed_texture_pvrtc');if(extension!==null){if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}else{return null;}}if(p===RGB_ETC1_Format){extension=extensions.get('WEBGL_compressed_texture_etc1');if(extension!==null){return extension.COMPRESSED_RGB_ETC1_WEBGL;}else{return null;}}if(p===RGB_ETC2_Format||p===RGBA_ETC2_EAC_Format){extension=extensions.get('WEBGL_compressed_texture_etc');if(extension!==null){if(p===RGB_ETC2_Format)return extension.COMPRESSED_RGB8_ETC2;if(p===RGBA_ETC2_EAC_Format)return extension.COMPRESSED_RGBA8_ETC2_EAC;}}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format||p===SRGB8_ALPHA8_ASTC_4x4_Format||p===SRGB8_ALPHA8_ASTC_5x4_Format||p===SRGB8_ALPHA8_ASTC_5x5_Format||p===SRGB8_ALPHA8_ASTC_6x5_Format||p===SRGB8_ALPHA8_ASTC_6x6_Format||p===SRGB8_ALPHA8_ASTC_8x5_Format||p===SRGB8_ALPHA8_ASTC_8x6_Format||p===SRGB8_ALPHA8_ASTC_8x8_Format||p===SRGB8_ALPHA8_ASTC_10x5_Format||p===SRGB8_ALPHA8_ASTC_10x6_Format||p===SRGB8_ALPHA8_ASTC_10x8_Format||p===SRGB8_ALPHA8_ASTC_10x10_Format||p===SRGB8_ALPHA8_ASTC_12x10_Format||p===SRGB8_ALPHA8_ASTC_12x12_Format){extension=extensions.get('WEBGL_compressed_texture_astc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===RGBA_BPTC_Format){extension=extensions.get('EXT_texture_compression_bptc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===UnsignedInt248Type){if(isWebGL2)return 34042;extension=extensions.get('WEBGL_depth_texture');if(extension!==null){return extension.UNSIGNED_INT_24_8_WEBGL;}else{return null;}}}return{convert:convert};}class ArrayCamera extends PerspectiveCamera{constructor(array=[]){super();this.cameras=array;}}ArrayCamera.prototype.isArrayCamera=true;class Group extends Object3D{constructor(){super();this.type='Group';}}Group.prototype.isGroup=true;const _moveEvent={type:'move'};class WebXRController{constructor(){this._targetRay=null;this._grip=null;this._hand=null;}getHandSpace(){if(this._hand===null){this._hand=new Group();this._hand.matrixAutoUpdate=false;this._hand.visible=false;this._hand.joints={};this._hand.inputState={pinching:false};}return this._hand;}getTargetRaySpace(){if(this._targetRay===null){this._targetRay=new Group();this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false;this._targetRay.hasLinearVelocity=false;this._targetRay.linearVelocity=new Vector3();this._targetRay.hasAngularVelocity=false;this._targetRay.angularVelocity=new Vector3();}return this._targetRay;}getGripSpace(){if(this._grip===null){this._grip=new Group();this._grip.matrixAutoUpdate=false;this._grip.visible=false;this._grip.hasLinearVelocity=false;this._grip.linearVelocity=new Vector3();this._grip.hasAngularVelocity=false;this._grip.angularVelocity=new Vector3();}return this._grip;}dispatchEvent(event){if(this._targetRay!==null){this._targetRay.dispatchEvent(event);}if(this._grip!==null){this._grip.dispatchEvent(event);}if(this._hand!==null){this._hand.dispatchEvent(event);}return this;}disconnect(inputSource){this.dispatchEvent({type:'disconnected',data:inputSource});if(this._targetRay!==null){this._targetRay.visible=false;}if(this._grip!==null){this._grip.visible=false;}if(this._hand!==null){this._hand.visible=false;}return this;}update(inputSource,frame,referenceSpace){let inputPose=null;let gripPose=null;let handPose=null;const targetRay=this._targetRay;const grip=this._grip;const hand=this._hand;if(inputSource&&frame.session.visibilityState!=='visible-blurred'){if(targetRay!==null){inputPose=frame.getPose(inputSource.targetRaySpace,referenceSpace);if(inputPose!==null){targetRay.matrix.fromArray(inputPose.transform.matrix);targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale);if(inputPose.linearVelocity){targetRay.hasLinearVelocity=true;targetRay.linearVelocity.copy(inputPose.linearVelocity);}else{targetRay.hasLinearVelocity=false;}if(inputPose.angularVelocity){targetRay.hasAngularVelocity=true;targetRay.angularVelocity.copy(inputPose.angularVelocity);}else{targetRay.hasAngularVelocity=false;}this.dispatchEvent(_moveEvent);}}if(hand&&inputSource.hand){handPose=true;for(const inputjoint of inputSource.hand.values()){// Update the joints groups with the XRJoint poses\nconst jointPose=frame.getJointPose(inputjoint,referenceSpace);if(hand.joints[inputjoint.jointName]===undefined){// The transform of this joint will be updated with the joint pose on each frame\nconst joint=new Group();joint.matrixAutoUpdate=false;joint.visible=false;hand.joints[inputjoint.jointName]=joint;// ??\nhand.add(joint);}const joint=hand.joints[inputjoint.jointName];if(jointPose!==null){joint.matrix.fromArray(jointPose.transform.matrix);joint.matrix.decompose(joint.position,joint.rotation,joint.scale);joint.jointRadius=jointPose.radius;}joint.visible=jointPose!==null;}// Custom events\n// Check pinchz\nconst indexTip=hand.joints['index-finger-tip'];const thumbTip=hand.joints['thumb-tip'];const distance=indexTip.position.distanceTo(thumbTip.position);const distanceToPinch=0.02;const threshold=0.005;if(hand.inputState.pinching&&distance>distanceToPinch+threshold){hand.inputState.pinching=false;this.dispatchEvent({type:'pinchend',handedness:inputSource.handedness,target:this});}else if(!hand.inputState.pinching&&distance<=distanceToPinch-threshold){hand.inputState.pinching=true;this.dispatchEvent({type:'pinchstart',handedness:inputSource.handedness,target:this});}}else{if(grip!==null&&inputSource.gripSpace){gripPose=frame.getPose(inputSource.gripSpace,referenceSpace);if(gripPose!==null){grip.matrix.fromArray(gripPose.transform.matrix);grip.matrix.decompose(grip.position,grip.rotation,grip.scale);if(gripPose.linearVelocity){grip.hasLinearVelocity=true;grip.linearVelocity.copy(gripPose.linearVelocity);}else{grip.hasLinearVelocity=false;}if(gripPose.angularVelocity){grip.hasAngularVelocity=true;grip.angularVelocity.copy(gripPose.angularVelocity);}else{grip.hasAngularVelocity=false;}}}}}if(targetRay!==null){targetRay.visible=inputPose!==null;}if(grip!==null){grip.visible=gripPose!==null;}if(hand!==null){hand.visible=handPose!==null;}return this;}}class WebXRManager extends EventDispatcher{constructor(renderer,gl){super();const scope=this;const state=renderer.state;let session=null;let framebufferScaleFactor=1.0;let referenceSpace=null;let referenceSpaceType='local-floor';let pose=null;const controllers=[];const inputSourcesMap=new Map();//\nconst cameraL=new PerspectiveCamera();cameraL.layers.enable(1);cameraL.viewport=new Vector4();const cameraR=new PerspectiveCamera();cameraR.layers.enable(2);cameraR.viewport=new Vector4();const cameras=[cameraL,cameraR];const cameraVR=new ArrayCamera();cameraVR.layers.enable(1);cameraVR.layers.enable(2);let _currentDepthNear=null;let _currentDepthFar=null;//\nthis.cameraAutoUpdate=true;this.enabled=false;this.isPresenting=false;this.getController=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getTargetRaySpace();};this.getControllerGrip=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getGripSpace();};this.getHand=function(index){let controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getHandSpace();};//\nfunction onSessionEvent(event){const controller=inputSourcesMap.get(event.inputSource);if(controller){controller.dispatchEvent({type:event.type,data:event.inputSource});}}function onSessionEnd(){inputSourcesMap.forEach(function(controller,inputSource){controller.disconnect(inputSource);});inputSourcesMap.clear();_currentDepthNear=null;_currentDepthFar=null;// restore framebuffer/rendering state\nstate.bindXRFramebuffer(null);renderer.setRenderTarget(renderer.getRenderTarget());//\nanimation.stop();scope.isPresenting=false;scope.dispatchEvent({type:'sessionend'});}this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');}};this.setReferenceSpaceType=function(value){referenceSpaceType=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');}};this.getReferenceSpace=function(){return referenceSpace;};this.getSession=function(){return session;};this.setSession=async function(value){session=value;if(session!==null){session.addEventListener('select',onSessionEvent);session.addEventListener('selectstart',onSessionEvent);session.addEventListener('selectend',onSessionEvent);session.addEventListener('squeeze',onSessionEvent);session.addEventListener('squeezestart',onSessionEvent);session.addEventListener('squeezeend',onSessionEvent);session.addEventListener('end',onSessionEnd);session.addEventListener('inputsourceschange',onInputSourcesChange);const attributes=gl.getContextAttributes();if(attributes.xrCompatible!==true){await gl.makeXRCompatible();}const layerInit={antialias:attributes.antialias,alpha:attributes.alpha,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor:framebufferScaleFactor};// eslint-disable-next-line no-undef\nconst baseLayer=new XRWebGLLayer(session,gl,layerInit);session.updateRenderState({baseLayer:baseLayer});referenceSpace=await session.requestReferenceSpace(referenceSpaceType);animation.setContext(session);animation.start();scope.isPresenting=true;scope.dispatchEvent({type:'sessionstart'});}};function onInputSourcesChange(event){const inputSources=session.inputSources;// Assign inputSources to available controllers\nfor(let i=0;i<controllers.length;i++){inputSourcesMap.set(inputSources[i],controllers[i]);}// Notify disconnected\nfor(let i=0;i<event.removed.length;i++){const inputSource=event.removed[i];const controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'disconnected',data:inputSource});inputSourcesMap.delete(inputSource);}}// Notify connected\nfor(let i=0;i<event.added.length;i++){const inputSource=event.added[i];const controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'connected',data:inputSource});}}}//\nconst cameraLPos=new Vector3();const cameraRPos=new Vector3();/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);const ipd=cameraLPos.distanceTo(cameraRPos);const projL=cameraL.projectionMatrix.elements;const projR=cameraR.projectionMatrix.elements;// VR systems will have identical far and near planes, and\n// most likely identical top and bottom frustum extents.\n// Use the left camera for these values.\nconst near=projL[14]/(projL[10]-1);const far=projL[14]/(projL[10]+1);const topFov=(projL[9]+1)/projL[5];const bottomFov=(projL[9]-1)/projL[5];const leftFov=(projL[8]-1)/projL[0];const rightFov=(projR[8]+1)/projR[0];const left=near*leftFov;const right=near*rightFov;// Calculate the new camera's position offset from the\n// left camera. xOffset should be roughly half `ipd`.\nconst zOffset=ipd/(-leftFov+rightFov);const xOffset=zOffset*-leftFov;// TODO: Better way to apply this offset?\ncameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale);camera.translateX(xOffset);camera.translateZ(zOffset);camera.matrixWorld.compose(camera.position,camera.quaternion,camera.scale);camera.matrixWorldInverse.copy(camera.matrixWorld).invert();// Find the union of the frustum values of the cameras and scale\n// the values so that the near plane's position does not change in world space,\n// although must now be relative to the new union camera.\nconst near2=near+zOffset;const far2=far+zOffset;const left2=left-xOffset;const right2=right+(ipd-xOffset);const top2=topFov*far/far2*near2;const bottom2=bottomFov*far/far2*near2;camera.projectionMatrix.makePerspective(left2,right2,top2,bottom2,near2,far2);}function updateCamera(camera,parent){if(parent===null){camera.matrixWorld.copy(camera.matrix);}else{camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);}camera.matrixWorldInverse.copy(camera.matrixWorld).invert();}this.updateCamera=function(camera){if(session===null)return;cameraVR.near=cameraR.near=cameraL.near=camera.near;cameraVR.far=cameraR.far=cameraL.far=camera.far;if(_currentDepthNear!==cameraVR.near||_currentDepthFar!==cameraVR.far){// Note that the new renderState won't apply until the next frame. See #18320\nsession.updateRenderState({depthNear:cameraVR.near,depthFar:cameraVR.far});_currentDepthNear=cameraVR.near;_currentDepthFar=cameraVR.far;}const parent=camera.parent;const cameras=cameraVR.cameras;updateCamera(cameraVR,parent);for(let i=0;i<cameras.length;i++){updateCamera(cameras[i],parent);}// update camera and its children\ncamera.matrixWorld.copy(cameraVR.matrixWorld);camera.matrix.copy(cameraVR.matrix);camera.matrix.decompose(camera.position,camera.quaternion,camera.scale);const children=camera.children;for(let i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(true);}// update projection matrix for proper view frustum culling\nif(cameras.length===2){setProjectionFromUnion(cameraVR,cameraL,cameraR);}else{// assume single camera setup (AR)\ncameraVR.projectionMatrix.copy(cameraL.projectionMatrix);}};this.getCamera=function(){return cameraVR;};// Animation Loop\nlet onAnimationFrameCallback=null;function onAnimationFrame(time,frame){pose=frame.getViewerPose(referenceSpace);if(pose!==null){const views=pose.views;const baseLayer=session.renderState.baseLayer;state.bindXRFramebuffer(baseLayer.framebuffer);let cameraVRNeedsUpdate=false;// check if it's necessary to rebuild cameraVR's camera list\nif(views.length!==cameraVR.cameras.length){cameraVR.cameras.length=0;cameraVRNeedsUpdate=true;}for(let i=0;i<views.length;i++){const view=views[i];const viewport=baseLayer.getViewport(view);const camera=cameras[i];camera.matrix.fromArray(view.transform.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height);if(i===0){cameraVR.matrix.copy(camera.matrix);}if(cameraVRNeedsUpdate===true){cameraVR.cameras.push(camera);}}}//\nconst inputSources=session.inputSources;for(let i=0;i<controllers.length;i++){const controller=controllers[i];const inputSource=inputSources[i];controller.update(inputSource,frame,referenceSpace);}if(onAnimationFrameCallback)onAnimationFrameCallback(time,frame);}const animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;};this.dispose=function(){};}}function WebGLMaterials(properties){function refreshFogUniforms(uniforms,fog){uniforms.fogColor.value.copy(fog.color);if(fog.isFog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far;}else if(fog.isFogExp2){uniforms.fogDensity.value=fog.density;}}function refreshMaterialUniforms(uniforms,material,pixelRatio,height,transmissionRenderTarget){if(material.isMeshBasicMaterial){refreshUniformsCommon(uniforms,material);}else if(material.isMeshLambertMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsLambert(uniforms,material);}else if(material.isMeshToonMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsToon(uniforms,material);}else if(material.isMeshPhongMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsPhong(uniforms,material);}else if(material.isMeshStandardMaterial){refreshUniformsCommon(uniforms,material);if(material.isMeshPhysicalMaterial){refreshUniformsPhysical(uniforms,material,transmissionRenderTarget);}else{refreshUniformsStandard(uniforms,material);}}else if(material.isMeshMatcapMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsMatcap(uniforms,material);}else if(material.isMeshDepthMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDepth(uniforms,material);}else if(material.isMeshDistanceMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDistance(uniforms,material);}else if(material.isMeshNormalMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsNormal(uniforms,material);}else if(material.isLineBasicMaterial){refreshUniformsLine(uniforms,material);if(material.isLineDashedMaterial){refreshUniformsDash(uniforms,material);}}else if(material.isPointsMaterial){refreshUniformsPoints(uniforms,material,pixelRatio,height);}else if(material.isSpriteMaterial){refreshUniformsSprites(uniforms,material);}else if(material.isShadowMaterial){uniforms.color.value.copy(material.color);uniforms.opacity.value=material.opacity;}else if(material.isShaderMaterial){material.uniformsNeedUpdate=false;// #15581\n}}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;if(material.color){uniforms.diffuse.value.copy(material.color);}if(material.emissive){uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);}if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.specularMap){uniforms.specularMap.value=material.specularMap;}const envMap=properties.get(material).envMap;if(envMap){uniforms.envMap.value=envMap;uniforms.flipEnvMap.value=envMap.isCubeTexture&&envMap._needsFlipEnvMap?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;const maxMipLevel=properties.get(envMap).__maxMipLevel;if(maxMipLevel!==undefined){uniforms.maxMipLevel.value=maxMipLevel;}}if(material.lightMap){uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;}if(material.aoMap){uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. specular map\n// 3. displacementMap map\n// 4. normal map\n// 5. bump map\n// 6. roughnessMap map\n// 7. metalnessMap map\n// 8. alphaMap map\n// 9. emissiveMap map\n// 10. clearcoat map\n// 11. clearcoat normal map\n// 12. clearcoat roughnessMap map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.roughnessMap){uvScaleMap=material.roughnessMap;}else if(material.metalnessMap){uvScaleMap=material.metalnessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}else if(material.clearcoatMap){uvScaleMap=material.clearcoatMap;}else if(material.clearcoatNormalMap){uvScaleMap=material.clearcoatNormalMap;}else if(material.clearcoatRoughnessMap){uvScaleMap=material.clearcoatRoughnessMap;}if(uvScaleMap!==undefined){// backwards compatibility\nif(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}// uv repeat and offset setting priorities for uv2\n// 1. ao map\n// 2. light map\nlet uv2ScaleMap;if(material.aoMap){uv2ScaleMap=material.aoMap;}else if(material.lightMap){uv2ScaleMap=material.lightMap;}if(uv2ScaleMap!==undefined){// backwards compatibility\nif(uv2ScaleMap.isWebGLRenderTarget){uv2ScaleMap=uv2ScaleMap.texture;}if(uv2ScaleMap.matrixAutoUpdate===true){uv2ScaleMap.updateMatrix();}uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);}}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale;}function refreshUniformsPoints(uniforms,material,pixelRatio,height){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.size.value=material.size*pixelRatio;uniforms.scale.value=height*0.5;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsSprites(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.rotation.value=material.rotation;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nlet uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsLambert(uniforms,material){if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}}function refreshUniformsPhong(uniforms,material){uniforms.specular.value.copy(material.specular);uniforms.shininess.value=Math.max(material.shininess,1e-4);// to prevent pow( 0.0, 0.0 )\nif(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsToon(uniforms,material){if(material.gradientMap){uniforms.gradientMap.value=material.gradientMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsStandard(uniforms,material){uniforms.roughness.value=material.roughness;uniforms.metalness.value=material.metalness;if(material.roughnessMap){uniforms.roughnessMap.value=material.roughnessMap;}if(material.metalnessMap){uniforms.metalnessMap.value=material.metalnessMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}const envMap=properties.get(material).envMap;if(envMap){//uniforms.envMap.value = material.envMap; // part of uniforms common\nuniforms.envMapIntensity.value=material.envMapIntensity;}}function refreshUniformsPhysical(uniforms,material,transmissionRenderTarget){refreshUniformsStandard(uniforms,material);uniforms.reflectivity.value=material.reflectivity;// also part of uniforms common\nuniforms.clearcoat.value=material.clearcoat;uniforms.clearcoatRoughness.value=material.clearcoatRoughness;if(material.sheen)uniforms.sheen.value.copy(material.sheen);if(material.clearcoatMap){uniforms.clearcoatMap.value=material.clearcoatMap;}if(material.clearcoatRoughnessMap){uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap;}if(material.clearcoatNormalMap){uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap;if(material.side===BackSide){uniforms.clearcoatNormalScale.value.negate();}}uniforms.transmission.value=material.transmission;if(material.transmissionMap){uniforms.transmissionMap.value=material.transmissionMap;}if(material.transmission>0.0){uniforms.transmissionSamplerMap.value=transmissionRenderTarget.texture;uniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width,transmissionRenderTarget.height);}uniforms.thickness.value=material.thickness;if(material.thicknessMap){uniforms.thicknessMap.value=material.thicknessMap;}uniforms.attenuationDistance.value=material.attenuationDistance;uniforms.attenuationColor.value.copy(material.attenuationColor);}function refreshUniformsMatcap(uniforms,material){if(material.matcap){uniforms.matcap.value=material.matcap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDepth(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDistance(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}uniforms.referencePosition.value.copy(material.referencePosition);uniforms.nearDistance.value=material.nearDistance;uniforms.farDistance.value=material.farDistance;}function refreshUniformsNormal(uniforms,material){if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}return{refreshFogUniforms:refreshFogUniforms,refreshMaterialUniforms:refreshMaterialUniforms};}function createCanvasElement(){const canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');canvas.style.display='block';return canvas;}function WebGLRenderer(parameters){parameters=parameters||{};const _canvas=parameters.canvas!==undefined?parameters.canvas:createCanvasElement(),_context=parameters.context!==undefined?parameters.context:null,_alpha=parameters.alpha!==undefined?parameters.alpha:false,_depth=parameters.depth!==undefined?parameters.depth:true,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_powerPreference=parameters.powerPreference!==undefined?parameters.powerPreference:'default',_failIfMajorPerformanceCaveat=parameters.failIfMajorPerformanceCaveat!==undefined?parameters.failIfMajorPerformanceCaveat:false;let currentRenderList=null;let currentRenderState=null;// render() can be called from within a callback triggered by another render.\n// We track this so that the nested render call gets its list and state isolated from the parent render call.\nconst renderListStack=[];const renderStateStack=[];// public properties\nthis.domElement=_canvas;// Debug configuration container\nthis.debug={/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */checkShaderErrors:true};// clearing\nthis.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;// scene graph\nthis.sortObjects=true;// user-defined clipping\nthis.clippingPlanes=[];this.localClippingEnabled=false;// physically based shading\nthis.gammaFactor=2.0;// for backwards compatibility\nthis.outputEncoding=LinearEncoding;// physical lights\nthis.physicallyCorrectLights=false;// tone mapping\nthis.toneMapping=NoToneMapping;this.toneMappingExposure=1.0;// internal properties\nconst _this=this;let _isContextLost=false;// internal state cache\nlet _currentActiveCubeFace=0;let _currentActiveMipmapLevel=0;let _currentRenderTarget=null;let _currentMaterialId=-1;let _currentCamera=null;const _currentViewport=new Vector4();const _currentScissor=new Vector4();let _currentScissorTest=null;//\nlet _width=_canvas.width;let _height=_canvas.height;let _pixelRatio=1;let _opaqueSort=null;let _transparentSort=null;const _viewport=new Vector4(0,0,_width,_height);const _scissor=new Vector4(0,0,_width,_height);let _scissorTest=false;//\nconst _currentDrawBuffers=[];// frustum\nconst _frustum=new Frustum();// clipping\nlet _clippingEnabled=false;let _localClippingEnabled=false;// transmission\nlet _transmissionRenderTarget=null;// camera matrices cache\nconst _projScreenMatrix=new Matrix4();const _vector3=new Vector3();const _emptyScene={background:null,fog:null,environment:null,overrideMaterial:null,isScene:true};function getTargetPixelRatio(){return _currentRenderTarget===null?_pixelRatio:1;}// initialize\nlet _gl=_context;function getContext(contextNames,contextAttributes){for(let i=0;i<contextNames.length;i++){const contextName=contextNames[i];const context=_canvas.getContext(contextName,contextAttributes);if(context!==null)return context;}return null;}try{const contextAttributes={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference,failIfMajorPerformanceCaveat:_failIfMajorPerformanceCaveat};// event listeners must be registered before WebGL context is created, see #12753\n_canvas.addEventListener('webglcontextlost',onContextLost,false);_canvas.addEventListener('webglcontextrestored',onContextRestore,false);if(_gl===null){const contextNames=['webgl2','webgl','experimental-webgl'];if(_this.isWebGL1Renderer===true){contextNames.shift();}_gl=getContext(contextNames,contextAttributes);if(_gl===null){if(getContext(contextNames)){throw new Error('Error creating WebGL context with your selected attributes.');}else{throw new Error('Error creating WebGL context.');}}}// Some experimental-webgl implementations do not have getShaderPrecisionFormat\nif(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{'rangeMin':1,'rangeMax':1,'precision':1};};}}catch(error){console.error('THREE.WebGLRenderer: '+error.message);throw error;}let extensions,capabilities,state,info;let properties,textures,cubemaps,attributes,geometries,objects;let programCache,materials,renderLists,renderStates,clipping,shadowMap;let background,morphtargets,bufferRenderer,indexedBufferRenderer;let utils,bindingStates;function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,extensions,parameters);extensions.init(capabilities);utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,capabilities);_currentDrawBuffers[0]=1029;info=new WebGLInfo(_gl);properties=new WebGLProperties();textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);cubemaps=new WebGLCubeMaps(_this);attributes=new WebGLAttributes(_gl,capabilities);bindingStates=new WebGLBindingStates(_gl,extensions,attributes,capabilities);geometries=new WebGLGeometries(_gl,attributes,info,bindingStates);objects=new WebGLObjects(_gl,geometries,attributes,info);morphtargets=new WebGLMorphtargets(_gl);clipping=new WebGLClipping(properties);programCache=new WebGLPrograms(_this,cubemaps,extensions,capabilities,bindingStates,clipping);materials=new WebGLMaterials(properties);renderLists=new WebGLRenderLists(properties);renderStates=new WebGLRenderStates(extensions,capabilities);background=new WebGLBackground(_this,cubemaps,state,objects,_premultipliedAlpha);shadowMap=new WebGLShadowMap(_this,objects,capabilities);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);info.programs=programCache.programs;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.shadowMap=shadowMap;_this.state=state;_this.info=info;}initGLContext();// xr\nconst xr=new WebXRManager(_this,_gl);this.xr=xr;// API\nthis.getContext=function(){return _gl;};this.getContextAttributes=function(){return _gl.getContextAttributes();};this.forceContextLoss=function(){const extension=extensions.get('WEBGL_lose_context');if(extension)extension.loseContext();};this.forceContextRestore=function(){const extension=extensions.get('WEBGL_lose_context');if(extension)extension.restoreContext();};this.getPixelRatio=function(){return _pixelRatio;};this.setPixelRatio=function(value){if(value===undefined)return;_pixelRatio=value;this.setSize(_width,_height,false);};this.getSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width,_height);};this.setSize=function(width,height,updateStyle){if(xr.isPresenting){console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');return;}_width=width;_height=height;_canvas.width=Math.floor(width*_pixelRatio);_canvas.height=Math.floor(height*_pixelRatio);if(updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}this.setViewport(0,0,width,height);};this.getDrawingBufferSize=function(target){if(target===undefined){console.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');target=new Vector2();}return target.set(_width*_pixelRatio,_height*_pixelRatio).floor();};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=Math.floor(width*pixelRatio);_canvas.height=Math.floor(height*pixelRatio);this.setViewport(0,0,width,height);};this.getCurrentViewport=function(target){if(target===undefined){console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');target=new Vector4();}return target.copy(_currentViewport);};this.getViewport=function(target){return target.copy(_viewport);};this.setViewport=function(x,y,width,height){if(x.isVector4){_viewport.set(x.x,x.y,x.z,x.w);}else{_viewport.set(x,y,width,height);}state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());};this.getScissor=function(target){return target.copy(_scissor);};this.setScissor=function(x,y,width,height){if(x.isVector4){_scissor.set(x.x,x.y,x.z,x.w);}else{_scissor.set(x,y,width,height);}state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());};this.getScissorTest=function(){return _scissorTest;};this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean);};this.setOpaqueSort=function(method){_opaqueSort=method;};this.setTransparentSort=function(method){_transparentSort=method;};// Clearing\nthis.getClearColor=function(target){if(target===undefined){console.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument');target=new Color();}return target.copy(background.getClearColor());};this.setClearColor=function(){background.setClearColor.apply(background,arguments);};this.getClearAlpha=function(){return background.getClearAlpha();};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments);};this.clear=function(color,depth,stencil){let bits=0;if(color===undefined||color)bits|=16384;if(depth===undefined||depth)bits|=256;if(stencil===undefined||stencil)bits|=1024;_gl.clear(bits);};this.clearColor=function(){this.clear(true,false,false);};this.clearDepth=function(){this.clear(false,true,false);};this.clearStencil=function(){this.clear(false,false,true);};//\nthis.dispose=function(){_canvas.removeEventListener('webglcontextlost',onContextLost,false);_canvas.removeEventListener('webglcontextrestored',onContextRestore,false);renderLists.dispose();renderStates.dispose();properties.dispose();cubemaps.dispose();objects.dispose();bindingStates.dispose();xr.dispose();xr.removeEventListener('sessionstart',onXRSessionStart);xr.removeEventListener('sessionend',onXRSessionEnd);if(_transmissionRenderTarget){_transmissionRenderTarget.dispose();_transmissionRenderTarget=null;}animation.stop();};// Events\nfunction onContextLost(event){event.preventDefault();console.log('THREE.WebGLRenderer: Context Lost.');_isContextLost=true;}function onContextRestore()/* event */{console.log('THREE.WebGLRenderer: Context Restored.');_isContextLost=false;const infoAutoReset=info.autoReset;const shadowMapEnabled=shadowMap.enabled;const shadowMapAutoUpdate=shadowMap.autoUpdate;const shadowMapNeedsUpdate=shadowMap.needsUpdate;const shadowMapType=shadowMap.type;initGLContext();info.autoReset=infoAutoReset;shadowMap.enabled=shadowMapEnabled;shadowMap.autoUpdate=shadowMapAutoUpdate;shadowMap.needsUpdate=shadowMapNeedsUpdate;shadowMap.type=shadowMapType;}function onMaterialDispose(event){const material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);}// Buffer deallocation\nfunction deallocateMaterial(material){releaseMaterialProgramReferences(material);properties.remove(material);}function releaseMaterialProgramReferences(material){const programs=properties.get(material).programs;if(programs!==undefined){programs.forEach(function(program){programCache.releaseProgram(program);});}}// Buffer rendering\nfunction renderObjectImmediate(object,program){object.render(function(object){_this.renderBufferImmediate(object,program);});}this.renderBufferImmediate=function(object,program){bindingStates.initAttributes();const buffers=properties.get(object);if(object.hasPositions&&!buffers.position)buffers.position=_gl.createBuffer();if(object.hasNormals&&!buffers.normal)buffers.normal=_gl.createBuffer();if(object.hasUvs&&!buffers.uv)buffers.uv=_gl.createBuffer();if(object.hasColors&&!buffers.color)buffers.color=_gl.createBuffer();const programAttributes=program.getAttributes();if(object.hasPositions){_gl.bindBuffer(34962,buffers.position);_gl.bufferData(34962,object.positionArray,35048);bindingStates.enableAttribute(programAttributes.position);_gl.vertexAttribPointer(programAttributes.position,3,5126,false,0,0);}if(object.hasNormals){_gl.bindBuffer(34962,buffers.normal);_gl.bufferData(34962,object.normalArray,35048);bindingStates.enableAttribute(programAttributes.normal);_gl.vertexAttribPointer(programAttributes.normal,3,5126,false,0,0);}if(object.hasUvs){_gl.bindBuffer(34962,buffers.uv);_gl.bufferData(34962,object.uvArray,35048);bindingStates.enableAttribute(programAttributes.uv);_gl.vertexAttribPointer(programAttributes.uv,2,5126,false,0,0);}if(object.hasColors){_gl.bindBuffer(34962,buffers.color);_gl.bufferData(34962,object.colorArray,35048);bindingStates.enableAttribute(programAttributes.color);_gl.vertexAttribPointer(programAttributes.color,3,5126,false,0,0);}bindingStates.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);object.count=0;};this.renderBufferDirect=function(camera,scene,geometry,material,object,group){if(scene===null)scene=_emptyScene;// renderBufferDirect second parameter used to be fog (could be null)\nconst frontFaceCW=object.isMesh&&object.matrixWorld.determinant()<0;const program=setProgram(camera,scene,material,object);state.setMaterial(material,frontFaceCW);//\nlet index=geometry.index;const position=geometry.attributes.position;//\nif(index===null){if(position===undefined||position.count===0)return;}else if(index.count===0){return;}//\nlet rangeFactor=1;if(material.wireframe===true){index=geometries.getWireframeAttribute(geometry);rangeFactor=2;}if(material.morphTargets||material.morphNormals){morphtargets.update(object,geometry,material,program);}bindingStates.setup(object,material,program,geometry,index);let attribute;let renderer=bufferRenderer;if(index!==null){attribute=attributes.get(index);renderer=indexedBufferRenderer;renderer.setIndex(attribute);}//\nconst dataCount=index!==null?index.count:position.count;const rangeStart=geometry.drawRange.start*rangeFactor;const rangeCount=geometry.drawRange.count*rangeFactor;const groupStart=group!==null?group.start*rangeFactor:0;const groupCount=group!==null?group.count*rangeFactor:Infinity;const drawStart=Math.max(rangeStart,groupStart);const drawEnd=Math.min(dataCount,rangeStart+rangeCount,groupStart+groupCount)-1;const drawCount=Math.max(0,drawEnd-drawStart+1);if(drawCount===0)return;//\nif(object.isMesh){if(material.wireframe===true){state.setLineWidth(material.wireframeLinewidth*getTargetPixelRatio());renderer.setMode(1);}else{renderer.setMode(4);}}else if(object.isLine){let lineWidth=material.linewidth;if(lineWidth===undefined)lineWidth=1;// Not using Line*Material\nstate.setLineWidth(lineWidth*getTargetPixelRatio());if(object.isLineSegments){renderer.setMode(1);}else if(object.isLineLoop){renderer.setMode(2);}else{renderer.setMode(3);}}else if(object.isPoints){renderer.setMode(0);}else if(object.isSprite){renderer.setMode(4);}if(object.isInstancedMesh){renderer.renderInstances(drawStart,drawCount,object.count);}else if(geometry.isInstancedBufferGeometry){const instanceCount=Math.min(geometry.instanceCount,geometry._maxInstanceCount);renderer.renderInstances(drawStart,drawCount,instanceCount);}else{renderer.render(drawStart,drawCount);}};// Compile\nthis.compile=function(scene,camera){currentRenderState=renderStates.get(scene);currentRenderState.init();scene.traverseVisible(function(object){if(object.isLight&&object.layers.test(camera.layers)){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}});currentRenderState.setupLights();scene.traverse(function(object){const material=object.material;if(material){if(Array.isArray(material)){for(let i=0;i<material.length;i++){const material2=material[i];getProgram(material2,scene,object);}}else{getProgram(material,scene,object);}}});};// Animation Loop\nlet onAnimationFrameCallback=null;function onAnimationFrame(time){if(onAnimationFrameCallback)onAnimationFrameCallback(time);}function onXRSessionStart(){animation.stop();}function onXRSessionEnd(){animation.start();}const animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);if(typeof window!=='undefined')animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;xr.setAnimationLoop(callback);callback===null?animation.stop():animation.start();};xr.addEventListener('sessionstart',onXRSessionStart);xr.addEventListener('sessionend',onXRSessionEnd);// Rendering\nthis.render=function(scene,camera){if(camera!==undefined&&camera.isCamera!==true){console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}if(_isContextLost===true)return;// update scene graph\nif(scene.autoUpdate===true)scene.updateMatrixWorld();// update camera matrices and frustum\nif(camera.parent===null)camera.updateMatrixWorld();if(xr.enabled===true&&xr.isPresenting===true){if(xr.cameraAutoUpdate===true)xr.updateCamera(camera);camera=xr.getCamera();// use XR camera for rendering\n}//\nif(scene.isScene===true)scene.onBeforeRender(_this,scene,camera,_currentRenderTarget);currentRenderState=renderStates.get(scene,renderStateStack.length);currentRenderState.init();renderStateStack.push(currentRenderState);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromProjectionMatrix(_projScreenMatrix);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=clipping.init(this.clippingPlanes,_localClippingEnabled,camera);currentRenderList=renderLists.get(scene,renderListStack.length);currentRenderList.init();renderListStack.push(currentRenderList);projectObject(scene,camera,0,_this.sortObjects);currentRenderList.finish();if(_this.sortObjects===true){currentRenderList.sort(_opaqueSort,_transparentSort);}//\nif(_clippingEnabled===true)clipping.beginShadows();const shadowsArray=currentRenderState.state.shadowsArray;shadowMap.render(shadowsArray,scene,camera);currentRenderState.setupLights();currentRenderState.setupLightsView(camera);if(_clippingEnabled===true)clipping.endShadows();//\nif(this.info.autoReset===true)this.info.reset();//\nbackground.render(currentRenderList,scene);// render scene\nconst opaqueObjects=currentRenderList.opaque;const transmissiveObjects=currentRenderList.transmissive;const transparentObjects=currentRenderList.transparent;if(opaqueObjects.length>0)renderObjects(opaqueObjects,scene,camera);if(transmissiveObjects.length>0)renderTransmissiveObjects(opaqueObjects,transmissiveObjects,scene,camera);if(transparentObjects.length>0)renderObjects(transparentObjects,scene,camera);//\nif(_currentRenderTarget!==null){// Generate mipmap if we're using any kind of mipmap filtering\ntextures.updateRenderTargetMipmap(_currentRenderTarget);// resolve multisample renderbuffers to a single-sample texture if necessary\ntextures.updateMultisampleRenderTarget(_currentRenderTarget);}//\nif(scene.isScene===true)scene.onAfterRender(_this,scene,camera);// Ensure depth buffer writing is enabled so it can be cleared on next render\nstate.buffers.depth.setTest(true);state.buffers.depth.setMask(true);state.buffers.color.setMask(true);state.setPolygonOffset(false);// _gl.finish();\nbindingStates.resetDefaultState();_currentMaterialId=-1;_currentCamera=null;renderStateStack.pop();if(renderStateStack.length>0){currentRenderState=renderStateStack[renderStateStack.length-1];}else{currentRenderState=null;}renderListStack.pop();if(renderListStack.length>0){currentRenderList=renderListStack[renderListStack.length-1];}else{currentRenderList=null;}};function projectObject(object,camera,groupOrder,sortObjects){if(object.visible===false)return;const visible=object.layers.test(camera.layers);if(visible){if(object.isGroup){groupOrder=object.renderOrder;}else if(object.isLOD){if(object.autoUpdate===true)object.update(camera);}else if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}const geometry=objects.update(object);const material=object.material;if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}else if(object.isImmediateRenderObject){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);}else if(object.isMesh||object.isLine||object.isPoints){if(object.isSkinnedMesh){// update skeleton only once in a frame\nif(object.skeleton.frame!==info.render.frame){object.skeleton.update();object.skeleton.frame=info.render.frame;}}if(!object.frustumCulled||_frustum.intersectsObject(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}const geometry=objects.update(object);const material=object.material;if(Array.isArray(material)){const groups=geometry.groups;for(let i=0,l=groups.length;i<l;i++){const group=groups[i];const groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group);}}}else if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}}const children=object.children;for(let i=0,l=children.length;i<l;i++){projectObject(children[i],camera,groupOrder,sortObjects);}}function renderTransmissiveObjects(opaqueObjects,transmissiveObjects,scene,camera){if(_transmissionRenderTarget===null){_transmissionRenderTarget=new WebGLRenderTarget(1024,1024,{generateMipmaps:true,minFilter:LinearMipmapLinearFilter,magFilter:NearestFilter,wrapS:ClampToEdgeWrapping,wrapT:ClampToEdgeWrapping});}const currentRenderTarget=_this.getRenderTarget();_this.setRenderTarget(_transmissionRenderTarget);_this.clear();renderObjects(opaqueObjects,scene,camera);textures.updateRenderTargetMipmap(_transmissionRenderTarget);_this.setRenderTarget(currentRenderTarget);renderObjects(transmissiveObjects,scene,camera);}function renderObjects(renderList,scene,camera){const overrideMaterial=scene.isScene===true?scene.overrideMaterial:null;for(let i=0,l=renderList.length;i<l;i++){const renderItem=renderList[i];const object=renderItem.object;const geometry=renderItem.geometry;const material=overrideMaterial===null?renderItem.material:overrideMaterial;const group=renderItem.group;if(camera.isArrayCamera){const cameras=camera.cameras;for(let j=0,jl=cameras.length;j<jl;j++){const camera2=cameras[j];if(object.layers.test(camera2.layers)){state.viewport(_currentViewport.copy(camera2.viewport));currentRenderState.setupLightsView(camera2);renderObject(object,scene,camera2,geometry,material,group);}}}else{renderObject(object,scene,camera,geometry,material,group);}}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);if(object.isImmediateRenderObject){const program=setProgram(camera,scene,material,object);state.setMaterial(material);bindingStates.reset();renderObjectImmediate(object,program);}else{_this.renderBufferDirect(camera,scene,geometry,material,object,group);}object.onAfterRender(_this,scene,camera,geometry,material,group);}function getProgram(material,scene,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\nconst materialProperties=properties.get(material);const lights=currentRenderState.state.lights;const shadowsArray=currentRenderState.state.shadowsArray;const lightsStateVersion=lights.state.version;const parameters=programCache.getParameters(material,lights.state,shadowsArray,scene,object);const programCacheKey=programCache.getProgramCacheKey(parameters);let programs=materialProperties.programs;// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\nmaterialProperties.environment=material.isMeshStandardMaterial?scene.environment:null;materialProperties.fog=scene.fog;materialProperties.envMap=cubemaps.get(material.envMap||materialProperties.environment);if(programs===undefined){// new material\nmaterial.addEventListener('dispose',onMaterialDispose);programs=new Map();materialProperties.programs=programs;}let program=programs.get(programCacheKey);if(program!==undefined){// early out if program and light state is identical\nif(materialProperties.currentProgram===program&&materialProperties.lightsStateVersion===lightsStateVersion){updateCommonMaterialProperties(material,parameters);return program;}}else{parameters.uniforms=programCache.getUniforms(material);material.onBuild(parameters,_this);material.onBeforeCompile(parameters,_this);program=programCache.acquireProgram(parameters,programCacheKey);programs.set(programCacheKey,program);materialProperties.uniforms=parameters.uniforms;}const uniforms=materialProperties.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||material.clipping===true){uniforms.clippingPlanes=clipping.uniform;}updateCommonMaterialProperties(material,parameters);// store the light setup it was created for\nmaterialProperties.needsLights=materialNeedsLights(material);materialProperties.lightsStateVersion=lightsStateVersion;if(materialProperties.needsLights){// wire up the material to this renderer's lighting state\nuniforms.ambientLightColor.value=lights.state.ambient;uniforms.lightProbe.value=lights.state.probe;uniforms.directionalLights.value=lights.state.directional;uniforms.directionalLightShadows.value=lights.state.directionalShadow;uniforms.spotLights.value=lights.state.spot;uniforms.spotLightShadows.value=lights.state.spotShadow;uniforms.rectAreaLights.value=lights.state.rectArea;uniforms.ltc_1.value=lights.state.rectAreaLTC1;uniforms.ltc_2.value=lights.state.rectAreaLTC2;uniforms.pointLights.value=lights.state.point;uniforms.pointLightShadows.value=lights.state.pointShadow;uniforms.hemisphereLights.value=lights.state.hemi;uniforms.directionalShadowMap.value=lights.state.directionalShadowMap;uniforms.directionalShadowMatrix.value=lights.state.directionalShadowMatrix;uniforms.spotShadowMap.value=lights.state.spotShadowMap;uniforms.spotShadowMatrix.value=lights.state.spotShadowMatrix;uniforms.pointShadowMap.value=lights.state.pointShadowMap;uniforms.pointShadowMatrix.value=lights.state.pointShadowMatrix;// TODO (abelnation): add area lights shadow info to uniforms\n}const progUniforms=program.getUniforms();const uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,uniforms);materialProperties.currentProgram=program;materialProperties.uniformsList=uniformsList;return program;}function updateCommonMaterialProperties(material,parameters){const materialProperties=properties.get(material);materialProperties.outputEncoding=parameters.outputEncoding;materialProperties.instancing=parameters.instancing;materialProperties.skinning=parameters.skinning;materialProperties.numClippingPlanes=parameters.numClippingPlanes;materialProperties.numIntersection=parameters.numClipIntersection;materialProperties.vertexAlphas=parameters.vertexAlphas;}function setProgram(camera,scene,material,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\ntextures.resetTextureUnits();const fog=scene.fog;const environment=material.isMeshStandardMaterial?scene.environment:null;const encoding=_currentRenderTarget===null?_this.outputEncoding:_currentRenderTarget.texture.encoding;const envMap=cubemaps.get(material.envMap||environment);const vertexAlphas=material.vertexColors===true&&object.geometry&&object.geometry.attributes.color&&object.geometry.attributes.color.itemSize===4;const materialProperties=properties.get(material);const lights=currentRenderState.state.lights;if(_clippingEnabled===true){if(_localClippingEnabled===true||camera!==_currentCamera){const useCache=camera===_currentCamera&&material.id===_currentMaterialId;// we might want to call this function with some ClippingGroup\n// object instead of the material, once it becomes feasible\n// (#8465, #8379)\nclipping.setState(material,camera,useCache);}}//\nlet needsProgramChange=false;if(material.version===materialProperties.__version){if(materialProperties.needsLights&&materialProperties.lightsStateVersion!==lights.state.version){needsProgramChange=true;}else if(materialProperties.outputEncoding!==encoding){needsProgramChange=true;}else if(object.isInstancedMesh&&materialProperties.instancing===false){needsProgramChange=true;}else if(!object.isInstancedMesh&&materialProperties.instancing===true){needsProgramChange=true;}else if(object.isSkinnedMesh&&materialProperties.skinning===false){needsProgramChange=true;}else if(!object.isSkinnedMesh&&materialProperties.skinning===true){needsProgramChange=true;}else if(materialProperties.envMap!==envMap){needsProgramChange=true;}else if(material.fog&&materialProperties.fog!==fog){needsProgramChange=true;}else if(materialProperties.numClippingPlanes!==undefined&&(materialProperties.numClippingPlanes!==clipping.numPlanes||materialProperties.numIntersection!==clipping.numIntersection)){needsProgramChange=true;}else if(materialProperties.vertexAlphas!==vertexAlphas){needsProgramChange=true;}}else{needsProgramChange=true;materialProperties.__version=material.version;}//\nlet program=materialProperties.currentProgram;if(needsProgramChange===true){program=getProgram(material,scene,object);}let refreshProgram=false;let refreshMaterial=false;let refreshLights=false;const p_uniforms=program.getUniforms(),m_uniforms=materialProperties.uniforms;if(state.useProgram(program.program)){refreshProgram=true;refreshMaterial=true;refreshLights=true;}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(refreshProgram||_currentCamera!==camera){p_uniforms.setValue(_gl,'projectionMatrix',camera.projectionMatrix);if(capabilities.logarithmicDepthBuffer){p_uniforms.setValue(_gl,'logDepthBufFC',2.0/(Math.log(camera.far+1.0)/Math.LN2));}if(_currentCamera!==camera){_currentCamera=camera;// lighting uniforms depend on the camera so enforce an update\n// now, in case this material supports lights - or later, when\n// the next material that does gets activated:\nrefreshMaterial=true;// set to true on material change\nrefreshLights=true;// remains set until update done\n}// load material specific uniforms\n// (shader material also gets them for the sake of genericity)\nif(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshStandardMaterial||material.envMap){const uCamPos=p_uniforms.map.cameraPosition;if(uCamPos!==undefined){uCamPos.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));}}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial){p_uniforms.setValue(_gl,'isOrthographic',camera.isOrthographicCamera===true);}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.isShadowMaterial||object.isSkinnedMesh){p_uniforms.setValue(_gl,'viewMatrix',camera.matrixWorldInverse);}}// skinning uniforms must be set even if material didn't change\n// auto-setting of texture unit for bone texture must go before other textures\n// otherwise textures used for skinning can take over texture units reserved for other material textures\nif(object.isSkinnedMesh){p_uniforms.setOptional(_gl,object,'bindMatrix');p_uniforms.setOptional(_gl,object,'bindMatrixInverse');const skeleton=object.skeleton;if(skeleton){if(capabilities.floatVertexTextures){if(skeleton.boneTexture===null)skeleton.computeBoneTexture();p_uniforms.setValue(_gl,'boneTexture',skeleton.boneTexture,textures);p_uniforms.setValue(_gl,'boneTextureSize',skeleton.boneTextureSize);}else{p_uniforms.setOptional(_gl,skeleton,'boneMatrices');}}}if(refreshMaterial||materialProperties.receiveShadow!==object.receiveShadow){materialProperties.receiveShadow=object.receiveShadow;p_uniforms.setValue(_gl,'receiveShadow',object.receiveShadow);}if(refreshMaterial){p_uniforms.setValue(_gl,'toneMappingExposure',_this.toneMappingExposure);if(materialProperties.needsLights){// the current material requires lighting info\n// note: all lighting uniforms are always set correctly\n// they simply reference the renderer's state for their\n// values\n//\n// use the current material's .needsUpdate flags to set\n// the GL state when required\nmarkUniformsLightsNeedsUpdate(m_uniforms,refreshLights);}// refresh uniforms common to several materials\nif(fog&&material.fog){materials.refreshFogUniforms(m_uniforms,fog);}materials.refreshMaterialUniforms(m_uniforms,material,_pixelRatio,_height,_transmissionRenderTarget);WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);}if(material.isShaderMaterial&&material.uniformsNeedUpdate===true){WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);material.uniformsNeedUpdate=false;}if(material.isSpriteMaterial){p_uniforms.setValue(_gl,'center',object.center);}// common matrices\np_uniforms.setValue(_gl,'modelViewMatrix',object.modelViewMatrix);p_uniforms.setValue(_gl,'normalMatrix',object.normalMatrix);p_uniforms.setValue(_gl,'modelMatrix',object.matrixWorld);return program;}// If uniforms are marked as clean, they don't need to be loaded to the GPU.\nfunction markUniformsLightsNeedsUpdate(uniforms,value){uniforms.ambientLightColor.needsUpdate=value;uniforms.lightProbe.needsUpdate=value;uniforms.directionalLights.needsUpdate=value;uniforms.directionalLightShadows.needsUpdate=value;uniforms.pointLights.needsUpdate=value;uniforms.pointLightShadows.needsUpdate=value;uniforms.spotLights.needsUpdate=value;uniforms.spotLightShadows.needsUpdate=value;uniforms.rectAreaLights.needsUpdate=value;uniforms.hemisphereLights.needsUpdate=value;}function materialNeedsLights(material){return material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&material.lights===true;}this.getActiveCubeFace=function(){return _currentActiveCubeFace;};this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel;};this.getRenderTarget=function(){return _currentRenderTarget;};this.setRenderTarget=function(renderTarget,activeCubeFace=0,activeMipmapLevel=0){_currentRenderTarget=renderTarget;_currentActiveCubeFace=activeCubeFace;_currentActiveMipmapLevel=activeMipmapLevel;if(renderTarget&&properties.get(renderTarget).__webglFramebuffer===undefined){textures.setupRenderTarget(renderTarget);}let framebuffer=null;let isCube=false;let isRenderTarget3D=false;if(renderTarget){const texture=renderTarget.texture;if(texture.isDataTexture3D||texture.isDataTexture2DArray){isRenderTarget3D=true;}const __webglFramebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget){framebuffer=__webglFramebuffer[activeCubeFace];isCube=true;}else if(renderTarget.isWebGLMultisampleRenderTarget){framebuffer=properties.get(renderTarget).__webglMultisampledFramebuffer;}else{framebuffer=__webglFramebuffer;}_currentViewport.copy(renderTarget.viewport);_currentScissor.copy(renderTarget.scissor);_currentScissorTest=renderTarget.scissorTest;}else{_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();_currentScissorTest=_scissorTest;}const framebufferBound=state.bindFramebuffer(36160,framebuffer);if(framebufferBound&&capabilities.drawBuffers){let needsUpdate=false;if(renderTarget){if(renderTarget.isWebGLMultipleRenderTargets){const textures=renderTarget.texture;if(_currentDrawBuffers.length!==textures.length||_currentDrawBuffers[0]!==36064){for(let i=0,il=textures.length;i<il;i++){_currentDrawBuffers[i]=36064+i;}_currentDrawBuffers.length=textures.length;needsUpdate=true;}}else{if(_currentDrawBuffers.length!==1||_currentDrawBuffers[0]!==36064){_currentDrawBuffers[0]=36064;_currentDrawBuffers.length=1;needsUpdate=true;}}}else{if(_currentDrawBuffers.length!==1||_currentDrawBuffers[0]!==1029){_currentDrawBuffers[0]=1029;_currentDrawBuffers.length=1;needsUpdate=true;}}if(needsUpdate){if(capabilities.isWebGL2){_gl.drawBuffers(_currentDrawBuffers);}else{extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);}}}state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);if(isCube){const textureProperties=properties.get(renderTarget.texture);_gl.framebufferTexture2D(36160,36064,34069+activeCubeFace,textureProperties.__webglTexture,activeMipmapLevel);}else if(isRenderTarget3D){const textureProperties=properties.get(renderTarget.texture);const layer=activeCubeFace||0;_gl.framebufferTextureLayer(36160,36064,textureProperties.__webglTexture,activeMipmapLevel||0,layer);}};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex){if(!(renderTarget&&renderTarget.isWebGLRenderTarget)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');return;}let framebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget&&activeCubeFaceIndex!==undefined){framebuffer=framebuffer[activeCubeFaceIndex];}if(framebuffer){state.bindFramebuffer(36160,framebuffer);try{const texture=renderTarget.texture;const textureFormat=texture.format;const textureType=texture.type;if(textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');return;}const halfFloatSupportedByExt=textureType===HalfFloatType&&(extensions.has('EXT_color_buffer_half_float')||capabilities.isWebGL2&&extensions.has('EXT_color_buffer_float'));if(textureType!==UnsignedByteType&&utils.convert(textureType)!==_gl.getParameter(35738)&&// Edge and Chrome Mac < 52 (#9513)\n!(textureType===FloatType&&(capabilities.isWebGL2||extensions.has('OES_texture_float')||extensions.has('WEBGL_color_buffer_float')))&&// Chrome Mac >= 52 and Firefox\n!halfFloatSupportedByExt){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');return;}if(_gl.checkFramebufferStatus(36160)===36053){// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\nif(x>=0&&x<=renderTarget.width-width&&y>=0&&y<=renderTarget.height-height){_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer);}}else{console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');}}finally{// restore framebuffer of current render target if necessary\nconst framebuffer=_currentRenderTarget!==null?properties.get(_currentRenderTarget).__webglFramebuffer:null;state.bindFramebuffer(36160,framebuffer);}}};this.copyFramebufferToTexture=function(position,texture,level=0){const levelScale=Math.pow(2,-level);const width=Math.floor(texture.image.width*levelScale);const height=Math.floor(texture.image.height*levelScale);let glFormat=utils.convert(texture.format);if(capabilities.isWebGL2){// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\nif(glFormat===6407)glFormat=32849;if(glFormat===6408)glFormat=32856;}textures.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level,glFormat,position.x,position.y,width,height,0);state.unbindTexture();};this.copyTextureToTexture=function(position,srcTexture,dstTexture,level=0){const width=srcTexture.image.width;const height=srcTexture.image.height;const glFormat=utils.convert(dstTexture.format);const glType=utils.convert(dstTexture.type);textures.setTexture2D(dstTexture,0);// As another texture upload may have changed pixelStorei\n// parameters, make sure they are correct for the dstTexture\n_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);if(srcTexture.isDataTexture){_gl.texSubImage2D(3553,level,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data);}else{if(srcTexture.isCompressedTexture){_gl.compressedTexSubImage2D(3553,level,position.x,position.y,srcTexture.mipmaps[0].width,srcTexture.mipmaps[0].height,glFormat,srcTexture.mipmaps[0].data);}else{_gl.texSubImage2D(3553,level,position.x,position.y,glFormat,glType,srcTexture.image);}}// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(3553);state.unbindTexture();};this.copyTextureToTexture3D=function(sourceBox,position,srcTexture,dstTexture,level=0){if(_this.isWebGL1Renderer){console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');return;}const{width,height,data}=srcTexture.image;const glFormat=utils.convert(dstTexture.format);const glType=utils.convert(dstTexture.type);let glTarget;if(dstTexture.isDataTexture3D){textures.setTexture3D(dstTexture,0);glTarget=32879;}else if(dstTexture.isDataTexture2DArray){textures.setTexture2DArray(dstTexture,0);glTarget=35866;}else{console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');return;}_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);const unpackRowLen=_gl.getParameter(3314);const unpackImageHeight=_gl.getParameter(32878);const unpackSkipPixels=_gl.getParameter(3316);const unpackSkipRows=_gl.getParameter(3315);const unpackSkipImages=_gl.getParameter(32877);_gl.pixelStorei(3314,width);_gl.pixelStorei(32878,height);_gl.pixelStorei(3316,sourceBox.min.x);_gl.pixelStorei(3315,sourceBox.min.y);_gl.pixelStorei(32877,sourceBox.min.z);_gl.texSubImage3D(glTarget,level,position.x,position.y,position.z,sourceBox.max.x-sourceBox.min.x+1,sourceBox.max.y-sourceBox.min.y+1,sourceBox.max.z-sourceBox.min.z+1,glFormat,glType,data);_gl.pixelStorei(3314,unpackRowLen);_gl.pixelStorei(32878,unpackImageHeight);_gl.pixelStorei(3316,unpackSkipPixels);_gl.pixelStorei(3315,unpackSkipRows);_gl.pixelStorei(32877,unpackSkipImages);// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(glTarget);state.unbindTexture();};this.initTexture=function(texture){textures.setTexture2D(texture,0);state.unbindTexture();};this.resetState=function(){_currentActiveCubeFace=0;_currentActiveMipmapLevel=0;_currentRenderTarget=null;state.reset();bindingStates.reset();};if(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}class WebGL1Renderer extends WebGLRenderer{}WebGL1Renderer.prototype.isWebGL1Renderer=true;class FogExp2{constructor(color,density=0.00025){this.name='';this.color=new Color(color);this.density=density;}clone(){return new FogExp2(this.color,this.density);}toJSON()/* meta */{return{type:'FogExp2',color:this.color.getHex(),density:this.density};}}FogExp2.prototype.isFogExp2=true;class Fog{constructor(color,near=1,far=1000){this.name='';this.color=new Color(color);this.near=near;this.far=far;}clone(){return new Fog(this.color,this.near,this.far);}toJSON()/* meta */{return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far};}}Fog.prototype.isFog=true;class Scene extends Object3D{constructor(){super();this.type='Scene';this.background=null;this.environment=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;// checked by the renderer\nif(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}copy(source,recursive){super.copy(source,recursive);if(source.background!==null)this.background=source.background.clone();if(source.environment!==null)this.environment=source.environment.clone();if(source.fog!==null)this.fog=source.fog.clone();if(source.overrideMaterial!==null)this.overrideMaterial=source.overrideMaterial.clone();this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this;}toJSON(meta){const data=super.toJSON(meta);if(this.background!==null)data.object.background=this.background.toJSON(meta);if(this.environment!==null)data.object.environment=this.environment.toJSON(meta);if(this.fog!==null)data.object.fog=this.fog.toJSON();return data;}}Scene.prototype.isScene=true;class InterleavedBuffer{constructor(array,stride){this.array=array;this.stride=stride;this.count=array!==undefined?array.length/stride:0;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=generateUUID();}onUploadCallback(){}set needsUpdate(value){if(value===true)this.version++;}setUsage(value){this.usage=value;return this;}copy(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.usage=source.usage;return this;}copyAt(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(let i=0,l=this.stride;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;}set(value,offset=0){this.array.set(value,offset);return this;}clone(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer;}const array=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);const ib=new this.constructor(array,this.stride);ib.setUsage(this.usage);return ib;}onUpload(callback){this.onUploadCallback=callback;return this;}toJSON(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}// generate UUID for array buffer if necessary\nif(this.array.buffer._uuid===undefined){this.array.buffer._uuid=generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer));}//\nreturn{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride};}}InterleavedBuffer.prototype.isInterleavedBuffer=true;const _vector$6=/*@__PURE__*/new Vector3();class InterleavedBufferAttribute{constructor(interleavedBuffer,itemSize,offset,normalized){this.name='';this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=normalized===true;}get count(){return this.data.count;}get array(){return this.data.array;}set needsUpdate(value){this.data.needsUpdate=value;}applyMatrix4(m){for(let i=0,l=this.data.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.applyMatrix4(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}applyNormalMatrix(m){for(let i=0,l=this.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.applyNormalMatrix(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}transformDirection(m){for(let i=0,l=this.count;i<l;i++){_vector$6.x=this.getX(i);_vector$6.y=this.getY(i);_vector$6.z=this.getZ(i);_vector$6.transformDirection(m);this.setXYZ(i,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}setX(index,x){this.data.array[index*this.data.stride+this.offset]=x;return this;}setY(index,y){this.data.array[index*this.data.stride+this.offset+1]=y;return this;}setZ(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this;}setW(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this;}getX(index){return this.data.array[index*this.data.stride+this.offset];}getY(index){return this.data.array[index*this.data.stride+this.offset+1];}getZ(index){return this.data.array[index*this.data.stride+this.offset+2];}getW(index){return this.data.array[index*this.data.stride+this.offset+3];}setXY(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this;}setXYZ(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this;}setXYZW(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this;}clone(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}return new BufferAttribute(new this.array.constructor(array),this.itemSize,this.normalized);}else{if(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.clone(data);}return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);}}toJSON(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');const array=[];for(let i=0;i<this.count;i++){const index=i*this.data.stride+this.offset;for(let j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}// deinterleave data and save it as an ordinary buffer attribute for now\nreturn{itemSize:this.itemSize,type:this.array.constructor.name,array:array,normalized:this.normalized};}else{// save as true interlaved attribtue\nif(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data);}return{isInterleavedBufferAttribute:true,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};}}}InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute=true;/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */class SpriteMaterial extends Material{constructor(parameters){super();this.type='SpriteMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=true;this.transparent=true;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this;}}SpriteMaterial.prototype.isSpriteMaterial=true;let _geometry;const _intersectPoint=/*@__PURE__*/new Vector3();const _worldScale=/*@__PURE__*/new Vector3();const _mvPosition=/*@__PURE__*/new Vector3();const _alignedPosition=/*@__PURE__*/new Vector2();const _rotatedPosition=/*@__PURE__*/new Vector2();const _viewWorldMatrix=/*@__PURE__*/new Matrix4();const _vA=/*@__PURE__*/new Vector3();const _vB=/*@__PURE__*/new Vector3();const _vC=/*@__PURE__*/new Vector3();const _uvA=/*@__PURE__*/new Vector2();const _uvB=/*@__PURE__*/new Vector2();const _uvC=/*@__PURE__*/new Vector2();class Sprite extends Object3D{constructor(material){super();this.type='Sprite';if(_geometry===undefined){_geometry=new BufferGeometry();const float32Array=new Float32Array([-0.5,-0.5,0,0,0,0.5,-0.5,0,1,0,0.5,0.5,0,1,1,-0.5,0.5,0,0,1]);const interleavedBuffer=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,1,2,0,2,3]);_geometry.setAttribute('position',new InterleavedBufferAttribute(interleavedBuffer,3,0,false));_geometry.setAttribute('uv',new InterleavedBufferAttribute(interleavedBuffer,2,3,false));}this.geometry=_geometry;this.material=material!==undefined?material:new SpriteMaterial();this.center=new Vector2(0.5,0.5);}raycast(raycaster,intersects){if(raycaster.camera===null){console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');}_worldScale.setFromMatrixScale(this.matrixWorld);_viewWorldMatrix.copy(raycaster.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld);_mvPosition.setFromMatrixPosition(this.modelViewMatrix);if(raycaster.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){_worldScale.multiplyScalar(-_mvPosition.z);}const rotation=this.material.rotation;let sin,cos;if(rotation!==0){cos=Math.cos(rotation);sin=Math.sin(rotation);}const center=this.center;transformVertex(_vA.set(-0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vB.set(0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vC.set(0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvA.set(0,0);_uvB.set(1,0);_uvC.set(1,1);// check first triangle\nlet intersect=raycaster.ray.intersectTriangle(_vA,_vB,_vC,false,_intersectPoint);if(intersect===null){// check second triangle\ntransformVertex(_vB.set(-0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvB.set(0,1);intersect=raycaster.ray.intersectTriangle(_vA,_vC,_vB,false,_intersectPoint);if(intersect===null){return;}}const distance=raycaster.ray.origin.distanceTo(_intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2()),face:null,object:this});}copy(source){super.copy(source);if(source.center!==undefined)this.center.copy(source.center);this.material=source.material;return this;}}Sprite.prototype.isSprite=true;function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){// compute position in camera space\n_alignedPosition.subVectors(vertexPosition,center).addScalar(0.5).multiply(scale);// to check if rotation is not zero\nif(sin!==undefined){_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y;_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y;}else{_rotatedPosition.copy(_alignedPosition);}vertexPosition.copy(mvPosition);vertexPosition.x+=_rotatedPosition.x;vertexPosition.y+=_rotatedPosition.y;// transform to world space\nvertexPosition.applyMatrix4(_viewWorldMatrix);}const _v1$2=/*@__PURE__*/new Vector3();const _v2$1=/*@__PURE__*/new Vector3();class LOD extends Object3D{constructor(){super();this._currentLevel=0;this.type='LOD';Object.defineProperties(this,{levels:{enumerable:true,value:[]},isLOD:{value:true}});this.autoUpdate=true;}copy(source){super.copy(source,false);const levels=source.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];this.addLevel(level.object.clone(),level.distance);}this.autoUpdate=source.autoUpdate;return this;}addLevel(object,distance=0){distance=Math.abs(distance);const levels=this.levels;let l;for(l=0;l<levels.length;l++){if(distance<levels[l].distance){break;}}levels.splice(l,0,{distance:distance,object:object});this.add(object);return this;}getCurrentLevel(){return this._currentLevel;}getObjectForDistance(distance){const levels=this.levels;if(levels.length>0){let i,l;for(i=1,l=levels.length;i<l;i++){if(distance<levels[i].distance){break;}}return levels[i-1].object;}return null;}raycast(raycaster,intersects){const levels=this.levels;if(levels.length>0){_v1$2.setFromMatrixPosition(this.matrixWorld);const distance=raycaster.ray.origin.distanceTo(_v1$2);this.getObjectForDistance(distance).raycast(raycaster,intersects);}}update(camera){const levels=this.levels;if(levels.length>1){_v1$2.setFromMatrixPosition(camera.matrixWorld);_v2$1.setFromMatrixPosition(this.matrixWorld);const distance=_v1$2.distanceTo(_v2$1)/camera.zoom;levels[0].object.visible=true;let i,l;for(i=1,l=levels.length;i<l;i++){if(distance>=levels[i].distance){levels[i-1].object.visible=false;levels[i].object.visible=true;}else{break;}}this._currentLevel=i-1;for(;i<l;i++){levels[i].object.visible=false;}}}toJSON(meta){const data=super.toJSON(meta);if(this.autoUpdate===false)data.object.autoUpdate=false;data.object.levels=[];const levels=this.levels;for(let i=0,l=levels.length;i<l;i++){const level=levels[i];data.object.levels.push({object:level.object.uuid,distance:level.distance});}return data;}}const _basePosition=/*@__PURE__*/new Vector3();const _skinIndex=/*@__PURE__*/new Vector4();const _skinWeight=/*@__PURE__*/new Vector4();const _vector$5=/*@__PURE__*/new Vector3();const _matrix=/*@__PURE__*/new Matrix4();class SkinnedMesh extends Mesh{constructor(geometry,material){super(geometry,material);this.type='SkinnedMesh';this.bindMode='attached';this.bindMatrix=new Matrix4();this.bindMatrixInverse=new Matrix4();}copy(source){super.copy(source);this.bindMode=source.bindMode;this.bindMatrix.copy(source.bindMatrix);this.bindMatrixInverse.copy(source.bindMatrixInverse);this.skeleton=source.skeleton;return this;}bind(skeleton,bindMatrix){this.skeleton=skeleton;if(bindMatrix===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();bindMatrix=this.matrixWorld;}this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.copy(bindMatrix).invert();}pose(){this.skeleton.pose();}normalizeSkinWeights(){const vector=new Vector4();const skinWeight=this.geometry.attributes.skinWeight;for(let i=0,l=skinWeight.count;i<l;i++){vector.x=skinWeight.getX(i);vector.y=skinWeight.getY(i);vector.z=skinWeight.getZ(i);vector.w=skinWeight.getW(i);const scale=1.0/vector.manhattanLength();if(scale!==Infinity){vector.multiplyScalar(scale);}else{vector.set(1,0,0,0);// do something reasonable\n}skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w);}}updateMatrixWorld(force){super.updateMatrixWorld(force);if(this.bindMode==='attached'){this.bindMatrixInverse.copy(this.matrixWorld).invert();}else if(this.bindMode==='detached'){this.bindMatrixInverse.copy(this.bindMatrix).invert();}else{console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode);}}boneTransform(index,target){const skeleton=this.skeleton;const geometry=this.geometry;_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index);_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,index);_basePosition.fromBufferAttribute(geometry.attributes.position,index).applyMatrix4(this.bindMatrix);target.set(0,0,0);for(let i=0;i<4;i++){const weight=_skinWeight.getComponent(i);if(weight!==0){const boneIndex=_skinIndex.getComponent(i);_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]);target.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix),weight);}}return target.applyMatrix4(this.bindMatrixInverse);}}SkinnedMesh.prototype.isSkinnedMesh=true;class Bone extends Object3D{constructor(){super();this.type='Bone';}}Bone.prototype.isBone=true;class DataTexture extends Texture{constructor(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={data:data||null,width:width||1,height:height||1};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;this.needsUpdate=true;}}DataTexture.prototype.isDataTexture=true;const _offsetMatrix=/*@__PURE__*/new Matrix4();const _identityMatrix=/*@__PURE__*/new Matrix4();class Skeleton{constructor(bones=[],boneInverses=[]){this.uuid=generateUUID();this.bones=bones.slice(0);this.boneInverses=boneInverses;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init();}init(){const bones=this.bones;const boneInverses=this.boneInverses;this.boneMatrices=new Float32Array(bones.length*16);// calculate inverse bone matrices if necessary\nif(boneInverses.length===0){this.calculateInverses();}else{// handle special case\nif(bones.length!==boneInverses.length){console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');this.boneInverses=[];for(let i=0,il=this.bones.length;i<il;i++){this.boneInverses.push(new Matrix4());}}}}calculateInverses(){this.boneInverses.length=0;for(let i=0,il=this.bones.length;i<il;i++){const inverse=new Matrix4();if(this.bones[i]){inverse.copy(this.bones[i].matrixWorld).invert();}this.boneInverses.push(inverse);}}pose(){// recover the bind-time world matrices\nfor(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone){bone.matrixWorld.copy(this.boneInverses[i]).invert();}}// compute the local matrices, positions, rotations and scales\nfor(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone){if(bone.parent&&bone.parent.isBone){bone.matrix.copy(bone.parent.matrixWorld).invert();bone.matrix.multiply(bone.matrixWorld);}else{bone.matrix.copy(bone.matrixWorld);}bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);}}}update(){const bones=this.bones;const boneInverses=this.boneInverses;const boneMatrices=this.boneMatrices;const boneTexture=this.boneTexture;// flatten bone matrices to array\nfor(let i=0,il=bones.length;i<il;i++){// compute the offset between the current and the original transform\nconst matrix=bones[i]?bones[i].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(matrix,boneInverses[i]);_offsetMatrix.toArray(boneMatrices,i*16);}if(boneTexture!==null){boneTexture.needsUpdate=true;}}clone(){return new Skeleton(this.bones,this.boneInverses);}computeBoneTexture(){// layout (1 matrix = 4 pixels)\n//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\nlet size=Math.sqrt(this.bones.length*4);// 4 pixels needed for 1 matrix\nsize=ceilPowerOfTwo(size);size=Math.max(size,4);const boneMatrices=new Float32Array(size*size*4);// 4 floats per RGBA pixel\nboneMatrices.set(this.boneMatrices);// copy current values\nconst boneTexture=new DataTexture(boneMatrices,size,size,RGBAFormat,FloatType);this.boneMatrices=boneMatrices;this.boneTexture=boneTexture;this.boneTextureSize=size;return this;}getBoneByName(name){for(let i=0,il=this.bones.length;i<il;i++){const bone=this.bones[i];if(bone.name===name){return bone;}}return undefined;}dispose(){if(this.boneTexture!==null){this.boneTexture.dispose();this.boneTexture=null;}}fromJSON(json,bones){this.uuid=json.uuid;for(let i=0,l=json.bones.length;i<l;i++){const uuid=json.bones[i];let bone=bones[uuid];if(bone===undefined){console.warn('THREE.Skeleton: No bone found with UUID:',uuid);bone=new Bone();}this.bones.push(bone);this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));}this.init();return this;}toJSON(){const data={metadata:{version:4.5,type:'Skeleton',generator:'Skeleton.toJSON'},bones:[],boneInverses:[]};data.uuid=this.uuid;const bones=this.bones;const boneInverses=this.boneInverses;for(let i=0,l=bones.length;i<l;i++){const bone=bones[i];data.bones.push(bone.uuid);const boneInverse=boneInverses[i];data.boneInverses.push(boneInverse.toArray());}return data;}}const _instanceLocalMatrix=/*@__PURE__*/new Matrix4();const _instanceWorldMatrix=/*@__PURE__*/new Matrix4();const _instanceIntersects=[];const _mesh=/*@__PURE__*/new Mesh();class InstancedMesh extends Mesh{constructor(geometry,material,count){super(geometry,material);this.instanceMatrix=new BufferAttribute(new Float32Array(count*16),16);this.instanceColor=null;this.count=count;this.frustumCulled=false;}copy(source){super.copy(source);this.instanceMatrix.copy(source.instanceMatrix);if(source.instanceColor!==null)this.instanceColor=source.instanceColor.clone();this.count=source.count;return this;}getColorAt(index,color){color.fromArray(this.instanceColor.array,index*3);}getMatrixAt(index,matrix){matrix.fromArray(this.instanceMatrix.array,index*16);}raycast(raycaster,intersects){const matrixWorld=this.matrixWorld;const raycastTimes=this.count;_mesh.geometry=this.geometry;_mesh.material=this.material;if(_mesh.material===undefined)return;for(let instanceId=0;instanceId<raycastTimes;instanceId++){// calculate the world matrix for each instance\nthis.getMatrixAt(instanceId,_instanceLocalMatrix);_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix);// the mesh represents this single instance\n_mesh.matrixWorld=_instanceWorldMatrix;_mesh.raycast(raycaster,_instanceIntersects);// process the result of raycast\nfor(let i=0,l=_instanceIntersects.length;i<l;i++){const intersect=_instanceIntersects[i];intersect.instanceId=instanceId;intersect.object=this;intersects.push(intersect);}_instanceIntersects.length=0;}}setColorAt(index,color){if(this.instanceColor===null){this.instanceColor=new BufferAttribute(new Float32Array(this.count*3),3);}color.toArray(this.instanceColor.array,index*3);}setMatrixAt(index,matrix){matrix.toArray(this.instanceMatrix.array,index*16);}updateMorphTargets(){}dispose(){this.dispatchEvent({type:'dispose'});}}InstancedMesh.prototype.isInstancedMesh=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */class LineBasicMaterial extends Material{constructor(parameters){super();this.type='LineBasicMaterial';this.color=new Color(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;this.morphTargets=source.morphTargets;return this;}}LineBasicMaterial.prototype.isLineBasicMaterial=true;const _start$1=/*@__PURE__*/new Vector3();const _end$1=/*@__PURE__*/new Vector3();const _inverseMatrix$1=/*@__PURE__*/new Matrix4();const _ray$1=/*@__PURE__*/new Ray();const _sphere$1=/*@__PURE__*/new Sphere();class Line extends Object3D{constructor(geometry=new BufferGeometry(),material=new LineBasicMaterial()){super();this.type='Line';this.geometry=geometry;this.material=material;this.updateMorphTargets();}copy(source){super.copy(source);this.material=source.material;this.geometry=source.geometry;return this;}computeLineDistances(){const geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){const positionAttribute=geometry.attributes.position;const lineDistances=[0];for(let i=1,l=positionAttribute.count;i<l;i++){_start$1.fromBufferAttribute(positionAttribute,i-1);_end$1.fromBufferAttribute(positionAttribute,i);lineDistances[i]=lineDistances[i-1];lineDistances[i]+=_start$1.distanceTo(_end$1);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;}raycast(raycaster,intersects){const geometry=this.geometry;const matrixWorld=this.matrixWorld;const threshold=raycaster.params.Line.threshold;const drawRange=geometry.drawRange;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$1.copy(geometry.boundingSphere);_sphere$1.applyMatrix4(matrixWorld);_sphere$1.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere$1)===false)return;//\n_inverseMatrix$1.copy(matrixWorld).invert();_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);const localThresholdSq=localThreshold*localThreshold;const vStart=new Vector3();const vEnd=new Vector3();const interSegment=new Vector3();const interRay=new Vector3();const step=this.isLineSegments?2:1;if(geometry.isBufferGeometry){const index=geometry.index;const attributes=geometry.attributes;const positionAttribute=attributes.position;if(index!==null){const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,l=end-1;i<l;i+=step){const a=index.getX(i);const b=index.getX(i+1);vStart.fromBufferAttribute(positionAttribute,a);vEnd.fromBufferAttribute(positionAttribute,b);const distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nconst distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}else{const start=Math.max(0,drawRange.start);const end=Math.min(positionAttribute.count,drawRange.start+drawRange.count);for(let i=start,l=end-1;i<l;i+=step){vStart.fromBufferAttribute(positionAttribute,i);vEnd.fromBufferAttribute(positionAttribute,i+1);const distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nconst distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}}else if(geometry.isGeometry){console.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}updateMorphTargets(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}}Line.prototype.isLine=true;const _start=/*@__PURE__*/new Vector3();const _end=/*@__PURE__*/new Vector3();class LineSegments extends Line{constructor(geometry,material){super(geometry,material);this.type='LineSegments';}computeLineDistances(){const geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){const positionAttribute=geometry.attributes.position;const lineDistances=[];for(let i=0,l=positionAttribute.count;i<l;i+=2){_start.fromBufferAttribute(positionAttribute,i);_end.fromBufferAttribute(positionAttribute,i+1);lineDistances[i]=i===0?0:lineDistances[i-1];lineDistances[i+1]=lineDistances[i]+_start.distanceTo(_end);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;}}LineSegments.prototype.isLineSegments=true;class LineLoop extends Line{constructor(geometry,material){super(geometry,material);this.type='LineLoop';}}LineLoop.prototype.isLineLoop=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */class PointsMaterial extends Material{constructor(parameters){super();this.type='PointsMaterial';this.color=new Color(0xffffff);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=true;this.morphTargets=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.morphTargets=source.morphTargets;return this;}}PointsMaterial.prototype.isPointsMaterial=true;const _inverseMatrix=/*@__PURE__*/new Matrix4();const _ray=/*@__PURE__*/new Ray();const _sphere=/*@__PURE__*/new Sphere();const _position$2=/*@__PURE__*/new Vector3();class Points extends Object3D{constructor(geometry=new BufferGeometry(),material=new PointsMaterial()){super();this.type='Points';this.geometry=geometry;this.material=material;this.updateMorphTargets();}copy(source){super.copy(source);this.material=source.material;this.geometry=source.geometry;return this;}raycast(raycaster,intersects){const geometry=this.geometry;const matrixWorld=this.matrixWorld;const threshold=raycaster.params.Points.threshold;const drawRange=geometry.drawRange;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere.copy(geometry.boundingSphere);_sphere.applyMatrix4(matrixWorld);_sphere.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere)===false)return;//\n_inverseMatrix.copy(matrixWorld).invert();_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);const localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);const localThresholdSq=localThreshold*localThreshold;if(geometry.isBufferGeometry){const index=geometry.index;const attributes=geometry.attributes;const positionAttribute=attributes.position;if(index!==null){const start=Math.max(0,drawRange.start);const end=Math.min(index.count,drawRange.start+drawRange.count);for(let i=start,il=end;i<il;i++){const a=index.getX(i);_position$2.fromBufferAttribute(positionAttribute,a);testPoint(_position$2,a,localThresholdSq,matrixWorld,raycaster,intersects,this);}}else{const start=Math.max(0,drawRange.start);const end=Math.min(positionAttribute.count,drawRange.start+drawRange.count);for(let i=start,l=end;i<l;i++){_position$2.fromBufferAttribute(positionAttribute,i);testPoint(_position$2,i,localThresholdSq,matrixWorld,raycaster,intersects,this);}}}else{console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}updateMorphTargets(){const geometry=this.geometry;if(geometry.isBufferGeometry){const morphAttributes=geometry.morphAttributes;const keys=Object.keys(morphAttributes);if(keys.length>0){const morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let m=0,ml=morphAttribute.length;m<ml;m++){const name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{const morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}}Points.prototype.isPoints=true;function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){const rayPointDistanceSq=_ray.distanceSqToPoint(point);if(rayPointDistanceSq<localThresholdSq){const intersectPoint=new Vector3();_ray.closestPointToPoint(point,intersectPoint);intersectPoint.applyMatrix4(matrixWorld);const distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint,index:index,face:null,object:object});}}class VideoTexture extends Texture{constructor(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){super(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.format=format!==undefined?format:RGBFormat;this.minFilter=minFilter!==undefined?minFilter:LinearFilter;this.magFilter=magFilter!==undefined?magFilter:LinearFilter;this.generateMipmaps=false;const scope=this;function updateVideo(){scope.needsUpdate=true;video.requestVideoFrameCallback(updateVideo);}if('requestVideoFrameCallback'in video){video.requestVideoFrameCallback(updateVideo);}}clone(){return new this.constructor(this.image).copy(this);}update(){const video=this.image;const hasVideoFrameCallback=('requestVideoFrameCallback'in video);if(hasVideoFrameCallback===false&&video.readyState>=video.HAVE_CURRENT_DATA){this.needsUpdate=true;}}}VideoTexture.prototype.isVideoTexture=true;class CompressedTexture extends Texture{constructor(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={width:width,height:height};this.mipmaps=mipmaps;// no flipping for cube textures\n// (also flipping doesn't work for compressed textures )\nthis.flipY=false;// can't generate mipmaps for compressed textures\n// mips must be embedded in DDS files\nthis.generateMipmaps=false;}}CompressedTexture.prototype.isCompressedTexture=true;class CanvasTexture extends Texture{constructor(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){super(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.needsUpdate=true;}}CanvasTexture.prototype.isCanvasTexture=true;class DepthTexture extends Texture{constructor(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){format=format!==undefined?format:DepthFormat;if(format!==DepthFormat&&format!==DepthStencilFormat){throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');}if(type===undefined&&format===DepthFormat)type=UnsignedShortType;if(type===undefined&&format===DepthStencilFormat)type=UnsignedInt248Type;super(null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.flipY=false;this.generateMipmaps=false;}}DepthTexture.prototype.isDepthTexture=true;class CircleGeometry extends BufferGeometry{constructor(radius=1,segments=8,thetaStart=0,thetaLength=Math.PI*2){super();this.type='CircleGeometry';this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};segments=Math.max(3,segments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst vertex=new Vector3();const uv=new Vector2();// center point\nvertices.push(0,0,0);normals.push(0,0,1);uvs.push(0.5,0.5);for(let s=0,i=3;s<=segments;s++,i+=3){const segment=thetaStart+s/segments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uvs\nuv.x=(vertices[i]/radius+1)/2;uv.y=(vertices[i+1]/radius+1)/2;uvs.push(uv.x,uv.y);}// indices\nfor(let i=1;i<=segments;i++){indices.push(i,i+1,0);}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class CylinderGeometry extends BufferGeometry{constructor(radiusTop=1,radiusBottom=1,height=1,radialSegments=8,heightSegments=1,openEnded=false,thetaStart=0,thetaLength=Math.PI*2){super();this.type='CylinderGeometry';this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};const scope=this;radialSegments=Math.floor(radialSegments);heightSegments=Math.floor(heightSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet index=0;const indexArray=[];const halfHeight=height/2;let groupStart=0;// generate geometry\ngenerateTorso();if(openEnded===false){if(radiusTop>0)generateCap(true);if(radiusBottom>0)generateCap(false);}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));function generateTorso(){const normal=new Vector3();const vertex=new Vector3();let groupCount=0;// this will be used to calculate the normal\nconst slope=(radiusBottom-radiusTop)/height;// generate vertices, normals and uvs\nfor(let y=0;y<=heightSegments;y++){const indexRow=[];const v=y/heightSegments;// calculate the radius of the current row\nconst radius=v*(radiusBottom-radiusTop)+radiusTop;for(let x=0;x<=radialSegments;x++){const u=x/radialSegments;const theta=u*thetaLength+thetaStart;const sinTheta=Math.sin(theta);const cosTheta=Math.cos(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.set(sinTheta,slope,cosTheta).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,1-v);// save index of vertex in respective row\nindexRow.push(index++);}// now save vertices of the row in our index array\nindexArray.push(indexRow);}// generate indices\nfor(let x=0;x<radialSegments;x++){for(let y=0;y<heightSegments;y++){// we use the index array to access the correct indices\nconst a=indexArray[y][x];const b=indexArray[y+1][x];const c=indexArray[y+1][x+1];const d=indexArray[y][x+1];// faces\nindices.push(a,b,d);indices.push(b,c,d);// update group counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,0);// calculate new start value for groups\ngroupStart+=groupCount;}function generateCap(top){// save the index of the first center vertex\nconst centerIndexStart=index;const uv=new Vector2();const vertex=new Vector3();let groupCount=0;const radius=top===true?radiusTop:radiusBottom;const sign=top===true?1:-1;// first we generate the center vertex data of the cap.\n// because the geometry needs one set of uvs per face,\n// we must generate a center vertex per face/segment\nfor(let x=1;x<=radialSegments;x++){// vertex\nvertices.push(0,halfHeight*sign,0);// normal\nnormals.push(0,sign,0);// uv\nuvs.push(0.5,0.5);// increase index\nindex++;}// save the index of the last center vertex\nconst centerIndexEnd=index;// now we generate the surrounding vertices, normals and uvs\nfor(let x=0;x<=radialSegments;x++){const u=x/radialSegments;const theta=u*thetaLength+thetaStart;const cosTheta=Math.cos(theta);const sinTheta=Math.sin(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,sign,0);// uv\nuv.x=cosTheta*0.5+0.5;uv.y=sinTheta*0.5*sign+0.5;uvs.push(uv.x,uv.y);// increase index\nindex++;}// generate indices\nfor(let x=0;x<radialSegments;x++){const c=centerIndexStart+x;const i=centerIndexEnd+x;if(top===true){// face top\nindices.push(i,i+1,c);}else{// face bottom\nindices.push(i+1,i,c);}groupCount+=3;}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,top===true?1:2);// calculate new start value for groups\ngroupStart+=groupCount;}}}class ConeGeometry extends CylinderGeometry{constructor(radius=1,height=1,radialSegments=8,heightSegments=1,openEnded=false,thetaStart=0,thetaLength=Math.PI*2){super(0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type='ConeGeometry';this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};}}class PolyhedronGeometry extends BufferGeometry{constructor(vertices,indices,radius=1,detail=0){super();this.type='PolyhedronGeometry';this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};// default buffer data\nconst vertexBuffer=[];const uvBuffer=[];// the subdivision creates the vertex buffer data\nsubdivide(detail);// all vertices should lie on a conceptual sphere with a given radius\napplyRadius(radius);// finally, create the uv data\ngenerateUVs();// build non-indexed geometry\nthis.setAttribute('position',new Float32BufferAttribute(vertexBuffer,3));this.setAttribute('normal',new Float32BufferAttribute(vertexBuffer.slice(),3));this.setAttribute('uv',new Float32BufferAttribute(uvBuffer,2));if(detail===0){this.computeVertexNormals();// flat normals\n}else{this.normalizeNormals();// smooth normals\n}// helper functions\nfunction subdivide(detail){const a=new Vector3();const b=new Vector3();const c=new Vector3();// iterate over all faces and apply a subdivison with the given detail value\nfor(let i=0;i<indices.length;i+=3){// get the vertices of the face\ngetVertexByIndex(indices[i+0],a);getVertexByIndex(indices[i+1],b);getVertexByIndex(indices[i+2],c);// perform subdivision\nsubdivideFace(a,b,c,detail);}}function subdivideFace(a,b,c,detail){const cols=detail+1;// we use this multidimensional array as a data structure for creating the subdivision\nconst v=[];// construct all of the vertices for this subdivision\nfor(let i=0;i<=cols;i++){v[i]=[];const aj=a.clone().lerp(c,i/cols);const bj=b.clone().lerp(c,i/cols);const rows=cols-i;for(let j=0;j<=rows;j++){if(j===0&&i===cols){v[i][j]=aj;}else{v[i][j]=aj.clone().lerp(bj,j/rows);}}}// construct all of the faces\nfor(let i=0;i<cols;i++){for(let j=0;j<2*(cols-i)-1;j++){const k=Math.floor(j/2);if(j%2===0){pushVertex(v[i][k+1]);pushVertex(v[i+1][k]);pushVertex(v[i][k]);}else{pushVertex(v[i][k+1]);pushVertex(v[i+1][k+1]);pushVertex(v[i+1][k]);}}}}function applyRadius(radius){const vertex=new Vector3();// iterate over the entire buffer and apply the radius to each vertex\nfor(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];vertex.normalize().multiplyScalar(radius);vertexBuffer[i+0]=vertex.x;vertexBuffer[i+1]=vertex.y;vertexBuffer[i+2]=vertex.z;}}function generateUVs(){const vertex=new Vector3();for(let i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];const u=azimuth(vertex)/2/Math.PI+0.5;const v=inclination(vertex)/Math.PI+0.5;uvBuffer.push(u,1-v);}correctUVs();correctSeam();}function correctSeam(){// handle case when face straddles the seam, see #3269\nfor(let i=0;i<uvBuffer.length;i+=6){// uv data of a single face\nconst x0=uvBuffer[i+0];const x1=uvBuffer[i+2];const x2=uvBuffer[i+4];const max=Math.max(x0,x1,x2);const min=Math.min(x0,x1,x2);// 0.9 is somewhat arbitrary\nif(max>0.9&&min<0.1){if(x0<0.2)uvBuffer[i+0]+=1;if(x1<0.2)uvBuffer[i+2]+=1;if(x2<0.2)uvBuffer[i+4]+=1;}}}function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z);}function getVertexByIndex(index,vertex){const stride=index*3;vertex.x=vertices[stride+0];vertex.y=vertices[stride+1];vertex.z=vertices[stride+2];}function correctUVs(){const a=new Vector3();const b=new Vector3();const c=new Vector3();const centroid=new Vector3();const uvA=new Vector2();const uvB=new Vector2();const uvC=new Vector2();for(let i=0,j=0;i<vertexBuffer.length;i+=9,j+=6){a.set(vertexBuffer[i+0],vertexBuffer[i+1],vertexBuffer[i+2]);b.set(vertexBuffer[i+3],vertexBuffer[i+4],vertexBuffer[i+5]);c.set(vertexBuffer[i+6],vertexBuffer[i+7],vertexBuffer[i+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(a).add(b).add(c).divideScalar(3);const azi=azimuth(centroid);correctUV(uvA,j+0,a,azi);correctUV(uvB,j+2,b,azi);correctUV(uvC,j+4,c,azi);}}function correctUV(uv,stride,vector,azimuth){if(azimuth<0&&uv.x===1){uvBuffer[stride]=uv.x-1;}if(vector.x===0&&vector.z===0){uvBuffer[stride]=azimuth/2/Math.PI+0.5;}}// Angle around the Y axis, counter-clockwise when looking from above.\nfunction azimuth(vector){return Math.atan2(vector.z,-vector.x);}// Angle above the XZ plane.\nfunction inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z));}}}class DodecahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;const r=1/t;const vertices=[// (±1, ±1, ±1)\n-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)\n0,-r,-t,0,-r,t,0,r,-t,0,r,t,// (±1/φ, ±φ, 0)\n-r,-t,0,-r,t,0,r,-t,0,r,t,0,// (±φ, 0, ±1/φ)\n-t,0,-r,t,0,-r,-t,0,r,t,0,r];const indices=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(vertices,indices,radius,detail);this.type='DodecahedronGeometry';this.parameters={radius:radius,detail:detail};}}const _v0=new Vector3();const _v1$1=new Vector3();const _normal=new Vector3();const _triangle=new Triangle();class EdgesGeometry extends BufferGeometry{constructor(geometry,thresholdAngle){super();this.type='EdgesGeometry';this.parameters={thresholdAngle:thresholdAngle};thresholdAngle=thresholdAngle!==undefined?thresholdAngle:1;if(geometry.isGeometry===true){console.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');return;}const precisionPoints=4;const precision=Math.pow(10,precisionPoints);const thresholdDot=Math.cos(DEG2RAD*thresholdAngle);const indexAttr=geometry.getIndex();const positionAttr=geometry.getAttribute('position');const indexCount=indexAttr?indexAttr.count:positionAttr.count;const indexArr=[0,0,0];const vertKeys=['a','b','c'];const hashes=new Array(3);const edgeData={};const vertices=[];for(let i=0;i<indexCount;i+=3){if(indexAttr){indexArr[0]=indexAttr.getX(i);indexArr[1]=indexAttr.getX(i+1);indexArr[2]=indexAttr.getX(i+2);}else{indexArr[0]=i;indexArr[1]=i+1;indexArr[2]=i+2;}const{a,b,c}=_triangle;a.fromBufferAttribute(positionAttr,indexArr[0]);b.fromBufferAttribute(positionAttr,indexArr[1]);c.fromBufferAttribute(positionAttr,indexArr[2]);_triangle.getNormal(_normal);// create hashes for the edge from the vertices\nhashes[0]=`${Math.round(a.x*precision)},${Math.round(a.y*precision)},${Math.round(a.z*precision)}`;hashes[1]=`${Math.round(b.x*precision)},${Math.round(b.y*precision)},${Math.round(b.z*precision)}`;hashes[2]=`${Math.round(c.x*precision)},${Math.round(c.y*precision)},${Math.round(c.z*precision)}`;// skip degenerate triangles\nif(hashes[0]===hashes[1]||hashes[1]===hashes[2]||hashes[2]===hashes[0]){continue;}// iterate over every edge\nfor(let j=0;j<3;j++){// get the first and next vertex making up the edge\nconst jNext=(j+1)%3;const vecHash0=hashes[j];const vecHash1=hashes[jNext];const v0=_triangle[vertKeys[j]];const v1=_triangle[vertKeys[jNext]];const hash=`${vecHash0}_${vecHash1}`;const reverseHash=`${vecHash1}_${vecHash0}`;if(reverseHash in edgeData&&edgeData[reverseHash]){// if we found a sibling edge add it into the vertex array if\n// it meets the angle threshold and delete the edge from the map.\nif(_normal.dot(edgeData[reverseHash].normal)<=thresholdDot){vertices.push(v0.x,v0.y,v0.z);vertices.push(v1.x,v1.y,v1.z);}edgeData[reverseHash]=null;}else if(!(hash in edgeData)){// if we've already got an edge here then skip adding a new one\nedgeData[hash]={index0:indexArr[j],index1:indexArr[jNext],normal:_normal.clone()};}}}// iterate over all remaining, unmatched edges and add them to the vertex array\nfor(const key in edgeData){if(edgeData[key]){const{index0,index1}=edgeData[key];_v0.fromBufferAttribute(positionAttr,index0);_v1$1.fromBufferAttribute(positionAttr,index1);vertices.push(_v0.x,_v0.y,_v0.z);vertices.push(_v1$1.x,_v1$1.y,_v1$1.z);}}this.setAttribute('position',new Float32BufferAttribute(vertices,3));}}/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */const Earcut={triangulate:function(data,holeIndices,dim){dim=dim||2;const hasHoles=holeIndices&&holeIndices.length;const outerLen=hasHoles?holeIndices[0]*dim:data.length;let outerNode=linkedList(data,0,outerLen,dim,true);const triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;let minX,minY,maxX,maxY,x,y,invSize;if(hasHoles)outerNode=eliminateHoles(data,holeIndices,outerNode,dim);// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\nif(data.length>80*dim){minX=maxX=data[0];minY=maxY=data[1];for(let i=dim;i<outerLen;i+=dim){x=data[i];y=data[i+1];if(x<minX)minX=x;if(y<minY)minY=y;if(x>maxX)maxX=x;if(y>maxY)maxY=y;}// minX, minY and invSize are later used to transform coords into integers for z-order calculation\ninvSize=Math.max(maxX-minX,maxY-minY);invSize=invSize!==0?1/invSize:0;}earcutLinked(outerNode,triangles,dim,minX,minY,invSize);return triangles;}};// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data,start,end,dim,clockwise){let i,last;if(clockwise===signedArea(data,start,end,dim)>0){for(i=start;i<end;i+=dim)last=insertNode(i,data[i],data[i+1],last);}else{for(i=end-dim;i>=start;i-=dim)last=insertNode(i,data[i],data[i+1],last);}if(last&&equals(last,last.next)){removeNode(last);last=last.next;}return last;}// eliminate colinear or duplicate points\nfunction filterPoints(start,end){if(!start)return start;if(!end)end=start;let p=start,again;do{again=false;if(!p.steiner&&(equals(p,p.next)||area(p.prev,p,p.next)===0)){removeNode(p);p=end=p.prev;if(p===p.next)break;again=true;}else{p=p.next;}}while(again||p!==end);return end;}// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(!ear)return;// interlink polygon nodes in z-order\nif(!pass&&invSize)indexCurve(ear,minX,minY,invSize);let stop=ear,prev,next;// iterate through ears, slicing them one by one\nwhile(ear.prev!==ear.next){prev=ear.prev;next=ear.next;if(invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear)){// cut off the triangle\ntriangles.push(prev.i/dim);triangles.push(ear.i/dim);triangles.push(next.i/dim);removeNode(ear);// skipping the next vertex leads to less sliver triangles\near=next.next;stop=next.next;continue;}ear=next;// if we looped through the whole remaining polygon and can't find any more ears\nif(ear===stop){// try filtering points and slicing again\nif(!pass){earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);// if this didn't work, try curing all small self-intersections locally\n}else if(pass===1){ear=cureLocalIntersections(filterPoints(ear),triangles,dim);earcutLinked(ear,triangles,dim,minX,minY,invSize,2);// as a last resort, try splitting the remaining polygon into two\n}else if(pass===2){splitEarcut(ear,triangles,dim,minX,minY,invSize);}break;}}}// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// now make sure we don't have other points inside the potential ear\nlet p=ear.next.next;while(p!==ear.prev){if(pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.next;}return true;}function isEarHashed(ear,minX,minY,invSize){const a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// triangle bbox; min & max are calculated like this for speed\nconst minTX=a.x<b.x?a.x<c.x?a.x:c.x:b.x<c.x?b.x:c.x,minTY=a.y<b.y?a.y<c.y?a.y:c.y:b.y<c.y?b.y:c.y,maxTX=a.x>b.x?a.x>c.x?a.x:c.x:b.x>c.x?b.x:c.x,maxTY=a.y>b.y?a.y>c.y?a.y:c.y:b.y>c.y?b.y:c.y;// z-order range for the current triangle bbox;\nconst minZ=zOrder(minTX,minTY,minX,minY,invSize),maxZ=zOrder(maxTX,maxTY,minX,minY,invSize);let p=ear.prevZ,n=ear.nextZ;// look for points inside the triangle in both directions\nwhile(p&&p.z>=minZ&&n&&n.z<=maxZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}// look for remaining points in decreasing z-order\nwhile(p&&p.z>=minZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;}// look for remaining points in increasing z-order\nwhile(n&&n.z<=maxZ){if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}return true;}// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start,triangles,dim){let p=start;do{const a=p.prev,b=p.next.next;if(!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)){triangles.push(a.i/dim);triangles.push(p.i/dim);triangles.push(b.i/dim);// remove two nodes involved\nremoveNode(p);removeNode(p.next);p=start=b;}p=p.next;}while(p!==start);return filterPoints(p);}// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start,triangles,dim,minX,minY,invSize){// look for a valid diagonal that divides the polygon into two\nlet a=start;do{let b=a.next.next;while(b!==a.prev){if(a.i!==b.i&&isValidDiagonal(a,b)){// split the polygon in two by the diagonal\nlet c=splitPolygon(a,b);// filter colinear points around the cuts\na=filterPoints(a,a.next);c=filterPoints(c,c.next);// run earcut on each half\nearcutLinked(a,triangles,dim,minX,minY,invSize);earcutLinked(c,triangles,dim,minX,minY,invSize);return;}b=b.next;}a=a.next;}while(a!==start);}// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data,holeIndices,outerNode,dim){const queue=[];let i,len,start,end,list;for(i=0,len=holeIndices.length;i<len;i++){start=holeIndices[i]*dim;end=i<len-1?holeIndices[i+1]*dim:data.length;list=linkedList(data,start,end,dim,false);if(list===list.next)list.steiner=true;queue.push(getLeftmost(list));}queue.sort(compareX);// process holes from left to right\nfor(i=0;i<queue.length;i++){eliminateHole(queue[i],outerNode);outerNode=filterPoints(outerNode,outerNode.next);}return outerNode;}function compareX(a,b){return a.x-b.x;}// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole,outerNode){outerNode=findHoleBridge(hole,outerNode);if(outerNode){const b=splitPolygon(outerNode,hole);// filter collinear points around the cuts\nfilterPoints(outerNode,outerNode.next);filterPoints(b,b.next);}}// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole,outerNode){let p=outerNode;const hx=hole.x;const hy=hole.y;let qx=-Infinity,m;// find a segment intersected by a ray from the hole's leftmost point to the left;\n// segment's endpoint with lesser x will be potential connection point\ndo{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){const x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next;}m=p.x<p.next.x?p:p.next;}}p=p.next;}while(p!==outerNode);if(!m)return null;if(hx===qx)return m;// hole touches outer segment; pick leftmost endpoint\n// look for points inside the triangle of hole point, segment intersection and endpoint;\n// if there are no points found, we have a valid connection;\n// otherwise choose the point of the minimum angle with the ray as connection point\nconst stop=m,mx=m.x,my=m.y;let tanMin=Infinity,tan;p=m;do{if(hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)){tan=Math.abs(hy-p.y)/(hx-p.x);// tangential\nif(locallyInside(p,hole)&&(tan<tanMin||tan===tanMin&&(p.x>m.x||p.x===m.x&&sectorContainsSector(m,p)))){m=p;tanMin=tan;}}p=p.next;}while(p!==stop);return m;}// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0&&area(p.next,m,m.next)<0;}// interlink polygon nodes in z-order\nfunction indexCurve(start,minX,minY,invSize){let p=start;do{if(p.z===null)p.z=zOrder(p.x,p.y,minX,minY,invSize);p.prevZ=p.prev;p.nextZ=p.next;p=p.next;}while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;sortLinked(p);}// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list){let i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{p=list;list=null;tail=null;numMerges=0;while(p){numMerges++;q=p;pSize=0;for(i=0;i<inSize;i++){pSize++;q=q.nextZ;if(!q)break;}qSize=inSize;while(pSize>0||qSize>0&&q){if(pSize!==0&&(qSize===0||!q||p.z<=q.z)){e=p;p=p.nextZ;pSize--;}else{e=q;q=q.nextZ;qSize--;}if(tail)tail.nextZ=e;else list=e;e.prevZ=tail;tail=e;}p=q;}tail.nextZ=null;inSize*=2;}while(numMerges>1);return list;}// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x,y,minX,minY,invSize){// coords are transformed into non-negative 15-bit integer range\nx=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&0x00FF00FF;x=(x|x<<4)&0x0F0F0F0F;x=(x|x<<2)&0x33333333;x=(x|x<<1)&0x55555555;y=(y|y<<8)&0x00FF00FF;y=(y|y<<4)&0x0F0F0F0F;y=(y|y<<2)&0x33333333;y=(y|y<<1)&0x55555555;return x|y<<1;}// find the leftmost node of a polygon ring\nfunction getLeftmost(start){let p=start,leftmost=start;do{if(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)leftmost=p;p=p.next;}while(p!==start);return leftmost;}// check if a point lies within a convex triangle\nfunction pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)-(ax-px)*(cy-py)>=0&&(ax-px)*(by-py)-(bx-px)*(ay-py)>=0&&(bx-px)*(cy-py)-(cx-px)*(by-py)>=0;}// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!intersectsPolygon(a,b)&&(// dones't intersect other edges\nlocallyInside(a,b)&&locallyInside(b,a)&&middleInside(a,b)&&(// locally visible\narea(a.prev,a,b.prev)||area(a,b.prev,b))||// does not create opposite-facing sectors\nequals(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0);// special zero-length case\n}// signed area of a triangle\nfunction area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y);}// check if two points are equal\nfunction equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y;}// check if two segments intersect\nfunction intersects(p1,q1,p2,q2){const o1=sign(area(p1,q1,p2));const o2=sign(area(p1,q1,q2));const o3=sign(area(p2,q2,p1));const o4=sign(area(p2,q2,q1));if(o1!==o2&&o3!==o4)return true;// general case\nif(o1===0&&onSegment(p1,p2,q1))return true;// p1, q1 and p2 are collinear and p2 lies on p1q1\nif(o2===0&&onSegment(p1,q2,q1))return true;// p1, q1 and q2 are collinear and q2 lies on p1q1\nif(o3===0&&onSegment(p2,p1,q2))return true;// p2, q2 and p1 are collinear and p1 lies on p2q2\nif(o4===0&&onSegment(p2,q1,q2))return true;// p2, q2 and q1 are collinear and q1 lies on p2q2\nreturn false;}// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y);}function sign(num){return num>0?1:num<0?-1:0;}// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a,b){let p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b))return true;p=p.next;}while(p!==a);return false;}// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0;}// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a,b){let p=a,inside=false;const px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{if(p.y>py!==p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x)inside=!inside;p=p.next;}while(p!==a);return inside;}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a,b){const a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2;}// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i,x,y,last){const p=new Node(i,x,y);if(!last){p.prev=p;p.next=p;}else{p.next=last.next;p.prev=last;last.next.prev=p;last.next=p;}return p;}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;if(p.prevZ)p.prevZ.nextZ=p.nextZ;if(p.nextZ)p.nextZ.prevZ=p.prevZ;}function Node(i,x,y){// vertex index in coordinates array\nthis.i=i;// vertex coordinates\nthis.x=x;this.y=y;// previous and next vertex nodes in a polygon ring\nthis.prev=null;this.next=null;// z-order curve value\nthis.z=null;// previous and next nodes in z-order\nthis.prevZ=null;this.nextZ=null;// indicates whether this is a steiner point\nthis.steiner=false;}function signedArea(data,start,end,dim){let sum=0;for(let i=start,j=end-dim;i<end;i+=dim){sum+=(data[j]-data[i])*(data[i+1]+data[j+1]);j=i;}return sum;}class ShapeUtils{// calculate area of the contour polygon\nstatic area(contour){const n=contour.length;let a=0.0;for(let p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;}return a*0.5;}static isClockWise(pts){return ShapeUtils.area(pts)<0;}static triangulateShape(contour,holes){const vertices=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\nconst holeIndices=[];// array of hole indices\nconst faces=[];// final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\nremoveDupEndPts(contour);addContour(vertices,contour);//\nlet holeIndex=contour.length;holes.forEach(removeDupEndPts);for(let i=0;i<holes.length;i++){holeIndices.push(holeIndex);holeIndex+=holes[i].length;addContour(vertices,holes[i]);}//\nconst triangles=Earcut.triangulate(vertices,holeIndices);//\nfor(let i=0;i<triangles.length;i+=3){faces.push(triangles.slice(i,i+3));}return faces;}}function removeDupEndPts(points){const l=points.length;if(l>2&&points[l-1].equals(points[0])){points.pop();}}function addContour(vertices,contour){for(let i=0;i<contour.length;i++){vertices.push(contour[i].x);vertices.push(contour[i].y);}}/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */class ExtrudeGeometry extends BufferGeometry{constructor(shapes,options){super();this.type='ExtrudeGeometry';this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];const scope=this;const verticesArray=[];const uvArray=[];for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];addShape(shape);}// build geometry\nthis.setAttribute('position',new Float32BufferAttribute(verticesArray,3));this.setAttribute('uv',new Float32BufferAttribute(uvArray,2));this.computeVertexNormals();// functions\nfunction addShape(shape){const placeholder=[];// options\nconst curveSegments=options.curveSegments!==undefined?options.curveSegments:12;const steps=options.steps!==undefined?options.steps:1;let depth=options.depth!==undefined?options.depth:100;let bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;let bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:6;let bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-2;let bevelOffset=options.bevelOffset!==undefined?options.bevelOffset:0;let bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;const extrudePath=options.extrudePath;const uvgen=options.UVGenerator!==undefined?options.UVGenerator:WorldUVGenerator;// deprecated options\nif(options.amount!==undefined){console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');depth=options.amount;}//\nlet extrudePts,extrudeByPath=false;let splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;// bevels not supported for path extrusion\n// SETUP TNB variables\n// TODO1 - have a .isClosed in spline?\nsplineTube=extrudePath.computeFrenetFrames(steps,false);// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\nbinormal=new Vector3();normal=new Vector3();position2=new Vector3();}// Safeguards if bevels are not enabled\nif(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0;bevelOffset=0;}// Variables initialization\nconst shapePoints=shape.extractPoints(curveSegments);let vertices=shapePoints.shape;const holes=shapePoints.holes;const reverse=!ShapeUtils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();// Maybe we should also check if holes are in the opposite direction, just to be safe ...\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];if(ShapeUtils.isClockWise(ahole)){holes[h]=ahole.reverse();}}}const faces=ShapeUtils.triangulateShape(vertices,holes);/* Vertices */const contour=vertices;// vertices has all points but contour has only points of circumference\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];vertices=vertices.concat(ahole);}function scalePt2(pt,vec,size){if(!vec)console.error('THREE.ExtrudeGeometry: vec does not exist');return vec.clone().multiplyScalar(size).add(pt);}const vlen=vertices.length,flen=faces.length;// Find directions for point movement\nfunction getBevelVec(inPt,inPrev,inNext){// computes for inPt the corresponding point inPt' on a new contour\n//   shifted by 1 unit (length of normalized vector) to the left\n// if we walk along contour clockwise, this new contour is outside the old one\n//\n// inPt' is the intersection of the two lines parallel to the two\n//  adjacent edges of inPt at a distance of 1 unit on the left side.\nlet v_trans_x,v_trans_y,shrink_by;// resulting translation vector for inPt\n// good reading for geometry algorithms (here: line-line intersection)\n// http://geomalgorithms.com/a05-_intersect-1.html\nconst v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y;const v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y;const v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y;// check for collinear edges\nconst collinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(collinear0)>Number.EPSILON){// not collinear\n// length of vectors for normalizing\nconst v_prev_len=Math.sqrt(v_prev_lensq);const v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y);// shift adjacent points by unit vectors to the left\nconst ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len;const ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len;const ptNextShift_x=inNext.x-v_next_y/v_next_len;const ptNextShift_y=inNext.y+v_next_x/v_next_len;// scaling factor for v_prev to intersection point\nconst sf=((ptNextShift_x-ptPrevShift_x)*v_next_y-(ptNextShift_y-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);// vector from inPt to intersection point\nv_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x;v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;// Don't normalize!, otherwise sharp corners become ugly\n//  but prevent crazy spikes\nconst v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2){return new Vector2(v_trans_x,v_trans_y);}else{shrink_by=Math.sqrt(v_trans_lensq/2);}}else{// handle special case of collinear edges\nlet direction_eq=false;// assumes: opposite\nif(v_prev_x>Number.EPSILON){if(v_next_x>Number.EPSILON){direction_eq=true;}}else{if(v_prev_x<-Number.EPSILON){if(v_next_x<-Number.EPSILON){direction_eq=true;}}else{if(Math.sign(v_prev_y)===Math.sign(v_next_y)){direction_eq=true;}}}if(direction_eq){// console.log(\"Warning: lines are a straight sequence\");\nv_trans_x=-v_prev_y;v_trans_y=v_prev_x;shrink_by=Math.sqrt(v_prev_lensq);}else{// console.log(\"Warning: lines are a straight spike\");\nv_trans_x=v_prev_x;v_trans_y=v_prev_y;shrink_by=Math.sqrt(v_prev_lensq/2);}}return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by);}const contourMovements=[];for(let i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\n// console.log('i,j,k', i, j , k)\ncontourMovements[i]=getBevelVec(contour[i],contour[j],contour[k]);}const holesMovements=[];let oneHoleMovements,verticesMovements=contourMovements.concat();for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=[];for(let i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\noneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements);}// Loop bevelSegments, 1 for the front, 1 for the back\nfor(let b=0;b<bevelSegments;b++){//for ( b = bevelSegments; b > 0; b -- ) {\nconst t=b/bevelSegments;const z=bevelThickness*Math.cos(t*Math.PI/2);const bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z);}// expand holes\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z);}}}const bs=bevelSize+bevelOffset;// Back facing vertices\nfor(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,0);}else{// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\nnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}// Add stepped vertices...\n// Including front facing vertices\nfor(let s=1;s<=steps;s++){for(let i=0;i<vlen;i++){const vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,depth/steps*s);}else{// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\nnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}}// Add bevel segments planes\n//for ( b = 1; b <= bevelSegments; b ++ ) {\nfor(let b=bevelSegments-1;b>=0;b--){const t=b/bevelSegments;const z=bevelThickness*Math.cos(t*Math.PI/2);const bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(let i=0,il=contour.length;i<il;i++){const vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,depth+z);}// expand holes\nfor(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];oneHoleMovements=holesMovements[h];for(let i=0,il=ahole.length;i<il;i++){const vert=scalePt2(ahole[i],oneHoleMovements[i],bs);if(!extrudeByPath){v(vert.x,vert.y,depth+z);}else{v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z);}}}}/* Faces */ // Top and bottom faces\nbuildLidFaces();// Sides faces\nbuildSideFaces();/////  Internal functions\nfunction buildLidFaces(){const start=verticesArray.length/3;if(bevelEnabled){let layer=0;// steps + 1\nlet offset=vlen*layer;// Bottom faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset);}layer=steps+bevelSegments*2;offset=vlen*layer;// Top faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset);}}else{// Bottom faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[2],face[1],face[0]);}// Top faces\nfor(let i=0;i<flen;i++){const face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps);}}scope.addGroup(start,verticesArray.length/3-start,0);}// Create faces for the z-sides of the shape\nfunction buildSideFaces(){const start=verticesArray.length/3;let layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(let h=0,hl=holes.length;h<hl;h++){const ahole=holes[h];sidewalls(ahole,layeroffset);//, true\nlayeroffset+=ahole.length;}scope.addGroup(start,verticesArray.length/3-start,1);}function sidewalls(contour,layeroffset){let i=contour.length;while(--i>=0){const j=i;let k=i-1;if(k<0)k=contour.length-1;//console.log('b', i,j, i-1, k,vertices.length);\nfor(let s=0,sl=steps+bevelSegments*2;s<sl;s++){const slen1=vlen*s;const slen2=vlen*(s+1);const a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d);}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z);}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);const nextIndex=verticesArray.length/3;const uvs=uvgen.generateTopUV(scope,verticesArray,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[2]);}function f4(a,b,c,d){addVertex(a);addVertex(b);addVertex(d);addVertex(b);addVertex(c);addVertex(d);const nextIndex=verticesArray.length/3;const uvs=uvgen.generateSideWallUV(scope,verticesArray,nextIndex-6,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[3]);addUV(uvs[1]);addUV(uvs[2]);addUV(uvs[3]);}function addVertex(index){verticesArray.push(placeholder[index*3+0]);verticesArray.push(placeholder[index*3+1]);verticesArray.push(placeholder[index*3+2]);}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y);}}}toJSON(){const data=super.toJSON();const shapes=this.parameters.shapes;const options=this.parameters.options;return toJSON$1(shapes,options,data);}}const WorldUVGenerator={generateTopUV:function(geometry,vertices,indexA,indexB,indexC){const a_x=vertices[indexA*3];const a_y=vertices[indexA*3+1];const b_x=vertices[indexB*3];const b_y=vertices[indexB*3+1];const c_x=vertices[indexC*3];const c_y=vertices[indexC*3+1];return[new Vector2(a_x,a_y),new Vector2(b_x,b_y),new Vector2(c_x,c_y)];},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){const a_x=vertices[indexA*3];const a_y=vertices[indexA*3+1];const a_z=vertices[indexA*3+2];const b_x=vertices[indexB*3];const b_y=vertices[indexB*3+1];const b_z=vertices[indexB*3+2];const c_x=vertices[indexC*3];const c_y=vertices[indexC*3+1];const c_z=vertices[indexC*3+2];const d_x=vertices[indexD*3];const d_y=vertices[indexD*3+1];const d_z=vertices[indexD*3+2];if(Math.abs(a_y-b_y)<Math.abs(a_x-b_x)){return[new Vector2(a_x,1-a_z),new Vector2(b_x,1-b_z),new Vector2(c_x,1-c_z),new Vector2(d_x,1-d_z)];}else{return[new Vector2(a_y,1-a_z),new Vector2(b_y,1-b_z),new Vector2(c_y,1-c_z),new Vector2(d_y,1-d_z)];}}};function toJSON$1(shapes,options,data){data.shapes=[];if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}if(options.extrudePath!==undefined)data.options.extrudePath=options.extrudePath.toJSON();return data;}class IcosahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const t=(1+Math.sqrt(5))/2;const vertices=[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1];const indices=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(vertices,indices,radius,detail);this.type='IcosahedronGeometry';this.parameters={radius:radius,detail:detail};}}class LatheGeometry extends BufferGeometry{constructor(points,segments=12,phiStart=0,phiLength=Math.PI*2){super();this.type='LatheGeometry';this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments);// clamp phiLength so it's in range of [ 0, 2PI ]\nphiLength=clamp(phiLength,0,Math.PI*2);// buffers\nconst indices=[];const vertices=[];const uvs=[];// helper variables\nconst inverseSegments=1.0/segments;const vertex=new Vector3();const uv=new Vector2();// generate vertices and uvs\nfor(let i=0;i<=segments;i++){const phi=phiStart+i*inverseSegments*phiLength;const sin=Math.sin(phi);const cos=Math.cos(phi);for(let j=0;j<=points.length-1;j++){// vertex\nvertex.x=points[j].x*sin;vertex.y=points[j].y;vertex.z=points[j].x*cos;vertices.push(vertex.x,vertex.y,vertex.z);// uv\nuv.x=i/segments;uv.y=j/(points.length-1);uvs.push(uv.x,uv.y);}}// indices\nfor(let i=0;i<segments;i++){for(let j=0;j<points.length-1;j++){const base=j+i*points.length;const a=base;const b=base+points.length;const c=base+points.length+1;const d=base+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// generate normals\nthis.computeVertexNormals();// if the geometry is closed, we need to average the normals along the seam.\n// because the corresponding vertices are identical (but still have different UVs).\nif(phiLength===Math.PI*2){const normals=this.attributes.normal.array;const n1=new Vector3();const n2=new Vector3();const n=new Vector3();// this is the buffer offset for the last line of vertices\nconst base=segments*points.length*3;for(let i=0,j=0;i<points.length;i++,j+=3){// select the normal of the vertex in the first line\nn1.x=normals[j+0];n1.y=normals[j+1];n1.z=normals[j+2];// select the normal of the vertex in the last line\nn2.x=normals[base+j+0];n2.y=normals[base+j+1];n2.z=normals[base+j+2];// average normals\nn.addVectors(n1,n2).normalize();// assign the new values to both normals\nnormals[j+0]=normals[base+j+0]=n.x;normals[j+1]=normals[base+j+1]=n.y;normals[j+2]=normals[base+j+2]=n.z;}}}}class OctahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const vertices=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];const indices=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(vertices,indices,radius,detail);this.type='OctahedronGeometry';this.parameters={radius:radius,detail:detail};}}/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */class ParametricGeometry extends BufferGeometry{constructor(func,slices,stacks){super();this.type='ParametricGeometry';this.parameters={func:func,slices:slices,stacks:stacks};// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];const EPS=0.00001;const normal=new Vector3();const p0=new Vector3(),p1=new Vector3();const pu=new Vector3(),pv=new Vector3();if(func.length<3){console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');}// generate vertices, normals and uvs\nconst sliceCount=slices+1;for(let i=0;i<=stacks;i++){const v=i/stacks;for(let j=0;j<=slices;j++){const u=j/slices;// vertex\nfunc(u,v,p0);vertices.push(p0.x,p0.y,p0.z);// normal\n// approximate tangent vectors via finite differences\nif(u-EPS>=0){func(u-EPS,v,p1);pu.subVectors(p0,p1);}else{func(u+EPS,v,p1);pu.subVectors(p1,p0);}if(v-EPS>=0){func(u,v-EPS,p1);pv.subVectors(p0,p1);}else{func(u,v+EPS,p1);pv.subVectors(p1,p0);}// cross product of tangent vectors returns surface normal\nnormal.crossVectors(pu,pv).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,v);}}// generate indices\nfor(let i=0;i<stacks;i++){for(let j=0;j<slices;j++){const a=i*sliceCount+j;const b=i*sliceCount+j+1;const c=(i+1)*sliceCount+j+1;const d=(i+1)*sliceCount+j;// faces one and two\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class RingGeometry extends BufferGeometry{constructor(innerRadius=0.5,outerRadius=1,thetaSegments=8,phiSegments=1,thetaStart=0,thetaLength=Math.PI*2){super();this.type='RingGeometry';this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};thetaSegments=Math.max(3,thetaSegments);phiSegments=Math.max(1,phiSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// some helper variables\nlet radius=innerRadius;const radiusStep=(outerRadius-innerRadius)/phiSegments;const vertex=new Vector3();const uv=new Vector2();// generate vertices, normals and uvs\nfor(let j=0;j<=phiSegments;j++){for(let i=0;i<=thetaSegments;i++){// values are generate from the inside of the ring to the outside\nconst segment=thetaStart+i/thetaSegments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uv\nuv.x=(vertex.x/outerRadius+1)/2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y);}// increase the radius for next row of vertices\nradius+=radiusStep;}// indices\nfor(let j=0;j<phiSegments;j++){const thetaSegmentLevel=j*(thetaSegments+1);for(let i=0;i<thetaSegments;i++){const segment=i+thetaSegmentLevel;const a=segment;const b=segment+thetaSegments+1;const c=segment+thetaSegments+2;const d=segment+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class ShapeGeometry extends BufferGeometry{constructor(shapes,curveSegments=12){super();this.type='ShapeGeometry';this.parameters={shapes:shapes,curveSegments:curveSegments};// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nlet groupStart=0;let groupCount=0;// allow single and array values for \"shapes\" parameter\nif(Array.isArray(shapes)===false){addShape(shapes);}else{for(let i=0;i<shapes.length;i++){addShape(shapes[i]);this.addGroup(groupStart,groupCount,i);// enables MultiMaterial support\ngroupStart+=groupCount;groupCount=0;}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// helper functions\nfunction addShape(shape){const indexOffset=vertices.length/3;const points=shape.extractPoints(curveSegments);let shapeVertices=points.shape;const shapeHoles=points.holes;// check direction of vertices\nif(ShapeUtils.isClockWise(shapeVertices)===false){shapeVertices=shapeVertices.reverse();}for(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];if(ShapeUtils.isClockWise(shapeHole)===true){shapeHoles[i]=shapeHole.reverse();}}const faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);// join vertices of inner and outer paths to a single array\nfor(let i=0,l=shapeHoles.length;i<l;i++){const shapeHole=shapeHoles[i];shapeVertices=shapeVertices.concat(shapeHole);}// vertices, normals, uvs\nfor(let i=0,l=shapeVertices.length;i<l;i++){const vertex=shapeVertices[i];vertices.push(vertex.x,vertex.y,0);normals.push(0,0,1);uvs.push(vertex.x,vertex.y);// world uvs\n}// incides\nfor(let i=0,l=faces.length;i<l;i++){const face=faces[i];const a=face[0]+indexOffset;const b=face[1]+indexOffset;const c=face[2]+indexOffset;indices.push(a,b,c);groupCount+=3;}}}toJSON(){const data=super.toJSON();const shapes=this.parameters.shapes;return toJSON(shapes,data);}}function toJSON(shapes,data){data.shapes=[];if(Array.isArray(shapes)){for(let i=0,l=shapes.length;i<l;i++){const shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}return data;}class SphereGeometry extends BufferGeometry{constructor(radius=1,widthSegments=8,heightSegments=6,phiStart=0,phiLength=Math.PI*2,thetaStart=0,thetaLength=Math.PI){super();this.type='SphereGeometry';this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};widthSegments=Math.max(3,Math.floor(widthSegments));heightSegments=Math.max(2,Math.floor(heightSegments));const thetaEnd=Math.min(thetaStart+thetaLength,Math.PI);let index=0;const grid=[];const vertex=new Vector3();const normal=new Vector3();// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// generate vertices, normals and uvs\nfor(let iy=0;iy<=heightSegments;iy++){const verticesRow=[];const v=iy/heightSegments;// special case for the poles\nlet uOffset=0;if(iy==0&&thetaStart==0){uOffset=0.5/widthSegments;}else if(iy==heightSegments&&thetaEnd==Math.PI){uOffset=-0.5/widthSegments;}for(let ix=0;ix<=widthSegments;ix++){const u=ix/widthSegments;// vertex\nvertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.copy(vertex).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u+uOffset,1-v);verticesRow.push(index++);}grid.push(verticesRow);}// indices\nfor(let iy=0;iy<heightSegments;iy++){for(let ix=0;ix<widthSegments;ix++){const a=grid[iy][ix+1];const b=grid[iy][ix];const c=grid[iy+1][ix];const d=grid[iy+1][ix+1];if(iy!==0||thetaStart>0)indices.push(a,b,d);if(iy!==heightSegments-1||thetaEnd<Math.PI)indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class TetrahedronGeometry extends PolyhedronGeometry{constructor(radius=1,detail=0){const vertices=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];const indices=[2,1,0,0,3,2,1,3,0,2,3,1];super(vertices,indices,radius,detail);this.type='TetrahedronGeometry';this.parameters={radius:radius,detail:detail};}}/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */class TextGeometry extends ExtrudeGeometry{constructor(text,parameters={}){const font=parameters.font;if(!(font&&font.isFont)){console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');return new BufferGeometry();}const shapes=font.generateShapes(text,parameters.size);// translate parameters to ExtrudeGeometry API\nparameters.depth=parameters.height!==undefined?parameters.height:50;// defaults\nif(parameters.bevelThickness===undefined)parameters.bevelThickness=10;if(parameters.bevelSize===undefined)parameters.bevelSize=8;if(parameters.bevelEnabled===undefined)parameters.bevelEnabled=false;super(shapes,parameters);this.type='TextGeometry';}}class TorusGeometry extends BufferGeometry{constructor(radius=1,tube=0.4,radialSegments=8,tubularSegments=6,arc=Math.PI*2){super();this.type='TorusGeometry';this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radialSegments=Math.floor(radialSegments);tubularSegments=Math.floor(tubularSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst center=new Vector3();const vertex=new Vector3();const normal=new Vector3();// generate vertices, normals and uvs\nfor(let j=0;j<=radialSegments;j++){for(let i=0;i<=tubularSegments;i++){const u=i/tubularSegments*arc;const v=j/radialSegments*Math.PI*2;// vertex\nvertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);// normal\ncenter.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(let j=1;j<=radialSegments;j++){for(let i=1;i<=tubularSegments;i++){// indices\nconst a=(tubularSegments+1)*j+i-1;const b=(tubularSegments+1)*(j-1)+i-1;const c=(tubularSegments+1)*(j-1)+i;const d=(tubularSegments+1)*j+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));}}class TorusKnotGeometry extends BufferGeometry{constructor(radius=1,tube=0.4,tubularSegments=64,radialSegments=8,p=2,q=3){super();this.type='TorusKnotGeometry';this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};tubularSegments=Math.floor(tubularSegments);radialSegments=Math.floor(radialSegments);// buffers\nconst indices=[];const vertices=[];const normals=[];const uvs=[];// helper variables\nconst vertex=new Vector3();const normal=new Vector3();const P1=new Vector3();const P2=new Vector3();const B=new Vector3();const T=new Vector3();const N=new Vector3();// generate vertices, normals and uvs\nfor(let i=0;i<=tubularSegments;++i){// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\nconst u=i/tubularSegments*p*Math.PI*2;// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\ncalculatePositionOnCurve(u,p,q,radius,P1);calculatePositionOnCurve(u+0.01,p,q,radius,P2);// calculate orthonormal basis\nT.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);// normalize B, N. T can be ignored, we don't use it\nB.normalize();N.normalize();for(let j=0;j<=radialSegments;++j){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\nconst v=j/radialSegments*Math.PI*2;const cx=-tube*Math.cos(v);const cy=tube*Math.sin(v);// now calculate the final vertex position.\n// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\nvertex.x=P1.x+(cx*N.x+cy*B.x);vertex.y=P1.y+(cx*N.y+cy*B.y);vertex.z=P1.z+(cx*N.z+cy*B.z);vertices.push(vertex.x,vertex.y,vertex.z);// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\nnormal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(let j=1;j<=tubularSegments;j++){for(let i=1;i<=radialSegments;i++){// indices\nconst a=(radialSegments+1)*(j-1)+(i-1);const b=(radialSegments+1)*j+(i-1);const c=(radialSegments+1)*j+i;const d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// this function calculates the current position on the torus curve\nfunction calculatePositionOnCurve(u,p,q,radius,position){const cu=Math.cos(u);const su=Math.sin(u);const quOverP=q/p*u;const cs=Math.cos(quOverP);position.x=radius*(2+cs)*0.5*cu;position.y=radius*(2+cs)*su*0.5;position.z=radius*Math.sin(quOverP)*0.5;}}}class TubeGeometry extends BufferGeometry{constructor(path,tubularSegments=64,radius=1,radialSegments=8,closed=false){super();this.type='TubeGeometry';this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};const frames=path.computeFrenetFrames(tubularSegments,closed);// expose internals\nthis.tangents=frames.tangents;this.normals=frames.normals;this.binormals=frames.binormals;// helper variables\nconst vertex=new Vector3();const normal=new Vector3();const uv=new Vector2();let P=new Vector3();// buffer\nconst vertices=[];const normals=[];const uvs=[];const indices=[];// create buffer data\ngenerateBufferData();// build geometry\nthis.setIndex(indices);this.setAttribute('position',new Float32BufferAttribute(vertices,3));this.setAttribute('normal',new Float32BufferAttribute(normals,3));this.setAttribute('uv',new Float32BufferAttribute(uvs,2));// functions\nfunction generateBufferData(){for(let i=0;i<tubularSegments;i++){generateSegment(i);}// if the geometry is not closed, generate the last row of vertices and normals\n// at the regular position on the given path\n//\n// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\ngenerateSegment(closed===false?tubularSegments:0);// uvs are generated in a separate function.\n// this makes it easy compute correct values for closed geometries\ngenerateUVs();// finally create faces\ngenerateIndices();}function generateSegment(i){// we use getPointAt to sample evenly distributed points from the given path\nP=path.getPointAt(i/tubularSegments,P);// retrieve corresponding normal and binormal\nconst N=frames.normals[i];const B=frames.binormals[i];// generate normals and vertices for the current segment\nfor(let j=0;j<=radialSegments;j++){const v=j/radialSegments*Math.PI*2;const sin=Math.sin(v);const cos=-Math.cos(v);// normal\nnormal.x=cos*N.x+sin*B.x;normal.y=cos*N.y+sin*B.y;normal.z=cos*N.z+sin*B.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);// vertex\nvertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z);}}function generateIndices(){for(let j=1;j<=tubularSegments;j++){for(let i=1;i<=radialSegments;i++){const a=(radialSegments+1)*(j-1)+(i-1);const b=(radialSegments+1)*j+(i-1);const c=(radialSegments+1)*j+i;const d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}}function generateUVs(){for(let i=0;i<=tubularSegments;i++){for(let j=0;j<=radialSegments;j++){uv.x=i/tubularSegments;uv.y=j/radialSegments;uvs.push(uv.x,uv.y);}}}}toJSON(){const data=super.toJSON();data.path=this.parameters.path.toJSON();return data;}}class WireframeGeometry extends BufferGeometry{constructor(geometry){super();this.type='WireframeGeometry';if(geometry.isGeometry===true){console.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');return;}// buffer\nconst vertices=[];// helper variables\nconst edge=[0,0],edges={};const vertex=new Vector3();if(geometry.index!==null){// indexed BufferGeometry\nconst position=geometry.attributes.position;const indices=geometry.index;let groups=geometry.groups;if(groups.length===0){groups=[{start:0,count:indices.count,materialIndex:0}];}// create a data structure that contains all eges without duplicates\nfor(let o=0,ol=groups.length;o<ol;++o){const group=groups[o];const start=group.start;const count=group.count;for(let i=start,l=start+count;i<l;i+=3){for(let j=0;j<3;j++){const edge1=indices.getX(i+j);const edge2=indices.getX(i+(j+1)%3);edge[0]=Math.min(edge1,edge2);// sorting prevents duplicates\nedge[1]=Math.max(edge1,edge2);const key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1]};}}}}// generate vertices\nfor(const key in edges){const e=edges[key];vertex.fromBufferAttribute(position,e.index1);vertices.push(vertex.x,vertex.y,vertex.z);vertex.fromBufferAttribute(position,e.index2);vertices.push(vertex.x,vertex.y,vertex.z);}}else{// non-indexed BufferGeometry\nconst position=geometry.attributes.position;for(let i=0,l=position.count/3;i<l;i++){for(let j=0;j<3;j++){// three edges per triangle, an edge is represented as (index1, index2)\n// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\nconst index1=3*i+j;vertex.fromBufferAttribute(position,index1);vertices.push(vertex.x,vertex.y,vertex.z);const index2=3*i+(j+1)%3;vertex.fromBufferAttribute(position,index2);vertices.push(vertex.x,vertex.y,vertex.z);}}}// build geometry\nthis.setAttribute('position',new Float32BufferAttribute(vertices,3));}}var Geometries=/*#__PURE__*/Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeGeometry,WireframeGeometry:WireframeGeometry});/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */class ShadowMaterial extends Material{constructor(parameters){super();this.type='ShadowMaterial';this.color=new Color(0x000000);this.transparent=true;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);return this;}}ShadowMaterial.prototype.isShadowMaterial=true;class RawShaderMaterial extends ShaderMaterial{constructor(parameters){super(parameters);this.type='RawShaderMaterial';}}RawShaderMaterial.prototype.isRawShaderMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */class MeshStandardMaterial extends Material{constructor(parameters){super();this.defines={'STANDARD':''};this.type='MeshStandardMaterial';this.color=new Color(0xffffff);// diffuse\nthis.roughness=1.0;this.metalness=0.0;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1.0;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.vertexTangents=false;this.setValues(parameters);}copy(source){super.copy(source);this.defines={'STANDARD':''};this.color.copy(source.color);this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;this.vertexTangents=source.vertexTangents;return this;}}MeshStandardMaterial.prototype.isMeshStandardMaterial=true;/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> ),\n *\n *  thickness: <float>,\n *  thicknessMap: new THREE.Texture( <Image> ),\n *  attenuationDistance: <float>,\n *  attenuationColor: <Color>\n * }\n */class MeshPhysicalMaterial extends MeshStandardMaterial{constructor(parameters){super();this.defines={'STANDARD':'','PHYSICAL':''};this.type='MeshPhysicalMaterial';this.clearcoat=0.0;this.clearcoatMap=null;this.clearcoatRoughness=0.0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new Vector2(1,1);this.clearcoatNormalMap=null;this.reflectivity=0.5;// maps to F0 = 0.04\nObject.defineProperty(this,'ior',{get:function(){return(1+0.4*this.reflectivity)/(1-0.4*this.reflectivity);},set:function(ior){this.reflectivity=clamp(2.5*(ior-1)/(ior+1),0,1);}});this.sheen=null;// null will disable sheen bsdf\nthis.transmission=0.0;this.transmissionMap=null;this.thickness=0.01;this.thicknessMap=null;this.attenuationDistance=0.0;this.attenuationColor=new Color(1,1,1);this.setValues(parameters);}copy(source){super.copy(source);this.defines={'STANDARD':'','PHYSICAL':''};this.clearcoat=source.clearcoat;this.clearcoatMap=source.clearcoatMap;this.clearcoatRoughness=source.clearcoatRoughness;this.clearcoatRoughnessMap=source.clearcoatRoughnessMap;this.clearcoatNormalMap=source.clearcoatNormalMap;this.clearcoatNormalScale.copy(source.clearcoatNormalScale);this.reflectivity=source.reflectivity;if(source.sheen){this.sheen=(this.sheen||new Color()).copy(source.sheen);}else{this.sheen=null;}this.transmission=source.transmission;this.transmissionMap=source.transmissionMap;this.thickness=source.thickness;this.thicknessMap=source.thicknessMap;this.attenuationDistance=source.attenuationDistance;this.attenuationColor.copy(source.attenuationColor);return this;}}MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */class MeshPhongMaterial extends Material{constructor(parameters){super();this.type='MeshPhongMaterial';this.color=new Color(0xffffff);// diffuse\nthis.specular=new Color(0x111111);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshPhongMaterial.prototype.isMeshPhongMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */class MeshToonMaterial extends Material{constructor(parameters){super();this.defines={'TOON':''};this.type='MeshToonMaterial';this.color=new Color(0xffffff);this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.gradientMap=source.gradientMap;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;}}MeshToonMaterial.prototype.isMeshToonMaterial=true;/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */class MeshNormalMaterial extends Material{constructor(parameters){super();this.type='MeshNormalMaterial';this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshNormalMaterial.prototype.isMeshNormalMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */class MeshLambertMaterial extends Material{constructor(parameters){super();this.type='MeshLambertMaterial';this.color=new Color(0xffffff);// diffuse\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}copy(source){super.copy(source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;}}MeshLambertMaterial.prototype.isMeshLambertMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n *\n *  flatShading: <bool>\n * }\n */class MeshMatcapMaterial extends Material{constructor(parameters){super();this.defines={'MATCAP':''};this.type='MeshMatcapMaterial';this.color=new Color(0xffffff);// diffuse\nthis.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.morphTargets=false;this.morphNormals=false;this.flatShading=false;this.setValues(parameters);}copy(source){super.copy(source);this.defines={'MATCAP':''};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.flatShading=source.flatShading;return this;}}MeshMatcapMaterial.prototype.isMeshMatcapMaterial=true;/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */class LineDashedMaterial extends LineBasicMaterial{constructor(parameters){super();this.type='LineDashedMaterial';this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(parameters);}copy(source){super.copy(source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this;}}LineDashedMaterial.prototype.isLineDashedMaterial=true;var Materials=/*#__PURE__*/Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});const AnimationUtils={// same as Array.prototype.slice, but also works on typed arrays\narraySlice:function(array,from,to){if(AnimationUtils.isTypedArray(array)){// in ios9 array.subarray(from, undefined) will return empty array\n// but array.subarray(from) or array.subarray(from, len) is correct\nreturn new array.constructor(array.subarray(from,to!==undefined?to:array.length));}return array.slice(from,to);},// converts an array to a specific type\nconvertArray:function(array,type,forceClone){if(!array||// let 'undefined' and 'null' pass\n!forceClone&&array.constructor===type)return array;if(typeof type.BYTES_PER_ELEMENT==='number'){return new type(array);// create typed array\n}return Array.prototype.slice.call(array);// create Array\n},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView);},// returns an array by which times and values can be sorted\ngetKeyframeOrder:function(times){function compareTime(i,j){return times[i]-times[j];}const n=times.length;const result=new Array(n);for(let i=0;i!==n;++i)result[i]=i;result.sort(compareTime);return result;},// uses the array previously returned by 'getKeyframeOrder' to sort data\nsortedArray:function(values,stride,order){const nValues=values.length;const result=new values.constructor(nValues);for(let i=0,dstOffset=0;dstOffset!==nValues;++i){const srcOffset=order[i]*stride;for(let j=0;j!==stride;++j){result[dstOffset++]=values[srcOffset+j];}}return result;},// function for parsing AOS keyframe formats\nflattenJSON:function(jsonKeys,times,values,valuePropertyName){let i=1,key=jsonKeys[0];while(key!==undefined&&key[valuePropertyName]===undefined){key=jsonKeys[i++];}if(key===undefined)return;// no data\nlet value=key[valuePropertyName];if(value===undefined)return;// no data\nif(Array.isArray(value)){do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push.apply(values,value);// push all elements\n}key=jsonKeys[i++];}while(key!==undefined);}else if(value.toArray!==undefined){// ...assume THREE.Math-ish\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);value.toArray(values,values.length);}key=jsonKeys[i++];}while(key!==undefined);}else{// otherwise push as-is\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push(value);}key=jsonKeys[i++];}while(key!==undefined);}},subclip:function(sourceClip,name,startFrame,endFrame,fps=30){const clip=sourceClip.clone();clip.name=name;const tracks=[];for(let i=0;i<clip.tracks.length;++i){const track=clip.tracks[i];const valueSize=track.getValueSize();const times=[];const values=[];for(let j=0;j<track.times.length;++j){const frame=track.times[j]*fps;if(frame<startFrame||frame>=endFrame)continue;times.push(track.times[j]);for(let k=0;k<valueSize;++k){values.push(track.values[j*valueSize+k]);}}if(times.length===0)continue;track.times=AnimationUtils.convertArray(times,track.times.constructor);track.values=AnimationUtils.convertArray(values,track.values.constructor);tracks.push(track);}clip.tracks=tracks;// find minimum .times value across all tracks in the trimmed clip\nlet minStartTime=Infinity;for(let i=0;i<clip.tracks.length;++i){if(minStartTime>clip.tracks[i].times[0]){minStartTime=clip.tracks[i].times[0];}}// shift all tracks such that clip begins at t=0\nfor(let i=0;i<clip.tracks.length;++i){clip.tracks[i].shift(-1*minStartTime);}clip.resetDuration();return clip;},makeClipAdditive:function(targetClip,referenceFrame=0,referenceClip=targetClip,fps=30){if(fps<=0)fps=30;const numTracks=referenceClip.tracks.length;const referenceTime=referenceFrame/fps;// Make each track's values relative to the values at the reference frame\nfor(let i=0;i<numTracks;++i){const referenceTrack=referenceClip.tracks[i];const referenceTrackType=referenceTrack.ValueTypeName;// Skip this track if it's non-numeric\nif(referenceTrackType==='bool'||referenceTrackType==='string')continue;// Find the track in the target clip whose name and type matches the reference track\nconst targetTrack=targetClip.tracks.find(function(track){return track.name===referenceTrack.name&&track.ValueTypeName===referenceTrackType;});if(targetTrack===undefined)continue;let referenceOffset=0;const referenceValueSize=referenceTrack.getValueSize();if(referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){referenceOffset=referenceValueSize/3;}let targetOffset=0;const targetValueSize=targetTrack.getValueSize();if(targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){targetOffset=targetValueSize/3;}const lastIndex=referenceTrack.times.length-1;let referenceValue;// Find the value to subtract out of the track\nif(referenceTime<=referenceTrack.times[0]){// Reference frame is earlier than the first keyframe, so just use the first keyframe\nconst startIndex=referenceOffset;const endIndex=referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else if(referenceTime>=referenceTrack.times[lastIndex]){// Reference frame is after the last keyframe, so just use the last keyframe\nconst startIndex=lastIndex*referenceValueSize+referenceOffset;const endIndex=startIndex+referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else{// Interpolate to the reference value\nconst interpolant=referenceTrack.createInterpolant();const startIndex=referenceOffset;const endIndex=referenceValueSize-referenceOffset;interpolant.evaluate(referenceTime);referenceValue=AnimationUtils.arraySlice(interpolant.resultBuffer,startIndex,endIndex);}// Conjugate the quaternion\nif(referenceTrackType==='quaternion'){const referenceQuat=new Quaternion().fromArray(referenceValue).normalize().conjugate();referenceQuat.toArray(referenceValue);}// Subtract the reference value from all of the track values\nconst numTimes=targetTrack.times.length;for(let j=0;j<numTimes;++j){const valueStart=j*targetValueSize+targetOffset;if(referenceTrackType==='quaternion'){// Multiply the conjugate for quaternion track types\nQuaternion.multiplyQuaternionsFlat(targetTrack.values,valueStart,referenceValue,0,targetTrack.values,valueStart);}else{const valueEnd=targetValueSize-targetOffset*2;// Subtract each value for all other numeric track types\nfor(let k=0;k<valueEnd;++k){targetTrack.values[valueStart+k]-=referenceValue[k];}}}}targetClip.blendMode=AdditiveAnimationBlendMode;return targetClip;}};/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */class Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=resultBuffer!==undefined?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize;this.settings=null;this.DefaultSettings_={};}evaluate(t){const pp=this.parameterPositions;let i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];validate_interval:{seek:{let right;linear_scan:{//- See http://jsperf.com/comparison-to-undefined/3\n//- slower code:\n//-\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\nforward_scan:if(!(t<t1)){for(let giveUpAt=i1+2;;){if(t1===undefined){if(t<t0)break forward_scan;// after end\ni1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t,t0);}if(i1===giveUpAt)break;// this loop\nt0=t1;t1=pp[++i1];if(t<t1){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the right side of the index\nright=pp.length;break linear_scan;}//- slower code:\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\nif(!(t>=t0)){// looping?\nconst t1global=pp[1];if(t<t1global){i1=2;// + 1, using the scan for the details\nt0=t1global;}// linear reverse scan\nfor(let giveUpAt=i1-2;;){if(t0===undefined){// before start\nthis._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(i1===giveUpAt)break;// this loop\nt1=t0;t0=pp[--i1-1];if(t>=t0){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the left side of the index\nright=i1;i1=0;break linear_scan;}// the interval is valid\nbreak validate_interval;}// linear scan\n// binary search\nwhile(i1<right){const mid=i1+right>>>1;if(t<pp[mid]){right=mid;}else{i1=mid+1;}}t1=pp[i1];t0=pp[i1-1];// check boundary cases, again\nif(t0===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(t1===undefined){i1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t0,t);}}// seek\nthis._cachedIndex=i1;this.intervalChanged_(i1,t0,t1);}// validate_interval\nreturn this.interpolate_(i1,t0,t,t1);}getSettings_(){return this.settings||this.DefaultSettings_;}copySampleValue_(index){// copies a sample value to the result buffer\nconst result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=index*stride;for(let i=0;i!==stride;++i){result[i]=values[offset+i];}return result;}// Template methods for derived classes:\ninterpolate_()/* i1, t0, t, t1 */{throw new Error('call to abstract method');// implementations shall return this.resultBuffer\n}intervalChanged_()/* i1, t0, t1 */{// empty\n}}// ALIAS DEFINITIONS\nInterpolant.prototype.beforeStart_=Interpolant.prototype.copySampleValue_;Interpolant.prototype.afterEnd_=Interpolant.prototype.copySampleValue_;/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */class CubicInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;this.DefaultSettings_={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};}intervalChanged_(i1,t0,t1){const pp=this.parameterPositions;let iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(tPrev===undefined){switch(this.getSettings_().endingStart){case ZeroSlopeEnding:// f'(t0) = 0\niPrev=i1;tPrev=2*t0-t1;break;case WrapAroundEnding:// use the other end of the curve\niPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:// ZeroCurvatureEnding\n// f''(t0) = 0 a.k.a. Natural Spline\niPrev=i1;tPrev=t1;}}if(tNext===undefined){switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:// f'(tN) = 0\niNext=i1;tNext=2*t1-t0;break;case WrapAroundEnding:// use the other end of the curve\niNext=1;tNext=t1+pp[1]-pp[0];break;default:// ZeroCurvatureEnding\n// f''(tN) = 0, a.k.a. Natural Spline\niNext=i1-1;tNext=t0;}}const halfDt=(t1-t0)*0.5,stride=this.valueSize;this._weightPrev=halfDt/(t0-tPrev);this._weightNext=halfDt/(tNext-t1);this._offsetPrev=iPrev*stride;this._offsetNext=iNext*stride;}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,o1=i1*stride,o0=o1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0),pp=p*p,ppp=pp*p;// evaluate polynomials\nconst sP=-wP*ppp+2*wP*pp-wP*p;const s0=(1+wP)*ppp+(-1.5-2*wP)*pp+(-0.5+wP)*p+1;const s1=(-1-wN)*ppp+(1.5+wN)*pp+0.5*p;const sN=wN*ppp-wN*pp;// combine data linearly\nfor(let i=0;i!==stride;++i){result[i]=sP*values[oP+i]+s0*values[o0+i]+s1*values[o1+i]+sN*values[oN+i];}return result;}}class LinearInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer);}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset1=i1*stride,offset0=offset1-stride,weight1=(t-t0)/(t1-t0),weight0=1-weight1;for(let i=0;i!==stride;++i){result[i]=values[offset0+i]*weight0+values[offset1+i]*weight1;}return result;}}/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */class DiscreteInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer);}interpolate_(i1/*, t0, t, t1 */){return this.copySampleValue_(i1-1);}}class KeyframeTrack{constructor(name,times,values,interpolation){if(name===undefined)throw new Error('THREE.KeyframeTrack: track name is undefined');if(times===undefined||times.length===0)throw new Error('THREE.KeyframeTrack: no keyframes in track named '+name);this.name=name;this.times=AnimationUtils.convertArray(times,this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation);}// Serialization (in static context, because of constructor invocation\n// and automatic invocation of .toJSON):\nstatic toJSON(track){const trackType=track.constructor;let json;// derived classes can define a static toJSON method\nif(trackType.toJSON!==this.toJSON){json=trackType.toJSON(track);}else{// by default, we assume the data can be serialized as-is\njson={'name':track.name,'times':AnimationUtils.convertArray(track.times,Array),'values':AnimationUtils.convertArray(track.values,Array)};const interpolation=track.getInterpolation();if(interpolation!==track.DefaultInterpolation){json.interpolation=interpolation;}}json.type=track.ValueTypeName;// mandatory\nreturn json;}InterpolantFactoryMethodDiscrete(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result);}InterpolantFactoryMethodLinear(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result);}InterpolantFactoryMethodSmooth(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result);}setInterpolation(interpolation){let factoryMethod;switch(interpolation){case InterpolateDiscrete:factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:factoryMethod=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:factoryMethod=this.InterpolantFactoryMethodSmooth;break;}if(factoryMethod===undefined){const message='unsupported interpolation for '+this.ValueTypeName+' keyframe track named '+this.name;if(this.createInterpolant===undefined){// fall back to default, unless the default itself is messed up\nif(interpolation!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation);}else{throw new Error(message);// fatal, in this case\n}}console.warn('THREE.KeyframeTrack:',message);return this;}this.createInterpolant=factoryMethod;return this;}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth;}}getValueSize(){return this.values.length/this.times.length;}// move all keyframes either forwards or backwards in time\nshift(timeOffset){if(timeOffset!==0.0){const times=this.times;for(let i=0,n=times.length;i!==n;++i){times[i]+=timeOffset;}}return this;}// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\nscale(timeScale){if(timeScale!==1.0){const times=this.times;for(let i=0,n=times.length;i!==n;++i){times[i]*=timeScale;}}return this;}// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\ntrim(startTime,endTime){const times=this.times,nKeys=times.length;let from=0,to=nKeys-1;while(from!==nKeys&&times[from]<startTime){++from;}while(to!==-1&&times[to]>endTime){--to;}++to;// inclusive -> exclusive bound\nif(from!==0||to!==nKeys){// empty tracks are forbidden, so keep at least one keyframe\nif(from>=to){to=Math.max(to,1);from=to-1;}const stride=this.getValueSize();this.times=AnimationUtils.arraySlice(times,from,to);this.values=AnimationUtils.arraySlice(this.values,from*stride,to*stride);}return this;}// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\nvalidate(){let valid=true;const valueSize=this.getValueSize();if(valueSize-Math.floor(valueSize)!==0){console.error('THREE.KeyframeTrack: Invalid value size in track.',this);valid=false;}const times=this.times,values=this.values,nKeys=times.length;if(nKeys===0){console.error('THREE.KeyframeTrack: Track is empty.',this);valid=false;}let prevTime=null;for(let i=0;i!==nKeys;i++){const currTime=times[i];if(typeof currTime==='number'&&isNaN(currTime)){console.error('THREE.KeyframeTrack: Time is not a valid number.',this,i,currTime);valid=false;break;}if(prevTime!==null&&prevTime>currTime){console.error('THREE.KeyframeTrack: Out of order keys.',this,i,currTime,prevTime);valid=false;break;}prevTime=currTime;}if(values!==undefined){if(AnimationUtils.isTypedArray(values)){for(let i=0,n=values.length;i!==n;++i){const value=values[i];if(isNaN(value)){console.error('THREE.KeyframeTrack: Value is not a valid number.',this,i,value);valid=false;break;}}}}return valid;}// removes equivalent sequential keys as common in morph target sequences\n// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\noptimize(){// times or values may be shared with other tracks, so overwriting is unsafe\nconst times=AnimationUtils.arraySlice(this.times),values=AnimationUtils.arraySlice(this.values),stride=this.getValueSize(),smoothInterpolation=this.getInterpolation()===InterpolateSmooth,lastIndex=times.length-1;let writeIndex=1;for(let i=1;i<lastIndex;++i){let keep=false;const time=times[i];const timeNext=times[i+1];// remove adjacent keyframes scheduled at the same time\nif(time!==timeNext&&(i!==1||time!==times[0])){if(!smoothInterpolation){// remove unnecessary keyframes same as their neighbors\nconst offset=i*stride,offsetP=offset-stride,offsetN=offset+stride;for(let j=0;j!==stride;++j){const value=values[offset+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=true;break;}}}else{keep=true;}}// in-place compaction\nif(keep){if(i!==writeIndex){times[writeIndex]=times[i];const readOffset=i*stride,writeOffset=writeIndex*stride;for(let j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}}++writeIndex;}}// flush last keyframe (compaction looks ahead)\nif(lastIndex>0){times[writeIndex]=times[lastIndex];for(let readOffset=lastIndex*stride,writeOffset=writeIndex*stride,j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}++writeIndex;}if(writeIndex!==times.length){this.times=AnimationUtils.arraySlice(times,0,writeIndex);this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride);}else{this.times=times;this.values=values;}return this;}clone(){const times=AnimationUtils.arraySlice(this.times,0);const values=AnimationUtils.arraySlice(this.values,0);const TypedKeyframeTrack=this.constructor;const track=new TypedKeyframeTrack(this.name,times,values);// Interpolant argument to constructor is not saved, so copy the factory method directly.\ntrack.createInterpolant=this.createInterpolant;return track;}}KeyframeTrack.prototype.TimeBufferType=Float32Array;KeyframeTrack.prototype.ValueBufferType=Float32Array;KeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;/**\n * A Track of Boolean keyframe values.\n */class BooleanKeyframeTrack extends KeyframeTrack{}BooleanKeyframeTrack.prototype.ValueTypeName='bool';BooleanKeyframeTrack.prototype.ValueBufferType=Array;BooleanKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=undefined;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track of keyframe values that represent color.\n */class ColorKeyframeTrack extends KeyframeTrack{}ColorKeyframeTrack.prototype.ValueTypeName='color';/**\n * A Track of numeric keyframe values.\n */class NumberKeyframeTrack extends KeyframeTrack{}NumberKeyframeTrack.prototype.ValueTypeName='number';/**\n * Spherical linear unit quaternion interpolant.\n */class QuaternionLinearInterpolant extends Interpolant{constructor(parameterPositions,sampleValues,sampleSize,resultBuffer){super(parameterPositions,sampleValues,sampleSize,resultBuffer);}interpolate_(i1,t0,t,t1){const result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,alpha=(t-t0)/(t1-t0);let offset=i1*stride;for(let end=offset+stride;offset!==end;offset+=4){Quaternion.slerpFlat(result,0,values,offset-stride,values,offset,alpha);}return result;}}/**\n * A Track of quaternion keyframe values.\n */class QuaternionKeyframeTrack extends KeyframeTrack{InterpolantFactoryMethodLinear(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result);}}QuaternionKeyframeTrack.prototype.ValueTypeName='quaternion';// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track that interpolates Strings\n */class StringKeyframeTrack extends KeyframeTrack{}StringKeyframeTrack.prototype.ValueTypeName='string';StringKeyframeTrack.prototype.ValueBufferType=Array;StringKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=undefined;StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\n * A Track of vectored keyframe values.\n */class VectorKeyframeTrack extends KeyframeTrack{}VectorKeyframeTrack.prototype.ValueTypeName='vector';class AnimationClip{constructor(name,duration=-1,tracks,blendMode=NormalAnimationBlendMode){this.name=name;this.tracks=tracks;this.duration=duration;this.blendMode=blendMode;this.uuid=generateUUID();// this means it should figure out its duration by scanning the tracks\nif(this.duration<0){this.resetDuration();}}static parse(json){const tracks=[],jsonTracks=json.tracks,frameTime=1.0/(json.fps||1.0);for(let i=0,n=jsonTracks.length;i!==n;++i){tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));}const clip=new this(json.name,json.duration,tracks,json.blendMode);clip.uuid=json.uuid;return clip;}static toJSON(clip){const tracks=[],clipTracks=clip.tracks;const json={'name':clip.name,'duration':clip.duration,'tracks':tracks,'uuid':clip.uuid,'blendMode':clip.blendMode};for(let i=0,n=clipTracks.length;i!==n;++i){tracks.push(KeyframeTrack.toJSON(clipTracks[i]));}return json;}static CreateFromMorphTargetSequence(name,morphTargetSequence,fps,noLoop){const numMorphTargets=morphTargetSequence.length;const tracks=[];for(let i=0;i<numMorphTargets;i++){let times=[];let values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+1)%numMorphTargets);values.push(0,1,0);const order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);// if there is a key at the first frame, duplicate it as the\n// last frame as well for perfect loop.\nif(!noLoop&&times[0]===0){times.push(numMorphTargets);values.push(values[0]);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluences['+morphTargetSequence[i].name+']',times,values).scale(1.0/fps));}return new this(name,-1,tracks);}static findByName(objectOrClipArray,name){let clipArray=objectOrClipArray;if(!Array.isArray(objectOrClipArray)){const o=objectOrClipArray;clipArray=o.geometry&&o.geometry.animations||o.animations;}for(let i=0;i<clipArray.length;i++){if(clipArray[i].name===name){return clipArray[i];}}return null;}static CreateClipsFromMorphTargetSequences(morphTargets,fps,noLoop){const animationToMorphTargets={};// tested with https://regex101.com/ on trick sequences\n// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\nconst pattern=/^([\\w-]*?)([\\d]+)$/;// sort morph target names into animation groups based\n// patterns like Walk_001, Walk_002, Run_001, Run_002\nfor(let i=0,il=morphTargets.length;i<il;i++){const morphTarget=morphTargets[i];const parts=morphTarget.name.match(pattern);if(parts&&parts.length>1){const name=parts[1];let animationMorphTargets=animationToMorphTargets[name];if(!animationMorphTargets){animationToMorphTargets[name]=animationMorphTargets=[];}animationMorphTargets.push(morphTarget);}}const clips=[];for(const name in animationToMorphTargets){clips.push(this.CreateFromMorphTargetSequence(name,animationToMorphTargets[name],fps,noLoop));}return clips;}// parse the animation.hierarchy format\nstatic parseAnimation(animation,bones){if(!animation){console.error('THREE.AnimationClip: No animation in JSONLoader data.');return null;}const addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,destTracks){// only return track if there are actually keys.\nif(animationKeys.length!==0){const times=[];const values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);// empty keys are filtered out, so check again\nif(times.length!==0){destTracks.push(new trackType(trackName,times,values));}}};const tracks=[];const clipName=animation.name||'default';const fps=animation.fps||30;const blendMode=animation.blendMode;// automatic length determination in AnimationClip.\nlet duration=animation.length||-1;const hierarchyTracks=animation.hierarchy||[];for(let h=0;h<hierarchyTracks.length;h++){const animationKeys=hierarchyTracks[h].keys;// skip empty tracks\nif(!animationKeys||animationKeys.length===0)continue;// process morph targets\nif(animationKeys[0].morphTargets){// figure out all morph targets used in this track\nconst morphTargetNames={};let k;for(k=0;k<animationKeys.length;k++){if(animationKeys[k].morphTargets){for(let m=0;m<animationKeys[k].morphTargets.length;m++){morphTargetNames[animationKeys[k].morphTargets[m]]=-1;}}}// create a track for each morph target with all zero\n// morphTargetInfluences except for the keys in which\n// the morphTarget is named.\nfor(const morphTargetName in morphTargetNames){const times=[];const values=[];for(let m=0;m!==animationKeys[k].morphTargets.length;++m){const animationKey=animationKeys[k];times.push(animationKey.time);values.push(animationKey.morphTarget===morphTargetName?1:0);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluence['+morphTargetName+']',times,values));}duration=morphTargetNames.length*(fps||1.0);}else{// ...assume skeletal animation\nconst boneName='.bones['+bones[h].name+']';addNonemptyTrack(VectorKeyframeTrack,boneName+'.position',animationKeys,'pos',tracks);addNonemptyTrack(QuaternionKeyframeTrack,boneName+'.quaternion',animationKeys,'rot',tracks);addNonemptyTrack(VectorKeyframeTrack,boneName+'.scale',animationKeys,'scl',tracks);}}if(tracks.length===0){return null;}const clip=new this(clipName,duration,tracks,blendMode);return clip;}resetDuration(){const tracks=this.tracks;let duration=0;for(let i=0,n=tracks.length;i!==n;++i){const track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1]);}this.duration=duration;return this;}trim(){for(let i=0;i<this.tracks.length;i++){this.tracks[i].trim(0,this.duration);}return this;}validate(){let valid=true;for(let i=0;i<this.tracks.length;i++){valid=valid&&this.tracks[i].validate();}return valid;}optimize(){for(let i=0;i<this.tracks.length;i++){this.tracks[i].optimize();}return this;}clone(){const tracks=[];for(let i=0;i<this.tracks.length;i++){tracks.push(this.tracks[i].clone());}return new this.constructor(this.name,this.duration,tracks,this.blendMode);}toJSON(){return this.constructor.toJSON(this);}}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return NumberKeyframeTrack;case'vector':case'vector2':case'vector3':case'vector4':return VectorKeyframeTrack;case'color':return ColorKeyframeTrack;case'quaternion':return QuaternionKeyframeTrack;case'bool':case'boolean':return BooleanKeyframeTrack;case'string':return StringKeyframeTrack;}throw new Error('THREE.KeyframeTrack: Unsupported typeName: '+typeName);}function parseKeyframeTrack(json){if(json.type===undefined){throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');}const trackType=getTrackTypeForValueTypeName(json.type);if(json.times===undefined){const times=[],values=[];AnimationUtils.flattenJSON(json.keys,times,values,'value');json.times=times;json.values=values;}// derived classes can define a static parse method\nif(trackType.parse!==undefined){return trackType.parse(json);}else{// by default, we assume a constructor compatible with the base\nreturn new trackType(json.name,json.times,json.values,json.interpolation);}}const Cache={enabled:false,files:{},add:function(key,file){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Adding key:', key );\nthis.files[key]=file;},get:function(key){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Checking key:', key );\nreturn this.files[key];},remove:function(key){delete this.files[key];},clear:function(){this.files={};}};class LoadingManager{constructor(onLoad,onProgress,onError){const scope=this;let isLoading=false;let itemsLoaded=0;let itemsTotal=0;let urlModifier=undefined;const handlers=[];// Refer to #5689 for the reason why we don't set .onStart\n// in the constructor\nthis.onStart=undefined;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){itemsTotal++;if(isLoading===false){if(scope.onStart!==undefined){scope.onStart(url,itemsLoaded,itemsTotal);}}isLoading=true;};this.itemEnd=function(url){itemsLoaded++;if(scope.onProgress!==undefined){scope.onProgress(url,itemsLoaded,itemsTotal);}if(itemsLoaded===itemsTotal){isLoading=false;if(scope.onLoad!==undefined){scope.onLoad();}}};this.itemError=function(url){if(scope.onError!==undefined){scope.onError(url);}};this.resolveURL=function(url){if(urlModifier){return urlModifier(url);}return url;};this.setURLModifier=function(transform){urlModifier=transform;return this;};this.addHandler=function(regex,loader){handlers.push(regex,loader);return this;};this.removeHandler=function(regex){const index=handlers.indexOf(regex);if(index!==-1){handlers.splice(index,2);}return this;};this.getHandler=function(file){for(let i=0,l=handlers.length;i<l;i+=2){const regex=handlers[i];const loader=handlers[i+1];if(regex.global)regex.lastIndex=0;// see #17920\nif(regex.test(file)){return loader;}}return null;};}}const DefaultLoadingManager=new LoadingManager();class Loader{constructor(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;this.crossOrigin='anonymous';this.withCredentials=false;this.path='';this.resourcePath='';this.requestHeader={};}load()/* url, onLoad, onProgress, onError */{}loadAsync(url,onProgress){const scope=this;return new Promise(function(resolve,reject){scope.load(url,resolve,onProgress,reject);});}parse()/* data */{}setCrossOrigin(crossOrigin){this.crossOrigin=crossOrigin;return this;}setWithCredentials(value){this.withCredentials=value;return this;}setPath(path){this.path=path;return this;}setResourcePath(resourcePath){this.resourcePath=resourcePath;return this;}setRequestHeader(requestHeader){this.requestHeader=requestHeader;return this;}}const loading={};class FileLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}// Check if request is duplicate\nif(loading[url]!==undefined){loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});return;}// Check for data: URI\nconst dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/;const dataUriRegexResult=url.match(dataUriRegex);let request;// Safari can not handle Data URIs through XMLHttpRequest so process manually\nif(dataUriRegexResult){const mimeType=dataUriRegexResult[1];const isBase64=!!dataUriRegexResult[2];let data=dataUriRegexResult[3];data=decodeURIComponent(data);if(isBase64)data=atob(data);try{let response;const responseType=(this.responseType||'').toLowerCase();switch(responseType){case'arraybuffer':case'blob':const view=new Uint8Array(data.length);for(let i=0;i<data.length;i++){view[i]=data.charCodeAt(i);}if(responseType==='blob'){response=new Blob([view.buffer],{type:mimeType});}else{response=view.buffer;}break;case'document':const parser=new DOMParser();response=parser.parseFromString(data,mimeType);break;case'json':response=JSON.parse(data);break;default:// 'text' or other\nresponse=data;break;}// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onLoad)onLoad(response);scope.manager.itemEnd(url);},0);}catch(error){// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onError)onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url);},0);}}else{// Initialise array for duplicate requests\nloading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});request=new XMLHttpRequest();request.open('GET',url,true);request.addEventListener('load',function(event){const response=this.response;const callbacks=loading[url];delete loading[url];if(this.status===200||this.status===0){// Some browsers return HTTP Status 0 when using non-http protocol\n// e.g. 'file://' or 'data://'. Handle as success.\nif(this.status===0)console.warn('THREE.FileLoader: HTTP Status 0 received.');// Add to cache only on HTTP success, so that we do not cache\n// error response bodies as proper responses to requests.\nCache.add(url,response);for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onLoad)callback.onLoad(response);}scope.manager.itemEnd(url);}else{for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);}},false);request.addEventListener('progress',function(event){const callbacks=loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onProgress)callback.onProgress(event);}},false);request.addEventListener('error',function(event){const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);request.addEventListener('abort',function(event){const callbacks=loading[url];delete loading[url];for(let i=0,il=callbacks.length;i<il;i++){const callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);if(this.responseType!==undefined)request.responseType=this.responseType;if(this.withCredentials!==undefined)request.withCredentials=this.withCredentials;if(request.overrideMimeType)request.overrideMimeType(this.mimeType!==undefined?this.mimeType:'text/plain');for(const header in this.requestHeader){request.setRequestHeader(header,this.requestHeader[header]);}request.send(null);}scope.manager.itemStart(url);return request;}setResponseType(value){this.responseType=value;return this;}setMimeType(value){this.mimeType=value;return this;}}class AnimationLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const animations=[];for(let i=0;i<json.length;i++){const clip=AnimationClip.parse(json[i]);animations.push(clip);}return animations;}}/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */class CompressedTextureLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const images=[];const texture=new CompressedTexture();const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);let loaded=0;function loadTexture(i){loader.load(url[i],function(buffer){const texDatas=scope.parse(buffer,true);images[i]={width:texDatas.width,height:texDatas.height,format:texDatas.format,mipmaps:texDatas.mipmaps};loaded+=1;if(loaded===6){if(texDatas.mipmapCount===1)texture.minFilter=LinearFilter;texture.image=images;texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}},onProgress,onError);}if(Array.isArray(url)){for(let i=0,il=url.length;i<il;++i){loadTexture(i);}}else{// compressed cubemap texture stored in a single DDS file\nloader.load(url,function(buffer){const texDatas=scope.parse(buffer,true);if(texDatas.isCubemap){const faces=texDatas.mipmaps.length/texDatas.mipmapCount;for(let f=0;f<faces;f++){images[f]={mipmaps:[]};for(let i=0;i<texDatas.mipmapCount;i++){images[f].mipmaps.push(texDatas.mipmaps[f*texDatas.mipmapCount+i]);images[f].format=texDatas.format;images[f].width=texDatas.width;images[f].height=texDatas.height;}}texture.image=images;}else{texture.image.width=texDatas.width;texture.image.height=texDatas.height;texture.mipmaps=texDatas.mipmaps;}if(texDatas.mipmapCount===1){texture.minFilter=LinearFilter;}texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);},onProgress,onError);}return texture;}}class ImageLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}const image=document.createElementNS('http://www.w3.org/1999/xhtml','img');function onImageLoad(){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);Cache.add(url,this);if(onLoad)onLoad(this);scope.manager.itemEnd(url);}function onImageError(event){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);if(onError)onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url);}image.addEventListener('load',onImageLoad,false);image.addEventListener('error',onImageError,false);if(url.substr(0,5)!=='data:'){if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;}scope.manager.itemStart(url);image.src=url;return image;}}class CubeTextureLoader extends Loader{constructor(manager){super(manager);}load(urls,onLoad,onProgress,onError){const texture=new CubeTexture();const loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);let loaded=0;function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;if(loaded===6){texture.needsUpdate=true;if(onLoad)onLoad(texture);}},undefined,onError);}for(let i=0;i<urls.length;++i){loadTexture(i);}return texture;}}/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */class DataTextureLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const texture=new DataTexture();const loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setPath(this.path);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(buffer){const texData=scope.parse(buffer);if(!texData)return;if(texData.image!==undefined){texture.image=texData.image;}else if(texData.data!==undefined){texture.image.width=texData.width;texture.image.height=texData.height;texture.image.data=texData.data;}texture.wrapS=texData.wrapS!==undefined?texData.wrapS:ClampToEdgeWrapping;texture.wrapT=texData.wrapT!==undefined?texData.wrapT:ClampToEdgeWrapping;texture.magFilter=texData.magFilter!==undefined?texData.magFilter:LinearFilter;texture.minFilter=texData.minFilter!==undefined?texData.minFilter:LinearFilter;texture.anisotropy=texData.anisotropy!==undefined?texData.anisotropy:1;if(texData.encoding!==undefined){texture.encoding=texData.encoding;}if(texData.flipY!==undefined){texture.flipY=texData.flipY;}if(texData.format!==undefined){texture.format=texData.format;}if(texData.type!==undefined){texture.type=texData.type;}if(texData.mipmaps!==undefined){texture.mipmaps=texData.mipmaps;texture.minFilter=LinearMipmapLinearFilter;// presumably...\n}if(texData.mipmapCount===1){texture.minFilter=LinearFilter;}if(texData.generateMipmaps!==undefined){texture.generateMipmaps=texData.generateMipmaps;}texture.needsUpdate=true;if(onLoad)onLoad(texture,texData);},onProgress,onError);return texture;}}class TextureLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const texture=new Texture();const loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\nconst isJPEG=url.search(/\\.jpe?g($|\\?)/i)>0||url.search(/^data\\:image\\/jpeg/)===0;texture.format=isJPEG?RGBFormat:RGBAFormat;texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}},onProgress,onError);return texture;}}/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/class Curve{constructor(){this.type='Curve';this.arcLengthDivisions=200;}// Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\ngetPoint()/* t, optionalTarget */{console.warn('THREE.Curve: .getPoint() not implemented.');return null;}// Get point at relative position in curve according to arc length\n// - u [0 .. 1]\ngetPointAt(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getPoint(t,optionalTarget);}// Get sequence of points using getPoint( t )\ngetPoints(divisions=5){const points=[];for(let d=0;d<=divisions;d++){points.push(this.getPoint(d/divisions));}return points;}// Get sequence of points using getPointAt( u )\ngetSpacedPoints(divisions=5){const points=[];for(let d=0;d<=divisions;d++){points.push(this.getPointAt(d/divisions));}return points;}// Get total curve arc length\ngetLength(){const lengths=this.getLengths();return lengths[lengths.length-1];}// Get list of cumulative segment lengths\ngetLengths(divisions=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate){return this.cacheArcLengths;}this.needsUpdate=false;const cache=[];let current,last=this.getPoint(0);let sum=0;cache.push(0);for(let p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current;}this.cacheArcLengths=cache;return cache;// { sums: cache, sum: sum }; Sum is in the last element.\n}updateArcLengths(){this.needsUpdate=true;this.getLengths();}// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\ngetUtoTmapping(u,distance){const arcLengths=this.getLengths();let i=0;const il=arcLengths.length;let targetArcLength;// The targeted u distance value to get\nif(distance){targetArcLength=distance;}else{targetArcLength=u*arcLengths[il-1];}// binary search for the index with largest value smaller than target u distance\nlet low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\ncomparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;}else if(comparison>0){high=i-1;}else{high=i;break;// DONE\n}}i=high;if(arcLengths[i]===targetArcLength){return i/(il-1);}// we could get finer grain at lengths, or use simple interpolation between two points\nconst lengthBefore=arcLengths[i];const lengthAfter=arcLengths[i+1];const segmentLength=lengthAfter-lengthBefore;// determine where we are between the 'before' and 'after' points\nconst segmentFraction=(targetArcLength-lengthBefore)/segmentLength;// add that fractional amount to t\nconst t=(i+segmentFraction)/(il-1);return t;}// Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\ngetTangent(t,optionalTarget){const delta=0.0001;let t1=t-delta;let t2=t+delta;// Capping in case of danger\nif(t1<0)t1=0;if(t2>1)t2=1;const pt1=this.getPoint(t1);const pt2=this.getPoint(t2);const tangent=optionalTarget||(pt1.isVector2?new Vector2():new Vector3());tangent.copy(pt2).sub(pt1).normalize();return tangent;}getTangentAt(u,optionalTarget){const t=this.getUtoTmapping(u);return this.getTangent(t,optionalTarget);}computeFrenetFrames(segments,closed){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\nconst normal=new Vector3();const tangents=[];const normals=[];const binormals=[];const vec=new Vector3();const mat=new Matrix4();// compute the tangent vectors for each segment on the curve\nfor(let i=0;i<=segments;i++){const u=i/segments;tangents[i]=this.getTangentAt(u,new Vector3());tangents[i].normalize();}// select an initial normal vector perpendicular to the first tangent vector,\n// and in the direction of the minimum tangent xyz component\nnormals[0]=new Vector3();binormals[0]=new Vector3();let min=Number.MAX_VALUE;const tx=Math.abs(tangents[0].x);const ty=Math.abs(tangents[0].y);const tz=Math.abs(tangents[0].z);if(tx<=min){min=tx;normal.set(1,0,0);}if(ty<=min){min=ty;normal.set(0,1,0);}if(tz<=min){normal.set(0,0,1);}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);// compute the slowly-varying normal and binormal vectors for each segment on the curve\nfor(let i=1;i<=segments;i++){normals[i]=normals[i-1].clone();binormals[i]=binormals[i-1].clone();vec.crossVectors(tangents[i-1],tangents[i]);if(vec.length()>Number.EPSILON){vec.normalize();const theta=Math.acos(clamp(tangents[i-1].dot(tangents[i]),-1,1));// clamp for floating pt errors\nnormals[i].applyMatrix4(mat.makeRotationAxis(vec,theta));}binormals[i].crossVectors(tangents[i],normals[i]);}// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\nif(closed===true){let theta=Math.acos(clamp(normals[0].dot(normals[segments]),-1,1));theta/=segments;if(tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))>0){theta=-theta;}for(let i=1;i<=segments;i++){// twist a little...\nnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i));binormals[i].crossVectors(tangents[i],normals[i]);}}return{tangents:tangents,normals:normals,binormals:binormals};}clone(){return new this.constructor().copy(this);}copy(source){this.arcLengthDivisions=source.arcLengthDivisions;return this;}toJSON(){const data={metadata:{version:4.5,type:'Curve',generator:'Curve.toJSON'}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data;}fromJSON(json){this.arcLengthDivisions=json.arcLengthDivisions;return this;}}class EllipseCurve extends Curve{constructor(aX=0,aY=0,xRadius=1,yRadius=1,aStartAngle=0,aEndAngle=Math.PI*2,aClockwise=false,aRotation=0){super();this.type='EllipseCurve';this.aX=aX;this.aY=aY;this.xRadius=xRadius;this.yRadius=yRadius;this.aStartAngle=aStartAngle;this.aEndAngle=aEndAngle;this.aClockwise=aClockwise;this.aRotation=aRotation;}getPoint(t,optionalTarget){const point=optionalTarget||new Vector2();const twoPi=Math.PI*2;let deltaAngle=this.aEndAngle-this.aStartAngle;const samePoints=Math.abs(deltaAngle)<Number.EPSILON;// ensures that deltaAngle is 0 .. 2 PI\nwhile(deltaAngle<0)deltaAngle+=twoPi;while(deltaAngle>twoPi)deltaAngle-=twoPi;if(deltaAngle<Number.EPSILON){if(samePoints){deltaAngle=0;}else{deltaAngle=twoPi;}}if(this.aClockwise===true&&!samePoints){if(deltaAngle===twoPi){deltaAngle=-twoPi;}else{deltaAngle=deltaAngle-twoPi;}}const angle=this.aStartAngle+t*deltaAngle;let x=this.aX+this.xRadius*Math.cos(angle);let y=this.aY+this.yRadius*Math.sin(angle);if(this.aRotation!==0){const cos=Math.cos(this.aRotation);const sin=Math.sin(this.aRotation);const tx=x-this.aX;const ty=y-this.aY;// Rotate the point about the center of the ellipse.\nx=tx*cos-ty*sin+this.aX;y=tx*sin+ty*cos+this.aY;}return point.set(x,y);}copy(source){super.copy(source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this;}toJSON(){const data=super.toJSON();data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data;}fromJSON(json){super.fromJSON(json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this;}}EllipseCurve.prototype.isEllipseCurve=true;class ArcCurve extends EllipseCurve{constructor(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){super(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);this.type='ArcCurve';}}ArcCurve.prototype.isArcCurve=true;/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */ /*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/function CubicPoly(){let c0=0,c1=0,c2=0,c3=0;/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */function init(x0,x1,t0,t1){c0=x0;c1=t0;c2=-3*x0+3*x1-2*t0-t1;c3=2*x0-2*x1+t0+t1;}return{initCatmullRom:function(x0,x1,x2,x3,tension){init(x1,x2,tension*(x2-x0),tension*(x3-x1));},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){// compute tangents when parameterized in [t1,t2]\nlet t1=(x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1;let t2=(x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2;// rescale tangents for parametrization in [0,1]\nt1*=dt1;t2*=dt1;init(x1,x2,t1,t2);},calc:function(t){const t2=t*t;const t3=t2*t;return c0+c1*t+c2*t2+c3*t3;}};}//\nconst tmp=new Vector3();const px=new CubicPoly(),py=new CubicPoly(),pz=new CubicPoly();class CatmullRomCurve3 extends Curve{constructor(points=[],closed=false,curveType='centripetal',tension=0.5){super();this.type='CatmullRomCurve3';this.points=points;this.closed=closed;this.curveType=curveType;this.tension=tension;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const points=this.points;const l=points.length;const p=(l-(this.closed?0:1))*t;let intPoint=Math.floor(p);let weight=p-intPoint;if(this.closed){intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/l)+1)*l;}else if(weight===0&&intPoint===l-1){intPoint=l-2;weight=1;}let p0,p3;// 4 points (p1 & p2 defined below)\nif(this.closed||intPoint>0){p0=points[(intPoint-1)%l];}else{// extrapolate first point\ntmp.subVectors(points[0],points[1]).add(points[0]);p0=tmp;}const p1=points[intPoint%l];const p2=points[(intPoint+1)%l];if(this.closed||intPoint+2<l){p3=points[(intPoint+2)%l];}else{// extrapolate last point\ntmp.subVectors(points[l-1],points[l-2]).add(points[l-1]);p3=tmp;}if(this.curveType==='centripetal'||this.curveType==='chordal'){// init Centripetal / Chordal Catmull-Rom\nconst pow=this.curveType==='chordal'?0.5:0.25;let dt0=Math.pow(p0.distanceToSquared(p1),pow);let dt1=Math.pow(p1.distanceToSquared(p2),pow);let dt2=Math.pow(p2.distanceToSquared(p3),pow);// safety check for repeated points\nif(dt1<1e-4)dt1=1.0;if(dt0<1e-4)dt0=dt1;if(dt2<1e-4)dt2=dt1;px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,p3.x,dt0,dt1,dt2);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,p3.y,dt0,dt1,dt2);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,p3.z,dt0,dt1,dt2);}else if(this.curveType==='catmullrom'){px.initCatmullRom(p0.x,p1.x,p2.x,p3.x,this.tension);py.initCatmullRom(p0.y,p1.y,p2.y,p3.y,this.tension);pz.initCatmullRom(p0.z,p1.z,p2.z,p3.z,this.tension);}point.set(px.calc(weight),py.calc(weight),pz.calc(weight));return point;}copy(source){super.copy(source);this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone());}this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this;}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray());}data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data;}fromJSON(json){super.fromJSON(json);this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push(new Vector3().fromArray(point));}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this;}}CatmullRomCurve3.prototype.isCatmullRomCurve3=true;/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */function CatmullRom(t,p0,p1,p2,p3){const v0=(p2-p0)*0.5;const v1=(p3-p1)*0.5;const t2=t*t;const t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1;}//\nfunction QuadraticBezierP0(t,p){const k=1-t;return k*k*p;}function QuadraticBezierP1(t,p){return 2*(1-t)*t*p;}function QuadraticBezierP2(t,p){return t*t*p;}function QuadraticBezier(t,p0,p1,p2){return QuadraticBezierP0(t,p0)+QuadraticBezierP1(t,p1)+QuadraticBezierP2(t,p2);}//\nfunction CubicBezierP0(t,p){const k=1-t;return k*k*k*p;}function CubicBezierP1(t,p){const k=1-t;return 3*k*k*t*p;}function CubicBezierP2(t,p){return 3*(1-t)*t*t*p;}function CubicBezierP3(t,p){return t*t*t*p;}function CubicBezier(t,p0,p1,p2,p3){return CubicBezierP0(t,p0)+CubicBezierP1(t,p1)+CubicBezierP2(t,p2)+CubicBezierP3(t,p3);}class CubicBezierCurve extends Curve{constructor(v0=new Vector2(),v1=new Vector2(),v2=new Vector2(),v3=new Vector2()){super();this.type='CubicBezierCurve';this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;}}CubicBezierCurve.prototype.isCubicBezierCurve=true;class CubicBezierCurve3 extends Curve{constructor(v0=new Vector3(),v1=new Vector3(),v2=new Vector3(),v3=new Vector3()){super();this.type='CubicBezierCurve3';this.v0=v0;this.v1=v1;this.v2=v2;this.v3=v3;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;}}CubicBezierCurve3.prototype.isCubicBezierCurve3=true;class LineCurve extends Curve{constructor(v1=new Vector2(),v2=new Vector2()){super();this.type='LineCurve';this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;}// Line curve is linear, so we can overwrite default getPointAt\ngetPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget);}getTangent(t,optionalTarget){const tangent=optionalTarget||new Vector2();tangent.copy(this.v2).sub(this.v1).normalize();return tangent;}copy(source){super.copy(source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}LineCurve.prototype.isLineCurve=true;class LineCurve3 extends Curve{constructor(v1=new Vector3(),v2=new Vector3()){super();this.type='LineCurve3';this.isLineCurve3=true;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;}// Line curve is linear, so we can overwrite default getPointAt\ngetPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget);}copy(source){super.copy(source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}class QuadraticBezierCurve extends Curve{constructor(v0=new Vector2(),v1=new Vector2(),v2=new Vector2()){super();this.type='QuadraticBezierCurve';this.v0=v0;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}QuadraticBezierCurve.prototype.isQuadraticBezierCurve=true;class QuadraticBezierCurve3 extends Curve{constructor(v0=new Vector3(),v1=new Vector3(),v2=new Vector3()){super();this.type='QuadraticBezierCurve3';this.v0=v0;this.v1=v1;this.v2=v2;}getPoint(t,optionalTarget=new Vector3()){const point=optionalTarget;const v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return point;}copy(source){super.copy(source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}toJSON(){const data=super.toJSON();data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}fromJSON(json){super.fromJSON(json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=true;class SplineCurve extends Curve{constructor(points=[]){super();this.type='SplineCurve';this.points=points;}getPoint(t,optionalTarget=new Vector2()){const point=optionalTarget;const points=this.points;const p=(points.length-1)*t;const intPoint=Math.floor(p);const weight=p-intPoint;const p0=points[intPoint===0?intPoint:intPoint-1];const p1=points[intPoint];const p2=points[intPoint>points.length-2?points.length-1:intPoint+1];const p3=points[intPoint>points.length-3?points.length-1:intPoint+2];point.set(CatmullRom(weight,p0.x,p1.x,p2.x,p3.x),CatmullRom(weight,p0.y,p1.y,p2.y,p3.y));return point;}copy(source){super.copy(source);this.points=[];for(let i=0,l=source.points.length;i<l;i++){const point=source.points[i];this.points.push(point.clone());}return this;}toJSON(){const data=super.toJSON();data.points=[];for(let i=0,l=this.points.length;i<l;i++){const point=this.points[i];data.points.push(point.toArray());}return data;}fromJSON(json){super.fromJSON(json);this.points=[];for(let i=0,l=json.points.length;i<l;i++){const point=json.points[i];this.points.push(new Vector2().fromArray(point));}return this;}}SplineCurve.prototype.isSplineCurve=true;var Curves=/*#__PURE__*/Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/class CurvePath extends Curve{constructor(){super();this.type='CurvePath';this.curves=[];this.autoClose=false;// Automatically closes the path\n}add(curve){this.curves.push(curve);}closePath(){// Add a line curve if start and end of lines are not connected\nconst startPoint=this.curves[0].getPoint(0);const endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new LineCurve(endPoint,startPoint));}}// To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\ngetPoint(t){const d=t*this.getLength();const curveLengths=this.getCurveLengths();let i=0;// To think about boundaries points.\nwhile(i<curveLengths.length){if(curveLengths[i]>=d){const diff=curveLengths[i]-d;const curve=this.curves[i];const segmentLength=curve.getLength();const u=segmentLength===0?0:1-diff/segmentLength;return curve.getPointAt(u);}i++;}return null;// loop where sum != 0, sum > d , sum+1 <d\n}// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\ngetLength(){const lens=this.getCurveLengths();return lens[lens.length-1];}// cacheLengths must be recalculated.\nupdateArcLengths(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths();}// Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\ngetCurveLengths(){// We use cache values if curves and cache array are same length\nif(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths;}// Get length of sub-curve\n// Push sums into cached array\nconst lengths=[];let sums=0;for(let i=0,l=this.curves.length;i<l;i++){sums+=this.curves[i].getLength();lengths.push(sums);}this.cacheLengths=lengths;return lengths;}getSpacedPoints(divisions=40){const points=[];for(let i=0;i<=divisions;i++){points.push(this.getPoint(i/divisions));}if(this.autoClose){points.push(points[0]);}return points;}getPoints(divisions=12){const points=[];let last;for(let i=0,curves=this.curves;i<curves.length;i++){const curve=curves[i];const resolution=curve&&curve.isEllipseCurve?divisions*2:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions;const pts=curve.getPoints(resolution);for(let j=0;j<pts.length;j++){const point=pts[j];if(last&&last.equals(point))continue;// ensures no consecutive points are duplicates\npoints.push(point);last=point;}}if(this.autoClose&&points.length>1&&!points[points.length-1].equals(points[0])){points.push(points[0]);}return points;}copy(source){super.copy(source);this.curves=[];for(let i=0,l=source.curves.length;i<l;i++){const curve=source.curves[i];this.curves.push(curve.clone());}this.autoClose=source.autoClose;return this;}toJSON(){const data=super.toJSON();data.autoClose=this.autoClose;data.curves=[];for(let i=0,l=this.curves.length;i<l;i++){const curve=this.curves[i];data.curves.push(curve.toJSON());}return data;}fromJSON(json){super.fromJSON(json);this.autoClose=json.autoClose;this.curves=[];for(let i=0,l=json.curves.length;i<l;i++){const curve=json.curves[i];this.curves.push(new Curves[curve.type]().fromJSON(curve));}return this;}}class Path extends CurvePath{constructor(points){super();this.type='Path';this.currentPoint=new Vector2();if(points){this.setFromPoints(points);}}setFromPoints(points){this.moveTo(points[0].x,points[0].y);for(let i=1,l=points.length;i<l;i++){this.lineTo(points[i].x,points[i].y);}return this;}moveTo(x,y){this.currentPoint.set(x,y);// TODO consider referencing vectors instead of copying?\nreturn this;}lineTo(x,y){const curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y);return this;}quadraticCurveTo(aCPx,aCPy,aX,aY){const curve=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;}bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){const curve=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;}splineThru(pts/*Array of Vector*/){const npts=[this.currentPoint.clone()].concat(pts);const curve=new SplineCurve(npts);this.curves.push(curve);this.currentPoint.copy(pts[pts.length-1]);return this;}arc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){const x0=this.currentPoint.x;const y0=this.currentPoint.y;this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise);return this;}absarc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);return this;}ellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const x0=this.currentPoint.x;const y0=this.currentPoint.y;this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);return this;}absellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){const curve=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);if(this.curves.length>0){// if a previous curve is present, attempt to join\nconst firstPoint=curve.getPoint(0);if(!firstPoint.equals(this.currentPoint)){this.lineTo(firstPoint.x,firstPoint.y);}}this.curves.push(curve);const lastPoint=curve.getPoint(1);this.currentPoint.copy(lastPoint);return this;}copy(source){super.copy(source);this.currentPoint.copy(source.currentPoint);return this;}toJSON(){const data=super.toJSON();data.currentPoint=this.currentPoint.toArray();return data;}fromJSON(json){super.fromJSON(json);this.currentPoint.fromArray(json.currentPoint);return this;}}class Shape extends Path{constructor(points){super(points);this.uuid=generateUUID();this.type='Shape';this.holes=[];}getPointsHoles(divisions){const holesPts=[];for(let i=0,l=this.holes.length;i<l;i++){holesPts[i]=this.holes[i].getPoints(divisions);}return holesPts;}// get points of shape and holes (keypoints based on segments parameter)\nextractPoints(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)};}copy(source){super.copy(source);this.holes=[];for(let i=0,l=source.holes.length;i<l;i++){const hole=source.holes[i];this.holes.push(hole.clone());}return this;}toJSON(){const data=super.toJSON();data.uuid=this.uuid;data.holes=[];for(let i=0,l=this.holes.length;i<l;i++){const hole=this.holes[i];data.holes.push(hole.toJSON());}return data;}fromJSON(json){super.fromJSON(json);this.uuid=json.uuid;this.holes=[];for(let i=0,l=json.holes.length;i<l;i++){const hole=json.holes[i];this.holes.push(new Path().fromJSON(hole));}return this;}}class Light extends Object3D{constructor(color,intensity=1){super();this.type='Light';this.color=new Color(color);this.intensity=intensity;}dispose(){// Empty here in base class; some subclasses override.\n}copy(source){super.copy(source);this.color.copy(source.color);this.intensity=source.intensity;return this;}toJSON(meta){const data=super.toJSON(meta);data.object.color=this.color.getHex();data.object.intensity=this.intensity;if(this.groundColor!==undefined)data.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)data.object.distance=this.distance;if(this.angle!==undefined)data.object.angle=this.angle;if(this.decay!==undefined)data.object.decay=this.decay;if(this.penumbra!==undefined)data.object.penumbra=this.penumbra;if(this.shadow!==undefined)data.object.shadow=this.shadow.toJSON();return data;}}Light.prototype.isLight=true;class HemisphereLight extends Light{constructor(skyColor,groundColor,intensity){super(skyColor,intensity);this.type='HemisphereLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.groundColor=new Color(groundColor);}copy(source){Light.prototype.copy.call(this,source);this.groundColor.copy(source.groundColor);return this;}}HemisphereLight.prototype.isHemisphereLight=true;const _projScreenMatrix$1=/*@__PURE__*/new Matrix4();const _lightPositionWorld$1=/*@__PURE__*/new Vector3();const _lookTarget$1=/*@__PURE__*/new Vector3();class LightShadow{constructor(camera){this.camera=camera;this.bias=0;this.normalBias=0;this.radius=1;this.mapSize=new Vector2(512,512);this.map=null;this.mapPass=null;this.matrix=new Matrix4();this.autoUpdate=true;this.needsUpdate=false;this._frustum=new Frustum();this._frameExtents=new Vector2(1,1);this._viewportCount=1;this._viewports=[new Vector4(0,0,1,1)];}getViewportCount(){return this._viewportCount;}getFrustum(){return this._frustum;}updateMatrices(light){const shadowCamera=this.camera;const shadowMatrix=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(_lightPositionWorld$1);_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(_lookTarget$1);shadowCamera.updateMatrixWorld();_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);shadowMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);}getViewport(viewportIndex){return this._viewports[viewportIndex];}getFrameExtents(){return this._frameExtents;}dispose(){if(this.map){this.map.dispose();}if(this.mapPass){this.mapPass.dispose();}}copy(source){this.camera=source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this;}clone(){return new this.constructor().copy(this);}toJSON(){const object={};if(this.bias!==0)object.bias=this.bias;if(this.normalBias!==0)object.normalBias=this.normalBias;if(this.radius!==1)object.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(false).object;delete object.camera.matrix;return object;}}class SpotLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(50,1,0.5,500));this.focus=1;}updateMatrices(light){const camera=this.camera;const fov=RAD2DEG*2*light.angle*this.focus;const aspect=this.mapSize.width/this.mapSize.height;const far=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||far!==camera.far){camera.fov=fov;camera.aspect=aspect;camera.far=far;camera.updateProjectionMatrix();}super.updateMatrices(light);}copy(source){super.copy(source);this.focus=source.focus;return this;}}SpotLightShadow.prototype.isSpotLightShadow=true;class SpotLight extends Light{constructor(color,intensity,distance=0,angle=Math.PI/3,penumbra=0,decay=1){super(color,intensity);this.type='SpotLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.distance=distance;this.angle=angle;this.penumbra=penumbra;this.decay=decay;// for physically correct lights, should be 2.\nthis.shadow=new SpotLightShadow();}get power(){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*Math.PI;}set power(power){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/Math.PI;}dispose(){this.shadow.dispose();}copy(source){super.copy(source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}}SpotLight.prototype.isSpotLight=true;const _projScreenMatrix=/*@__PURE__*/new Matrix4();const _lightPositionWorld=/*@__PURE__*/new Vector3();const _lookTarget=/*@__PURE__*/new Vector3();class PointLightShadow extends LightShadow{constructor(){super(new PerspectiveCamera(90,1,0.5,500));this._frameExtents=new Vector2(4,2);this._viewportCount=6;this._viewports=[// These viewports map a cube-map onto a 2D texture with the\n// following orientation:\n//\n//  xzXZ\n//   y Y\n//\n// X - Positive x direction\n// x - Negative x direction\n// Y - Positive y direction\n// y - Negative y direction\n// Z - Positive z direction\n// z - Negative z direction\n// positive X\nnew Vector4(2,1,1,1),// negative X\nnew Vector4(0,1,1,1),// positive Z\nnew Vector4(3,1,1,1),// negative Z\nnew Vector4(1,1,1,1),// positive Y\nnew Vector4(3,0,1,1),// negative Y\nnew Vector4(1,0,1,1)];this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)];this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)];}updateMatrices(light,viewportIndex=0){const camera=this.camera;const shadowMatrix=this.matrix;const far=light.distance||camera.far;if(far!==camera.far){camera.far=far;camera.updateProjectionMatrix();}_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);camera.position.copy(_lightPositionWorld);_lookTarget.copy(camera.position);_lookTarget.add(this._cubeDirections[viewportIndex]);camera.up.copy(this._cubeUps[viewportIndex]);camera.lookAt(_lookTarget);camera.updateMatrixWorld();shadowMatrix.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix);}}PointLightShadow.prototype.isPointLightShadow=true;class PointLight extends Light{constructor(color,intensity,distance=0,decay=1){super(color,intensity);this.type='PointLight';this.distance=distance;this.decay=decay;// for physically correct lights, should be 2.\nthis.shadow=new PointLightShadow();}get power(){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*4*Math.PI;}set power(power){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/(4*Math.PI);}dispose(){this.shadow.dispose();}copy(source){super.copy(source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this;}}PointLight.prototype.isPointLight=true;class OrthographicCamera extends Camera{constructor(left=-1,right=1,top=1,bottom=-1,near=0.1,far=2000){super();this.type='OrthographicCamera';this.zoom=1;this.view=null;this.left=left;this.right=right;this.top=top;this.bottom=bottom;this.near=near;this.far=far;this.updateProjectionMatrix();}copy(source,recursive){super.copy(source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=source.view===null?null:Object.assign({},source.view);return this;}setViewOffset(fullWidth,fullHeight,x,y,width,height){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();}clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();}updateProjectionMatrix(){const dx=(this.right-this.left)/(2*this.zoom);const dy=(this.top-this.bottom)/(2*this.zoom);const cx=(this.right+this.left)/2;const cy=(this.top+this.bottom)/2;let left=cx-dx;let right=cx+dx;let top=cy+dy;let bottom=cy-dy;if(this.view!==null&&this.view.enabled){const scaleW=(this.right-this.left)/this.view.fullWidth/this.zoom;const scaleH=(this.top-this.bottom)/this.view.fullHeight/this.zoom;left+=scaleW*this.view.offsetX;right=left+scaleW*this.view.width;top-=scaleH*this.view.offsetY;bottom=top-scaleH*this.view.height;}this.projectionMatrix.makeOrthographic(left,right,top,bottom,this.near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();}toJSON(meta){const data=super.toJSON(meta);data.object.zoom=this.zoom;data.object.left=this.left;data.object.right=this.right;data.object.top=this.top;data.object.bottom=this.bottom;data.object.near=this.near;data.object.far=this.far;if(this.view!==null)data.object.view=Object.assign({},this.view);return data;}}OrthographicCamera.prototype.isOrthographicCamera=true;class DirectionalLightShadow extends LightShadow{constructor(){super(new OrthographicCamera(-5,5,5,-5,0.5,500));}}DirectionalLightShadow.prototype.isDirectionalLightShadow=true;class DirectionalLight extends Light{constructor(color,intensity){super(color,intensity);this.type='DirectionalLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.shadow=new DirectionalLightShadow();}dispose(){this.shadow.dispose();}copy(source){super.copy(source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}}DirectionalLight.prototype.isDirectionalLight=true;class AmbientLight extends Light{constructor(color,intensity){super(color,intensity);this.type='AmbientLight';}}AmbientLight.prototype.isAmbientLight=true;class RectAreaLight extends Light{constructor(color,intensity,width=10,height=10){super(color,intensity);this.type='RectAreaLight';this.width=width;this.height=height;}copy(source){super.copy(source);this.width=source.width;this.height=source.height;return this;}toJSON(meta){const data=super.toJSON(meta);data.object.width=this.width;data.object.height=this.height;return data;}}RectAreaLight.prototype.isRectAreaLight=true;/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */ // 3-band SH defined by 9 coefficients\nclass SphericalHarmonics3{constructor(){this.coefficients=[];for(let i=0;i<9;i++){this.coefficients.push(new Vector3());}}set(coefficients){for(let i=0;i<9;i++){this.coefficients[i].copy(coefficients[i]);}return this;}zero(){for(let i=0;i<9;i++){this.coefficients[i].set(0,0,0);}return this;}// get the radiance in the direction of the normal\n// target is a Vector3\ngetAt(normal,target){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;const coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.282095);// band 1\ntarget.addScaledVector(coeff[1],0.488603*y);target.addScaledVector(coeff[2],0.488603*z);target.addScaledVector(coeff[3],0.488603*x);// band 2\ntarget.addScaledVector(coeff[4],1.092548*(x*y));target.addScaledVector(coeff[5],1.092548*(y*z));target.addScaledVector(coeff[6],0.315392*(3.0*z*z-1.0));target.addScaledVector(coeff[7],1.092548*(x*z));target.addScaledVector(coeff[8],0.546274*(x*x-y*y));return target;}// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n// target is a Vector3\n// https://graphics.stanford.edu/papers/envmap/envmap.pdf\ngetIrradianceAt(normal,target){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;const coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.886227);// π * 0.282095\n// band 1\ntarget.addScaledVector(coeff[1],2.0*0.511664*y);// ( 2 * π / 3 ) * 0.488603\ntarget.addScaledVector(coeff[2],2.0*0.511664*z);target.addScaledVector(coeff[3],2.0*0.511664*x);// band 2\ntarget.addScaledVector(coeff[4],2.0*0.429043*x*y);// ( π / 4 ) * 1.092548\ntarget.addScaledVector(coeff[5],2.0*0.429043*y*z);target.addScaledVector(coeff[6],0.743125*z*z-0.247708);// ( π / 4 ) * 0.315392 * 3\ntarget.addScaledVector(coeff[7],2.0*0.429043*x*z);target.addScaledVector(coeff[8],0.429043*(x*x-y*y));// ( π / 4 ) * 0.546274\nreturn target;}add(sh){for(let i=0;i<9;i++){this.coefficients[i].add(sh.coefficients[i]);}return this;}addScaledSH(sh,s){for(let i=0;i<9;i++){this.coefficients[i].addScaledVector(sh.coefficients[i],s);}return this;}scale(s){for(let i=0;i<9;i++){this.coefficients[i].multiplyScalar(s);}return this;}lerp(sh,alpha){for(let i=0;i<9;i++){this.coefficients[i].lerp(sh.coefficients[i],alpha);}return this;}equals(sh){for(let i=0;i<9;i++){if(!this.coefficients[i].equals(sh.coefficients[i])){return false;}}return true;}copy(sh){return this.set(sh.coefficients);}clone(){return new this.constructor().copy(this);}fromArray(array,offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++){coefficients[i].fromArray(array,offset+i*3);}return this;}toArray(array=[],offset=0){const coefficients=this.coefficients;for(let i=0;i<9;i++){coefficients[i].toArray(array,offset+i*3);}return array;}// evaluate the basis functions\n// shBasis is an Array[ 9 ]\nstatic getBasisAt(normal,shBasis){// normal is assumed to be unit length\nconst x=normal.x,y=normal.y,z=normal.z;// band 0\nshBasis[0]=0.282095;// band 1\nshBasis[1]=0.488603*y;shBasis[2]=0.488603*z;shBasis[3]=0.488603*x;// band 2\nshBasis[4]=1.092548*x*y;shBasis[5]=1.092548*y*z;shBasis[6]=0.315392*(3*z*z-1);shBasis[7]=1.092548*x*z;shBasis[8]=0.546274*(x*x-y*y);}}SphericalHarmonics3.prototype.isSphericalHarmonics3=true;class LightProbe extends Light{constructor(sh=new SphericalHarmonics3(),intensity=1){super(undefined,intensity);this.sh=sh;}copy(source){super.copy(source);this.sh.copy(source.sh);return this;}fromJSON(json){this.intensity=json.intensity;// TODO: Move this bit to Light.fromJSON();\nthis.sh.fromArray(json.sh);return this;}toJSON(meta){const data=super.toJSON(meta);data.object.sh=this.sh.toArray();return data;}}LightProbe.prototype.isLightProbe=true;class MaterialLoader extends Loader{constructor(manager){super(manager);this.textures={};}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const textures=this.textures;function getTexture(name){if(textures[name]===undefined){console.warn('THREE.MaterialLoader: Undefined texture',name);}return textures[name];}const material=new Materials[json.type]();if(json.uuid!==undefined)material.uuid=json.uuid;if(json.name!==undefined)material.name=json.name;if(json.color!==undefined&&material.color!==undefined)material.color.setHex(json.color);if(json.roughness!==undefined)material.roughness=json.roughness;if(json.metalness!==undefined)material.metalness=json.metalness;if(json.sheen!==undefined)material.sheen=new Color().setHex(json.sheen);if(json.emissive!==undefined&&material.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined&&material.specular!==undefined)material.specular.setHex(json.specular);if(json.shininess!==undefined)material.shininess=json.shininess;if(json.clearcoat!==undefined)material.clearcoat=json.clearcoat;if(json.clearcoatRoughness!==undefined)material.clearcoatRoughness=json.clearcoatRoughness;if(json.transmission!==undefined)material.transmission=json.transmission;if(json.thickness!==undefined)material.thickness=json.thickness;if(json.attenuationDistance!==undefined)material.attenuationDistance=json.attenuationDistance;if(json.attenuationColor!==undefined&&material.attenuationColor!==undefined)material.attenuationColor.setHex(json.attenuationColor);if(json.fog!==undefined)material.fog=json.fog;if(json.flatShading!==undefined)material.flatShading=json.flatShading;if(json.blending!==undefined)material.blending=json.blending;if(json.combine!==undefined)material.combine=json.combine;if(json.side!==undefined)material.side=json.side;if(json.shadowSide!==undefined)material.shadowSide=json.shadowSide;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.alphaTest!==undefined)material.alphaTest=json.alphaTest;if(json.depthTest!==undefined)material.depthTest=json.depthTest;if(json.depthWrite!==undefined)material.depthWrite=json.depthWrite;if(json.colorWrite!==undefined)material.colorWrite=json.colorWrite;if(json.stencilWrite!==undefined)material.stencilWrite=json.stencilWrite;if(json.stencilWriteMask!==undefined)material.stencilWriteMask=json.stencilWriteMask;if(json.stencilFunc!==undefined)material.stencilFunc=json.stencilFunc;if(json.stencilRef!==undefined)material.stencilRef=json.stencilRef;if(json.stencilFuncMask!==undefined)material.stencilFuncMask=json.stencilFuncMask;if(json.stencilFail!==undefined)material.stencilFail=json.stencilFail;if(json.stencilZFail!==undefined)material.stencilZFail=json.stencilZFail;if(json.stencilZPass!==undefined)material.stencilZPass=json.stencilZPass;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.wireframeLinewidth!==undefined)material.wireframeLinewidth=json.wireframeLinewidth;if(json.wireframeLinecap!==undefined)material.wireframeLinecap=json.wireframeLinecap;if(json.wireframeLinejoin!==undefined)material.wireframeLinejoin=json.wireframeLinejoin;if(json.rotation!==undefined)material.rotation=json.rotation;if(json.linewidth!==1)material.linewidth=json.linewidth;if(json.dashSize!==undefined)material.dashSize=json.dashSize;if(json.gapSize!==undefined)material.gapSize=json.gapSize;if(json.scale!==undefined)material.scale=json.scale;if(json.polygonOffset!==undefined)material.polygonOffset=json.polygonOffset;if(json.polygonOffsetFactor!==undefined)material.polygonOffsetFactor=json.polygonOffsetFactor;if(json.polygonOffsetUnits!==undefined)material.polygonOffsetUnits=json.polygonOffsetUnits;if(json.morphTargets!==undefined)material.morphTargets=json.morphTargets;if(json.morphNormals!==undefined)material.morphNormals=json.morphNormals;if(json.dithering!==undefined)material.dithering=json.dithering;if(json.alphaToCoverage!==undefined)material.alphaToCoverage=json.alphaToCoverage;if(json.premultipliedAlpha!==undefined)material.premultipliedAlpha=json.premultipliedAlpha;if(json.vertexTangents!==undefined)material.vertexTangents=json.vertexTangents;if(json.visible!==undefined)material.visible=json.visible;if(json.toneMapped!==undefined)material.toneMapped=json.toneMapped;if(json.userData!==undefined)material.userData=json.userData;if(json.vertexColors!==undefined){if(typeof json.vertexColors==='number'){material.vertexColors=json.vertexColors>0?true:false;}else{material.vertexColors=json.vertexColors;}}// Shader Material\nif(json.uniforms!==undefined){for(const name in json.uniforms){const uniform=json.uniforms[name];material.uniforms[name]={};switch(uniform.type){case't':material.uniforms[name].value=getTexture(uniform.value);break;case'c':material.uniforms[name].value=new Color().setHex(uniform.value);break;case'v2':material.uniforms[name].value=new Vector2().fromArray(uniform.value);break;case'v3':material.uniforms[name].value=new Vector3().fromArray(uniform.value);break;case'v4':material.uniforms[name].value=new Vector4().fromArray(uniform.value);break;case'm3':material.uniforms[name].value=new Matrix3().fromArray(uniform.value);break;case'm4':material.uniforms[name].value=new Matrix4().fromArray(uniform.value);break;default:material.uniforms[name].value=uniform.value;}}}if(json.defines!==undefined)material.defines=json.defines;if(json.vertexShader!==undefined)material.vertexShader=json.vertexShader;if(json.fragmentShader!==undefined)material.fragmentShader=json.fragmentShader;if(json.extensions!==undefined){for(const key in json.extensions){material.extensions[key]=json.extensions[key];}}// Deprecated\nif(json.shading!==undefined)material.flatShading=json.shading===1;// THREE.FlatShading\n// for PointsMaterial\nif(json.size!==undefined)material.size=json.size;if(json.sizeAttenuation!==undefined)material.sizeAttenuation=json.sizeAttenuation;// maps\nif(json.map!==undefined)material.map=getTexture(json.map);if(json.matcap!==undefined)material.matcap=getTexture(json.matcap);if(json.alphaMap!==undefined)material.alphaMap=getTexture(json.alphaMap);if(json.bumpMap!==undefined)material.bumpMap=getTexture(json.bumpMap);if(json.bumpScale!==undefined)material.bumpScale=json.bumpScale;if(json.normalMap!==undefined)material.normalMap=getTexture(json.normalMap);if(json.normalMapType!==undefined)material.normalMapType=json.normalMapType;if(json.normalScale!==undefined){let normalScale=json.normalScale;if(Array.isArray(normalScale)===false){// Blender exporter used to export a scalar. See #7459\nnormalScale=[normalScale,normalScale];}material.normalScale=new Vector2().fromArray(normalScale);}if(json.displacementMap!==undefined)material.displacementMap=getTexture(json.displacementMap);if(json.displacementScale!==undefined)material.displacementScale=json.displacementScale;if(json.displacementBias!==undefined)material.displacementBias=json.displacementBias;if(json.roughnessMap!==undefined)material.roughnessMap=getTexture(json.roughnessMap);if(json.metalnessMap!==undefined)material.metalnessMap=getTexture(json.metalnessMap);if(json.emissiveMap!==undefined)material.emissiveMap=getTexture(json.emissiveMap);if(json.emissiveIntensity!==undefined)material.emissiveIntensity=json.emissiveIntensity;if(json.specularMap!==undefined)material.specularMap=getTexture(json.specularMap);if(json.envMap!==undefined)material.envMap=getTexture(json.envMap);if(json.envMapIntensity!==undefined)material.envMapIntensity=json.envMapIntensity;if(json.reflectivity!==undefined)material.reflectivity=json.reflectivity;if(json.refractionRatio!==undefined)material.refractionRatio=json.refractionRatio;if(json.lightMap!==undefined)material.lightMap=getTexture(json.lightMap);if(json.lightMapIntensity!==undefined)material.lightMapIntensity=json.lightMapIntensity;if(json.aoMap!==undefined)material.aoMap=getTexture(json.aoMap);if(json.aoMapIntensity!==undefined)material.aoMapIntensity=json.aoMapIntensity;if(json.gradientMap!==undefined)material.gradientMap=getTexture(json.gradientMap);if(json.clearcoatMap!==undefined)material.clearcoatMap=getTexture(json.clearcoatMap);if(json.clearcoatRoughnessMap!==undefined)material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap);if(json.clearcoatNormalMap!==undefined)material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap);if(json.clearcoatNormalScale!==undefined)material.clearcoatNormalScale=new Vector2().fromArray(json.clearcoatNormalScale);if(json.transmissionMap!==undefined)material.transmissionMap=getTexture(json.transmissionMap);if(json.thicknessMap!==undefined)material.thicknessMap=getTexture(json.thicknessMap);return material;}setTextures(value){this.textures=value;return this;}}class LoaderUtils{static decodeText(array){if(typeof TextDecoder!=='undefined'){return new TextDecoder().decode(array);}// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n// throws a \"maximum call stack size exceeded\" error for large arrays.\nlet s='';for(let i=0,il=array.length;i<il;i++){// Implicitly assumes little-endian.\ns+=String.fromCharCode(array[i]);}try{// merges multi-byte utf-8 characters.\nreturn decodeURIComponent(escape(s));}catch(e){// see #16358\nreturn s;}}static extractUrlBase(url){const index=url.lastIndexOf('/');if(index===-1)return'./';return url.substr(0,index+1);}}class InstancedBufferGeometry extends BufferGeometry{constructor(){super();this.type='InstancedBufferGeometry';this.instanceCount=Infinity;}copy(source){super.copy(source);this.instanceCount=source.instanceCount;return this;}clone(){return new this.constructor().copy(this);}toJSON(){const data=super.toJSON(this);data.instanceCount=this.instanceCount;data.isInstancedBufferGeometry=true;return data;}}InstancedBufferGeometry.prototype.isInstancedBufferGeometry=true;class InstancedBufferAttribute extends BufferAttribute{constructor(array,itemSize,normalized,meshPerAttribute){if(typeof normalized==='number'){meshPerAttribute=normalized;normalized=false;console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');}super(array,itemSize,normalized);this.meshPerAttribute=meshPerAttribute||1;}copy(source){super.copy(source);this.meshPerAttribute=source.meshPerAttribute;return this;}toJSON(){const data=super.toJSON();data.meshPerAttribute=this.meshPerAttribute;data.isInstancedBufferAttribute=true;return data;}}InstancedBufferAttribute.prototype.isInstancedBufferAttribute=true;class BufferGeometryLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}parse(json){const interleavedBufferMap={};const arrayBufferMap={};function getInterleavedBuffer(json,uuid){if(interleavedBufferMap[uuid]!==undefined)return interleavedBufferMap[uuid];const interleavedBuffers=json.interleavedBuffers;const interleavedBuffer=interleavedBuffers[uuid];const buffer=getArrayBuffer(json,interleavedBuffer.buffer);const array=getTypedArray(interleavedBuffer.type,buffer);const ib=new InterleavedBuffer(array,interleavedBuffer.stride);ib.uuid=interleavedBuffer.uuid;interleavedBufferMap[uuid]=ib;return ib;}function getArrayBuffer(json,uuid){if(arrayBufferMap[uuid]!==undefined)return arrayBufferMap[uuid];const arrayBuffers=json.arrayBuffers;const arrayBuffer=arrayBuffers[uuid];const ab=new Uint32Array(arrayBuffer).buffer;arrayBufferMap[uuid]=ab;return ab;}const geometry=json.isInstancedBufferGeometry?new InstancedBufferGeometry():new BufferGeometry();const index=json.data.index;if(index!==undefined){const typedArray=getTypedArray(index.type,index.array);geometry.setIndex(new BufferAttribute(typedArray,1));}const attributes=json.data.attributes;for(const key in attributes){const attribute=attributes[key];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{const typedArray=getTypedArray(attribute.type,attribute.array);const bufferAttributeConstr=attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute;bufferAttribute=new bufferAttributeConstr(typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;if(attribute.usage!==undefined)bufferAttribute.setUsage(attribute.usage);if(attribute.updateRange!==undefined){bufferAttribute.updateRange.offset=attribute.updateRange.offset;bufferAttribute.updateRange.count=attribute.updateRange.count;}geometry.setAttribute(key,bufferAttribute);}const morphAttributes=json.data.morphAttributes;if(morphAttributes){for(const key in morphAttributes){const attributeArray=morphAttributes[key];const array=[];for(let i=0,il=attributeArray.length;i<il;i++){const attribute=attributeArray[i];let bufferAttribute;if(attribute.isInterleavedBufferAttribute){const interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{const typedArray=getTypedArray(attribute.type,attribute.array);bufferAttribute=new BufferAttribute(typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;array.push(bufferAttribute);}geometry.morphAttributes[key]=array;}}const morphTargetsRelative=json.data.morphTargetsRelative;if(morphTargetsRelative){geometry.morphTargetsRelative=true;}const groups=json.data.groups||json.data.drawcalls||json.data.offsets;if(groups!==undefined){for(let i=0,n=groups.length;i!==n;++i){const group=groups[i];geometry.addGroup(group.start,group.count,group.materialIndex);}}const boundingSphere=json.data.boundingSphere;if(boundingSphere!==undefined){const center=new Vector3();if(boundingSphere.center!==undefined){center.fromArray(boundingSphere.center);}geometry.boundingSphere=new Sphere(center,boundingSphere.radius);}if(json.name)geometry.name=json.name;if(json.userData)geometry.userData=json.userData;return geometry;}}class ObjectLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const path=this.path===''?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){let json=null;try{json=JSON.parse(text);}catch(error){if(onError!==undefined)onError(error);console.error('THREE:ObjectLoader: Can\\'t parse '+url+'.',error.message);return;}const metadata=json.metadata;if(metadata===undefined||metadata.type===undefined||metadata.type.toLowerCase()==='geometry'){console.error('THREE.ObjectLoader: Can\\'t load '+url);return;}scope.parse(json,onLoad);},onProgress,onError);}parse(json,onLoad){const animations=this.parseAnimations(json.animations);const shapes=this.parseShapes(json.shapes);const geometries=this.parseGeometries(json.geometries,shapes);const images=this.parseImages(json.images,function(){if(onLoad!==undefined)onLoad(object);});const textures=this.parseTextures(json.textures,images);const materials=this.parseMaterials(json.materials,textures);const object=this.parseObject(json.object,geometries,materials,animations);const skeletons=this.parseSkeletons(json.skeletons,object);this.bindSkeletons(object,skeletons);//\nif(onLoad!==undefined){let hasImages=false;for(const uuid in images){if(images[uuid]instanceof HTMLImageElement){hasImages=true;break;}}if(hasImages===false)onLoad(object);}return object;}parseShapes(json){const shapes={};if(json!==undefined){for(let i=0,l=json.length;i<l;i++){const shape=new Shape().fromJSON(json[i]);shapes[shape.uuid]=shape;}}return shapes;}parseSkeletons(json,object){const skeletons={};const bones={};// generate bone lookup table\nobject.traverse(function(child){if(child.isBone)bones[child.uuid]=child;});// create skeletons\nif(json!==undefined){for(let i=0,l=json.length;i<l;i++){const skeleton=new Skeleton().fromJSON(json[i],bones);skeletons[skeleton.uuid]=skeleton;}}return skeletons;}parseGeometries(json,shapes){const geometries={};let geometryShapes;if(json!==undefined){const bufferGeometryLoader=new BufferGeometryLoader();for(let i=0,l=json.length;i<l;i++){let geometry;const data=json[i];switch(data.type){case'PlaneGeometry':case'PlaneBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case'BoxGeometry':case'BoxBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case'CircleGeometry':case'CircleBufferGeometry':geometry=new Geometries[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case'CylinderGeometry':case'CylinderBufferGeometry':geometry=new Geometries[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'ConeGeometry':case'ConeBufferGeometry':geometry=new Geometries[data.type](data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'SphereGeometry':case'SphereBufferGeometry':geometry=new Geometries[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case'DodecahedronGeometry':case'DodecahedronBufferGeometry':case'IcosahedronGeometry':case'IcosahedronBufferGeometry':case'OctahedronGeometry':case'OctahedronBufferGeometry':case'TetrahedronGeometry':case'TetrahedronBufferGeometry':geometry=new Geometries[data.type](data.radius,data.detail);break;case'RingGeometry':case'RingBufferGeometry':geometry=new Geometries[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case'TorusGeometry':case'TorusBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case'TorusKnotGeometry':case'TorusKnotBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);break;case'TubeGeometry':case'TubeBufferGeometry':// This only works for built-in curves (e.g. CatmullRomCurve3).\n// User defined curves or instances of CurvePath will not be deserialized.\ngeometry=new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);break;case'LatheGeometry':case'LatheBufferGeometry':geometry=new Geometries[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case'PolyhedronGeometry':case'PolyhedronBufferGeometry':geometry=new Geometries[data.type](data.vertices,data.indices,data.radius,data.details);break;case'ShapeGeometry':case'ShapeBufferGeometry':geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape);}geometry=new Geometries[data.type](geometryShapes,data.curveSegments);break;case'ExtrudeGeometry':case'ExtrudeBufferGeometry':geometryShapes=[];for(let j=0,jl=data.shapes.length;j<jl;j++){const shape=shapes[data.shapes[j]];geometryShapes.push(shape);}const extrudePath=data.options.extrudePath;if(extrudePath!==undefined){data.options.extrudePath=new Curves[extrudePath.type]().fromJSON(extrudePath);}geometry=new Geometries[data.type](geometryShapes,data.options);break;case'BufferGeometry':case'InstancedBufferGeometry':geometry=bufferGeometryLoader.parse(data);break;case'Geometry':console.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+data.type+'\"');continue;}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;if(geometry.isBufferGeometry===true&&data.userData!==undefined)geometry.userData=data.userData;geometries[data.uuid]=geometry;}}return geometries;}parseMaterials(json,textures){const cache={};// MultiMaterial\nconst materials={};if(json!==undefined){const loader=new MaterialLoader();loader.setTextures(textures);for(let i=0,l=json.length;i<l;i++){const data=json[i];if(data.type==='MultiMaterial'){// Deprecated\nconst array=[];for(let j=0;j<data.materials.length;j++){const material=data.materials[j];if(cache[material.uuid]===undefined){cache[material.uuid]=loader.parse(material);}array.push(cache[material.uuid]);}materials[data.uuid]=array;}else{if(cache[data.uuid]===undefined){cache[data.uuid]=loader.parse(data);}materials[data.uuid]=cache[data.uuid];}}}return materials;}parseAnimations(json){const animations={};if(json!==undefined){for(let i=0;i<json.length;i++){const data=json[i];const clip=AnimationClip.parse(data);animations[clip.uuid]=clip;}}return animations;}parseImages(json,onLoad){const scope=this;const images={};let loader;function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url);},undefined,function(){scope.manager.itemError(url);scope.manager.itemEnd(url);});}function deserializeImage(image){if(typeof image==='string'){const url=image;const path=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url)?url:scope.resourcePath+url;return loadImage(path);}else{if(image.data){return{data:getTypedArray(image.type,image.data),width:image.width,height:image.height};}else{return null;}}}if(json!==undefined&&json.length>0){const manager=new LoadingManager(onLoad);loader=new ImageLoader(manager);loader.setCrossOrigin(this.crossOrigin);for(let i=0,il=json.length;i<il;i++){const image=json[i];const url=image.url;if(Array.isArray(url)){// load array of images e.g CubeTexture\nimages[image.uuid]=[];for(let j=0,jl=url.length;j<jl;j++){const currentUrl=url[j];const deserializedImage=deserializeImage(currentUrl);if(deserializedImage!==null){if(deserializedImage instanceof HTMLImageElement){images[image.uuid].push(deserializedImage);}else{// special case: handle array of data textures for cube textures\nimages[image.uuid].push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height));}}}}else{// load single image\nconst deserializedImage=deserializeImage(image.url);if(deserializedImage!==null){images[image.uuid]=deserializedImage;}}}}return images;}parseTextures(json,images){function parseConstant(value,type){if(typeof value==='number')return value;console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',value);return type[value];}const textures={};if(json!==undefined){for(let i=0,l=json.length;i<l;i++){const data=json[i];if(data.image===undefined){console.warn('THREE.ObjectLoader: No \"image\" specified for',data.uuid);}if(images[data.image]===undefined){console.warn('THREE.ObjectLoader: Undefined image',data.image);}let texture;const image=images[data.image];if(Array.isArray(image)){texture=new CubeTexture(image);if(image.length===6)texture.needsUpdate=true;}else{if(image&&image.data){texture=new DataTexture(image.data,image.width,image.height);}else{texture=new Texture(image);}if(image)texture.needsUpdate=true;// textures can have undefined image data\n}texture.uuid=data.uuid;if(data.name!==undefined)texture.name=data.name;if(data.mapping!==undefined)texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING);if(data.offset!==undefined)texture.offset.fromArray(data.offset);if(data.repeat!==undefined)texture.repeat.fromArray(data.repeat);if(data.center!==undefined)texture.center.fromArray(data.center);if(data.rotation!==undefined)texture.rotation=data.rotation;if(data.wrap!==undefined){texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING);texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING);}if(data.format!==undefined)texture.format=data.format;if(data.type!==undefined)texture.type=data.type;if(data.encoding!==undefined)texture.encoding=data.encoding;if(data.minFilter!==undefined)texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER);if(data.magFilter!==undefined)texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER);if(data.anisotropy!==undefined)texture.anisotropy=data.anisotropy;if(data.flipY!==undefined)texture.flipY=data.flipY;if(data.premultiplyAlpha!==undefined)texture.premultiplyAlpha=data.premultiplyAlpha;if(data.unpackAlignment!==undefined)texture.unpackAlignment=data.unpackAlignment;textures[data.uuid]=texture;}}return textures;}parseObject(data,geometries,materials,animations){let object;function getGeometry(name){if(geometries[name]===undefined){console.warn('THREE.ObjectLoader: Undefined geometry',name);}return geometries[name];}function getMaterial(name){if(name===undefined)return undefined;if(Array.isArray(name)){const array=[];for(let i=0,l=name.length;i<l;i++){const uuid=name[i];if(materials[uuid]===undefined){console.warn('THREE.ObjectLoader: Undefined material',uuid);}array.push(materials[uuid]);}return array;}if(materials[name]===undefined){console.warn('THREE.ObjectLoader: Undefined material',name);}return materials[name];}let geometry,material;switch(data.type){case'Scene':object=new Scene();if(data.background!==undefined){if(Number.isInteger(data.background)){object.background=new Color(data.background);}}if(data.fog!==undefined){if(data.fog.type==='Fog'){object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far);}else if(data.fog.type==='FogExp2'){object.fog=new FogExp2(data.fog.color,data.fog.density);}}break;case'PerspectiveCamera':object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);if(data.focus!==undefined)object.focus=data.focus;if(data.zoom!==undefined)object.zoom=data.zoom;if(data.filmGauge!==undefined)object.filmGauge=data.filmGauge;if(data.filmOffset!==undefined)object.filmOffset=data.filmOffset;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'OrthographicCamera':object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);if(data.zoom!==undefined)object.zoom=data.zoom;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'AmbientLight':object=new AmbientLight(data.color,data.intensity);break;case'DirectionalLight':object=new DirectionalLight(data.color,data.intensity);break;case'PointLight':object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case'RectAreaLight':object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case'SpotLight':object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case'HemisphereLight':object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case'LightProbe':object=new LightProbe().fromJSON(data);break;case'SkinnedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new SkinnedMesh(geometry,material);if(data.bindMode!==undefined)object.bindMode=data.bindMode;if(data.bindMatrix!==undefined)object.bindMatrix.fromArray(data.bindMatrix);if(data.skeleton!==undefined)object.skeleton=data.skeleton;break;case'Mesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new Mesh(geometry,material);break;case'InstancedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);const count=data.count;const instanceMatrix=data.instanceMatrix;const instanceColor=data.instanceColor;object=new InstancedMesh(geometry,material,count);object.instanceMatrix=new BufferAttribute(new Float32Array(instanceMatrix.array),16);if(instanceColor!==undefined)object.instanceColor=new BufferAttribute(new Float32Array(instanceColor.array),instanceColor.itemSize);break;case'LOD':object=new LOD();break;case'Line':object=new Line(getGeometry(data.geometry),getMaterial(data.material));break;case'LineLoop':object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case'LineSegments':object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case'PointCloud':case'Points':object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case'Sprite':object=new Sprite(getMaterial(data.material));break;case'Group':object=new Group();break;case'Bone':object=new Bone();break;default:object=new Object3D();}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){object.matrix.fromArray(data.matrix);if(data.matrixAutoUpdate!==undefined)object.matrixAutoUpdate=data.matrixAutoUpdate;if(object.matrixAutoUpdate)object.matrix.decompose(object.position,object.quaternion,object.scale);}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.quaternion!==undefined)object.quaternion.fromArray(data.quaternion);if(data.scale!==undefined)object.scale.fromArray(data.scale);}if(data.castShadow!==undefined)object.castShadow=data.castShadow;if(data.receiveShadow!==undefined)object.receiveShadow=data.receiveShadow;if(data.shadow){if(data.shadow.bias!==undefined)object.shadow.bias=data.shadow.bias;if(data.shadow.normalBias!==undefined)object.shadow.normalBias=data.shadow.normalBias;if(data.shadow.radius!==undefined)object.shadow.radius=data.shadow.radius;if(data.shadow.mapSize!==undefined)object.shadow.mapSize.fromArray(data.shadow.mapSize);if(data.shadow.camera!==undefined)object.shadow.camera=this.parseObject(data.shadow.camera);}if(data.visible!==undefined)object.visible=data.visible;if(data.frustumCulled!==undefined)object.frustumCulled=data.frustumCulled;if(data.renderOrder!==undefined)object.renderOrder=data.renderOrder;if(data.userData!==undefined)object.userData=data.userData;if(data.layers!==undefined)object.layers.mask=data.layers;if(data.children!==undefined){const children=data.children;for(let i=0;i<children.length;i++){object.add(this.parseObject(children[i],geometries,materials,animations));}}if(data.animations!==undefined){const objectAnimations=data.animations;for(let i=0;i<objectAnimations.length;i++){const uuid=objectAnimations[i];object.animations.push(animations[uuid]);}}if(data.type==='LOD'){if(data.autoUpdate!==undefined)object.autoUpdate=data.autoUpdate;const levels=data.levels;for(let l=0;l<levels.length;l++){const level=levels[l];const child=object.getObjectByProperty('uuid',level.object);if(child!==undefined){object.addLevel(child,level.distance);}}}return object;}bindSkeletons(object,skeletons){if(Object.keys(skeletons).length===0)return;object.traverse(function(child){if(child.isSkinnedMesh===true&&child.skeleton!==undefined){const skeleton=skeletons[child.skeleton];if(skeleton===undefined){console.warn('THREE.ObjectLoader: No skeleton found with UUID:',child.skeleton);}else{child.bind(skeleton,child.bindMatrix);}}});}/* DEPRECATED */setTexturePath(value){console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');return this.setResourcePath(value);}}const TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping};const TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping};const TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};class ImageBitmapLoader extends Loader{constructor(manager){super(manager);if(typeof createImageBitmap==='undefined'){console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');}if(typeof fetch==='undefined'){console.warn('THREE.ImageBitmapLoader: fetch() not supported.');}this.options={premultiplyAlpha:'none'};}setOptions(options){this.options=options;return this;}load(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);const scope=this;const cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}const fetchOptions={};fetchOptions.credentials=this.crossOrigin==='anonymous'?'same-origin':'include';fetchOptions.headers=this.requestHeader;fetch(url,fetchOptions).then(function(res){return res.blob();}).then(function(blob){return createImageBitmap(blob,Object.assign(scope.options,{colorSpaceConversion:'none'}));}).then(function(imageBitmap){Cache.add(url,imageBitmap);if(onLoad)onLoad(imageBitmap);scope.manager.itemEnd(url);}).catch(function(e){if(onError)onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url);});scope.manager.itemStart(url);}}ImageBitmapLoader.prototype.isImageBitmapLoader=true;class ShapePath{constructor(){this.type='ShapePath';this.color=new Color();this.subPaths=[];this.currentPath=null;}moveTo(x,y){this.currentPath=new Path();this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);return this;}lineTo(x,y){this.currentPath.lineTo(x,y);return this;}quadraticCurveTo(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);return this;}bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY);return this;}splineThru(pts){this.currentPath.splineThru(pts);return this;}toShapes(isCCW,noHoles){function toShapesNoHoles(inSubpaths){const shapes=[];for(let i=0,l=inSubpaths.length;i<l;i++){const tmpPath=inSubpaths[i];const tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);}return shapes;}function isPointInsidePolygon(inPt,inPolygon){const polyLen=inPolygon.length;// inPt on polygon contour => immediate success    or\n// toggling of inside/outside at every single! intersection point of an edge\n//  with the horizontal line through inPt, left of inPt\n//  not counting lowerY endpoints of edges and whole edges on that line\nlet inside=false;for(let p=polyLen-1,q=0;q<polyLen;p=q++){let edgeLowPt=inPolygon[p];let edgeHighPt=inPolygon[q];let edgeDx=edgeHighPt.x-edgeLowPt.x;let edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){// not parallel\nif(edgeDy<0){edgeLowPt=inPolygon[q];edgeDx=-edgeDx;edgeHighPt=inPolygon[p];edgeDy=-edgeDy;}if(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return true;// inPt is on contour ?\n// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n}else{const perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(perpEdge===0)return true;// inPt is on contour ?\nif(perpEdge<0)continue;inside=!inside;// true intersection left of inPt\n}}else{// parallel or collinear\nif(inPt.y!==edgeLowPt.y)continue;// parallel\n// edge lies on the same horizontal line as inPt\nif(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return true;// inPt: Point on contour !\n// continue;\n}}return inside;}const isClockWise=ShapeUtils.isClockWise;const subPaths=this.subPaths;if(subPaths.length===0)return[];if(noHoles===true)return toShapesNoHoles(subPaths);let solid,tmpPath,tmpShape;const shapes=[];if(subPaths.length===1){tmpPath=subPaths[0];tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes;}let holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;// console.log(\"Holes first\", holesFirst);\nconst betterShapeHoles=[];const newShapes=[];let newShapeHoles=[];let mainIdx=0;let tmpPoints;newShapes[mainIdx]=undefined;newShapeHoles[mainIdx]=[];for(let i=0,l=subPaths.length;i<l;i++){tmpPath=subPaths[i];tmpPoints=tmpPath.getPoints();solid=isClockWise(tmpPoints);solid=isCCW?!solid:solid;if(solid){if(!holesFirst&&newShapes[mainIdx])mainIdx++;newShapes[mainIdx]={s:new Shape(),p:tmpPoints};newShapes[mainIdx].s.curves=tmpPath.curves;if(holesFirst)mainIdx++;newShapeHoles[mainIdx]=[];//console.log('cw', i);\n}else{newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});//console.log('ccw', i);\n}}// only Holes? -> probably all Shapes with wrong orientation\nif(!newShapes[0])return toShapesNoHoles(subPaths);if(newShapes.length>1){let ambiguous=false;const toChange=[];for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){betterShapeHoles[sIdx]=[];}for(let sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){const sho=newShapeHoles[sIdx];for(let hIdx=0;hIdx<sho.length;hIdx++){const ho=sho[hIdx];let hole_unassigned=true;for(let s2Idx=0;s2Idx<newShapes.length;s2Idx++){if(isPointInsidePolygon(ho.p,newShapes[s2Idx].p)){if(sIdx!==s2Idx)toChange.push({froms:sIdx,tos:s2Idx,hole:hIdx});if(hole_unassigned){hole_unassigned=false;betterShapeHoles[s2Idx].push(ho);}else{ambiguous=true;}}}if(hole_unassigned){betterShapeHoles[sIdx].push(ho);}}}// console.log(\"ambiguous: \", ambiguous);\nif(toChange.length>0){// console.log(\"to change: \", toChange);\nif(!ambiguous)newShapeHoles=betterShapeHoles;}}let tmpHoles;for(let i=0,il=newShapes.length;i<il;i++){tmpShape=newShapes[i].s;shapes.push(tmpShape);tmpHoles=newShapeHoles[i];for(let j=0,jl=tmpHoles.length;j<jl;j++){tmpShape.holes.push(tmpHoles[j].h);}}//console.log(\"shape\", shapes);\nreturn shapes;}}class Font{constructor(data){this.type='Font';this.data=data;}generateShapes(text,size=100){const shapes=[];const paths=createPaths(text,size,this.data);for(let p=0,pl=paths.length;p<pl;p++){Array.prototype.push.apply(shapes,paths[p].toShapes());}return shapes;}}function createPaths(text,size,data){const chars=Array.from(text);const scale=size/data.resolution;const line_height=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*scale;const paths=[];let offsetX=0,offsetY=0;for(let i=0;i<chars.length;i++){const char=chars[i];if(char==='\\n'){offsetX=0;offsetY-=line_height;}else{const ret=createPath(char,scale,offsetX,offsetY,data);offsetX+=ret.offsetX;paths.push(ret.path);}}return paths;}function createPath(char,scale,offsetX,offsetY,data){const glyph=data.glyphs[char]||data.glyphs['?'];if(!glyph){console.error('THREE.Font: character \"'+char+'\" does not exists in font family '+data.familyName+'.');return;}const path=new ShapePath();let x,y,cpx,cpy,cpx1,cpy1,cpx2,cpy2;if(glyph.o){const outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(' '));for(let i=0,l=outline.length;i<l;){const action=outline[i++];switch(action){case'm':// moveTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.moveTo(x,y);break;case'l':// lineTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.lineTo(x,y);break;case'q':// quadraticCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case'b':// bezierCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;cpx2=outline[i++]*scale+offsetX;cpy2=outline[i++]*scale+offsetY;path.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy);break;}}}return{offsetX:glyph.ha*scale,path:path};}Font.prototype.isFont=true;class FontLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){let json;try{json=JSON.parse(text);}catch(e){console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');json=JSON.parse(text.substring(65,text.length-2));}const font=scope.parse(json);if(onLoad)onLoad(font);},onProgress,onError);}parse(json){return new Font(json);}}let _context;const AudioContext={getContext:function(){if(_context===undefined){_context=new(window.AudioContext||window.webkitAudioContext)();}return _context;},setContext:function(value){_context=value;}};class AudioLoader extends Loader{constructor(manager){super(manager);}load(url,onLoad,onProgress,onError){const scope=this;const loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(buffer){try{// Create a copy of the buffer. The `decodeAudioData` method\n// detaches the buffer when complete, preventing reuse.\nconst bufferCopy=buffer.slice(0);const context=AudioContext.getContext();context.decodeAudioData(bufferCopy,function(audioBuffer){onLoad(audioBuffer);});}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}}class HemisphereLightProbe extends LightProbe{constructor(skyColor,groundColor,intensity=1){super(undefined,intensity);const color1=new Color().set(skyColor);const color2=new Color().set(groundColor);const sky=new Vector3(color1.r,color1.g,color1.b);const ground=new Vector3(color2.r,color2.g,color2.b);// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\nconst c0=Math.sqrt(Math.PI);const c1=c0*Math.sqrt(0.75);this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);}}HemisphereLightProbe.prototype.isHemisphereLightProbe=true;class AmbientLightProbe extends LightProbe{constructor(color,intensity=1){super(undefined,intensity);const color1=new Color().set(color);// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\nthis.sh.coefficients[0].set(color1.r,color1.g,color1.b).multiplyScalar(2*Math.sqrt(Math.PI));}}AmbientLightProbe.prototype.isAmbientLightProbe=true;const _eyeRight=/*@__PURE__*/new Matrix4();const _eyeLeft=/*@__PURE__*/new Matrix4();class StereoCamera{constructor(){this.type='StereoCamera';this.aspect=1;this.eyeSep=0.064;this.cameraL=new PerspectiveCamera();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new PerspectiveCamera();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null};}update(camera){const cache=this._cache;const needsUpdate=cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep;if(needsUpdate){cache.focus=camera.focus;cache.fov=camera.fov;cache.aspect=camera.aspect*this.aspect;cache.near=camera.near;cache.far=camera.far;cache.zoom=camera.zoom;cache.eyeSep=this.eyeSep;// Off-axis stereoscopic effect based on\n// http://paulbourke.net/stereographics/stereorender/\nconst projectionMatrix=camera.projectionMatrix.clone();const eyeSepHalf=cache.eyeSep/2;const eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus;const ymax=cache.near*Math.tan(DEG2RAD*cache.fov*0.5)/cache.zoom;let xmin,xmax;// translate xOffset\n_eyeLeft.elements[12]=-eyeSepHalf;_eyeRight.elements[12]=eyeSepHalf;// for left eye\nxmin=-ymax*cache.aspect+eyeSepOnProjection;xmax=ymax*cache.aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraL.projectionMatrix.copy(projectionMatrix);// for right eye\nxmin=-ymax*cache.aspect-eyeSepOnProjection;xmax=ymax*cache.aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraR.projectionMatrix.copy(projectionMatrix);}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);}}class Clock{constructor(autoStart=true){this.autoStart=autoStart;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;}start(){this.startTime=now();this.oldTime=this.startTime;this.elapsedTime=0;this.running=true;}stop(){this.getElapsedTime();this.running=false;this.autoStart=false;}getElapsedTime(){this.getDelta();return this.elapsedTime;}getDelta(){let diff=0;if(this.autoStart&&!this.running){this.start();return 0;}if(this.running){const newTime=now();diff=(newTime-this.oldTime)/1000;this.oldTime=newTime;this.elapsedTime+=diff;}return diff;}}function now(){return(typeof performance==='undefined'?Date:performance).now();// see #10732\n}const _position$1=/*@__PURE__*/new Vector3();const _quaternion$1=/*@__PURE__*/new Quaternion();const _scale$1=/*@__PURE__*/new Vector3();const _orientation$1=/*@__PURE__*/new Vector3();class AudioListener extends Object3D{constructor(){super();this.type='AudioListener';this.context=AudioContext.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;// private\nthis._clock=new Clock();}getInput(){return this.gain;}removeFilter(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null;}return this;}getFilter(){return this.filter;}setFilter(value){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);}else{this.gain.disconnect(this.context.destination);}this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this;}getMasterVolume(){return this.gain.gain.value;}setMasterVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}updateMatrixWorld(force){super.updateMatrixWorld(force);const listener=this.context.listener;const up=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$1,_quaternion$1,_scale$1);_orientation$1.set(0,0,-1).applyQuaternion(_quaternion$1);if(listener.positionX){// code path for Chrome (see #14393)\nconst endTime=this.context.currentTime+this.timeDelta;listener.positionX.linearRampToValueAtTime(_position$1.x,endTime);listener.positionY.linearRampToValueAtTime(_position$1.y,endTime);listener.positionZ.linearRampToValueAtTime(_position$1.z,endTime);listener.forwardX.linearRampToValueAtTime(_orientation$1.x,endTime);listener.forwardY.linearRampToValueAtTime(_orientation$1.y,endTime);listener.forwardZ.linearRampToValueAtTime(_orientation$1.z,endTime);listener.upX.linearRampToValueAtTime(up.x,endTime);listener.upY.linearRampToValueAtTime(up.y,endTime);listener.upZ.linearRampToValueAtTime(up.z,endTime);}else{listener.setPosition(_position$1.x,_position$1.y,_position$1.z);listener.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z,up.x,up.y,up.z);}}}class Audio extends Object3D{constructor(listener){super();this.type='Audio';this.listener=listener;this.context=listener.context;this.gain=this.context.createGain();this.gain.connect(listener.getInput());this.autoplay=false;this.buffer=null;this.detune=0;this.loop=false;this.loopStart=0;this.loopEnd=0;this.offset=0;this.duration=undefined;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.source=null;this.sourceType='empty';this._startedAt=0;this._progress=0;this._connected=false;this.filters=[];}getOutput(){return this.gain;}setNodeSource(audioNode){this.hasPlaybackControl=false;this.sourceType='audioNode';this.source=audioNode;this.connect();return this;}setMediaElementSource(mediaElement){this.hasPlaybackControl=false;this.sourceType='mediaNode';this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this;}setMediaStreamSource(mediaStream){this.hasPlaybackControl=false;this.sourceType='mediaStreamNode';this.source=this.context.createMediaStreamSource(mediaStream);this.connect();return this;}setBuffer(audioBuffer){this.buffer=audioBuffer;this.sourceType='buffer';if(this.autoplay)this.play();return this;}play(delay=0){if(this.isPlaying===true){console.warn('THREE.Audio: Audio is already playing.');return;}if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._startedAt=this.context.currentTime+delay;const source=this.context.createBufferSource();source.buffer=this.buffer;source.loop=this.loop;source.loopStart=this.loopStart;source.loopEnd=this.loopEnd;source.onended=this.onEnded.bind(this);source.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=source;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect();}pause(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}if(this.isPlaying===true){// update current progress\nthis._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){// ensure _progress does not exceed duration with looped audios\nthis._progress=this._progress%(this.duration||this.buffer.duration);}this.source.stop();this.source.onended=null;this.isPlaying=false;}return this;}stop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._progress=0;this.source.stop();this.source.onended=null;this.isPlaying=false;return this;}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++){this.filters[i-1].connect(this.filters[i]);}this.filters[this.filters.length-1].connect(this.getOutput());}else{this.source.connect(this.getOutput());}this._connected=true;return this;}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let i=1,l=this.filters.length;i<l;i++){this.filters[i-1].disconnect(this.filters[i]);}this.filters[this.filters.length-1].disconnect(this.getOutput());}else{this.source.disconnect(this.getOutput());}this._connected=false;return this;}getFilters(){return this.filters;}setFilters(value){if(!value)value=[];if(this._connected===true){this.disconnect();this.filters=value.slice();this.connect();}else{this.filters=value.slice();}return this;}setDetune(value){this.detune=value;if(this.source.detune===undefined)return;// only set detune when available\nif(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,0.01);}return this;}getDetune(){return this.detune;}getFilter(){return this.getFilters()[0];}setFilter(filter){return this.setFilters(filter?[filter]:[]);}setPlaybackRate(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.playbackRate=value;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,0.01);}return this;}getPlaybackRate(){return this.playbackRate;}onEnded(){this.isPlaying=false;}getLoop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return false;}return this.loop;}setLoop(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.loop=value;if(this.isPlaying===true){this.source.loop=this.loop;}return this;}setLoopStart(value){this.loopStart=value;return this;}setLoopEnd(value){this.loopEnd=value;return this;}getVolume(){return this.gain.gain.value;}setVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}}const _position=/*@__PURE__*/new Vector3();const _quaternion=/*@__PURE__*/new Quaternion();const _scale=/*@__PURE__*/new Vector3();const _orientation=/*@__PURE__*/new Vector3();class PositionalAudio extends Audio{constructor(listener){super(listener);this.panner=this.context.createPanner();this.panner.panningModel='HRTF';this.panner.connect(this.gain);}getOutput(){return this.panner;}getRefDistance(){return this.panner.refDistance;}setRefDistance(value){this.panner.refDistance=value;return this;}getRolloffFactor(){return this.panner.rolloffFactor;}setRolloffFactor(value){this.panner.rolloffFactor=value;return this;}getDistanceModel(){return this.panner.distanceModel;}setDistanceModel(value){this.panner.distanceModel=value;return this;}getMaxDistance(){return this.panner.maxDistance;}setMaxDistance(value){this.panner.maxDistance=value;return this;}setDirectionalCone(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this;}updateMatrixWorld(force){super.updateMatrixWorld(force);if(this.hasPlaybackControl===true&&this.isPlaying===false)return;this.matrixWorld.decompose(_position,_quaternion,_scale);_orientation.set(0,0,1).applyQuaternion(_quaternion);const panner=this.panner;if(panner.positionX){// code path for Chrome and Firefox (see #14393)\nconst endTime=this.context.currentTime+this.listener.timeDelta;panner.positionX.linearRampToValueAtTime(_position.x,endTime);panner.positionY.linearRampToValueAtTime(_position.y,endTime);panner.positionZ.linearRampToValueAtTime(_position.z,endTime);panner.orientationX.linearRampToValueAtTime(_orientation.x,endTime);panner.orientationY.linearRampToValueAtTime(_orientation.y,endTime);panner.orientationZ.linearRampToValueAtTime(_orientation.z,endTime);}else{panner.setPosition(_position.x,_position.y,_position.z);panner.setOrientation(_orientation.x,_orientation.y,_orientation.z);}}}class AudioAnalyser{constructor(audio,fftSize=2048){this.analyser=audio.context.createAnalyser();this.analyser.fftSize=fftSize;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser);}getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data;}getAverageFrequency(){let value=0;const data=this.getFrequencyData();for(let i=0;i<data.length;i++){value+=data[i];}return value/data.length;}}class PropertyMixer{constructor(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;let mixFunction,mixFunctionAdditive,setIdentity;// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n//\n// interpolators can use .buffer as their .result\n// the data then goes to 'incoming'\n//\n// 'accu0' and 'accu1' are used frame-interleaved for\n// the cumulative result and are compared to detect\n// changes\n//\n// 'orig' stores the original state of the property\n//\n// 'add' is used for additive cumulative results\n//\n// 'work' is optional and is only present for quaternion types. It is used\n// to store intermediate quaternion multiplication results\nswitch(typeName){case'quaternion':mixFunction=this._slerp;mixFunctionAdditive=this._slerpAdditive;setIdentity=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(valueSize*6);this._workIndex=5;break;case'string':case'bool':mixFunction=this._select;// Use the regular mix function and for additive on these types,\n// additive is not relevant for non-numeric types\nmixFunctionAdditive=this._select;setIdentity=this._setAdditiveIdentityOther;this.buffer=new Array(valueSize*5);break;default:mixFunction=this._lerp;mixFunctionAdditive=this._lerpAdditive;setIdentity=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(valueSize*5);}this._mixBufferRegion=mixFunction;this._mixBufferRegionAdditive=mixFunctionAdditive;this._setIdentity=setIdentity;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0;}// accumulate data in the 'incoming' region into 'accu<i>'\naccumulate(accuIndex,weight){// note: happily accumulating nothing when weight = 0, the caller knows\n// the weight and shouldn't have made the call in the first place\nconst buffer=this.buffer,stride=this.valueSize,offset=accuIndex*stride+stride;let currentWeight=this.cumulativeWeight;if(currentWeight===0){// accuN := incoming * weight\nfor(let i=0;i!==stride;++i){buffer[offset+i]=buffer[i];}currentWeight=weight;}else{// accuN := accuN + incoming * weight\ncurrentWeight+=weight;const mix=weight/currentWeight;this._mixBufferRegion(buffer,offset,0,mix,stride);}this.cumulativeWeight=currentWeight;}// accumulate data in the 'incoming' region into 'add'\naccumulateAdditive(weight){const buffer=this.buffer,stride=this.valueSize,offset=stride*this._addIndex;if(this.cumulativeWeightAdditive===0){// add = identity\nthis._setIdentity();}// add := add + incoming * weight\nthis._mixBufferRegionAdditive(buffer,offset,0,weight,stride);this.cumulativeWeightAdditive+=weight;}// apply the state of 'accu<i>' to the binding when accus differ\napply(accuIndex){const stride=this.valueSize,buffer=this.buffer,offset=accuIndex*stride+stride,weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(weight<1){// accuN := accuN + original * ( 1 - cumulativeWeight )\nconst originalValueOffset=stride*this._origIndex;this._mixBufferRegion(buffer,offset,originalValueOffset,1-weight,stride);}if(weightAdditive>0){// accuN := accuN + additive accuN\nthis._mixBufferRegionAdditive(buffer,offset,this._addIndex*stride,1,stride);}for(let i=stride,e=stride+stride;i!==e;++i){if(buffer[i]!==buffer[i+stride]){// value has changed -> update scene graph\nbinding.setValue(buffer,offset);break;}}}// remember the state of the bound property and copy it to both accus\nsaveOriginalState(){const binding=this.binding;const buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;binding.getValue(buffer,originalValueOffset);// accu[0..1] := orig -- initially detect changes against the original\nfor(let i=stride,e=originalValueOffset;i!==e;++i){buffer[i]=buffer[originalValueOffset+i%stride];}// Add to identity for additive\nthis._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;}// apply the state previously taken via 'saveOriginalState' to the binding\nrestoreOriginalState(){const originalValueOffset=this.valueSize*3;this.binding.setValue(this.buffer,originalValueOffset);}_setAdditiveIdentityNumeric(){const startIndex=this._addIndex*this.valueSize;const endIndex=startIndex+this.valueSize;for(let i=startIndex;i<endIndex;i++){this.buffer[i]=0;}}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1;}_setAdditiveIdentityOther(){const startIndex=this._origIndex*this.valueSize;const targetIndex=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++){this.buffer[targetIndex+i]=this.buffer[startIndex+i];}}// mix functions\n_select(buffer,dstOffset,srcOffset,t,stride){if(t>=0.5){for(let i=0;i!==stride;++i){buffer[dstOffset+i]=buffer[srcOffset+i];}}}_slerp(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t);}_slerpAdditive(buffer,dstOffset,srcOffset,t,stride){const workOffset=this._workIndex*stride;// Store result in intermediate buffer offset\nQuaternion.multiplyQuaternionsFlat(buffer,workOffset,buffer,dstOffset,buffer,srcOffset);// Slerp to the intermediate result\nQuaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,workOffset,t);}_lerp(buffer,dstOffset,srcOffset,t,stride){const s=1-t;for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t;}}_lerpAdditive(buffer,dstOffset,srcOffset,t,stride){for(let i=0;i!==stride;++i){const j=dstOffset+i;buffer[j]=buffer[j]+buffer[srcOffset+i]*t;}}}// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE='\\\\[\\\\]\\\\.:\\\\/';const _reservedRe=new RegExp('['+_RESERVED_CHARS_RE+']','g');// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar='[^'+_RESERVED_CHARS_RE+']';const _wordCharOrDot='[^'+_RESERVED_CHARS_RE.replace('\\\\.','')+']';// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe=/((?:WC+[\\/:])*)/.source.replace('WC',_wordChar);// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe=/(WCOD+)?/.source.replace('WCOD',_wordCharOrDot);// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC',_wordChar);// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC',_wordChar);const _trackRe=new RegExp(''+'^'+_directoryRe+_nodeRe+_objectRe+_propertyRe+'$');const _supportedObjectNames=['material','materials','bones'];class Composite{constructor(targetGroup,path,optionalParsedPath){const parsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,parsedPath);}getValue(array,offset){this.bind();// bind all binding\nconst firstValidIndex=this._targetGroup.nCachedObjects_,binding=this._bindings[firstValidIndex];// and only call .getValue on the first\nif(binding!==undefined)binding.getValue(array,offset);}setValue(array,offset){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].setValue(array,offset);}}bind(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].bind();}}unbind(){const bindings=this._bindings;for(let i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].unbind();}}}// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding{constructor(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=rootNode;// initial state of these methods that calls 'bind'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}static create(root,path,parsedPath){if(!(root&&root.isAnimationObjectGroup)){return new PropertyBinding(root,path,parsedPath);}else{return new PropertyBinding.Composite(root,path,parsedPath);}}/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */static sanitizeNodeName(name){return name.replace(/\\s/g,'_').replace(_reservedRe,'');}static parseTrackName(trackName){const matches=_trackRe.exec(trackName);if(!matches){throw new Error('PropertyBinding: Cannot parse trackName: '+trackName);}const results={// directoryName: matches[ 1 ], // (tschw) currently unused\nnodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],// required\npropertyIndex:matches[6]};const lastDot=results.nodeName&&results.nodeName.lastIndexOf('.');if(lastDot!==undefined&&lastDot!==-1){const objectName=results.nodeName.substring(lastDot+1);// Object names must be checked against an allowlist. Otherwise, there\n// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n// 'bar' could be the objectName, or part of a nodeName (which can\n// include '.' characters).\nif(_supportedObjectNames.indexOf(objectName)!==-1){results.nodeName=results.nodeName.substring(0,lastDot);results.objectName=objectName;}}if(results.propertyName===null||results.propertyName.length===0){throw new Error('PropertyBinding: can not parse propertyName from trackName: '+trackName);}return results;}static findNode(root,nodeName){if(!nodeName||nodeName===''||nodeName==='.'||nodeName===-1||nodeName===root.name||nodeName===root.uuid){return root;}// search into skeleton bones.\nif(root.skeleton){const bone=root.skeleton.getBoneByName(nodeName);if(bone!==undefined){return bone;}}// search into node subtree.\nif(root.children){const searchNodeSubtree=function(children){for(let i=0;i<children.length;i++){const childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName){return childNode;}const result=searchNodeSubtree(childNode.children);if(result)return result;}return null;};const subTreeNode=searchNodeSubtree(root.children);if(subTreeNode){return subTreeNode;}}return null;}// these are used to \"bind\" a nonexistent property\n_getValue_unavailable(){}_setValue_unavailable(){}// Getters\n_getValue_direct(buffer,offset){buffer[offset]=this.node[this.propertyName];}_getValue_array(buffer,offset){const source=this.resolvedProperty;for(let i=0,n=source.length;i!==n;++i){buffer[offset++]=source[i];}}_getValue_arrayElement(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex];}_getValue_toArray(buffer,offset){this.resolvedProperty.toArray(buffer,offset);}// Direct\n_setValue_direct(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];}_setValue_direct_setNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=true;}_setValue_direct_setMatrixWorldNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}// EntireArray\n_setValue_array(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}}_setValue_array_setNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.needsUpdate=true;}_setValue_array_setMatrixWorldNeedsUpdate(buffer,offset){const dest=this.resolvedProperty;for(let i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.matrixWorldNeedsUpdate=true;}// ArrayElement\n_setValue_arrayElement(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];}_setValue_arrayElement_setNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=true;}_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}// HasToFromArray\n_setValue_fromArray(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);}_setValue_fromArray_setNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=true;}_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=true;}_getValue_unbound(targetArray,offset){this.bind();this.getValue(targetArray,offset);}_setValue_unbound(sourceArray,offset){this.bind();this.setValue(sourceArray,offset);}// create getter / setter pair for a property in the scene graph\nbind(){let targetObject=this.node;const parsedPath=this.parsedPath;const objectName=parsedPath.objectName;const propertyName=parsedPath.propertyName;let propertyIndex=parsedPath.propertyIndex;if(!targetObject){targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode;this.node=targetObject;}// set fail state so we can just 'return' on error\nthis.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;// ensure there is a value node\nif(!targetObject){console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\\'t found.');return;}if(objectName){let objectIndex=parsedPath.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....\nswitch(objectName){case'materials':if(!targetObject.material){console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);return;}if(!targetObject.material.materials){console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);return;}targetObject=targetObject.material.materials;break;case'bones':if(!targetObject.skeleton){console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);return;}// potential future optimization: skip this if propertyIndex is already an integer\n// and convert the integer string to a true integer.\ntargetObject=targetObject.skeleton.bones;// support resolving morphTarget names into indices.\nfor(let i=0;i<targetObject.length;i++){if(targetObject[i].name===objectIndex){objectIndex=i;break;}}break;default:if(targetObject[objectName]===undefined){console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);return;}targetObject=targetObject[objectName];}if(objectIndex!==undefined){if(targetObject[objectIndex]===undefined){console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,targetObject);return;}targetObject=targetObject[objectIndex];}}// resolve property\nconst nodeProperty=targetObject[propertyName];if(nodeProperty===undefined){const nodeName=parsedPath.nodeName;console.error('THREE.PropertyBinding: Trying to update property for track: '+nodeName+'.'+propertyName+' but it wasn\\'t found.',targetObject);return;}// determine versioning scheme\nlet versioning=this.Versioning.None;this.targetObject=targetObject;if(targetObject.needsUpdate!==undefined){// material\nversioning=this.Versioning.NeedsUpdate;}else if(targetObject.matrixWorldNeedsUpdate!==undefined){// node transform\nversioning=this.Versioning.MatrixWorldNeedsUpdate;}// determine how the property gets bound\nlet bindingType=this.BindingType.Direct;if(propertyIndex!==undefined){// access a sub element of the property array (only primitives are supported right now)\nif(propertyName==='morphTargetInfluences'){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n// support resolving morphTarget names into indices.\nif(!targetObject.geometry){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);return;}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);return;}if(targetObject.morphTargetDictionary[propertyIndex]!==undefined){propertyIndex=targetObject.morphTargetDictionary[propertyIndex];}}else{console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',this);return;}}bindingType=this.BindingType.ArrayElement;this.resolvedProperty=nodeProperty;this.propertyIndex=propertyIndex;}else if(nodeProperty.fromArray!==undefined&&nodeProperty.toArray!==undefined){// must use copy for Object3D.Euler/Quaternion\nbindingType=this.BindingType.HasFromToArray;this.resolvedProperty=nodeProperty;}else if(Array.isArray(nodeProperty)){bindingType=this.BindingType.EntireArray;this.resolvedProperty=nodeProperty;}else{this.propertyName=propertyName;}// select getter / setter\nthis.getValue=this.GetterByBindingType[bindingType];this.setValue=this.SetterByBindingTypeAndVersioning[bindingType][versioning];}unbind(){this.node=null;// back to the prototype version of getValue / setValue\n// note: avoiding to mutate the shape of 'this' via 'delete'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}}PropertyBinding.Composite=Composite;PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray];PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[// Direct\nPropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[// EntireArray\nPropertyBinding.prototype._setValue_array,PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[// ArrayElement\nPropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[// HasToFromArray\nPropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */class AnimationObjectGroup{constructor(){this.uuid=generateUUID();// cached objects followed by the active ones\nthis._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;// threshold\n// note: read by PropertyBinding.Composite\nconst indices={};this._indicesByUUID=indices;// for bookkeeping\nfor(let i=0,n=arguments.length;i!==n;++i){indices[arguments[i].uuid]=i;}this._paths=[];// inside: string\nthis._parsedPaths=[];// inside: { we don't care, here }\nthis._bindings=[];// inside: Array< PropertyBinding >\nthis._bindingsIndicesByPath={};// inside: indices in these arrays\nconst scope=this;this.stats={objects:{get total(){return scope._objects.length;},get inUse(){return this.total-scope.nCachedObjects_;}},get bindingsPerObject(){return scope._bindings.length;}};}add(){const objects=this._objects,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length;let knownObject=undefined,nObjects=objects.length,nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid;let index=indicesByUUID[uuid];if(index===undefined){// unknown object -> add it to the ACTIVE region\nindex=nObjects++;indicesByUUID[uuid]=index;objects.push(object);// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){bindings[j].push(new PropertyBinding(object,paths[j],parsedPaths[j]));}}else if(index<nCachedObjects){knownObject=objects[index];// move existing object to the ACTIVE region\nconst firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=firstActiveIndex;objects[firstActiveIndex]=object;// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex];let binding=bindingsForPath[index];bindingsForPath[index]=lastCached;if(binding===undefined){// since we do not bother to create new bindings\n// for objects that are cached, the binding may\n// or may not exist\nbinding=new PropertyBinding(object,paths[j],parsedPaths[j]);}bindingsForPath[firstActiveIndex]=binding;}}else if(objects[index]!==knownObject){console.error('THREE.AnimationObjectGroup: Different objects with the same UUID '+'detected. Clean the caches or recreate your infrastructure when reloading scenes.');}// else the object is already where we want it to be\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;}remove(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined&&index>=nCachedObjects){// move existing object into the CACHED region\nconst lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=lastCachedIndex;objects[lastCachedIndex]=object;// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],firstActive=bindingsForPath[lastCachedIndex],binding=bindingsForPath[index];bindingsForPath[index]=firstActive;bindingsForPath[lastCachedIndex]=binding;}}}// for arguments\nthis.nCachedObjects_=nCachedObjects;}// remove & forget\nuncache(){const objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;let nCachedObjects=this.nCachedObjects_,nObjects=objects.length;for(let i=0,n=arguments.length;i!==n;++i){const object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined){delete indicesByUUID[uuid];if(index<nCachedObjects){// object is cached, shrink the CACHED region\nconst firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex],lastIndex=--nObjects,lastObject=objects[lastIndex];// last cached object takes this object's place\nindicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;// last object goes to the activated slot and pop\nindicesByUUID[lastObject.uuid]=firstActiveIndex;objects[firstActiveIndex]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],last=bindingsForPath[lastIndex];bindingsForPath[index]=lastCached;bindingsForPath[firstActiveIndex]=last;bindingsForPath.pop();}}else{// object is active, just swap with the last and pop\nconst lastIndex=--nObjects,lastObject=objects[lastIndex];if(lastIndex>0){indicesByUUID[lastObject.uuid]=index;}objects[index]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(let j=0,m=nBindings;j!==m;++j){const bindingsForPath=bindings[j];bindingsForPath[index]=bindingsForPath[lastIndex];bindingsForPath.pop();}}// cached or active\n}// if object is known\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;}// Internal interface used by befriended PropertyBinding.Composite:\nsubscribe_(path,parsedPath){// returns an array of bindings for the given path that is changed\n// according to the contained objects in the group\nconst indicesByPath=this._bindingsIndicesByPath;let index=indicesByPath[path];const bindings=this._bindings;if(index!==undefined)return bindings[index];const paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,bindingsForPath=new Array(nObjects);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);for(let i=nCachedObjects,n=objects.length;i!==n;++i){const object=objects[i];bindingsForPath[i]=new PropertyBinding(object,path,parsedPath);}return bindingsForPath;}unsubscribe_(path){// tells the group to forget about a property path and no longer\n// update the array previously obtained with 'subscribe_'\nconst indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(index!==undefined){const paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex],lastBindingsPath=path[lastBindingsIndex];indicesByPath[lastBindingsPath]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();paths[index]=paths[lastBindingsIndex];paths.pop();}}}AnimationObjectGroup.prototype.isAnimationObjectGroup=true;class AnimationAction{constructor(mixer,clip,localRoot=null,blendMode=clip.blendMode){this._mixer=mixer;this._clip=clip;this._localRoot=localRoot;this.blendMode=blendMode;const tracks=clip.tracks,nTracks=tracks.length,interpolants=new Array(nTracks);const interpolantSettings={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(let i=0;i!==nTracks;++i){const interpolant=tracks[i].createInterpolant(null);interpolants[i]=interpolant;interpolant.settings=interpolantSettings;}this._interpolantSettings=interpolantSettings;this._interpolants=interpolants;// bound by the mixer\n// inside: PropertyMixer (managed by the mixer)\nthis._propertyBindings=new Array(nTracks);this._cacheIndex=null;// for the memory manager\nthis._byClipCacheIndex=null;// for the memory manager\nthis._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=LoopRepeat;this._loopCount=-1;// global mixer time when the action is to be started\n// it's set back to 'null' upon start of the action\nthis._startTime=null;// scaled local time of the action\n// gets clamped or wrapped to 0..clip.duration according to loop\nthis.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;// no. of repetitions when looping\nthis.paused=false;// true -> zero effective time scale\nthis.enabled=true;// false -> zero effective weight\nthis.clampWhenFinished=false;// keep feeding the last frame?\nthis.zeroSlopeAtStart=true;// for smooth interpolation w/o separate\nthis.zeroSlopeAtEnd=true;// clips for start, loop and end\n}// State & Scheduling\nplay(){this._mixer._activateAction(this);return this;}stop(){this._mixer._deactivateAction(this);return this.reset();}reset(){this.paused=false;this.enabled=true;this.time=0;// restart clip\nthis._loopCount=-1;// forget previous loops\nthis._startTime=null;// forget scheduling\nreturn this.stopFading().stopWarping();}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);}// return true when play has been called\nisScheduled(){return this._mixer._isActiveAction(this);}startAt(time){this._startTime=time;return this;}setLoop(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this;}// Weight\n// set the weight stopping any scheduled fading\n// although .enabled = false yields an effective weight of zero, this\n// method does *not* change .enabled, because it would be confusing\nsetEffectiveWeight(weight){this.weight=weight;// note: same logic as when updated at runtime\nthis._effectiveWeight=this.enabled?weight:0;return this.stopFading();}// return the weight considering fading and .enabled\ngetEffectiveWeight(){return this._effectiveWeight;}fadeIn(duration){return this._scheduleFading(duration,0,1);}fadeOut(duration){return this._scheduleFading(duration,1,0);}crossFadeFrom(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){const fadeInDuration=this._clip.duration,fadeOutDuration=fadeOutAction._clip.duration,startEndRatio=fadeOutDuration/fadeInDuration,endStartRatio=fadeInDuration/fadeOutDuration;fadeOutAction.warp(1.0,startEndRatio,duration);this.warp(endStartRatio,1.0,duration);}return this;}crossFadeTo(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp);}stopFading(){const weightInterpolant=this._weightInterpolant;if(weightInterpolant!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(weightInterpolant);}return this;}// Time Scale Control\n// set the time scale stopping any scheduled warping\n// although .paused = true yields an effective time scale of zero, this\n// method does *not* change .paused, because it would be confusing\nsetEffectiveTimeScale(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping();}// return the time scale considering warping and .paused\ngetEffectiveTimeScale(){return this._effectiveTimeScale;}setDuration(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping();}syncWith(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping();}halt(duration){return this.warp(this._effectiveTimeScale,0,duration);}warp(startTimeScale,endTimeScale,duration){const mixer=this._mixer,now=mixer.time,timeScale=this.timeScale;let interpolant=this._timeScaleInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._timeScaleInterpolant=interpolant;}const times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;times[1]=now+duration;values[0]=startTimeScale/timeScale;values[1]=endTimeScale/timeScale;return this;}stopWarping(){const timeScaleInterpolant=this._timeScaleInterpolant;if(timeScaleInterpolant!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(timeScaleInterpolant);}return this;}// Object Accessors\ngetMixer(){return this._mixer;}getClip(){return this._clip;}getRoot(){return this._localRoot||this._mixer._root;}// Interna\n_update(time,deltaTime,timeDirection,accuIndex){// called by the mixer\nif(!this.enabled){// call ._updateWeight() to update ._effectiveWeight\nthis._updateWeight(time);return;}const startTime=this._startTime;if(startTime!==null){// check for scheduled start of action\nconst timeRunning=(time-startTime)*timeDirection;if(timeRunning<0||timeDirection===0){return;// yet to come / don't decide when delta = 0\n}// start\nthis._startTime=null;// unschedule\ndeltaTime=timeDirection*timeRunning;}// apply time scale and advance time\ndeltaTime*=this._updateTimeScale(time);const clipTime=this._updateTime(deltaTime);// note: _updateTime may disable the action resulting in\n// an effective weight of 0\nconst weight=this._updateWeight(time);if(weight>0){const interpolants=this._interpolants;const propertyMixers=this._propertyBindings;switch(this.blendMode){case AdditiveAnimationBlendMode:for(let j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulateAdditive(weight);}break;case NormalAnimationBlendMode:default:for(let j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulate(accuIndex,weight);}}}}_updateWeight(time){let weight=0;if(this.enabled){weight=this.weight;const interpolant=this._weightInterpolant;if(interpolant!==null){const interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopFading();if(interpolantValue===0){// faded out, disable\nthis.enabled=false;}}}}this._effectiveWeight=weight;return weight;}_updateTimeScale(time){let timeScale=0;if(!this.paused){timeScale=this.timeScale;const interpolant=this._timeScaleInterpolant;if(interpolant!==null){const interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopWarping();if(timeScale===0){// motion has halted, pause\nthis.paused=true;}else{// warp done - apply final time scale\nthis.timeScale=timeScale;}}}}this._effectiveTimeScale=timeScale;return timeScale;}_updateTime(deltaTime){const duration=this._clip.duration;const loop=this.loop;let time=this.time+deltaTime;let loopCount=this._loopCount;const pingPong=loop===LoopPingPong;if(deltaTime===0){if(loopCount===-1)return time;return pingPong&&(loopCount&1)===1?duration-time:time;}if(loop===LoopOnce){if(loopCount===-1){// just started\nthis._loopCount=0;this._setEndings(true,true,false);}handle_stop:{if(time>=duration){time=duration;}else if(time<0){time=0;}else{this.time=time;break handle_stop;}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime<0?-1:1});}}else{// repetitive Repeat or PingPong\nif(loopCount===-1){// just started\nif(deltaTime>=0){loopCount=0;this._setEndings(true,this.repetitions===0,pingPong);}else{// when looping in reverse direction, the initial\n// transition through zero counts as a repetition,\n// so leave loopCount at -1\nthis._setEndings(this.repetitions===0,true,pingPong);}}if(time>=duration||time<0){// wrap around\nconst loopDelta=Math.floor(time/duration);// signed\ntime-=duration*loopDelta;loopCount+=Math.abs(loopDelta);const pending=this.repetitions-loopCount;if(pending<=0){// have to stop (switch state, clamp time, fire event)\nif(this.clampWhenFinished)this.paused=true;else this.enabled=false;time=deltaTime>0?duration:0;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime>0?1:-1});}else{// keep running\nif(pending===1){// entering the last round\nconst atStart=deltaTime<0;this._setEndings(atStart,!atStart,pingPong);}else{this._setEndings(false,false,pingPong);}this._loopCount=loopCount;this.time=time;this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:loopDelta});}}else{this.time=time;}if(pingPong&&(loopCount&1)===1){// invert time for the \"pong round\"\nreturn duration-time;}}return time;}_setEndings(atStart,atEnd,pingPong){const settings=this._interpolantSettings;if(pingPong){settings.endingStart=ZeroSlopeEnding;settings.endingEnd=ZeroSlopeEnding;}else{// assuming for LoopOnce atStart == atEnd == true\nif(atStart){settings.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingStart=WrapAroundEnding;}if(atEnd){settings.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingEnd=WrapAroundEnding;}}}_scheduleFading(duration,weightNow,weightThen){const mixer=this._mixer,now=mixer.time;let interpolant=this._weightInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._weightInterpolant=interpolant;}const times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;values[0]=weightNow;times[1]=now+duration;values[1]=weightThen;return this;}}class AnimationMixer extends EventDispatcher{constructor(root){super();this._root=root;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1.0;}_bindAction(action,prototypeAction){const root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings,interpolants=action._interpolants,rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName;let bindingsByName=bindingsByRoot[rootUuid];if(bindingsByName===undefined){bindingsByName={};bindingsByRoot[rootUuid]=bindingsByName;}for(let i=0;i!==nTracks;++i){const track=tracks[i],trackName=track.name;let binding=bindingsByName[trackName];if(binding!==undefined){bindings[i]=binding;}else{binding=bindings[i];if(binding!==undefined){// existing binding, make sure the cache knows\nif(binding._cacheIndex===null){++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);}continue;}const path=prototypeAction&&prototypeAction._propertyBindings[i].binding.parsedPath;binding=new PropertyMixer(PropertyBinding.create(root,trackName,path),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);bindings[i]=binding;}interpolants[i].resultBuffer=binding.buffer;}}_activateAction(action){if(!this._isActiveAction(action)){if(action._cacheIndex===null){// this action has been forgotten by the cache, but the user\n// appears to be still using it -> rebind\nconst rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid);}const bindings=action._propertyBindings;// increment reference counts / sort out state\nfor(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(binding.useCount++===0){this._lendBinding(binding);binding.saveOriginalState();}}this._lendAction(action);}}_deactivateAction(action){if(this._isActiveAction(action)){const bindings=action._propertyBindings;// decrement reference counts / sort out state\nfor(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(--binding.useCount===0){binding.restoreOriginalState();this._takeBackBinding(binding);}}this._takeBackAction(action);}}// Memory manager\n_initMemoryManager(){this._actions=[];// 'nActiveActions' followed by inactive ones\nthis._nActiveActions=0;this._actionsByClip={};// inside:\n// {\n// \tknownActions: Array< AnimationAction > - used as prototypes\n// \tactionByRoot: AnimationAction - lookup\n// }\nthis._bindings=[];// 'nActiveBindings' followed by inactive ones\nthis._nActiveBindings=0;this._bindingsByRootAndName={};// inside: Map< name, PropertyMixer >\nthis._controlInterpolants=[];// same game as above\nthis._nActiveControlInterpolants=0;const scope=this;this.stats={actions:{get total(){return scope._actions.length;},get inUse(){return scope._nActiveActions;}},bindings:{get total(){return scope._bindings.length;},get inUse(){return scope._nActiveBindings;}},controlInterpolants:{get total(){return scope._controlInterpolants.length;},get inUse(){return scope._nActiveControlInterpolants;}}};}// Memory management for AnimationAction objects\n_isActiveAction(action){const index=action._cacheIndex;return index!==null&&index<this._nActiveActions;}_addInactiveAction(action,clipUuid,rootUuid){const actions=this._actions,actionsByClip=this._actionsByClip;let actionsForClip=actionsByClip[clipUuid];if(actionsForClip===undefined){actionsForClip={knownActions:[action],actionByRoot:{}};action._byClipCacheIndex=0;actionsByClip[clipUuid]=actionsForClip;}else{const knownActions=actionsForClip.knownActions;action._byClipCacheIndex=knownActions.length;knownActions.push(action);}action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action;}_removeInactiveAction(action){const actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;const clipUuid=action._clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid],knownActionsForClip=actionsForClip.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;const actionByRoot=actionsForClip.actionByRoot,rootUuid=(action._localRoot||this._root).uuid;delete actionByRoot[rootUuid];if(knownActionsForClip.length===0){delete actionsByClip[clipUuid];}this._removeInactiveBindingsForAction(action);}_removeInactiveBindingsForAction(action){const bindings=action._propertyBindings;for(let i=0,n=bindings.length;i!==n;++i){const binding=bindings[i];if(--binding.referenceCount===0){this._removeInactiveBinding(binding);}}}_lendAction(action){// [ active actions |  inactive actions  ]\n// [  active actions >| inactive actions ]\n//                 s        a\n//                  <-swap->\n//                 a        s\nconst actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction;}_takeBackAction(action){// [  active actions  | inactive actions ]\n// [ active actions |< inactive actions  ]\n//        a        s\n//         <-swap->\n//        s        a\nconst actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction;}// Memory management for PropertyMixer objects\n_addInactiveBinding(binding,rootUuid,trackName){const bindingsByRoot=this._bindingsByRootAndName,bindings=this._bindings;let bindingByName=bindingsByRoot[rootUuid];if(bindingByName===undefined){bindingByName={};bindingsByRoot[rootUuid]=bindingByName;}bindingByName[trackName]=binding;binding._cacheIndex=bindings.length;bindings.push(binding);}_removeInactiveBinding(binding){const bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid,trackName=propBinding.path,bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1],cacheIndex=binding._cacheIndex;lastInactiveBinding._cacheIndex=cacheIndex;bindings[cacheIndex]=lastInactiveBinding;bindings.pop();delete bindingByName[trackName];if(Object.keys(bindingByName).length===0){delete bindingsByRoot[rootUuid];}}_lendBinding(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding;}_takeBackBinding(binding){const bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding;}// Memory management of Interpolants for weight and time scale\n_lendControlInterpolant(){const interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++;let interpolant=interpolants[lastActiveIndex];if(interpolant===undefined){interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);interpolant.__cacheIndex=lastActiveIndex;interpolants[lastActiveIndex]=interpolant;}return interpolant;}_takeBackControlInterpolant(interpolant){const interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant;}// return an action for a clip optionally using a custom root target\n// object (this method allocates a lot of dynamic memory in case a\n// previously unknown clip/root combination is specified)\nclipAction(clip,optionalRoot,blendMode){const root=optionalRoot||this._root,rootUuid=root.uuid;let clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip;const clipUuid=clipObject!==null?clipObject.uuid:clip;const actionsForClip=this._actionsByClip[clipUuid];let prototypeAction=null;if(blendMode===undefined){if(clipObject!==null){blendMode=clipObject.blendMode;}else{blendMode=NormalAnimationBlendMode;}}if(actionsForClip!==undefined){const existingAction=actionsForClip.actionByRoot[rootUuid];if(existingAction!==undefined&&existingAction.blendMode===blendMode){return existingAction;}// we know the clip, so we don't have to parse all\n// the bindings again but can just copy\nprototypeAction=actionsForClip.knownActions[0];// also, take the clip from the prototype action\nif(clipObject===null)clipObject=prototypeAction._clip;}// clip must be known when specified via string\nif(clipObject===null)return null;// allocate all resources required to run it\nconst newAction=new AnimationAction(this,clipObject,optionalRoot,blendMode);this._bindAction(newAction,prototypeAction);// and make the action known to the memory manager\nthis._addInactiveAction(newAction,clipUuid,rootUuid);return newAction;}// get an existing action\nexistingAction(clip,optionalRoot){const root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];if(actionsForClip!==undefined){return actionsForClip.actionByRoot[rootUuid]||null;}return null;}// deactivates all previously scheduled actions\nstopAllAction(){const actions=this._actions,nActions=this._nActiveActions;for(let i=nActions-1;i>=0;--i){actions[i].stop();}return this;}// advance the time and update apply the animation\nupdate(deltaTime){deltaTime*=this.timeScale;const actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1;// run active actions\nfor(let i=0;i!==nActions;++i){const action=actions[i];action._update(time,deltaTime,timeDirection,accuIndex);}// update scene graph\nconst bindings=this._bindings,nBindings=this._nActiveBindings;for(let i=0;i!==nBindings;++i){bindings[i].apply(accuIndex);}return this;}// Allows you to seek to a specific time in an animation.\nsetTime(timeInSeconds){this.time=0;// Zero out time attribute for AnimationMixer object;\nfor(let i=0;i<this._actions.length;i++){this._actions[i].time=0;// Zero out time attribute for all associated AnimationAction objects.\n}return this.update(timeInSeconds);// Update used to set exact time. Returns \"this\" AnimationMixer object.\n}// return this mixer's root target object\ngetRoot(){return this._root;}// free all resources specific to a particular clip\nuncacheClip(clip){const actions=this._actions,clipUuid=clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip!==undefined){// note: just calling _removeInactiveAction would mess up the\n// iteration state and also require updating the state we can\n// just throw away\nconst actionsToRemove=actionsForClip.knownActions;for(let i=0,n=actionsToRemove.length;i!==n;++i){const action=actionsToRemove[i];this._deactivateAction(action);const cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action);}delete actionsByClip[clipUuid];}}// free all resources specific to a particular root target object\nuncacheRoot(root){const rootUuid=root.uuid,actionsByClip=this._actionsByClip;for(const clipUuid in actionsByClip){const actionByRoot=actionsByClip[clipUuid].actionByRoot,action=actionByRoot[rootUuid];if(action!==undefined){this._deactivateAction(action);this._removeInactiveAction(action);}}const bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid];if(bindingByName!==undefined){for(const trackName in bindingByName){const binding=bindingByName[trackName];binding.restoreOriginalState();this._removeInactiveBinding(binding);}}}// remove a targeted clip from the cache\nuncacheAction(clip,optionalRoot){const action=this.existingAction(clip,optionalRoot);if(action!==null){this._deactivateAction(action);this._removeInactiveAction(action);}}}AnimationMixer.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Uniform{constructor(value){if(typeof value==='string'){console.warn('THREE.Uniform: Type parameter is no longer needed.');value=arguments[1];}this.value=value;}clone(){return new Uniform(this.value.clone===undefined?this.value:this.value.clone());}}class InstancedInterleavedBuffer extends InterleavedBuffer{constructor(array,stride,meshPerAttribute=1){super(array,stride);this.meshPerAttribute=meshPerAttribute||1;}copy(source){super.copy(source);this.meshPerAttribute=source.meshPerAttribute;return this;}clone(data){const ib=super.clone(data);ib.meshPerAttribute=this.meshPerAttribute;return ib;}toJSON(data){const json=super.toJSON(data);json.isInstancedInterleavedBuffer=true;json.meshPerAttribute=this.meshPerAttribute;return json;}}InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer=true;class GLBufferAttribute{constructor(buffer,type,itemSize,elementSize,count){this.buffer=buffer;this.type=type;this.itemSize=itemSize;this.elementSize=elementSize;this.count=count;this.version=0;}set needsUpdate(value){if(value===true)this.version++;}setBuffer(buffer){this.buffer=buffer;return this;}setType(type,elementSize){this.type=type;this.elementSize=elementSize;return this;}setItemSize(itemSize){this.itemSize=itemSize;return this;}setCount(count){this.count=count;return this;}}GLBufferAttribute.prototype.isGLBufferAttribute=true;class Raycaster{constructor(origin,direction,near=0,far=Infinity){this.ray=new Ray(origin,direction);// direction is assumed to be normalized (for accurate distance calculations)\nthis.near=near;this.far=far;this.camera=null;this.layers=new Layers();this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};}set(origin,direction){// direction is assumed to be normalized (for accurate distance calculations)\nthis.ray.set(origin,direction);}setFromCamera(coords,camera){if(camera&&camera.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(camera.matrixWorld);this.ray.direction.set(coords.x,coords.y,0.5).unproject(camera).sub(this.ray.origin).normalize();this.camera=camera;}else if(camera&&camera.isOrthographicCamera){this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera);// set origin in plane of camera\nthis.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld);this.camera=camera;}else{console.error('THREE.Raycaster: Unsupported camera type: '+camera.type);}}intersectObject(object,recursive=false,intersects=[]){intersectObject(object,this,intersects,recursive);intersects.sort(ascSort);return intersects;}intersectObjects(objects,recursive=false,intersects=[]){for(let i=0,l=objects.length;i<l;i++){intersectObject(objects[i],this,intersects,recursive);}intersects.sort(ascSort);return intersects;}}function ascSort(a,b){return a.distance-b.distance;}function intersectObject(object,raycaster,intersects,recursive){if(object.layers.test(raycaster.layers)){object.raycast(raycaster,intersects);}if(recursive===true){const children=object.children;for(let i=0,l=children.length;i<l;i++){intersectObject(children[i],raycaster,intersects,true);}}}/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */class Spherical{constructor(radius=1,phi=0,theta=0){this.radius=radius;this.phi=phi;// polar angle\nthis.theta=theta;// azimuthal angle\nreturn this;}set(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this;}copy(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this;}// restrict phi to be betwee EPS and PI-EPS\nmakeSafe(){const EPS=0.000001;this.phi=Math.max(EPS,Math.min(Math.PI-EPS,this.phi));return this;}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);if(this.radius===0){this.theta=0;this.phi=0;}else{this.theta=Math.atan2(x,z);this.phi=Math.acos(clamp(y/this.radius,-1,1));}return this;}clone(){return new this.constructor().copy(this);}}/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */class Cylindrical{constructor(radius=1,theta=0,y=0){this.radius=radius;// distance from the origin to a point in the x-z plane\nthis.theta=theta;// counterclockwise angle in the x-z plane measured in radians from the positive z-axis\nthis.y=y;// height above the x-z plane\nreturn this;}set(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this;}copy(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this;}setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this;}clone(){return new this.constructor().copy(this);}}const _vector$4=/*@__PURE__*/new Vector2();class Box2{constructor(min=new Vector2(+Infinity,+Infinity),max=new Vector2(-Infinity,-Infinity)){this.min=min;this.max=max;}set(min,max){this.min.copy(min);this.max.copy(max);return this;}setFromPoints(points){this.makeEmpty();for(let i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;}setFromCenterAndSize(center,size){const halfSize=_vector$4.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}clone(){return new this.constructor().copy(this);}copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}makeEmpty(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this;}isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y;}getCenter(target){if(target===undefined){console.warn('THREE.Box2: .getCenter() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}getSize(target){if(target===undefined){console.warn('THREE.Box2: .getSize() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min);}expandByPoint(point){this.min.min(point);this.max.max(point);return this;}expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?false:true;}containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y;}getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box2: .getParameter() target is now required');target=new Vector2();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y));}intersectsBox(box){// using 4 splitting planes to rule out intersections\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?false:true;}clampPoint(point,target){if(target===undefined){console.warn('THREE.Box2: .clampPoint() target is now required');target=new Vector2();}return target.copy(point).clamp(this.min,this.max);}distanceToPoint(point){const clampedPoint=_vector$4.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}intersect(box){this.min.max(box.min);this.max.min(box.max);return this;}union(box){this.min.min(box.min);this.max.max(box.max);return this;}translate(offset){this.min.add(offset);this.max.add(offset);return this;}equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}Box2.prototype.isBox2=true;const _startP=/*@__PURE__*/new Vector3();const _startEnd=/*@__PURE__*/new Vector3();class Line3{constructor(start=new Vector3(),end=new Vector3()){this.start=start;this.end=end;}set(start,end){this.start.copy(start);this.end.copy(end);return this;}copy(line){this.start.copy(line.start);this.end.copy(line.end);return this;}getCenter(target){if(target===undefined){console.warn('THREE.Line3: .getCenter() target is now required');target=new Vector3();}return target.addVectors(this.start,this.end).multiplyScalar(0.5);}delta(target){if(target===undefined){console.warn('THREE.Line3: .delta() target is now required');target=new Vector3();}return target.subVectors(this.end,this.start);}distanceSq(){return this.start.distanceToSquared(this.end);}distance(){return this.start.distanceTo(this.end);}at(t,target){if(target===undefined){console.warn('THREE.Line3: .at() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);}closestPointToPointParameter(point,clampToLine){_startP.subVectors(point,this.start);_startEnd.subVectors(this.end,this.start);const startEnd2=_startEnd.dot(_startEnd);const startEnd_startP=_startEnd.dot(_startP);let t=startEnd_startP/startEnd2;if(clampToLine){t=clamp(t,0,1);}return t;}closestPointToPoint(point,clampToLine,target){const t=this.closestPointToPointParameter(point,clampToLine);if(target===undefined){console.warn('THREE.Line3: .closestPointToPoint() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);}applyMatrix4(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this;}equals(line){return line.start.equals(this.start)&&line.end.equals(this.end);}clone(){return new this.constructor().copy(this);}}class ImmediateRenderObject extends Object3D{constructor(material){super();this.material=material;this.render=function()/* renderCallback */{};this.hasPositions=false;this.hasNormals=false;this.hasColors=false;this.hasUvs=false;this.positionArray=null;this.normalArray=null;this.colorArray=null;this.uvArray=null;this.count=0;}}ImmediateRenderObject.prototype.isImmediateRenderObject=true;const _vector$3=/*@__PURE__*/new Vector3();class SpotLightHelper extends Object3D{constructor(light,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;const geometry=new BufferGeometry();const positions=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let i=0,j=1,l=32;i<l;i++,j++){const p1=i/l*Math.PI*2;const p2=j/l*Math.PI*2;positions.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1);}geometry.setAttribute('position',new Float32BufferAttribute(positions,3));const material=new LineBasicMaterial({fog:false,toneMapped:false});this.cone=new LineSegments(geometry,material);this.add(this.cone);this.update();}dispose(){this.cone.geometry.dispose();this.cone.material.dispose();}update(){this.light.updateMatrixWorld();const coneLength=this.light.distance?this.light.distance:1000;const coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$3);if(this.color!==undefined){this.cone.material.color.set(this.color);}else{this.cone.material.color.copy(this.light.color);}}}const _vector$2=/*@__PURE__*/new Vector3();const _boneMatrix=/*@__PURE__*/new Matrix4();const _matrixWorldInv=/*@__PURE__*/new Matrix4();class SkeletonHelper extends LineSegments{constructor(object){const bones=getBoneList(object);const geometry=new BufferGeometry();const vertices=[];const colors=[];const color1=new Color(0,0,1);const color2=new Color(0,1,0);for(let i=0;i<bones.length;i++){const bone=bones[i];if(bone.parent&&bone.parent.isBone){vertices.push(0,0,0);vertices.push(0,0,0);colors.push(color1.r,color1.g,color1.b);colors.push(color2.r,color2.g,color2.b);}}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,depthTest:false,depthWrite:false,toneMapped:false,transparent:true});super(geometry,material);this.type='SkeletonHelper';this.isSkeletonHelper=true;this.root=object;this.bones=bones;this.matrix=object.matrixWorld;this.matrixAutoUpdate=false;}updateMatrixWorld(force){const bones=this.bones;const geometry=this.geometry;const position=geometry.getAttribute('position');_matrixWorldInv.copy(this.root.matrixWorld).invert();for(let i=0,j=0;i<bones.length;i++){const bone=bones[i];if(bone.parent&&bone.parent.isBone){_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld);_vector$2.setFromMatrixPosition(_boneMatrix);position.setXYZ(j,_vector$2.x,_vector$2.y,_vector$2.z);_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.parent.matrixWorld);_vector$2.setFromMatrixPosition(_boneMatrix);position.setXYZ(j+1,_vector$2.x,_vector$2.y,_vector$2.z);j+=2;}}geometry.getAttribute('position').needsUpdate=true;super.updateMatrixWorld(force);}}function getBoneList(object){const boneList=[];if(object&&object.isBone){boneList.push(object);}for(let i=0;i<object.children.length;i++){boneList.push.apply(boneList,getBoneList(object.children[i]));}return boneList;}class PointLightHelper extends Mesh{constructor(light,sphereSize,color){const geometry=new SphereGeometry(sphereSize,4,2);const material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});super(geometry,material);this.light=light;this.light.updateMatrixWorld();this.color=color;this.type='PointLightHelper';this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update();/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/}dispose(){this.geometry.dispose();this.material.dispose();}update(){if(this.color!==undefined){this.material.color.set(this.color);}else{this.material.color.copy(this.light.color);}/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/}}const _vector$1=/*@__PURE__*/new Vector3();const _color1=/*@__PURE__*/new Color();const _color2=/*@__PURE__*/new Color();class HemisphereLightHelper extends Object3D{constructor(light,size,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;const geometry=new OctahedronGeometry(size);geometry.rotateY(Math.PI*0.5);this.material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});if(this.color===undefined)this.material.vertexColors=true;const position=geometry.getAttribute('position');const colors=new Float32Array(position.count*3);geometry.setAttribute('color',new BufferAttribute(colors,3));this.add(new Mesh(geometry,this.material));this.update();}dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose();}update(){const mesh=this.children[0];if(this.color!==undefined){this.material.color.set(this.color);}else{const colors=mesh.geometry.getAttribute('color');_color1.copy(this.light.color);_color2.copy(this.light.groundColor);for(let i=0,l=colors.count;i<l;i++){const color=i<l/2?_color1:_color2;colors.setXYZ(i,color.r,color.g,color.b);}colors.needsUpdate=true;}mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());}}class GridHelper extends LineSegments{constructor(size=10,divisions=10,color1=0x444444,color2=0x888888){color1=new Color(color1);color2=new Color(color2);const center=divisions/2;const step=size/divisions;const halfSize=size/2;const vertices=[],colors=[];for(let i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){vertices.push(-halfSize,0,k,halfSize,0,k);vertices.push(k,0,-halfSize,k,0,halfSize);const color=i===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;}const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='GridHelper';}}class PolarGridHelper extends LineSegments{constructor(radius=10,radials=16,circles=8,divisions=64,color1=0x444444,color2=0x888888){color1=new Color(color1);color2=new Color(color2);const vertices=[];const colors=[];// create the radials\nfor(let i=0;i<=radials;i++){const v=i/radials*(Math.PI*2);const x=Math.sin(v)*radius;const z=Math.cos(v)*radius;vertices.push(0,0,0);vertices.push(x,0,z);const color=i&1?color1:color2;colors.push(color.r,color.g,color.b);colors.push(color.r,color.g,color.b);}// create the circles\nfor(let i=0;i<=circles;i++){const color=i&1?color1:color2;const r=radius-radius/circles*i;for(let j=0;j<divisions;j++){// first vertex\nlet v=j/divisions*(Math.PI*2);let x=Math.sin(v)*r;let z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);// second vertex\nv=(j+1)/divisions*(Math.PI*2);x=Math.sin(v)*r;z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);}}const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='PolarGridHelper';}}const _v1=/*@__PURE__*/new Vector3();const _v2=/*@__PURE__*/new Vector3();const _v3=/*@__PURE__*/new Vector3();class DirectionalLightHelper extends Object3D{constructor(light,size,color){super();this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;if(size===undefined)size=1;let geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));const material=new LineBasicMaterial({fog:false,toneMapped:false});this.lightPlane=new Line(geometry,material);this.add(this.lightPlane);geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,0,1],3));this.targetLine=new Line(geometry,material);this.add(this.targetLine);this.update();}dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();}update(){_v1.setFromMatrixPosition(this.light.matrixWorld);_v2.setFromMatrixPosition(this.light.target.matrixWorld);_v3.subVectors(_v2,_v1);this.lightPlane.lookAt(_v2);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color);}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color);}this.targetLine.lookAt(_v2);this.targetLine.scale.z=_v3.length();}}const _vector=/*@__PURE__*/new Vector3();const _camera=/*@__PURE__*/new Camera();/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */class CameraHelper extends LineSegments{constructor(camera){const geometry=new BufferGeometry();const material=new LineBasicMaterial({color:0xffffff,vertexColors:true,toneMapped:false});const vertices=[];const colors=[];const pointMap={};// colors\nconst colorFrustum=new Color(0xffaa00);const colorCone=new Color(0xff0000);const colorUp=new Color(0x00aaff);const colorTarget=new Color(0xffffff);const colorCross=new Color(0x333333);// near\naddLine('n1','n2',colorFrustum);addLine('n2','n4',colorFrustum);addLine('n4','n3',colorFrustum);addLine('n3','n1',colorFrustum);// far\naddLine('f1','f2',colorFrustum);addLine('f2','f4',colorFrustum);addLine('f4','f3',colorFrustum);addLine('f3','f1',colorFrustum);// sides\naddLine('n1','f1',colorFrustum);addLine('n2','f2',colorFrustum);addLine('n3','f3',colorFrustum);addLine('n4','f4',colorFrustum);// cone\naddLine('p','n1',colorCone);addLine('p','n2',colorCone);addLine('p','n3',colorCone);addLine('p','n4',colorCone);// up\naddLine('u1','u2',colorUp);addLine('u2','u3',colorUp);addLine('u3','u1',colorUp);// target\naddLine('c','t',colorTarget);addLine('p','c',colorCross);// cross\naddLine('cn1','cn2',colorCross);addLine('cn3','cn4',colorCross);addLine('cf1','cf2',colorCross);addLine('cf3','cf4',colorCross);function addLine(a,b,color){addPoint(a,color);addPoint(b,color);}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,color.g,color.b);if(pointMap[id]===undefined){pointMap[id]=[];}pointMap[id].push(vertices.length/3-1);}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));super(geometry,material);this.type='CameraHelper';this.camera=camera;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=camera.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=pointMap;this.update();}update(){const geometry=this.geometry;const pointMap=this.pointMap;const w=1,h=1;// we need just camera projection matrix inverse\n// world matrix must be identity\n_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);// center / target\nsetPoint('c',pointMap,geometry,_camera,0,0,-1);setPoint('t',pointMap,geometry,_camera,0,0,1);// near\nsetPoint('n1',pointMap,geometry,_camera,-w,-h,-1);setPoint('n2',pointMap,geometry,_camera,w,-h,-1);setPoint('n3',pointMap,geometry,_camera,-w,h,-1);setPoint('n4',pointMap,geometry,_camera,w,h,-1);// far\nsetPoint('f1',pointMap,geometry,_camera,-w,-h,1);setPoint('f2',pointMap,geometry,_camera,w,-h,1);setPoint('f3',pointMap,geometry,_camera,-w,h,1);setPoint('f4',pointMap,geometry,_camera,w,h,1);// up\nsetPoint('u1',pointMap,geometry,_camera,w*0.7,h*1.1,-1);setPoint('u2',pointMap,geometry,_camera,-w*0.7,h*1.1,-1);setPoint('u3',pointMap,geometry,_camera,0,h*2,-1);// cross\nsetPoint('cf1',pointMap,geometry,_camera,-w,0,1);setPoint('cf2',pointMap,geometry,_camera,w,0,1);setPoint('cf3',pointMap,geometry,_camera,0,-h,1);setPoint('cf4',pointMap,geometry,_camera,0,h,1);setPoint('cn1',pointMap,geometry,_camera,-w,0,-1);setPoint('cn2',pointMap,geometry,_camera,w,0,-1);setPoint('cn3',pointMap,geometry,_camera,0,-h,-1);setPoint('cn4',pointMap,geometry,_camera,0,h,-1);geometry.getAttribute('position').needsUpdate=true;}dispose(){this.geometry.dispose();this.material.dispose();}}function setPoint(point,pointMap,geometry,camera,x,y,z){_vector.set(x,y,z).unproject(camera);const points=pointMap[point];if(points!==undefined){const position=geometry.getAttribute('position');for(let i=0,l=points.length;i<l;i++){position.setXYZ(points[i],_vector.x,_vector.y,_vector.z);}}}const _box=/*@__PURE__*/new Box3();class BoxHelper extends LineSegments{constructor(object,color=0xffff00){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const positions=new Float32Array(8*3);const geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new BufferAttribute(positions,3));super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.object=object;this.type='BoxHelper';this.matrixAutoUpdate=false;this.update();}update(object){if(object!==undefined){console.warn('THREE.BoxHelper: .update() has no longer arguments.');}if(this.object!==undefined){_box.setFromObject(this.object);}if(_box.isEmpty())return;const min=_box.min;const max=_box.max;/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/const position=this.geometry.attributes.position;const array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=min.x;array[4]=max.y;array[5]=max.z;array[6]=min.x;array[7]=min.y;array[8]=max.z;array[9]=max.x;array[10]=min.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=min.z;array[15]=min.x;array[16]=max.y;array[17]=min.z;array[18]=min.x;array[19]=min.y;array[20]=min.z;array[21]=max.x;array[22]=min.y;array[23]=min.z;position.needsUpdate=true;this.geometry.computeBoundingSphere();}setFromObject(object){this.object=object;this.update();return this;}copy(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;return this;}}class Box3Helper extends LineSegments{constructor(box,color=0xffff00){const indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const positions=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];const geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new Float32BufferAttribute(positions,3));super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.box=box;this.type='Box3Helper';this.geometry.computeBoundingSphere();}updateMatrixWorld(force){const box=this.box;if(box.isEmpty())return;box.getCenter(this.position);box.getSize(this.scale);this.scale.multiplyScalar(0.5);super.updateMatrixWorld(force);}}class PlaneHelper extends Line{constructor(plane,size=1,hex=0xffff00){const color=hex;const positions=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(positions,3));geometry.computeBoundingSphere();super(geometry,new LineBasicMaterial({color:color,toneMapped:false}));this.type='PlaneHelper';this.plane=plane;this.size=size;const positions2=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];const geometry2=new BufferGeometry();geometry2.setAttribute('position',new Float32BufferAttribute(positions2,3));geometry2.computeBoundingSphere();this.add(new Mesh(geometry2,new MeshBasicMaterial({color:color,opacity:0.2,transparent:true,depthWrite:false,toneMapped:false})));}updateMatrixWorld(force){let scale=-this.plane.constant;if(Math.abs(scale)<1e-8)scale=1e-8;// sign does not matter\nthis.scale.set(0.5*this.size,0.5*this.size,scale);this.children[0].material.side=scale<0?BackSide:FrontSide;// renderer flips side when determinant < 0; flipping not wanted here\nthis.lookAt(this.plane.normal);super.updateMatrixWorld(force);}}const _axis=/*@__PURE__*/new Vector3();let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{// dir is assumed to be normalized\nconstructor(dir=new Vector3(0,0,1),origin=new Vector3(0,0,0),length=1,color=0xffff00,headLength=length*0.2,headWidth=headLength*0.2){super();this.type='ArrowHelper';if(_lineGeometry===undefined){_lineGeometry=new BufferGeometry();_lineGeometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,1,0],3));_coneGeometry=new CylinderGeometry(0,0.5,1,5,1);_coneGeometry.translate(0,-0.5,0);}this.position.copy(origin);this.line=new Line(_lineGeometry,new LineBasicMaterial({color:color,toneMapped:false}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:color,toneMapped:false}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth);}setDirection(dir){// dir is assumed to be normalized\nif(dir.y>0.99999){this.quaternion.set(0,0,0,1);}else if(dir.y<-0.99999){this.quaternion.set(1,0,0,0);}else{_axis.set(dir.z,0,-dir.x).normalize();const radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(_axis,radians);}}setLength(length,headLength=length*0.2,headWidth=headLength*0.2){this.line.scale.set(1,Math.max(0.0001,length-headLength),1);// see #17458\nthis.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix();}setColor(color){this.line.material.color.set(color);this.cone.material.color.set(color);}copy(source){super.copy(source,false);this.line.copy(source.line);this.cone.copy(source.cone);return this;}}class AxesHelper extends LineSegments{constructor(size=1){const vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];const colors=[1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1];const geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));const material=new LineBasicMaterial({vertexColors:true,toneMapped:false});super(geometry,material);this.type='AxesHelper';}dispose(){this.geometry.dispose();this.material.dispose();}}const _floatView=new Float32Array(1);const _int32View=new Int32Array(_floatView.buffer);class DataUtils{// Converts float32 to float16 (stored as uint16 value).\nstatic toHalfFloat(val){// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */_floatView[0]=val;const x=_int32View[0];let bits=x>>16&0x8000;/* Get the sign */let m=x>>12&0x07ff;/* Keep one extra bit for rounding */const e=x>>23&0xff;/* Using int is faster here */ /* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */if(e<103)return bits;/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */if(e>142){bits|=0x7c00;/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */bits|=(e==255?0:1)&&x&0x007fffff;return bits;}/* If exponent underflows but not too much, return a denormal */if(e<113){m|=0x0800;/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */bits|=(m>>114-e)+(m>>113-e&1);return bits;}bits|=e-112<<10|m>>1;/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */bits+=m&1;return bits;}}const LOD_MIN=4;const LOD_MAX=8;const SIZE_MAX=Math.pow(2,LOD_MAX);// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA=[0.125,0.215,0.35,0.446,0.526,0.582];const TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length;// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES=20;const ENCODINGS={[LinearEncoding]:0,[sRGBEncoding]:1,[RGBEEncoding]:2,[RGBM7Encoding]:3,[RGBM16Encoding]:4,[RGBDEncoding]:5,[GammaEncoding]:6};const backgroundMaterial=new MeshBasicMaterial({side:BackSide,depthWrite:false,depthTest:false});const backgroundBox=new Mesh(new BoxGeometry(),backgroundMaterial);const _flatCamera=/*@__PURE__*/new OrthographicCamera();const{_lodPlanes,_sizeLods,_sigmas}=/*@__PURE__*/_createPlanes();const _clearColor=/*@__PURE__*/new Color();let _oldTarget=null;// Golden Ratio\nconst PHI=(1+Math.sqrt(5))/2;const INV_PHI=1/PHI;// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections=[/*@__PURE__*/new Vector3(1,1,1),/*@__PURE__*/new Vector3(-1,1,1),/*@__PURE__*/new Vector3(1,1,-1),/*@__PURE__*/new Vector3(-1,1,-1),/*@__PURE__*/new Vector3(0,PHI,INV_PHI),/*@__PURE__*/new Vector3(0,PHI,-INV_PHI),/*@__PURE__*/new Vector3(INV_PHI,0,PHI),/*@__PURE__*/new Vector3(-INV_PHI,0,PHI),/*@__PURE__*/new Vector3(PHI,INV_PHI,0),/*@__PURE__*/new Vector3(-PHI,INV_PHI,0)];/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/function convertLinearToRGBE(color){const maxComponent=Math.max(color.r,color.g,color.b);const fExp=Math.min(Math.max(Math.ceil(Math.log2(maxComponent)),-128.0),127.0);color.multiplyScalar(Math.pow(2.0,-fExp));const alpha=(fExp+128.0)/255.0;return alpha;}class PMREMGenerator{constructor(renderer){this._renderer=renderer;this._pingPongRenderTarget=null;this._blurMaterial=_getBlurShader(MAX_SAMPLES);this._equirectShader=null;this._cubemapShader=null;this._compileMaterial(this._blurMaterial);}/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */fromScene(scene,sigma=0,near=0.1,far=100){_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=this._allocateTargets();this._sceneToCubeUV(scene,near,far,cubeUVRenderTarget);if(sigma>0){this._blur(cubeUVRenderTarget,0,0,sigma);}this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */fromEquirectangular(equirectangular){return this._fromTexture(equirectangular);}/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */fromCubemap(cubemap){return this._fromTexture(cubemap);}/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */compileCubemapShader(){if(this._cubemapShader===null){this._cubemapShader=_getCubemapShader();this._compileMaterial(this._cubemapShader);}}/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */compileEquirectangularShader(){if(this._equirectShader===null){this._equirectShader=_getEquirectShader();this._compileMaterial(this._equirectShader);}}/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */dispose(){this._blurMaterial.dispose();if(this._cubemapShader!==null)this._cubemapShader.dispose();if(this._equirectShader!==null)this._equirectShader.dispose();for(let i=0;i<_lodPlanes.length;i++){_lodPlanes[i].dispose();}}// private interface\n_cleanup(outputTarget){this._pingPongRenderTarget.dispose();this._renderer.setRenderTarget(_oldTarget);outputTarget.scissorTest=false;_setViewport(outputTarget,0,0,outputTarget.width,outputTarget.height);}_fromTexture(texture){_oldTarget=this._renderer.getRenderTarget();const cubeUVRenderTarget=this._allocateTargets(texture);this._textureToCubeUV(texture,cubeUVRenderTarget);this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}_allocateTargets(texture){// warning: null texture is valid\nconst params={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:false,type:UnsignedByteType,format:RGBEFormat,encoding:_isLDR(texture)?texture.encoding:RGBEEncoding,depthBuffer:false};const cubeUVRenderTarget=_createRenderTarget(params);cubeUVRenderTarget.depthBuffer=texture?false:true;this._pingPongRenderTarget=_createRenderTarget(params);return cubeUVRenderTarget;}_compileMaterial(material){const tmpMesh=new Mesh(_lodPlanes[0],material);this._renderer.compile(tmpMesh,_flatCamera);}_sceneToCubeUV(scene,near,far,cubeUVRenderTarget){const fov=90;const aspect=1;const cubeCamera=new PerspectiveCamera(fov,aspect,near,far);const upSign=[1,-1,1,1,1,1];const forwardSign=[1,1,1,-1,-1,-1];const renderer=this._renderer;const originalAutoClear=renderer.autoClear;const outputEncoding=renderer.outputEncoding;const toneMapping=renderer.toneMapping;renderer.getClearColor(_clearColor);renderer.toneMapping=NoToneMapping;renderer.outputEncoding=LinearEncoding;renderer.autoClear=false;let useSolidColor=false;const background=scene.background;if(background){if(background.isColor){backgroundMaterial.color.copy(background).convertSRGBToLinear();scene.background=null;const alpha=convertLinearToRGBE(backgroundMaterial.color);backgroundMaterial.opacity=alpha;useSolidColor=true;}}else{backgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();const alpha=convertLinearToRGBE(backgroundMaterial.color);backgroundMaterial.opacity=alpha;useSolidColor=true;}for(let i=0;i<6;i++){const col=i%3;if(col==0){cubeCamera.up.set(0,upSign[i],0);cubeCamera.lookAt(forwardSign[i],0,0);}else if(col==1){cubeCamera.up.set(0,0,upSign[i]);cubeCamera.lookAt(0,forwardSign[i],0);}else{cubeCamera.up.set(0,upSign[i],0);cubeCamera.lookAt(0,0,forwardSign[i]);}_setViewport(cubeUVRenderTarget,col*SIZE_MAX,i>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);if(useSolidColor){renderer.render(backgroundBox,cubeCamera);}renderer.render(scene,cubeCamera);}renderer.toneMapping=toneMapping;renderer.outputEncoding=outputEncoding;renderer.autoClear=originalAutoClear;}_textureToCubeUV(texture,cubeUVRenderTarget){const renderer=this._renderer;if(texture.isCubeTexture){if(this._cubemapShader==null){this._cubemapShader=_getCubemapShader();}}else{if(this._equirectShader==null){this._equirectShader=_getEquirectShader();}}const material=texture.isCubeTexture?this._cubemapShader:this._equirectShader;const mesh=new Mesh(_lodPlanes[0],material);const uniforms=material.uniforms;uniforms['envMap'].value=texture;if(!texture.isCubeTexture){uniforms['texelSize'].value.set(1.0/texture.image.width,1.0/texture.image.height);}uniforms['inputEncoding'].value=ENCODINGS[texture.encoding];uniforms['outputEncoding'].value=ENCODINGS[cubeUVRenderTarget.texture.encoding];_setViewport(cubeUVRenderTarget,0,0,3*SIZE_MAX,2*SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);renderer.render(mesh,_flatCamera);}_applyPMREM(cubeUVRenderTarget){const renderer=this._renderer;const autoClear=renderer.autoClear;renderer.autoClear=false;for(let i=1;i<TOTAL_LODS;i++){const sigma=Math.sqrt(_sigmas[i]*_sigmas[i]-_sigmas[i-1]*_sigmas[i-1]);const poleAxis=_axisDirections[(i-1)%_axisDirections.length];this._blur(cubeUVRenderTarget,i-1,i,sigma,poleAxis);}renderer.autoClear=autoClear;}/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */_blur(cubeUVRenderTarget,lodIn,lodOut,sigma,poleAxis){const pingPongRenderTarget=this._pingPongRenderTarget;this._halfBlur(cubeUVRenderTarget,pingPongRenderTarget,lodIn,lodOut,sigma,'latitudinal',poleAxis);this._halfBlur(pingPongRenderTarget,cubeUVRenderTarget,lodOut,lodOut,sigma,'longitudinal',poleAxis);}_halfBlur(targetIn,targetOut,lodIn,lodOut,sigmaRadians,direction,poleAxis){const renderer=this._renderer;const blurMaterial=this._blurMaterial;if(direction!=='latitudinal'&&direction!=='longitudinal'){console.error('blur direction must be either latitudinal or longitudinal!');}// Number of standard deviations at which to cut off the discrete approximation.\nconst STANDARD_DEVIATIONS=3;const blurMesh=new Mesh(_lodPlanes[lodOut],blurMaterial);const blurUniforms=blurMaterial.uniforms;const pixels=_sizeLods[lodIn]-1;const radiansPerPixel=isFinite(sigmaRadians)?Math.PI/(2*pixels):2*Math.PI/(2*MAX_SAMPLES-1);const sigmaPixels=sigmaRadians/radiansPerPixel;const samples=isFinite(sigmaRadians)?1+Math.floor(STANDARD_DEVIATIONS*sigmaPixels):MAX_SAMPLES;if(samples>MAX_SAMPLES){console.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);}const weights=[];let sum=0;for(let i=0;i<MAX_SAMPLES;++i){const x=i/sigmaPixels;const weight=Math.exp(-x*x/2);weights.push(weight);if(i==0){sum+=weight;}else if(i<samples){sum+=2*weight;}}for(let i=0;i<weights.length;i++){weights[i]=weights[i]/sum;}blurUniforms['envMap'].value=targetIn.texture;blurUniforms['samples'].value=samples;blurUniforms['weights'].value=weights;blurUniforms['latitudinal'].value=direction==='latitudinal';if(poleAxis){blurUniforms['poleAxis'].value=poleAxis;}blurUniforms['dTheta'].value=radiansPerPixel;blurUniforms['mipInt'].value=LOD_MAX-lodIn;blurUniforms['inputEncoding'].value=ENCODINGS[targetIn.texture.encoding];blurUniforms['outputEncoding'].value=ENCODINGS[targetIn.texture.encoding];const outputSize=_sizeLods[lodOut];const x=3*Math.max(0,SIZE_MAX-2*outputSize);const y=(lodOut===0?0:2*SIZE_MAX)+2*outputSize*(lodOut>LOD_MAX-LOD_MIN?lodOut-LOD_MAX+LOD_MIN:0);_setViewport(targetOut,x,y,3*outputSize,2*outputSize);renderer.setRenderTarget(targetOut);renderer.render(blurMesh,_flatCamera);}}function _isLDR(texture){if(texture===undefined||texture.type!==UnsignedByteType)return false;return texture.encoding===LinearEncoding||texture.encoding===sRGBEncoding||texture.encoding===GammaEncoding;}function _createPlanes(){const _lodPlanes=[];const _sizeLods=[];const _sigmas=[];let lod=LOD_MAX;for(let i=0;i<TOTAL_LODS;i++){const sizeLod=Math.pow(2,lod);_sizeLods.push(sizeLod);let sigma=1.0/sizeLod;if(i>LOD_MAX-LOD_MIN){sigma=EXTRA_LOD_SIGMA[i-LOD_MAX+LOD_MIN-1];}else if(i==0){sigma=0;}_sigmas.push(sigma);const texelSize=1.0/(sizeLod-1);const min=-texelSize/2;const max=1+texelSize/2;const uv1=[min,min,max,min,max,max,min,min,max,max,min,max];const cubeFaces=6;const vertices=6;const positionSize=3;const uvSize=2;const faceIndexSize=1;const position=new Float32Array(positionSize*vertices*cubeFaces);const uv=new Float32Array(uvSize*vertices*cubeFaces);const faceIndex=new Float32Array(faceIndexSize*vertices*cubeFaces);for(let face=0;face<cubeFaces;face++){const x=face%3*2/3-1;const y=face>2?0:-1;const coordinates=[x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0];position.set(coordinates,positionSize*vertices*face);uv.set(uv1,uvSize*vertices*face);const fill=[face,face,face,face,face,face];faceIndex.set(fill,faceIndexSize*vertices*face);}const planes=new BufferGeometry();planes.setAttribute('position',new BufferAttribute(position,positionSize));planes.setAttribute('uv',new BufferAttribute(uv,uvSize));planes.setAttribute('faceIndex',new BufferAttribute(faceIndex,faceIndexSize));_lodPlanes.push(planes);if(lod>LOD_MIN){lod--;}}return{_lodPlanes,_sizeLods,_sigmas};}function _createRenderTarget(params){const cubeUVRenderTarget=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,params);cubeUVRenderTarget.texture.mapping=CubeUVReflectionMapping;cubeUVRenderTarget.texture.name='PMREM.cubeUv';cubeUVRenderTarget.scissorTest=true;return cubeUVRenderTarget;}function _setViewport(target,x,y,width,height){target.viewport.set(x,y,width,height);target.scissor.set(x,y,width,height);}function _getBlurShader(maxSamples){const weights=new Float32Array(maxSamples);const poleAxis=new Vector3(0,1,0);const shaderMaterial=new RawShaderMaterial({name:'SphericalGaussianBlur',defines:{'n':maxSamples},uniforms:{'envMap':{value:null},'samples':{value:1},'weights':{value:weights},'latitudinal':{value:false},'dTheta':{value:0},'mipInt':{value:0},'poleAxis':{value:poleAxis},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getEquirectShader(){const texelSize=new Vector2(1,1);const shaderMaterial=new RawShaderMaterial({name:'EquirectangularToCubeUV',uniforms:{'envMap':{value:null},'texelSize':{value:texelSize},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCubemapShader(){const shaderMaterial=new RawShaderMaterial({name:'CubemapToCubeUV',uniforms:{'envMap':{value:null},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCommonVertexShader(){return(/* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`);}function _getEncodings(){return(/* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`);}const LineStrip=0;const LinePieces=1;const NoColors=0;const FaceColors=1;const VertexColors=2;function MeshFaceMaterial(materials){console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');return materials;}function MultiMaterial(materials=[]){console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');materials.isMultiMaterial=true;materials.materials=materials;materials.clone=function(){return materials.slice();};return materials;}function PointCloud(geometry,material){console.warn('THREE.PointCloud has been renamed to THREE.Points.');return new Points(geometry,material);}function Particle(material){console.warn('THREE.Particle has been renamed to THREE.Sprite.');return new Sprite(material);}function ParticleSystem(geometry,material){console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');return new Points(geometry,material);}function PointCloudMaterial(parameters){console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleBasicMaterial(parameters){console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleSystemMaterial(parameters){console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function Vertex(x,y,z){console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');return new Vector3(x,y,z);}//\nfunction DynamicBufferAttribute(array,itemSize){console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');return new BufferAttribute(array,itemSize).setUsage(DynamicDrawUsage);}function Int8Attribute(array,itemSize){console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');return new Int8BufferAttribute(array,itemSize);}function Uint8Attribute(array,itemSize){console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');return new Uint8BufferAttribute(array,itemSize);}function Uint8ClampedAttribute(array,itemSize){console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');return new Uint8ClampedBufferAttribute(array,itemSize);}function Int16Attribute(array,itemSize){console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');return new Int16BufferAttribute(array,itemSize);}function Uint16Attribute(array,itemSize){console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');return new Uint16BufferAttribute(array,itemSize);}function Int32Attribute(array,itemSize){console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');return new Int32BufferAttribute(array,itemSize);}function Uint32Attribute(array,itemSize){console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');return new Uint32BufferAttribute(array,itemSize);}function Float32Attribute(array,itemSize){console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');return new Float32BufferAttribute(array,itemSize);}function Float64Attribute(array,itemSize){console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');return new Float64BufferAttribute(array,itemSize);}//\nCurve.create=function(construct,getPoint){console.log('THREE.Curve.create() has been deprecated');construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct;};//\nPath.prototype.fromPoints=function(points){console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');return this.setFromPoints(points);};//\nfunction AxisHelper(size){console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');return new AxesHelper(size);}function BoundingBoxHelper(object,color){console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');return new BoxHelper(object,color);}function EdgesHelper(object,hex){console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');return new LineSegments(new EdgesGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}GridHelper.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');};SkeletonHelper.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.');};function WireframeHelper(object,hex){console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');return new LineSegments(new WireframeGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}//\nLoader.prototype.extractUrlBase=function(url){console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');return LoaderUtils.extractUrlBase(url);};Loader.Handlers={add:function()/* regex, loader */{console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');},get:function()/* file */{console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');}};function XHRLoader(manager){console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');return new FileLoader(manager);}function BinaryTextureLoader(manager){console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');return new DataTextureLoader(manager);}//\nBox2.prototype.center=function(optionalTarget){console.warn('THREE.Box2: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Box2.prototype.empty=function(){console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');return this.isEmpty();};Box2.prototype.isIntersectionBox=function(box){console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Box2.prototype.size=function(optionalTarget){console.warn('THREE.Box2: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);};//\nBox3.prototype.center=function(optionalTarget){console.warn('THREE.Box3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Box3.prototype.empty=function(){console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');return this.isEmpty();};Box3.prototype.isIntersectionBox=function(box){console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Box3.prototype.isIntersectionSphere=function(sphere){console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);};Box3.prototype.size=function(optionalTarget){console.warn('THREE.Box3: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);};//\nSphere.prototype.empty=function(){console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');return this.isEmpty();};//\nFrustum.prototype.setFromMatrix=function(m){console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');return this.setFromProjectionMatrix(m);};//\nLine3.prototype.center=function(optionalTarget){console.warn('THREE.Line3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};//\nMatrix3.prototype.flattenToArrayOffset=function(array,offset){console.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);};Matrix3.prototype.multiplyVector3=function(vector){console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return vector.applyMatrix3(this);};Matrix3.prototype.multiplyVector3Array=function()/* a */{console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');};Matrix3.prototype.applyToBufferAttribute=function(attribute){console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');return attribute.applyMatrix3(this);};Matrix3.prototype.applyToVector3Array=function()/* array, offset, length */{console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');};Matrix3.prototype.getInverse=function(matrix){console.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();};//\nMatrix4.prototype.extractPosition=function(m){console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(m);};Matrix4.prototype.flattenToArrayOffset=function(array,offset){console.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);};Matrix4.prototype.getPosition=function(){console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');return new Vector3().setFromMatrixColumn(this,3);};Matrix4.prototype.setRotationFromQuaternion=function(q){console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');return this.makeRotationFromQuaternion(q);};Matrix4.prototype.multiplyToArray=function(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');};Matrix4.prototype.multiplyVector3=function(vector){console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.multiplyVector4=function(vector){console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.multiplyVector3Array=function()/* a */{console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');};Matrix4.prototype.rotateAxis=function(v){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');v.transformDirection(this);};Matrix4.prototype.crossVector=function(vector){console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.translate=function(){console.error('THREE.Matrix4: .translate() has been removed.');};Matrix4.prototype.rotateX=function(){console.error('THREE.Matrix4: .rotateX() has been removed.');};Matrix4.prototype.rotateY=function(){console.error('THREE.Matrix4: .rotateY() has been removed.');};Matrix4.prototype.rotateZ=function(){console.error('THREE.Matrix4: .rotateZ() has been removed.');};Matrix4.prototype.rotateByAxis=function(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.');};Matrix4.prototype.applyToBufferAttribute=function(attribute){console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');return attribute.applyMatrix4(this);};Matrix4.prototype.applyToVector3Array=function()/* array, offset, length */{console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');};Matrix4.prototype.makeFrustum=function(left,right,bottom,top,near,far){console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');return this.makePerspective(left,right,top,bottom,near,far);};Matrix4.prototype.getInverse=function(matrix){console.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();};//\nPlane.prototype.isIntersectionLine=function(line){console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');return this.intersectsLine(line);};//\nQuaternion.prototype.multiplyVector3=function(vector){console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return vector.applyQuaternion(this);};Quaternion.prototype.inverse=function(){console.warn('THREE.Quaternion: .inverse() has been renamed to invert().');return this.invert();};//\nRay.prototype.isIntersectionBox=function(box){console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Ray.prototype.isIntersectionPlane=function(plane){console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');return this.intersectsPlane(plane);};Ray.prototype.isIntersectionSphere=function(sphere){console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);};//\nTriangle.prototype.area=function(){console.warn('THREE.Triangle: .area() has been renamed to .getArea().');return this.getArea();};Triangle.prototype.barycoordFromPoint=function(point,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return this.getBarycoord(point,target);};Triangle.prototype.midpoint=function(target){console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');return this.getMidpoint(target);};Triangle.prototypenormal=function(target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return this.getNormal(target);};Triangle.prototype.plane=function(target){console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');return this.getPlane(target);};Triangle.barycoordFromPoint=function(point,a,b,c,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return Triangle.getBarycoord(point,a,b,c,target);};Triangle.normal=function(a,b,c,target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return Triangle.getNormal(a,b,c,target);};//\nShape.prototype.extractAllPoints=function(divisions){console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');return this.extractPoints(divisions);};Shape.prototype.extrude=function(options){console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');return new ExtrudeGeometry(this,options);};Shape.prototype.makeGeometry=function(options){console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');return new ShapeGeometry(this,options);};//\nVector2.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector2.prototype.distanceToManhattan=function(v){console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);};Vector2.prototype.lengthManhattan=function(){console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nVector3.prototype.setEulerFromRotationMatrix=function(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');};Vector3.prototype.setEulerFromQuaternion=function(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');};Vector3.prototype.getPositionFromMatrix=function(m){console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');return this.setFromMatrixPosition(m);};Vector3.prototype.getScaleFromMatrix=function(m){console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');return this.setFromMatrixScale(m);};Vector3.prototype.getColumnFromMatrix=function(index,matrix){console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');return this.setFromMatrixColumn(matrix,index);};Vector3.prototype.applyProjection=function(m){console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');return this.applyMatrix4(m);};Vector3.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector3.prototype.distanceToManhattan=function(v){console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);};Vector3.prototype.lengthManhattan=function(){console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nVector4.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector4.prototype.lengthManhattan=function(){console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nObject3D.prototype.getChildByName=function(name){console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(name);};Object3D.prototype.renderDepth=function(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');};Object3D.prototype.translate=function(distance,axis){console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');return this.translateOnAxis(axis,distance);};Object3D.prototype.getWorldRotation=function(){console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');};Object3D.prototype.applyMatrix=function(matrix){console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);};Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');return this.rotation.order;},set:function(value){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');this.rotation.order=value;}},useQuaternion:{get:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');},set:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');}}});Mesh.prototype.setDrawMode=function(){console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');};Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');return TrianglesDrawMode;},set:function(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');}}});SkinnedMesh.prototype.initBones=function(){console.error('THREE.SkinnedMesh: initBones() has been removed.');};//\nPerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn('THREE.PerspectiveCamera.setLens is deprecated. '+'Use .setFocalLength and .filmGauge for a photographic setup.');if(filmGauge!==undefined)this.filmGauge=filmGauge;this.setFocalLength(focalLength);};//\nObject.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn('THREE.Light: .onlyShadow has been removed.');}},shadowCameraFov:{set:function(value){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');this.shadow.camera.fov=value;}},shadowCameraLeft:{set:function(value){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');this.shadow.camera.left=value;}},shadowCameraRight:{set:function(value){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');this.shadow.camera.right=value;}},shadowCameraTop:{set:function(value){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');this.shadow.camera.top=value;}},shadowCameraBottom:{set:function(value){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');this.shadow.camera.bottom=value;}},shadowCameraNear:{set:function(value){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');this.shadow.camera.near=value;}},shadowCameraFar:{set:function(value){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');this.shadow.camera.far=value;}},shadowCameraVisible:{set:function(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');}},shadowBias:{set:function(value){console.warn('THREE.Light: .shadowBias is now .shadow.bias.');this.shadow.bias=value;}},shadowDarkness:{set:function(){console.warn('THREE.Light: .shadowDarkness has been removed.');}},shadowMapWidth:{set:function(value){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');this.shadow.mapSize.width=value;}},shadowMapHeight:{set:function(value){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');this.shadow.mapSize.height=value;}}});//\nObject.defineProperties(BufferAttribute.prototype,{length:{get:function(){console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');return this.array.length;}},dynamic:{get:function(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function()/* value */{console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');this.setUsage(DynamicDrawUsage);}}});BufferAttribute.prototype.setDynamic=function(value){console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;};BufferAttribute.prototype.copyIndicesArray=function()/* indices */{console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');},BufferAttribute.prototype.setArray=function()/* array */{console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');};//\nBufferGeometry.prototype.addIndex=function(index){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');this.setIndex(index);};BufferGeometry.prototype.addAttribute=function(name,attribute){console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');if(!(attribute&&attribute.isBufferAttribute)&&!(attribute&&attribute.isInterleavedBufferAttribute)){console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');return this.setAttribute(name,new BufferAttribute(arguments[1],arguments[2]));}if(name==='index'){console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');this.setIndex(attribute);return this;}return this.setAttribute(name,attribute);};BufferGeometry.prototype.addDrawCall=function(start,count,indexOffset){if(indexOffset!==undefined){console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');}console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');this.addGroup(start,count);};BufferGeometry.prototype.clearDrawCalls=function(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');this.clearGroups();};BufferGeometry.prototype.computeOffsets=function(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');};BufferGeometry.prototype.removeAttribute=function(name){console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');return this.deleteAttribute(name);};BufferGeometry.prototype.applyMatrix=function(matrix){console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);};Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');return this.groups;}},offsets:{get:function(){console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');return this.groups;}}});InterleavedBuffer.prototype.setDynamic=function(value){console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;};InterleavedBuffer.prototype.setArray=function()/* array */{console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');};//\nExtrudeGeometry.prototype.getArrays=function(){console.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');};ExtrudeGeometry.prototype.addShapeList=function(){console.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');};ExtrudeGeometry.prototype.addShape=function(){console.error('THREE.ExtrudeGeometry: .addShape() has been removed.');};//\nScene.prototype.dispose=function(){console.error('THREE.Scene: .dispose() has been removed.');};//\nUniform.prototype.onUpdate=function(){console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');return this;};//\nObject.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn('THREE.Material: .wrapAround has been removed.');},set:function(){console.warn('THREE.Material: .wrapAround has been removed.');}},overdraw:{get:function(){console.warn('THREE.Material: .overdraw has been removed.');},set:function(){console.warn('THREE.Material: .overdraw has been removed.');}},wrapRGB:{get:function(){console.warn('THREE.Material: .wrapRGB has been removed.');return new Color();}},shading:{get:function(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');},set:function(value){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=value===FlatShading;}},stencilMask:{get:function(){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');return this.stencilFuncMask;},set:function(value){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');this.stencilFuncMask=value;}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');return this.extensions.derivatives;},set:function(value){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');this.extensions.derivatives=value;}}});//\nWebGLRenderer.prototype.clearTarget=function(renderTarget,color,depth,stencil){console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');this.setRenderTarget(renderTarget);this.clear(color,depth,stencil);};WebGLRenderer.prototype.animate=function(callback){console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');this.setAnimationLoop(callback);};WebGLRenderer.prototype.getCurrentRenderTarget=function(){console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');return this.getRenderTarget();};WebGLRenderer.prototype.getMaxAnisotropy=function(){console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');return this.capabilities.getMaxAnisotropy();};WebGLRenderer.prototype.getPrecision=function(){console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');return this.capabilities.precision;};WebGLRenderer.prototype.resetGLState=function(){console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');return this.state.reset();};WebGLRenderer.prototype.supportsFloatTextures=function(){console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');return this.extensions.get('OES_texture_float');};WebGLRenderer.prototype.supportsHalfFloatTextures=function(){console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');return this.extensions.get('OES_texture_half_float');};WebGLRenderer.prototype.supportsStandardDerivatives=function(){console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');return this.extensions.get('OES_standard_derivatives');};WebGLRenderer.prototype.supportsCompressedTextureS3TC=function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');return this.extensions.get('WEBGL_compressed_texture_s3tc');};WebGLRenderer.prototype.supportsCompressedTexturePVRTC=function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');return this.extensions.get('WEBGL_compressed_texture_pvrtc');};WebGLRenderer.prototype.supportsBlendMinMax=function(){console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');return this.extensions.get('EXT_blend_minmax');};WebGLRenderer.prototype.supportsVertexTextures=function(){console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');return this.capabilities.vertexTextures;};WebGLRenderer.prototype.supportsInstancedArrays=function(){console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');return this.extensions.get('ANGLE_instanced_arrays');};WebGLRenderer.prototype.enableScissorTest=function(boolean){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');this.setScissorTest(boolean);};WebGLRenderer.prototype.initMaterial=function(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');};WebGLRenderer.prototype.addPrePlugin=function(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');};WebGLRenderer.prototype.addPostPlugin=function(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');};WebGLRenderer.prototype.updateShadowMap=function(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');};WebGLRenderer.prototype.setFaceCulling=function(){console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');};WebGLRenderer.prototype.allocTextureUnit=function(){console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');};WebGLRenderer.prototype.setTexture=function(){console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');};WebGLRenderer.prototype.setTexture2D=function(){console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');};WebGLRenderer.prototype.setTextureCube=function(){console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');};WebGLRenderer.prototype.getActiveMipMapLevel=function(){console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');return this.getActiveMipmapLevel();};Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');this.shadowMap.enabled=value;}},shadowMapType:{get:function(){return this.shadowMap.type;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');this.shadowMap.type=value;}},shadowMapCullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function()/* value */{console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');}},context:{get:function(){console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');return this.getContext();}},vr:{get:function(){console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');return this.xr;}},gammaInput:{get:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');return false;},set:function(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');}},gammaOutput:{get:function(){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');return false;},set:function(value){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');this.outputEncoding=value===true?sRGBEncoding:LinearEncoding;}},toneMappingWhitePoint:{get:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');return 1.0;},set:function(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');}}});Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function()/* cullFace */{console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');}},renderReverseSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');}},renderSingleSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');}}});function WebGLRenderTargetCube(width,height,options){console.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');return new WebGLCubeRenderTarget(width,options);}//\nObject.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');return this.texture.wrapS;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');this.texture.wrapS=value;}},wrapT:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');return this.texture.wrapT;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');this.texture.wrapT=value;}},magFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');return this.texture.magFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');this.texture.magFilter=value;}},minFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');return this.texture.minFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');this.texture.minFilter=value;}},anisotropy:{get:function(){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');return this.texture.anisotropy;},set:function(value){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');this.texture.anisotropy=value;}},offset:{get:function(){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');return this.texture.offset;},set:function(value){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');this.texture.offset=value;}},repeat:{get:function(){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');return this.texture.repeat;},set:function(value){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');this.texture.repeat=value;}},format:{get:function(){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');return this.texture.format;},set:function(value){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');this.texture.format=value;}},type:{get:function(){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');return this.texture.type;},set:function(value){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');this.texture.type=value;}},generateMipmaps:{get:function(){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');return this.texture.generateMipmaps;},set:function(value){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');this.texture.generateMipmaps=value;}}});//\nAudio.prototype.load=function(file){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');const scope=this;const audioLoader=new AudioLoader();audioLoader.load(file,function(buffer){scope.setBuffer(buffer);});return this;};AudioAnalyser.prototype.getData=function(){console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');return this.getFrequencyData();};//\nCubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');return this.update(renderer,scene);};CubeCamera.prototype.clear=function(renderer,color,depth,stencil){console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');return this.renderTarget.clear(renderer,color,depth,stencil);};ImageUtils.crossOrigin=undefined;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');const loader=new TextureLoader();loader.setCrossOrigin(this.crossOrigin);const texture=loader.load(url,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');const loader=new CubeTextureLoader();loader.setCrossOrigin(this.crossOrigin);const texture=loader.load(urls,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadCompressedTexture=function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');};ImageUtils.loadCompressedTextureCube=function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');};//\nfunction CanvasRenderer(){console.error('THREE.CanvasRenderer has been removed');}//\nfunction JSONLoader(){console.error('THREE.JSONLoader has been removed.');}//\nconst SceneUtils={createMultiMaterialObject:function()/* geometry, materials */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},detach:function()/* child, parent, scene */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},attach:function()/* child, scene, parent */{console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');}};//\nfunction LensFlare(){console.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');}if(typeof __THREE_DEVTOOLS__!=='undefined'){/* eslint-disable no-undef */__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register',{detail:{revision:REVISION}}));/* eslint-enable no-undef */}if(typeof window!=='undefined'){if(window.__THREE__){console.warn('WARNING: Multiple instances of Three.js being imported.');}else{window.__THREE__=REVISION;}}\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/three/build/three.module.js?");

/***/ }),

/***/ "./node_modules/three/examples/jsm/controls/OrbitControls.js":
/*!*******************************************************************!*\
  !*** ./node_modules/three/examples/jsm/controls/OrbitControls.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"OrbitControls\": () => (/* binding */ OrbitControls),\n/* harmony export */   \"MapControls\": () => (/* binding */ MapControls)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = {\n  type: 'change'\n};\nconst _startEvent = {\n  type: 'start'\n};\nconst _endEvent = {\n  type: 'end'\n};\n\nclass OrbitControls extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n    if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    this.object = object;\n    this.domElement = domElement; // Set to false to disable this control\n\n    this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    this.target = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    this.minDistance = 0;\n    this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    this.minZoom = 0;\n    this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    this.minPolarAngle = 0; // radians\n\n    this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    this.minAzimuthAngle = -Infinity; // radians\n\n    this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    this.enableDamping = false;\n    this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    this.mouseButtons = {\n      LEFT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE,\n      MIDDLE: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY,\n      RIGHT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN\n    }; // Touch fingers\n\n    this.touches = {\n      ONE: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE,\n      TWO: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN\n    }; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom; // the target DOM element for key events\n\n    this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = function () {\n      const offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(); // so camera.up is the orbit axis\n\n      const quat = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion().setFromUnitVectors(object.up, new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      const lastQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('touchstart', onTouchStart);\n      scope.domElement.removeEventListener('touchend', onTouchEnd);\n      scope.domElement.removeEventListener('touchmove', onTouchMove);\n      scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n    const sphericalDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n    let scale = 1;\n    const panOffset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    let zoomChanged = false;\n    const rotateStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const rotateEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const rotateDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const panStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const panEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const panDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const dollyStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const dollyEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    const dollyDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    const panLeft = function () {\n      const v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    const panUp = function () {\n      const v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = function () {\n      const offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseUp()\n    /*event*/\n    {// no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function handleTouchEnd()\n    /*event*/\n    {// no-op\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onMouseDown(event) {\n      // Prevent the browser from scrolling.\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      scope.domElement.focus ? scope.domElement.focus() : window.focus();\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.domElement.ownerDocument.addEventListener('pointermove', onPointerMove);\n        scope.domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp(event) {\n      scope.domElement.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      handleMouseUp(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      if (scope.enabled === false) return;\n      handleTouchEnd(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    });\n    scope.domElement.addEventListener('touchstart', onTouchStart, {\n      passive: false\n    });\n    scope.domElement.addEventListener('touchend', onTouchEnd);\n    scope.domElement.addEventListener('touchmove', onTouchMove, {\n      passive: false\n    }); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN;\n    this.mouseButtons.RIGHT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE;\n    this.touches.ONE = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN;\n    this.touches.TWO = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\n\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/three/examples/jsm/controls/OrbitControls.js?");

/***/ }),

/***/ "./node_modules/three/examples/jsm/geometries/ConvexGeometry.js":
/*!**********************************************************************!*\
  !*** ./node_modules/three/examples/jsm/geometries/ConvexGeometry.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ConvexGeometry\": () => (/* binding */ ConvexGeometry)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _math_ConvexHull_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math/ConvexHull.js */ \"./node_modules/three/examples/jsm/math/ConvexHull.js\");\n\n\n\nclass ConvexGeometry extends three__WEBPACK_IMPORTED_MODULE_1__.BufferGeometry {\n  constructor(points) {\n    super(); // buffers\n\n    const vertices = [];\n    const normals = [];\n\n    if (_math_ConvexHull_js__WEBPACK_IMPORTED_MODULE_0__.ConvexHull === undefined) {\n      console.error('THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on ConvexHull');\n    }\n\n    const convexHull = new _math_ConvexHull_js__WEBPACK_IMPORTED_MODULE_0__.ConvexHull().setFromPoints(points); // generate vertices and normals\n\n    const faces = convexHull.faces;\n\n    for (let i = 0; i < faces.length; i++) {\n      const face = faces[i];\n      let edge = face.edge; // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        const point = edge.head().point;\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n        edge = edge.next;\n      } while (edge !== face.edge);\n    } // build geometry\n\n\n    this.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_1__.Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_1__.Float32BufferAttribute(normals, 3));\n  }\n\n}\n\n\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/three/examples/jsm/geometries/ConvexGeometry.js?");

/***/ }),

/***/ "./node_modules/three/examples/jsm/math/ConvexHull.js":
/*!************************************************************!*\
  !*** ./node_modules/three/examples/jsm/math/ConvexHull.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ConvexHull\": () => (/* binding */ ConvexHull)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n\n/**\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n */\n\nconst Visible = 0;\nconst Deleted = 1;\n\nconst _v1 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\nconst _line3 = new three__WEBPACK_IMPORTED_MODULE_0__.Line3();\n\nconst _plane = new three__WEBPACK_IMPORTED_MODULE_0__.Plane();\n\nconst _closestPoint = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\nconst _triangle = new three__WEBPACK_IMPORTED_MODULE_0__.Triangle();\n\nclass ConvexHull {\n  constructor() {\n    this.tolerance = -1;\n    this.faces = []; // the generated faces of the convex hull\n\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\n    // the vertex lists work as follows:\n    //\n    // let 'a' and 'b' be 'Face' instances\n    // let 'v' be points wrapped as instance of 'Vertex'\n    //\n    //     [v, v, ..., v, v, v, ...]\n    //      ^             ^\n    //      |             |\n    //  a.outside     b.outside\n    //\n\n    this.assigned = new VertexList();\n    this.unassigned = new VertexList();\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\n  }\n\n  setFromPoints(points) {\n    if (Array.isArray(points) !== true) {\n      console.error('THREE.ConvexHull: Points parameter is not an array.');\n    }\n\n    if (points.length < 4) {\n      console.error('THREE.ConvexHull: The algorithm needs at least four points.');\n    }\n\n    this.makeEmpty();\n\n    for (let i = 0, l = points.length; i < l; i++) {\n      this.vertices.push(new VertexNode(points[i]));\n    }\n\n    this.compute();\n    return this;\n  }\n\n  setFromObject(object) {\n    const points = [];\n    object.updateMatrixWorld(true);\n    object.traverse(function (node) {\n      const geometry = node.geometry;\n\n      if (geometry !== undefined) {\n        if (geometry.isGeometry) {\n          console.error('THREE.ConvexHull no longer supports Geometry. Use THREE.BufferGeometry instead.');\n          return;\n        } else if (geometry.isBufferGeometry) {\n          const attribute = geometry.attributes.position;\n\n          if (attribute !== undefined) {\n            for (let i = 0, l = attribute.count; i < l; i++) {\n              const point = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n              point.fromBufferAttribute(attribute, i).applyMatrix4(node.matrixWorld);\n              points.push(point);\n            }\n          }\n        }\n      }\n    });\n    return this.setFromPoints(points);\n  }\n\n  containsPoint(point) {\n    const faces = this.faces;\n\n    for (let i = 0, l = faces.length; i < l; i++) {\n      const face = faces[i]; // compute signed distance and check on what half space the point lies\n\n      if (face.distanceToPoint(point) > this.tolerance) return false;\n    }\n\n    return true;\n  }\n\n  intersectRay(ray, target) {\n    // based on \"Fast Ray-Convex Polyhedron Intersection\"  by Eric Haines, GRAPHICS GEMS II\n    const faces = this.faces;\n    let tNear = -Infinity;\n    let tFar = Infinity;\n\n    for (let i = 0, l = faces.length; i < l; i++) {\n      const face = faces[i]; // interpret faces as planes for the further computation\n\n      const vN = face.distanceToPoint(ray.origin);\n      const vD = face.normal.dot(ray.direction); // if the origin is on the positive side of a plane (so the plane can \"see\" the origin) and\n      // the ray is turned away or parallel to the plane, there is no intersection\n\n      if (vN > 0 && vD >= 0) return null; // compute the distance from the ray’s origin to the intersection with the plane\n\n      const t = vD !== 0 ? -vN / vD : 0; // only proceed if the distance is positive. a negative distance means the intersection point\n      // lies \"behind\" the origin\n\n      if (t <= 0) continue; // now categorized plane as front-facing or back-facing\n\n      if (vD > 0) {\n        //  plane faces away from the ray, so this plane is a back-face\n        tFar = Math.min(t, tFar);\n      } else {\n        // front-face\n        tNear = Math.max(t, tNear);\n      }\n\n      if (tNear > tFar) {\n        // if tNear ever is greater than tFar, the ray must miss the convex hull\n        return null;\n      }\n    } // evaluate intersection point\n    // always try tNear first since its the closer intersection point\n\n\n    if (tNear !== -Infinity) {\n      ray.at(tNear, target);\n    } else {\n      ray.at(tFar, target);\n    }\n\n    return target;\n  }\n\n  intersectsRay(ray) {\n    return this.intersectRay(ray, _v1) !== null;\n  }\n\n  makeEmpty() {\n    this.faces = [];\n    this.vertices = [];\n    return this;\n  } // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n\n  addVertexToFace(vertex, face) {\n    vertex.face = face;\n\n    if (face.outside === null) {\n      this.assigned.append(vertex);\n    } else {\n      this.assigned.insertBefore(face.outside, vertex);\n    }\n\n    face.outside = vertex;\n    return this;\n  } // Removes a vertex from the 'assigned' list of vertices and from the given face\n\n\n  removeVertexFromFace(vertex, face) {\n    if (vertex === face.outside) {\n      // fix face.outside link\n      if (vertex.next !== null && vertex.next.face === face) {\n        // face has at least 2 outside vertices, move the 'outside' reference\n        face.outside = vertex.next;\n      } else {\n        // vertex was the only outside vertex that face had\n        face.outside = null;\n      }\n    }\n\n    this.assigned.remove(vertex);\n    return this;\n  } // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n\n  removeAllVerticesFromFace(face) {\n    if (face.outside !== null) {\n      // reference to the first and last vertex of this face\n      const start = face.outside;\n      let end = face.outside;\n\n      while (end.next !== null && end.next.face === face) {\n        end = end.next;\n      }\n\n      this.assigned.removeSubList(start, end); // fix references\n\n      start.prev = end.next = null;\n      face.outside = null;\n      return start;\n    }\n  } // Removes all the visible vertices that 'face' is able to see\n\n\n  deleteFaceVertices(face, absorbingFace) {\n    const faceVertices = this.removeAllVerticesFromFace(face);\n\n    if (faceVertices !== undefined) {\n      if (absorbingFace === undefined) {\n        // mark the vertices to be reassigned to some other face\n        this.unassigned.appendChain(faceVertices);\n      } else {\n        // if there's an absorbing face try to assign as many vertices as possible to it\n        let vertex = faceVertices;\n\n        do {\n          // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n          // will be changed by upcoming method calls\n          const nextVertex = vertex.next;\n          const distance = absorbingFace.distanceToPoint(vertex.point); // check if 'vertex' is able to see 'absorbingFace'\n\n          if (distance > this.tolerance) {\n            this.addVertexToFace(vertex, absorbingFace);\n          } else {\n            this.unassigned.append(vertex);\n          } // now assign next vertex\n\n\n          vertex = nextVertex;\n        } while (vertex !== null);\n      }\n    }\n\n    return this;\n  } // Reassigns as many vertices as possible from the unassigned list to the new faces\n\n\n  resolveUnassignedPoints(newFaces) {\n    if (this.unassigned.isEmpty() === false) {\n      let vertex = this.unassigned.first();\n\n      do {\n        // buffer 'next' reference, see .deleteFaceVertices()\n        const nextVertex = vertex.next;\n        let maxDistance = this.tolerance;\n        let maxFace = null;\n\n        for (let i = 0; i < newFaces.length; i++) {\n          const face = newFaces[i];\n\n          if (face.mark === Visible) {\n            const distance = face.distanceToPoint(vertex.point);\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              maxFace = face;\n            }\n\n            if (maxDistance > 1000 * this.tolerance) break;\n          }\n        } // 'maxFace' can be null e.g. if there are identical vertices\n\n\n        if (maxFace !== null) {\n          this.addVertexToFace(vertex, maxFace);\n        }\n\n        vertex = nextVertex;\n      } while (vertex !== null);\n    }\n\n    return this;\n  } // Computes the extremes of a simplex which will be the initial hull\n\n\n  computeExtremes() {\n    const min = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const max = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    const minVertices = [];\n    const maxVertices = []; // initially assume that the first vertex is the min/max\n\n    for (let i = 0; i < 3; i++) {\n      minVertices[i] = maxVertices[i] = this.vertices[0];\n    }\n\n    min.copy(this.vertices[0].point);\n    max.copy(this.vertices[0].point); // compute the min/max vertex on all six directions\n\n    for (let i = 0, l = this.vertices.length; i < l; i++) {\n      const vertex = this.vertices[i];\n      const point = vertex.point; // update the min coordinates\n\n      for (let j = 0; j < 3; j++) {\n        if (point.getComponent(j) < min.getComponent(j)) {\n          min.setComponent(j, point.getComponent(j));\n          minVertices[j] = vertex;\n        }\n      } // update the max coordinates\n\n\n      for (let j = 0; j < 3; j++) {\n        if (point.getComponent(j) > max.getComponent(j)) {\n          max.setComponent(j, point.getComponent(j));\n          maxVertices[j] = vertex;\n        }\n      }\n    } // use min/max vectors to compute an optimal epsilon\n\n\n    this.tolerance = 3 * Number.EPSILON * (Math.max(Math.abs(min.x), Math.abs(max.x)) + Math.max(Math.abs(min.y), Math.abs(max.y)) + Math.max(Math.abs(min.z), Math.abs(max.z)));\n    return {\n      min: minVertices,\n      max: maxVertices\n    };\n  } // Computes the initial simplex assigning to its faces all the points\n  // that are candidates to form part of the hull\n\n\n  computeInitialHull() {\n    const vertices = this.vertices;\n    const extremes = this.computeExtremes();\n    const min = extremes.min;\n    const max = extremes.max; // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n    // (max.x - min.x)\n    // (max.y - min.y)\n    // (max.z - min.z)\n\n    let maxDistance = 0;\n    let index = 0;\n\n    for (let i = 0; i < 3; i++) {\n      const distance = max[i].point.getComponent(i) - min[i].point.getComponent(i);\n\n      if (distance > maxDistance) {\n        maxDistance = distance;\n        index = i;\n      }\n    }\n\n    const v0 = min[index];\n    const v1 = max[index];\n    let v2;\n    let v3; // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n    maxDistance = 0;\n\n    _line3.set(v0.point, v1.point);\n\n    for (let i = 0, l = this.vertices.length; i < l; i++) {\n      const vertex = vertices[i];\n\n      if (vertex !== v0 && vertex !== v1) {\n        _line3.closestPointToPoint(vertex.point, true, _closestPoint);\n\n        const distance = _closestPoint.distanceToSquared(vertex.point);\n\n        if (distance > maxDistance) {\n          maxDistance = distance;\n          v2 = vertex;\n        }\n      }\n    } // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n\n    maxDistance = -1;\n\n    _plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\n\n    for (let i = 0, l = this.vertices.length; i < l; i++) {\n      const vertex = vertices[i];\n\n      if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n        const distance = Math.abs(_plane.distanceToPoint(vertex.point));\n\n        if (distance > maxDistance) {\n          maxDistance = distance;\n          v3 = vertex;\n        }\n      }\n    }\n\n    const faces = [];\n\n    if (_plane.distanceToPoint(v3.point) < 0) {\n      // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n      faces.push(Face.create(v0, v1, v2), Face.create(v3, v1, v0), Face.create(v3, v2, v1), Face.create(v3, v0, v2)); // set the twin edge\n\n      for (let i = 0; i < 3; i++) {\n        const j = (i + 1) % 3; // join face[ i ] i > 0, with the first face\n\n        faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j)); // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n        faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\n      }\n    } else {\n      // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n      faces.push(Face.create(v0, v2, v1), Face.create(v3, v0, v1), Face.create(v3, v1, v2), Face.create(v3, v2, v0)); // set the twin edge\n\n      for (let i = 0; i < 3; i++) {\n        const j = (i + 1) % 3; // join face[ i ] i > 0, with the first face\n\n        faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3)); // join face[ i ] with face[ i + 1 ]\n\n        faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\n      }\n    } // the initial hull is the tetrahedron\n\n\n    for (let i = 0; i < 4; i++) {\n      this.faces.push(faces[i]);\n    } // initial assignment of vertices to the faces of the tetrahedron\n\n\n    for (let i = 0, l = vertices.length; i < l; i++) {\n      const vertex = vertices[i];\n\n      if (vertex !== v0 && vertex !== v1 && vertex !== v2 && vertex !== v3) {\n        maxDistance = this.tolerance;\n        let maxFace = null;\n\n        for (let j = 0; j < 4; j++) {\n          const distance = this.faces[j].distanceToPoint(vertex.point);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            maxFace = this.faces[j];\n          }\n        }\n\n        if (maxFace !== null) {\n          this.addVertexToFace(vertex, maxFace);\n        }\n      }\n    }\n\n    return this;\n  } // Removes inactive faces\n\n\n  reindexFaces() {\n    const activeFaces = [];\n\n    for (let i = 0; i < this.faces.length; i++) {\n      const face = this.faces[i];\n\n      if (face.mark === Visible) {\n        activeFaces.push(face);\n      }\n    }\n\n    this.faces = activeFaces;\n    return this;\n  } // Finds the next vertex to create faces with the current hull\n\n\n  nextVertexToAdd() {\n    // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n    if (this.assigned.isEmpty() === false) {\n      let eyeVertex,\n          maxDistance = 0; // grap the first available face and start with the first visible vertex of that face\n\n      const eyeFace = this.assigned.first().face;\n      let vertex = eyeFace.outside; // now calculate the farthest vertex that face can see\n\n      do {\n        const distance = eyeFace.distanceToPoint(vertex.point);\n\n        if (distance > maxDistance) {\n          maxDistance = distance;\n          eyeVertex = vertex;\n        }\n\n        vertex = vertex.next;\n      } while (vertex !== null && vertex.face === eyeFace);\n\n      return eyeVertex;\n    }\n  } // Computes a chain of half edges in CCW order called the 'horizon'.\n  // For an edge to be part of the horizon it must join a face that can see\n  // 'eyePoint' and a face that cannot see 'eyePoint'.\n\n\n  computeHorizon(eyePoint, crossEdge, face, horizon) {\n    // moves face's vertices to the 'unassigned' vertex list\n    this.deleteFaceVertices(face);\n    face.mark = Deleted;\n    let edge;\n\n    if (crossEdge === null) {\n      edge = crossEdge = face.getEdge(0);\n    } else {\n      // start from the next edge since 'crossEdge' was already analyzed\n      // (actually 'crossEdge.twin' was the edge who called this method recursively)\n      edge = crossEdge.next;\n    }\n\n    do {\n      const twinEdge = edge.twin;\n      const oppositeFace = twinEdge.face;\n\n      if (oppositeFace.mark === Visible) {\n        if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\n          // the opposite face can see the vertex, so proceed with next edge\n          this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\n        } else {\n          // the opposite face can't see the vertex, so this edge is part of the horizon\n          horizon.push(edge);\n        }\n      }\n\n      edge = edge.next;\n    } while (edge !== crossEdge);\n\n    return this;\n  } // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n\n  addAdjoiningFace(eyeVertex, horizonEdge) {\n    // all the half edges are created in ccw order thus the face is always pointing outside the hull\n    const face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\n    this.faces.push(face); // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n    face.getEdge(-1).setTwin(horizonEdge.twin);\n    return face.getEdge(0); // the half edge whose vertex is the eyeVertex\n  } //  Adds 'horizon.length' faces to the hull, each face will be linked with the\n  //  horizon opposite face and the face on the left/right\n\n\n  addNewFaces(eyeVertex, horizon) {\n    this.newFaces = [];\n    let firstSideEdge = null;\n    let previousSideEdge = null;\n\n    for (let i = 0; i < horizon.length; i++) {\n      const horizonEdge = horizon[i]; // returns the right side edge\n\n      const sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\n\n      if (firstSideEdge === null) {\n        firstSideEdge = sideEdge;\n      } else {\n        // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n        sideEdge.next.setTwin(previousSideEdge);\n      }\n\n      this.newFaces.push(sideEdge.face);\n      previousSideEdge = sideEdge;\n    } // perform final join of new faces\n\n\n    firstSideEdge.next.setTwin(previousSideEdge);\n    return this;\n  } // Adds a vertex to the hull\n\n\n  addVertexToHull(eyeVertex) {\n    const horizon = [];\n    this.unassigned.clear(); // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n    this.removeVertexFromFace(eyeVertex, eyeVertex.face);\n    this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\n    this.addNewFaces(eyeVertex, horizon); // reassign 'unassigned' vertices to the new faces\n\n    this.resolveUnassignedPoints(this.newFaces);\n    return this;\n  }\n\n  cleanup() {\n    this.assigned.clear();\n    this.unassigned.clear();\n    this.newFaces = [];\n    return this;\n  }\n\n  compute() {\n    let vertex;\n    this.computeInitialHull(); // add all available vertices gradually to the hull\n\n    while ((vertex = this.nextVertexToAdd()) !== undefined) {\n      this.addVertexToHull(vertex);\n    }\n\n    this.reindexFaces();\n    this.cleanup();\n    return this;\n  }\n\n} //\n\n\nclass Face {\n  constructor() {\n    this.normal = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    this.midpoint = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    this.area = 0;\n    this.constant = 0; // signed distance from face to the origin\n\n    this.outside = null; // reference to a vertex in a vertex list this face can see\n\n    this.mark = Visible;\n    this.edge = null;\n  }\n\n  static create(a, b, c) {\n    const face = new Face();\n    const e0 = new HalfEdge(a, face);\n    const e1 = new HalfEdge(b, face);\n    const e2 = new HalfEdge(c, face); // join edges\n\n    e0.next = e2.prev = e1;\n    e1.next = e0.prev = e2;\n    e2.next = e1.prev = e0; // main half edge reference\n\n    face.edge = e0;\n    return face.compute();\n  }\n\n  getEdge(i) {\n    let edge = this.edge;\n\n    while (i > 0) {\n      edge = edge.next;\n      i--;\n    }\n\n    while (i < 0) {\n      edge = edge.prev;\n      i++;\n    }\n\n    return edge;\n  }\n\n  compute() {\n    const a = this.edge.tail();\n    const b = this.edge.head();\n    const c = this.edge.next.head();\n\n    _triangle.set(a.point, b.point, c.point);\n\n    _triangle.getNormal(this.normal);\n\n    _triangle.getMidpoint(this.midpoint);\n\n    this.area = _triangle.getArea();\n    this.constant = this.normal.dot(this.midpoint);\n    return this;\n  }\n\n  distanceToPoint(point) {\n    return this.normal.dot(point) - this.constant;\n  }\n\n} // Entity for a Doubly-Connected Edge List (DCEL).\n\n\nclass HalfEdge {\n  constructor(vertex, face) {\n    this.vertex = vertex;\n    this.prev = null;\n    this.next = null;\n    this.twin = null;\n    this.face = face;\n  }\n\n  head() {\n    return this.vertex;\n  }\n\n  tail() {\n    return this.prev ? this.prev.vertex : null;\n  }\n\n  length() {\n    const head = this.head();\n    const tail = this.tail();\n\n    if (tail !== null) {\n      return tail.point.distanceTo(head.point);\n    }\n\n    return -1;\n  }\n\n  lengthSquared() {\n    const head = this.head();\n    const tail = this.tail();\n\n    if (tail !== null) {\n      return tail.point.distanceToSquared(head.point);\n    }\n\n    return -1;\n  }\n\n  setTwin(edge) {\n    this.twin = edge;\n    edge.twin = this;\n    return this;\n  }\n\n} // A vertex as a double linked list node.\n\n\nclass VertexNode {\n  constructor(point) {\n    this.point = point;\n    this.prev = null;\n    this.next = null;\n    this.face = null; // the face that is able to see this vertex\n  }\n\n} // A double linked list that contains vertex nodes.\n\n\nclass VertexList {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.tail;\n  }\n\n  clear() {\n    this.head = this.tail = null;\n    return this;\n  } // Inserts a vertex before the target vertex\n\n\n  insertBefore(target, vertex) {\n    vertex.prev = target.prev;\n    vertex.next = target;\n\n    if (vertex.prev === null) {\n      this.head = vertex;\n    } else {\n      vertex.prev.next = vertex;\n    }\n\n    target.prev = vertex;\n    return this;\n  } // Inserts a vertex after the target vertex\n\n\n  insertAfter(target, vertex) {\n    vertex.prev = target;\n    vertex.next = target.next;\n\n    if (vertex.next === null) {\n      this.tail = vertex;\n    } else {\n      vertex.next.prev = vertex;\n    }\n\n    target.next = vertex;\n    return this;\n  } // Appends a vertex to the end of the linked list\n\n\n  append(vertex) {\n    if (this.head === null) {\n      this.head = vertex;\n    } else {\n      this.tail.next = vertex;\n    }\n\n    vertex.prev = this.tail;\n    vertex.next = null; // the tail has no subsequent vertex\n\n    this.tail = vertex;\n    return this;\n  } // Appends a chain of vertices where 'vertex' is the head.\n\n\n  appendChain(vertex) {\n    if (this.head === null) {\n      this.head = vertex;\n    } else {\n      this.tail.next = vertex;\n    }\n\n    vertex.prev = this.tail; // ensure that the 'tail' reference points to the last vertex of the chain\n\n    while (vertex.next !== null) {\n      vertex = vertex.next;\n    }\n\n    this.tail = vertex;\n    return this;\n  } // Removes a vertex from the linked list\n\n\n  remove(vertex) {\n    if (vertex.prev === null) {\n      this.head = vertex.next;\n    } else {\n      vertex.prev.next = vertex.next;\n    }\n\n    if (vertex.next === null) {\n      this.tail = vertex.prev;\n    } else {\n      vertex.next.prev = vertex.prev;\n    }\n\n    return this;\n  } // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n\n  removeSubList(a, b) {\n    if (a.prev === null) {\n      this.head = b.next;\n    } else {\n      a.prev.next = b.next;\n    }\n\n    if (b.next === null) {\n      this.tail = a.prev;\n    } else {\n      b.next.prev = a.prev;\n    }\n\n    return this;\n  }\n\n  isEmpty() {\n    return this.head === null;\n  }\n\n}\n\n\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/three/examples/jsm/math/ConvexHull.js?");

/***/ }),

/***/ "./node_modules/typed-function/typed-function.js":
/*!*******************************************************!*\
  !*** ./node_modules/typed-function/typed-function.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n\n\n(function (root, factory) {\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(this, function () {\n  function ok() {\n    return true;\n  }\n\n  function notOk() {\n    return false;\n  }\n\n  function undef() {\n    return undefined;\n  }\n  /**\n   * @typedef {{\n   *   params: Param[],\n   *   fn: function\n   * }} Signature\n   *\n   * @typedef {{\n   *   types: Type[],\n   *   restParam: boolean\n   * }} Param\n   *\n   * @typedef {{\n   *   name: string,\n   *   typeIndex: number,\n   *   test: function,\n   *   conversion?: ConversionDef,\n   *   conversionIndex: number,\n   * }} Type\n   *\n   * @typedef {{\n   *   from: string,\n   *   to: string,\n   *   convert: function (*) : *\n   * }} ConversionDef\n   *\n   * @typedef {{\n   *   name: string,\n   *   test: function(*) : boolean\n   * }} TypeDef\n   */\n  // create a new instance of typed-function\n\n\n  function create() {\n    // data type tests\n    var _types = [{\n      name: 'number',\n      test: function (x) {\n        return typeof x === 'number';\n      }\n    }, {\n      name: 'string',\n      test: function (x) {\n        return typeof x === 'string';\n      }\n    }, {\n      name: 'boolean',\n      test: function (x) {\n        return typeof x === 'boolean';\n      }\n    }, {\n      name: 'Function',\n      test: function (x) {\n        return typeof x === 'function';\n      }\n    }, {\n      name: 'Array',\n      test: Array.isArray\n    }, {\n      name: 'Date',\n      test: function (x) {\n        return x instanceof Date;\n      }\n    }, {\n      name: 'RegExp',\n      test: function (x) {\n        return x instanceof RegExp;\n      }\n    }, {\n      name: 'Object',\n      test: function (x) {\n        return typeof x === 'object' && x !== null && x.constructor === Object;\n      }\n    }, {\n      name: 'null',\n      test: function (x) {\n        return x === null;\n      }\n    }, {\n      name: 'undefined',\n      test: function (x) {\n        return x === undefined;\n      }\n    }];\n    var anyType = {\n      name: 'any',\n      test: ok\n    }; // types which need to be ignored\n\n    var _ignore = []; // type conversions\n\n    var _conversions = []; // This is a temporary object, will be replaced with a typed function at the end\n\n    var typed = {\n      types: _types,\n      conversions: _conversions,\n      ignore: _ignore\n    };\n    /**\n     * Find the test function for a type\n     * @param {String} typeName\n     * @return {TypeDef} Returns the type definition when found,\n     *                    Throws a TypeError otherwise\n     */\n\n    function findTypeByName(typeName) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.name === typeName;\n      });\n\n      if (entry) {\n        return entry;\n      }\n\n      if (typeName === 'any') {\n        // special baked-in case 'any'\n        return anyType;\n      }\n\n      var hint = findInArray(typed.types, function (entry) {\n        return entry.name.toLowerCase() === typeName.toLowerCase();\n      });\n      throw new TypeError('Unknown type \"' + typeName + '\"' + (hint ? '. Did you mean \"' + hint.name + '\"?' : ''));\n    }\n    /**\n     * Find the index of a type definition. Handles special case 'any'\n     * @param {TypeDef} type\n     * @return {number}\n     */\n\n\n    function findTypeIndex(type) {\n      if (type === anyType) {\n        return 999;\n      }\n\n      return typed.types.indexOf(type);\n    }\n    /**\n     * Find a type that matches a value.\n     * @param {*} value\n     * @return {string} Returns the name of the first type for which\n     *                  the type test matches the value.\n     */\n\n\n    function findTypeName(value) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.test(value);\n      });\n\n      if (entry) {\n        return entry.name;\n      }\n\n      throw new TypeError('Value has unknown type. Value: ' + value);\n    }\n    /**\n     * Find a specific signature from a (composed) typed function, for example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an error when no signature\n     *                                        is found.\n     */\n\n\n    function find(fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      } // normalize input\n\n\n      var arr;\n\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      } else if (Array.isArray(signature)) {\n        arr = signature;\n      } else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(','); // find an exact match\n\n      var match = fn.signatures[str];\n\n      if (match) {\n        return match;\n      } // TODO: extend find to match non-exact signatures\n\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n\n\n    function convert(value, type) {\n      var from = findTypeName(value); // check conversion is needed\n\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n    /**\n     * Stringify parameters in a normalized way\n     * @param {Param[]} params\n     * @return {string}\n     */\n\n\n    function stringifyParams(params) {\n      return params.map(function (param) {\n        var typeNames = param.types.map(getTypeName);\n        return (param.restParam ? '...' : '') + typeNames.join('|');\n      }).join(',');\n    }\n    /**\n     * Parse a parameter, like \"...number | boolean\"\n     * @param {string} param\n     * @param {ConversionDef[]} conversions\n     * @return {Param} param\n     */\n\n\n    function parseParam(param, conversions) {\n      var restParam = param.indexOf('...') === 0;\n      var types = !restParam ? param : param.length > 3 ? param.slice(3) : 'any';\n      var typeNames = types.split('|').map(trim).filter(notEmpty).filter(notIgnore);\n      var matchingConversions = filterConversions(conversions, typeNames);\n      var exactTypes = typeNames.map(function (typeName) {\n        var type = findTypeByName(typeName);\n        return {\n          name: typeName,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: null,\n          conversionIndex: -1\n        };\n      });\n      var convertibleTypes = matchingConversions.map(function (conversion) {\n        var type = findTypeByName(conversion.from);\n        return {\n          name: conversion.from,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: conversion,\n          conversionIndex: conversions.indexOf(conversion)\n        };\n      });\n      return {\n        types: exactTypes.concat(convertibleTypes),\n        restParam: restParam\n      };\n    }\n    /**\n     * Parse a signature with comma separated parameters,\n     * like \"number | boolean, ...string\"\n     * @param {string} signature\n     * @param {function} fn\n     * @param {ConversionDef[]} conversions\n     * @return {Signature | null} signature\n     */\n\n\n    function parseSignature(signature, fn, conversions) {\n      var params = [];\n\n      if (signature.trim() !== '') {\n        params = signature.split(',').map(trim).map(function (param, index, array) {\n          var parsedParam = parseParam(param, conversions);\n\n          if (parsedParam.restParam && index !== array.length - 1) {\n            throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' + 'only allowed for the last parameter');\n          }\n\n          return parsedParam;\n        });\n      }\n\n      if (params.some(isInvalidParam)) {\n        // invalid signature: at least one parameter has no types\n        // (they may have been filtered)\n        return null;\n      }\n\n      return {\n        params: params,\n        fn: fn\n      };\n    }\n    /**\n     * Test whether a set of params contains a restParam\n     * @param {Param[]} params\n     * @return {boolean} Returns true when the last parameter is a restParam\n     */\n\n\n    function hasRestParam(params) {\n      var param = last(params);\n      return param ? param.restParam : false;\n    }\n    /**\n     * Test whether a parameter contains conversions\n     * @param {Param} param\n     * @return {boolean} Returns true when at least one of the parameters\n     *                   contains a conversion.\n     */\n\n\n    function hasConversions(param) {\n      return param.types.some(function (type) {\n        return type.conversion != null;\n      });\n    }\n    /**\n     * Create a type test for a single parameter, which can have one or multiple\n     * types.\n     * @param {Param} param\n     * @return {function(x: *) : boolean} Returns a test function\n     */\n\n\n    function compileTest(param) {\n      if (!param || param.types.length === 0) {\n        // nothing to do\n        return ok;\n      } else if (param.types.length === 1) {\n        return findTypeByName(param.types[0].name).test;\n      } else if (param.types.length === 2) {\n        var test0 = findTypeByName(param.types[0].name).test;\n        var test1 = findTypeByName(param.types[1].name).test;\n        return function or(x) {\n          return test0(x) || test1(x);\n        };\n      } else {\n        // param.types.length > 2\n        var tests = param.types.map(function (type) {\n          return findTypeByName(type.name).test;\n        });\n        return function or(x) {\n          for (var i = 0; i < tests.length; i++) {\n            if (tests[i](x)) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n    }\n    /**\n     * Create a test for all parameters of a signature\n     * @param {Param[]} params\n     * @return {function(args: Array<*>) : boolean}\n     */\n\n\n    function compileTests(params) {\n      var tests, test0, test1;\n\n      if (hasRestParam(params)) {\n        // variable arguments like '...number'\n        tests = initial(params).map(compileTest);\n        var varIndex = tests.length;\n        var lastTest = compileTest(last(params));\n\n        var testRestParam = function (args) {\n          for (var i = varIndex; i < args.length; i++) {\n            if (!lastTest(args[i])) {\n              return false;\n            }\n          }\n\n          return true;\n        };\n\n        return function testArgs(args) {\n          for (var i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false;\n            }\n          }\n\n          return testRestParam(args) && args.length >= varIndex + 1;\n        };\n      } else {\n        // no variable arguments\n        if (params.length === 0) {\n          return function testArgs(args) {\n            return args.length === 0;\n          };\n        } else if (params.length === 1) {\n          test0 = compileTest(params[0]);\n          return function testArgs(args) {\n            return test0(args[0]) && args.length === 1;\n          };\n        } else if (params.length === 2) {\n          test0 = compileTest(params[0]);\n          test1 = compileTest(params[1]);\n          return function testArgs(args) {\n            return test0(args[0]) && test1(args[1]) && args.length === 2;\n          };\n        } else {\n          // arguments.length > 2\n          tests = params.map(compileTest);\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n\n            return args.length === tests.length;\n          };\n        }\n      }\n    }\n    /**\n     * Find the parameter at a specific index of a signature.\n     * Handles rest parameters.\n     * @param {Signature} signature\n     * @param {number} index\n     * @return {Param | null} Returns the matching parameter when found,\n     *                        null otherwise.\n     */\n\n\n    function getParamAtIndex(signature, index) {\n      return index < signature.params.length ? signature.params[index] : hasRestParam(signature.params) ? last(signature.params) : null;\n    }\n    /**\n     * Get all type names of a parameter\n     * @param {Signature} signature\n     * @param {number} index\n     * @param {boolean} excludeConversions\n     * @return {string[]} Returns an array with type names\n     */\n\n\n    function getExpectedTypeNames(signature, index, excludeConversions) {\n      var param = getParamAtIndex(signature, index);\n      var types = param ? excludeConversions ? param.types.filter(isExactType) : param.types : [];\n      return types.map(getTypeName);\n    }\n    /**\n     * Returns the name of a type\n     * @param {Type} type\n     * @return {string} Returns the type name\n     */\n\n\n    function getTypeName(type) {\n      return type.name;\n    }\n    /**\n     * Test whether a type is an exact type or conversion\n     * @param {Type} type\n     * @return {boolean} Returns true when\n     */\n\n\n    function isExactType(type) {\n      return type.conversion === null || type.conversion === undefined;\n    }\n    /**\n     * Helper function for creating error messages: create an array with\n     * all available types on a specific argument index.\n     * @param {Signature[]} signatures\n     * @param {number} index\n     * @return {string[]} Returns an array with available types\n     */\n\n\n    function mergeExpectedParams(signatures, index) {\n      var typeNames = uniq(flatMap(signatures, function (signature) {\n        return getExpectedTypeNames(signature, index, false);\n      }));\n      return typeNames.indexOf('any') !== -1 ? ['any'] : typeNames;\n    }\n    /**\n     * Create\n     * @param {string} name             The name of the function\n     * @param {array.<*>} args          The actual arguments passed to the function\n     * @param {Signature[]} signatures  A list with available signatures\n     * @return {TypeError} Returns a type error with additional data\n     *                     attached to it in the property `data`\n     */\n\n\n    function createError(name, args, signatures) {\n      var err, expected;\n\n      var _name = name || 'unnamed'; // test for wrong type at some index\n\n\n      var matchingSignatures = signatures;\n      var index;\n\n      for (index = 0; index < args.length; index++) {\n        var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n          var test = compileTest(getParamAtIndex(signature, index));\n          return (index < signature.params.length || hasRestParam(signature.params)) && test(args[index]);\n        });\n\n        if (nextMatchingDefs.length === 0) {\n          // no matching signatures anymore, throw error \"wrong type\"\n          expected = mergeExpectedParams(matchingSignatures, index);\n\n          if (expected.length > 0) {\n            var actualType = findTypeName(args[index]);\n            err = new TypeError('Unexpected type of argument in function ' + _name + ' (expected: ' + expected.join(' or ') + ', actual: ' + actualType + ', index: ' + index + ')');\n            err.data = {\n              category: 'wrongType',\n              fn: _name,\n              index: index,\n              actual: actualType,\n              expected: expected\n            };\n            return err;\n          }\n        } else {\n          matchingSignatures = nextMatchingDefs;\n        }\n      } // test for too few arguments\n\n\n      var lengths = matchingSignatures.map(function (signature) {\n        return hasRestParam(signature.params) ? Infinity : signature.params.length;\n      });\n\n      if (args.length < Math.min.apply(null, lengths)) {\n        expected = mergeExpectedParams(matchingSignatures, index);\n        err = new TypeError('Too few arguments in function ' + _name + ' (expected: ' + expected.join(' or ') + ', index: ' + args.length + ')');\n        err.data = {\n          category: 'tooFewArgs',\n          fn: _name,\n          index: args.length,\n          expected: expected\n        };\n        return err;\n      } // test for too many arguments\n\n\n      var maxLength = Math.max.apply(null, lengths);\n\n      if (args.length > maxLength) {\n        err = new TypeError('Too many arguments in function ' + _name + ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n        err.data = {\n          category: 'tooManyArgs',\n          fn: _name,\n          index: args.length,\n          expectedLength: maxLength\n        };\n        return err;\n      }\n\n      err = new TypeError('Arguments of type \"' + args.join(', ') + '\" do not match any of the defined signatures of function ' + _name + '.');\n      err.data = {\n        category: 'mismatch',\n        actual: args.map(findTypeName)\n      };\n      return err;\n    }\n    /**\n     * Find the lowest index of all exact types of a parameter (no conversions)\n     * @param {Param} param\n     * @return {number} Returns the index of the lowest type in typed.types\n     */\n\n\n    function getLowestTypeIndex(param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].typeIndex);\n        }\n      }\n\n      return min;\n    }\n    /**\n     * Find the lowest index of the conversion of all types of the parameter\n     * having a conversion\n     * @param {Param} param\n     * @return {number} Returns the lowest index of the conversions of this type\n     */\n\n\n    function getLowestConversionIndex(param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (!isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].conversionIndex);\n        }\n      }\n\n      return min;\n    }\n    /**\n     * Compare two params\n     * @param {Param} param1\n     * @param {Param} param2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n\n\n    function compareParams(param1, param2) {\n      var c; // compare having a rest parameter or not\n\n      c = param1.restParam - param2.restParam;\n\n      if (c !== 0) {\n        return c;\n      } // compare having conversions or not\n\n\n      c = hasConversions(param1) - hasConversions(param2);\n\n      if (c !== 0) {\n        return c;\n      } // compare the index of the types\n\n\n      c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n\n      if (c !== 0) {\n        return c;\n      } // compare the index of any conversion\n\n\n      return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n    }\n    /**\n     * Compare two signatures\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n\n\n    function compareSignatures(signature1, signature2) {\n      var len = Math.min(signature1.params.length, signature2.params.length);\n      var i;\n      var c; // compare whether the params have conversions at all or not\n\n      c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions);\n\n      if (c !== 0) {\n        return c;\n      } // next compare whether the params have conversions one by one\n\n\n      for (i = 0; i < len; i++) {\n        c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n\n        if (c !== 0) {\n          return c;\n        }\n      } // compare the types of the params one by one\n\n\n      for (i = 0; i < len; i++) {\n        c = compareParams(signature1.params[i], signature2.params[i]);\n\n        if (c !== 0) {\n          return c;\n        }\n      } // compare the number of params\n\n\n      return signature1.params.length - signature2.params.length;\n    }\n    /**\n     * Get params containing all types that can be converted to the defined types.\n     *\n     * @param {ConversionDef[]} conversions\n     * @param {string[]} typeNames\n     * @return {ConversionDef[]} Returns the conversions that are available\n     *                        for every type (if any)\n     */\n\n\n    function filterConversions(conversions, typeNames) {\n      var matches = {};\n      conversions.forEach(function (conversion) {\n        if (typeNames.indexOf(conversion.from) === -1 && typeNames.indexOf(conversion.to) !== -1 && !matches[conversion.from]) {\n          matches[conversion.from] = conversion;\n        }\n      });\n      return Object.keys(matches).map(function (from) {\n        return matches[from];\n      });\n    }\n    /**\n     * Preprocess arguments before calling the original function:\n     * - if needed convert the parameters\n     * - in case of rest parameters, move the rest parameters into an Array\n     * @param {Param[]} params\n     * @param {function} fn\n     * @return {function} Returns a wrapped function\n     */\n\n\n    function compileArgsPreprocessing(params, fn) {\n      var fnConvert = fn; // TODO: can we make this wrapper function smarter/simpler?\n\n      if (params.some(hasConversions)) {\n        var restParam = hasRestParam(params);\n        var compiledConversions = params.map(compileArgConversion);\n\n        fnConvert = function convertArgs() {\n          var args = [];\n          var last = restParam ? arguments.length - 1 : arguments.length;\n\n          for (var i = 0; i < last; i++) {\n            args[i] = compiledConversions[i](arguments[i]);\n          }\n\n          if (restParam) {\n            args[last] = arguments[last].map(compiledConversions[last]);\n          }\n\n          return fn.apply(this, args);\n        };\n      }\n\n      var fnPreprocess = fnConvert;\n\n      if (hasRestParam(params)) {\n        var offset = params.length - 1;\n\n        fnPreprocess = function preprocessRestParams() {\n          return fnConvert.apply(this, slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n        };\n      }\n\n      return fnPreprocess;\n    }\n    /**\n     * Compile conversion for a parameter to the right type\n     * @param {Param} param\n     * @return {function} Returns the wrapped function that will convert arguments\n     *\n     */\n\n\n    function compileArgConversion(param) {\n      var test0, test1, conversion0, conversion1;\n      var tests = [];\n      var conversions = [];\n      param.types.forEach(function (type) {\n        if (type.conversion) {\n          tests.push(findTypeByName(type.conversion.from).test);\n          conversions.push(type.conversion.convert);\n        }\n      }); // create optimized conversion functions depending on the number of conversions\n\n      switch (conversions.length) {\n        case 0:\n          return function convertArg(arg) {\n            return arg;\n          };\n\n        case 1:\n          test0 = tests[0];\n          conversion0 = conversions[0];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg);\n            }\n\n            return arg;\n          };\n\n        case 2:\n          test0 = tests[0];\n          test1 = tests[1];\n          conversion0 = conversions[0];\n          conversion1 = conversions[1];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg);\n            }\n\n            if (test1(arg)) {\n              return conversion1(arg);\n            }\n\n            return arg;\n          };\n\n        default:\n          return function convertArg(arg) {\n            for (var i = 0; i < conversions.length; i++) {\n              if (tests[i](arg)) {\n                return conversions[i](arg);\n              }\n            }\n\n            return arg;\n          };\n      }\n    }\n    /**\n     * Convert an array with signatures into a map with signatures,\n     * where signatures with union types are split into separate signatures\n     *\n     * Throws an error when there are conflicting types\n     *\n     * @param {Signature[]} signatures\n     * @return {Object.<string, function>}  Returns a map with signatures\n     *                                      as key and the original function\n     *                                      of this signature as value.\n     */\n\n\n    function createSignaturesMap(signatures) {\n      var signaturesMap = {};\n      signatures.forEach(function (signature) {\n        if (!signature.params.some(hasConversions)) {\n          splitParams(signature.params, true).forEach(function (params) {\n            signaturesMap[stringifyParams(params)] = signature.fn;\n          });\n        }\n      });\n      return signaturesMap;\n    }\n    /**\n     * Split params with union types in to separate params.\n     *\n     * For example:\n     *\n     *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n     *     // returns:\n     *     // [\n     *     //   ['Array', 'string'],\n     *     //   ['Array', 'RegExp'],\n     *     //   ['Object', 'string'],\n     *     //   ['Object', 'RegExp']\n     *     // ]\n     *\n     * @param {Param[]} params\n     * @param {boolean} ignoreConversionTypes\n     * @return {Param[]}\n     */\n\n\n    function splitParams(params, ignoreConversionTypes) {\n      function _splitParams(params, index, types) {\n        if (index < params.length) {\n          var param = params[index];\n          var filteredTypes = ignoreConversionTypes ? param.types.filter(isExactType) : param.types;\n          var typeGroups;\n\n          if (param.restParam) {\n            // split the types of a rest parameter in two:\n            // one with only exact types, and one with exact types and conversions\n            var exactTypes = filteredTypes.filter(isExactType);\n            typeGroups = exactTypes.length < filteredTypes.length ? [exactTypes, filteredTypes] : [filteredTypes];\n          } else {\n            // split all the types of a regular parameter into one type per group\n            typeGroups = filteredTypes.map(function (type) {\n              return [type];\n            });\n          } // recurse over the groups with types\n\n\n          return flatMap(typeGroups, function (typeGroup) {\n            return _splitParams(params, index + 1, types.concat([typeGroup]));\n          });\n        } else {\n          // we've reached the end of the parameters. Now build a new Param\n          var splittedParams = types.map(function (type, typeIndex) {\n            return {\n              types: type,\n              restParam: typeIndex === params.length - 1 && hasRestParam(params)\n            };\n          });\n          return [splittedParams];\n        }\n      }\n\n      return _splitParams(params, 0, []);\n    }\n    /**\n     * Test whether two signatures have a conflicting signature\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {boolean} Returns true when the signatures conflict, false otherwise.\n     */\n\n\n    function hasConflictingParams(signature1, signature2) {\n      var ii = Math.max(signature1.params.length, signature2.params.length);\n\n      for (var i = 0; i < ii; i++) {\n        var typesNames1 = getExpectedTypeNames(signature1, i, true);\n        var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n        if (!hasOverlap(typesNames1, typesNames2)) {\n          return false;\n        }\n      }\n\n      var len1 = signature1.params.length;\n      var len2 = signature2.params.length;\n      var restParam1 = hasRestParam(signature1.params);\n      var restParam2 = hasRestParam(signature2.params);\n      return restParam1 ? restParam2 ? len1 === len2 : len2 >= len1 : restParam2 ? len1 >= len2 : len1 === len2;\n    }\n    /**\n     * Create a typed function\n     * @param {String} name               The name for the typed function\n     * @param {Object.<string, function>} signaturesMap\n     *                                    An object with one or\n     *                                    multiple signatures as key, and the\n     *                                    function corresponding to the\n     *                                    signature as value.\n     * @return {function}  Returns the created typed function.\n     */\n\n\n    function createTypedFunction(name, signaturesMap) {\n      if (Object.keys(signaturesMap).length === 0) {\n        throw new SyntaxError('No signatures provided');\n      } // parse the signatures, and check for conflicts\n\n\n      var parsedSignatures = [];\n      Object.keys(signaturesMap).map(function (signature) {\n        return parseSignature(signature, signaturesMap[signature], typed.conversions);\n      }).filter(notNull).forEach(function (parsedSignature) {\n        // check whether this parameter conflicts with already parsed signatures\n        var conflictingSignature = findInArray(parsedSignatures, function (s) {\n          return hasConflictingParams(s, parsedSignature);\n        });\n\n        if (conflictingSignature) {\n          throw new TypeError('Conflicting signatures \"' + stringifyParams(conflictingSignature.params) + '\" and \"' + stringifyParams(parsedSignature.params) + '\".');\n        }\n\n        parsedSignatures.push(parsedSignature);\n      }); // split and filter the types of the signatures, and then order them\n\n      var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n        var params = parsedSignature ? splitParams(parsedSignature.params, false) : [];\n        return params.map(function (params) {\n          return {\n            params: params,\n            fn: parsedSignature.fn\n          };\n        });\n      }).filter(notNull);\n      signatures.sort(compareSignatures); // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n\n      var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n      var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n      var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n      var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n      var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n      var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n      var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5; // compile the tests\n\n      var tests = signatures.map(function (signature) {\n        return compileTests(signature.params);\n      });\n      var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n      var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n      var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n      var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n      var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n      var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n      var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n      var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n      var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n      var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n      var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n      var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk; // compile the functions\n\n      var fns = signatures.map(function (signature) {\n        return compileArgsPreprocessing(signature.params, signature.fn);\n      });\n      var fn0 = ok0 ? fns[0] : undef;\n      var fn1 = ok1 ? fns[1] : undef;\n      var fn2 = ok2 ? fns[2] : undef;\n      var fn3 = ok3 ? fns[3] : undef;\n      var fn4 = ok4 ? fns[4] : undef;\n      var fn5 = ok5 ? fns[5] : undef;\n      var len0 = ok0 ? signatures[0].params.length : -1;\n      var len1 = ok1 ? signatures[1].params.length : -1;\n      var len2 = ok2 ? signatures[2].params.length : -1;\n      var len3 = ok3 ? signatures[3].params.length : -1;\n      var len4 = ok4 ? signatures[4].params.length : -1;\n      var len5 = ok5 ? signatures[5].params.length : -1; // simple and generic, but also slow\n\n      var iStart = allOk ? 6 : 0;\n      var iEnd = signatures.length;\n\n      var generic = function generic() {\n        'use strict';\n\n        for (var i = iStart; i < iEnd; i++) {\n          if (tests[i](arguments)) {\n            return fns[i].apply(this, arguments);\n          }\n        }\n\n        throw createError(name, arguments, signatures);\n      }; // create the typed function\n      // fast, specialized version. Falls back to the slower, generic one if needed\n\n\n      var fn = function fn(arg0, arg1) {\n        'use strict';\n\n        if (arguments.length === len0 && test00(arg0) && test01(arg1)) {\n          return fn0.apply(fn, arguments);\n        }\n\n        if (arguments.length === len1 && test10(arg0) && test11(arg1)) {\n          return fn1.apply(fn, arguments);\n        }\n\n        if (arguments.length === len2 && test20(arg0) && test21(arg1)) {\n          return fn2.apply(fn, arguments);\n        }\n\n        if (arguments.length === len3 && test30(arg0) && test31(arg1)) {\n          return fn3.apply(fn, arguments);\n        }\n\n        if (arguments.length === len4 && test40(arg0) && test41(arg1)) {\n          return fn4.apply(fn, arguments);\n        }\n\n        if (arguments.length === len5 && test50(arg0) && test51(arg1)) {\n          return fn5.apply(fn, arguments);\n        }\n\n        return generic.apply(fn, arguments);\n      }; // attach name the typed function\n\n\n      try {\n        Object.defineProperty(fn, 'name', {\n          value: name\n        });\n      } catch (err) {// old browsers do not support Object.defineProperty and some don't support setting the name property\n        // the function name is not essential for the functioning, it's mostly useful for debugging,\n        // so it's fine to have unnamed functions.\n      } // attach signatures to the function\n\n\n      fn.signatures = createSignaturesMap(signatures);\n      return fn;\n    }\n    /**\n     * Test whether a type should be NOT be ignored\n     * @param {string} typeName\n     * @return {boolean}\n     */\n\n\n    function notIgnore(typeName) {\n      return typed.ignore.indexOf(typeName) === -1;\n    }\n    /**\n     * trim a string\n     * @param {string} str\n     * @return {string}\n     */\n\n\n    function trim(str) {\n      return str.trim();\n    }\n    /**\n     * Test whether a string is not empty\n     * @param {string} str\n     * @return {boolean}\n     */\n\n\n    function notEmpty(str) {\n      return !!str;\n    }\n    /**\n     * test whether a value is not strict equal to null\n     * @param {*} value\n     * @return {boolean}\n     */\n\n\n    function notNull(value) {\n      return value !== null;\n    }\n    /**\n     * Test whether a parameter has no types defined\n     * @param {Param} param\n     * @return {boolean}\n     */\n\n\n    function isInvalidParam(param) {\n      return param.types.length === 0;\n    }\n    /**\n     * Return all but the last items of an array\n     * @param {Array} arr\n     * @return {Array}\n     */\n\n\n    function initial(arr) {\n      return arr.slice(0, arr.length - 1);\n    }\n    /**\n     * return the last item of an array\n     * @param {Array} arr\n     * @return {*}\n     */\n\n\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n    /**\n     * Slice an array or function Arguments\n     * @param {Array | Arguments | IArguments} arr\n     * @param {number} start\n     * @param {number} [end]\n     * @return {Array}\n     */\n\n\n    function slice(arr, start, end) {\n      return Array.prototype.slice.call(arr, start, end);\n    }\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n\n\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n    /**\n     * Test whether two arrays have overlapping items\n     * @param {Array} array1\n     * @param {Array} array2\n     * @return {boolean} Returns true when at least one item exists in both arrays\n     */\n\n\n    function hasOverlap(array1, array2) {\n      for (var i = 0; i < array1.length; i++) {\n        if (contains(array2, array1[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Return the first item from an array for which test(arr[i]) returns true\n     * @param {Array} arr\n     * @param {function} test\n     * @return {* | undefined} Returns the first matching item\n     *                         or undefined when there is no match\n     */\n\n\n    function findInArray(arr, test) {\n      for (var i = 0; i < arr.length; i++) {\n        if (test(arr[i])) {\n          return arr[i];\n        }\n      }\n\n      return undefined;\n    }\n    /**\n     * Filter unique items of an array with strings\n     * @param {string[]} arr\n     * @return {string[]}\n     */\n\n\n    function uniq(arr) {\n      var entries = {};\n\n      for (var i = 0; i < arr.length; i++) {\n        entries[arr[i]] = true;\n      }\n\n      return Object.keys(entries);\n    }\n    /**\n     * Flat map the result invoking a callback for every item in an array.\n     * https://gist.github.com/samgiles/762ee337dff48623e729\n     * @param {Array} arr\n     * @param {function} callback\n     * @return {Array}\n     */\n\n\n    function flatMap(arr, callback) {\n      return Array.prototype.concat.apply([], arr.map(callback));\n    }\n    /**\n     * Retrieve the function name from a set of typed functions,\n     * and check whether the name of all functions match (if given)\n     * @param {function[]} fns\n     */\n\n\n    function getName(fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i]; // check whether the names are the same when defined\n\n        if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n          if (name === '') {\n            name = fn.name;\n          } else if (name !== fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    } // extract and merge all signatures of a list with typed functions\n\n\n    function extractSignatures(fns) {\n      var err;\n      var signaturesMap = {};\n\n      function validateUnique(_signature, _fn) {\n        if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n          err = new Error('Signature \"' + _signature + '\" is defined twice');\n          err.data = {\n            signature: _signature\n          };\n          throw err; // else: both signatures point to the same function, that's fine\n        }\n      }\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i]; // test whether this is a typed-function\n\n        if (typeof fn.signatures === 'object') {\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              validateUnique(signature, fn.signatures[signature]);\n              signaturesMap[signature] = fn.signatures[signature];\n            }\n          }\n        } else if (typeof fn.signature === 'string') {\n          validateUnique(fn.signature, fn);\n          signaturesMap[fn.signature] = fn;\n        } else {\n          err = new TypeError('Function is no typed-function (index: ' + i + ')');\n          err.data = {\n            index: i\n          };\n          throw err;\n        }\n      }\n\n      return signaturesMap;\n    }\n\n    typed = createTypedFunction('typed', {\n      'string, Object': createTypedFunction,\n      'Object': function (signaturesMap) {\n        // find existing name\n        var fns = [];\n\n        for (var signature in signaturesMap) {\n          if (signaturesMap.hasOwnProperty(signature)) {\n            fns.push(signaturesMap[signature]);\n          }\n        }\n\n        var name = getName(fns);\n        return createTypedFunction(name, signaturesMap);\n      },\n      '...Function': function (fns) {\n        return createTypedFunction(getName(fns), extractSignatures(fns));\n      },\n      'string, ...Function': function (name, fns) {\n        return createTypedFunction(name, extractSignatures(fns));\n      }\n    });\n    typed.create = create;\n    typed.types = _types;\n    typed.conversions = _conversions;\n    typed.ignore = _ignore;\n    typed.convert = convert;\n    typed.find = find;\n    /**\n     * add a type\n     * @param {{name: string, test: function}} type\n     * @param {boolean} [beforeObjectTest=true]\n     *                          If true, the new test will be inserted before\n     *                          the test with name 'Object' (if any), since\n     *                          tests for Object match Array and classes too.\n     */\n\n    typed.addType = function (type, beforeObjectTest) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      if (beforeObjectTest !== false) {\n        for (var i = 0; i < typed.types.length; i++) {\n          if (typed.types[i].name === 'Object') {\n            typed.types.splice(i, 0, type);\n            return;\n          }\n        }\n      }\n\n      typed.types.push(type);\n    }; // add a conversion\n\n\n    typed.addConversion = function (conversion) {\n      if (!conversion || typeof conversion.from !== 'string' || typeof conversion.to !== 'string' || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n});\n\n//# sourceURL=webpack://my-webpack-project/./node_modules/typed-function/typed-function.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jsxgraph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsxgraph */ \"./node_modules/jsxgraph/distrib/jsxgraphcore.js\");\n/* harmony import */ var jsxgraph__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsxgraph__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_controls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared-controls */ \"./src/shared-controls.js\");\n/* harmony import */ var _shared_three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared-three */ \"./src/shared-three.js\");\n/* harmony import */ var _three_cube__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./three-cube */ \"./src/three-cube.js\");\n/* harmony import */ var _three_plex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./three-plex */ \"./src/three-plex.js\");\n/* harmony import */ var _unfoldcube__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./unfoldcube */ \"./src/unfoldcube.js\");\n/* harmony import */ var _unfoldplex__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./unfoldplex */ \"./src/unfoldplex.js\");\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/range */ \"./node_modules/lodash/range.js\");\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_range__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\n/***************************\n * Initialization shared across all polytopes\n***************************/\n\nvar board3d;\nvar visitedNodes = [0],\n    points3d = [],\n    pathOrder3d = lodash_range__WEBPACK_IMPORTED_MODULE_7___default()(8);\nvar treeEdges = [];\nvar validEdges = [];\nvar boardState = {\n  currentNode: 0,\n  internal: false,\n  moved3d: false,\n  proposed3d: false\n};\nvar cubeConfig = {};\nvar simplexConfig = {};\nvar orthoConfig = {};\nvar selectedShape = \"cube\";\n\nvar getBoardObjects = function getBoardObjects() {\n  return {\n    points: points3d,\n    validEdges: validEdges,\n    treeEdges: treeEdges,\n    board: board3d,\n    boardState: boardState,\n    visitedNodes: visitedNodes\n  };\n};\n\nvar clearAll = function clearAll(config) {\n  points3d.forEach(function (point) {\n    board3d.removeObject(point);\n  });\n  validEdges.forEach(function (edge) {\n    board3d.removeObject(edge);\n  });\n  boardState = {\n    currentNode: 0,\n    internal: false,\n    moved3d: false,\n    proposed3d: false\n  };\n  visitedNodes = [0];\n  points3d = [];\n  pathOrder3d = config.defaultPathOrder;\n  treeEdges = [];\n  validEdges = [];\n};\n\nvar resetAll = function resetAll() {\n  selectShape(selectedShape);\n};\n/***************************\n * Cube specific functions\n***************************/\n\n\nvar isValidMoveRobertsGraph = function isValidMoveRobertsGraph(i, j) {\n  return i != j && i != (0,_unfoldcube__WEBPACK_IMPORTED_MODULE_5__.getOppositePoint)(j, points3d.length / 2);\n};\n\nvar makeCubeUnfolding = function makeCubeUnfolding(index, boardState) {\n  var absoluteIndex = pathOrder3d.indexOf(index);\n  var move = (0,_unfoldcube__WEBPACK_IMPORTED_MODULE_5__.absoluteIndexToDirection3d)(absoluteIndex);\n  (0,_three_cube__WEBPACK_IMPORTED_MODULE_3__.performUnfoldingCube)(move, boardState.internal);\n};\n\nvar undoCubeUnfolding = function undoCubeUnfolding(index, boardState) {\n  var absoluteIndex = pathOrder3d.indexOf(index);\n  var move = (0,_unfoldcube__WEBPACK_IMPORTED_MODULE_5__.absoluteIndexToDirection3d)(absoluteIndex);\n  (0,_three_cube__WEBPACK_IMPORTED_MODULE_3__.undoUnfoldingCube)(move, boardState.internal);\n};\n\nvar makeCubeMove = function makeCubeMove(i, boardObjectGetter, config) {\n  if (!config.isValidMove(i, boardState.currentNode)) {\n    return;\n  }\n\n  if (!boardState.proposed3d) {\n    return;\n  }\n\n  (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.makeMove3d)(i, boardObjectGetter, config);\n  var clickedNodeNewIndex = pathOrder3d.indexOf(i);\n  var reorder = (0,_unfoldcube__WEBPACK_IMPORTED_MODULE_5__.indicesAfterRidgeMove)(clickedNodeNewIndex, points3d.length / 2);\n  var newOrder = [];\n\n  for (var _i = 0; _i < reorder.length; _i++) {\n    newOrder.push(pathOrder3d[reorder[_i]]);\n  }\n\n  pathOrder3d = newOrder;\n  (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.redrawBoard)(i, getBoardObjects(), config);\n\n  if (visitedNodes.length == 8) {\n    highlightResetButton();\n  }\n};\n/***************************\n * Simplex specific functions\n***************************/\n\n\nvar isValidMoveSimplex = function isValidMoveSimplex(i, j) {\n  return i != j;\n};\n\nvar makeSimplexUnfolding = function makeSimplexUnfolding(index, boardState) {\n  var direction = (0,_unfoldplex__WEBPACK_IMPORTED_MODULE_6__.directionFromCenterSign)(index, pathOrder3d.center, pathOrder3d.sign);\n  (0,_three_plex__WEBPACK_IMPORTED_MODULE_4__.performUnfoldingSimplex)(direction, boardState.internal);\n};\n\nvar undoSimplexUnfolding = function undoSimplexUnfolding(index, boardState) {\n  var direction = (0,_unfoldplex__WEBPACK_IMPORTED_MODULE_6__.directionFromCenterSign)(index, boardState.currentNode, pathOrder3d.sign * -1);\n  (0,_three_plex__WEBPACK_IMPORTED_MODULE_4__.undoUnfoldingSimplex)(direction, boardState.internal);\n};\n\nvar makeSimplexMove = function makeSimplexMove(i, boardObjectGetter, config) {\n  if (!config.isValidMove(i, boardState.currentNode)) {\n    return;\n  }\n\n  if (!boardState.proposed3d) {\n    return;\n  }\n\n  (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.makeMove3d)(i, boardObjectGetter, config);\n  pathOrder3d.center = i;\n  pathOrder3d.sign *= -1;\n  (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.redrawBoard)(i, getBoardObjects(), config);\n\n  if (visitedNodes.length == 5) {\n    highlightResetButton();\n  }\n};\n/***************************\n * Orthoplex specific functions\n***************************/\n\n\nvar orthoplexCoords = [[0, 1, 0, 0], [0, 1, 0, 1], [0, 1, 1, 1], [0, 1, 1, 0], [0, 0, 1, 0], [0, 0, 1, 1], [0, 0, 0, 1], [0, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 1], [1, 0, 1, 1], [1, 0, 1, 0], [1, 1, 1, 0], [1, 1, 1, 1], [1, 1, 0, 1], [1, 1, 0, 0]];\nvar directions = [\"x\", \"y\", \"z\", \"w\"];\n\nvar whichIndexChanged = function whichIndexChanged(orth1, orth2) {\n  /* orth1 and orth2 are both arrays with four elements \n   * \n   * if their hamming distance is 1, return the index that changed\n   * if their hamming distance is not 1, return -1\n   * */\n  var changedCoord = -1;\n\n  for (var i = 0; i < orth1.length; i++) {\n    if (orth1[i] != orth2[i]) {\n      if (changedCoord == -1) {\n        changedCoord = i;\n      } else {\n        return -1;\n      }\n    }\n  }\n\n  return changedCoord;\n};\n\nvar makeOrthoplexUnfolding = function makeOrthoplexUnfolding(index, boardState) {\n  var orth1 = orthoplexCoords[boardState.currentNode];\n  var orth2 = orthoplexCoords[index];\n  var changedCoord = whichIndexChanged(orth1, orth2);\n  var direction = directions[changedCoord];\n  (0,_three_plex__WEBPACK_IMPORTED_MODULE_4__.performUnfoldingSimplex)(direction, boardState.internal);\n};\n\nvar undoOrthoplexUnfolding = function undoOrthoplexUnfolding(index, boardState) {\n  var orth1 = orthoplexCoords[boardState.currentNode];\n  var orth2 = orthoplexCoords[index];\n  var changedCoord = whichIndexChanged(orth1, orth2);\n  var direction = directions[changedCoord];\n  (0,_three_plex__WEBPACK_IMPORTED_MODULE_4__.undoUnfoldingSimplex)(direction, boardState.internal);\n};\n\nvar makeOrthoplexMove = function makeOrthoplexMove(i, boardObjectGetter, config) {\n  if (!isValidMoveOrthoplex(i, boardState.currentNode)) {\n    return;\n  }\n\n  if (!boardState.proposed3d) {\n    return;\n  }\n\n  (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.makeMove3d)(i, boardObjectGetter, config);\n  (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.redrawBoard)(i, getBoardObjects(), config);\n\n  if (visitedNodes.length == 16) {\n    highlightResetButton();\n  }\n};\n\nvar isValidMoveOrthoplex = function isValidMoveOrthoplex(i, j) {\n  var orth1 = orthoplexCoords[i];\n  var orth2 = orthoplexCoords[j];\n  var changedCoord = whichIndexChanged(orth1, orth2);\n  return changedCoord != -1;\n};\n/***************************\n * Configurations\n***************************/\n\n\ncubeConfig = {\n  isValidMove: isValidMoveRobertsGraph,\n  unfolder: makeCubeUnfolding,\n  undoUnfold: undoCubeUnfolding,\n  mover: makeCubeMove,\n  defaultPathOrder: lodash_range__WEBPACK_IMPORTED_MODULE_7___default()(8),\n  sceneConfiguration: {\n    cameraX: 4.5,\n    cameraY: 5.5,\n    cameraZ: 6.5\n  }\n};\nsimplexConfig = {\n  isValidMove: isValidMoveSimplex,\n  unfolder: makeSimplexUnfolding,\n  undoUnfold: undoSimplexUnfolding,\n  mover: makeSimplexMove,\n  defaultPathOrder: {\n    center: 0,\n    sign: 1\n  },\n  sceneConfiguration: {\n    cameraX: 3,\n    cameraY: 4,\n    cameraZ: 5\n  }\n};\northoConfig = {\n  isValidMove: isValidMoveOrthoplex,\n  unfolder: makeOrthoplexUnfolding,\n  undoUnfold: undoOrthoplexUnfolding,\n  mover: makeOrthoplexMove,\n  defaultPathOrder: [],\n  sceneConfiguration: {\n    cameraX: 4.5,\n    cameraY: 5.5,\n    cameraZ: 6.5\n  }\n};\n/***************************\n * Generic view setup\n***************************/\n\n(jsxgraph__WEBPACK_IMPORTED_MODULE_0___default().Options.text.fontSize) = 20;\nvar boardWidth = 1.1;\nboard3d = jsxgraph__WEBPACK_IMPORTED_MODULE_0___default().JSXGraph.initBoard(\"controls\", {\n  boundingbox: [-boardWidth, boardWidth, boardWidth, -boardWidth],\n  showCopyright: false,\n  zoomX: 0.9,\n  zoomY: 0.9,\n  showNavigation: false,\n  showInfobox: false,\n  drag: {\n    enabled: false\n  },\n  pan: {\n    enabled: false\n  }\n});\npoints3d = (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.createPoints)(8, getBoardObjects, cubeConfig);\npathOrder3d = lodash_range__WEBPACK_IMPORTED_MODULE_7___default()(8);\nvalidEdges = (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.createEdges)(getBoardObjects(), cubeConfig);\n(0,_three_cube__WEBPACK_IMPORTED_MODULE_3__.initializeCubeCanvas)(cubeConfig.sceneConfiguration);\nM.AutoInit();\nvar resetButton = document.querySelector(\".reset-button\");\nresetButton.addEventListener(\"click\", resetAll);\nvar SELECTED_CLASS = \"blue\";\n\nvar highlightResetButton = function highlightResetButton() {\n  var resetButton = document.querySelector(\".reset-button\");\n  resetButton.classList.remove(\"black\");\n  resetButton.classList.add(\"red\");\n};\n\nvar selectShape = function selectShape(shape) {\n  selectedShape = shape;\n  /*******\n  // Change colors of buttons\n  *******/\n\n  document.querySelectorAll(\".shape-selector\").forEach(function (sel) {\n    if (sel.classList.contains(SELECTED_CLASS)) {\n      sel.classList.remove(SELECTED_CLASS);\n    }\n  });\n  var selectedShapeElem = document.querySelector(\"#select-\".concat(shape));\n  selectedShapeElem.classList.add(SELECTED_CLASS);\n  var resetButton = document.querySelector(\".reset-button\");\n  resetButton.classList.remove(\"red\");\n  resetButton.classList.add(\"black\");\n  /*******\n  // Reset app using relevant configuration\n  *******/\n\n  var config;\n  var numPoints;\n\n  if (shape == \"cube\") {\n    (0,_three_cube__WEBPACK_IMPORTED_MODULE_3__.resetSceneCube)(cubeConfig.sceneConfiguration);\n    clearAll(cubeConfig);\n    points3d = (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.createPoints)(8, getBoardObjects, cubeConfig);\n    validEdges = (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.createEdges)(getBoardObjects(), cubeConfig);\n    (0,_three_cube__WEBPACK_IMPORTED_MODULE_3__.initializeCubeCanvas)(cubeConfig.sceneConfiguration);\n  } else if (shape == \"simplex\") {\n    (0,_three_plex__WEBPACK_IMPORTED_MODULE_4__.resetSceneSimplex)(simplexConfig.sceneConfiguration);\n    clearAll(simplexConfig);\n    points3d = (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.createPoints)(5, getBoardObjects, simplexConfig);\n    validEdges = (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.createEdges)(getBoardObjects(), simplexConfig);\n    (0,_three_plex__WEBPACK_IMPORTED_MODULE_4__.initializeSimplexCanvas)(simplexConfig.sceneConfiguration);\n  } else if (shape == \"orthoplex\") {\n    (0,_three_plex__WEBPACK_IMPORTED_MODULE_4__.resetSceneSimplex)(orthoConfig.sceneConfiguration);\n    clearAll(orthoConfig);\n    points3d = (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.createPoints)(16, getBoardObjects, orthoConfig);\n    validEdges = (0,_shared_controls__WEBPACK_IMPORTED_MODULE_1__.createEdges)(getBoardObjects(), orthoConfig);\n    (0,_three_plex__WEBPACK_IMPORTED_MODULE_4__.initializeSimplexCanvas)(orthoConfig.sceneConfiguration);\n  }\n};\n\ndocument.querySelector(\"#select-cube\").addEventListener(\"click\", function () {\n  return selectShape(\"cube\");\n});\ndocument.querySelector(\"#select-simplex\").addEventListener(\"click\", function () {\n  return selectShape(\"simplex\");\n});\ndocument.querySelector(\"#select-orthoplex\").addEventListener(\"click\", function () {\n  return selectShape(\"orthoplex\");\n});\n\n//# sourceURL=webpack://my-webpack-project/./src/index.js?");

/***/ }),

/***/ "./src/jsxhelpers.js":
/*!***************************!*\
  !*** ./src/jsxhelpers.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setPointColor\": () => (/* binding */ setPointColor)\n/* harmony export */ });\nvar setPointColor = function setPointColor(p, color) {\n  p.setAttribute({\n    fillColor: color,\n    strokeColor: color,\n    highlightStrokeColor: color,\n    highlightFillColor: color\n  });\n};\n\n//# sourceURL=webpack://my-webpack-project/./src/jsxhelpers.js?");

/***/ }),

/***/ "./src/shared-controls.js":
/*!********************************!*\
  !*** ./src/shared-controls.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEdges\": () => (/* binding */ createEdges),\n/* harmony export */   \"createControllerEdges\": () => (/* binding */ createControllerEdges),\n/* harmony export */   \"createPoints\": () => (/* binding */ createPoints),\n/* harmony export */   \"redrawBoard\": () => (/* binding */ redrawBoard),\n/* harmony export */   \"unproposeMove3d\": () => (/* binding */ unproposeMove3d),\n/* harmony export */   \"proposeMove3d\": () => (/* binding */ proposeMove3d),\n/* harmony export */   \"makeMove3d\": () => (/* binding */ makeMove3d)\n/* harmony export */ });\n/* harmony import */ var jsxgraph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsxgraph */ \"./node_modules/jsxgraph/distrib/jsxgraphcore.js\");\n/* harmony import */ var jsxgraph__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsxgraph__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _jsxhelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jsxhelpers */ \"./src/jsxhelpers.js\");\n/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/find */ \"./node_modules/lodash/find.js\");\n/* harmony import */ var lodash_find__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_find__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nvar CURRENT_NODE_COLOR = \"black\";\nvar VISITABLE_NODE_COLOR = \"#039be5\";\nvar VISITABLE_NODE_COLOR_INTERIOR = \"#026c9f\";\nvar UNVISITABLE_NODE_COLOR = \"red\";\nvar UNVISITABLE_NODE_COLOR_INTERIOR = \"#990000\";\n/*********\n * Handling edges:\n*********/\n\nvar createEdges = function createEdges(boardObjects, config) {\n  var edges = initializeControllerEdges(boardObjects, config);\n  boardObjects.validEdges = edges;\n  redrawBoard(0, boardObjects, config);\n  return edges;\n};\n\nvar initializeControllerEdges = function initializeControllerEdges(boardObjects, config) {\n  var board = boardObjects.board,\n      points = boardObjects.points;\n  var edges = [];\n\n  for (var i = 0; i < points.length; i++) {\n    var row = [];\n\n    for (var j = i + 1; j < points.length; j++) {\n      var line = void 0;\n\n      if (config.isValidMove(j, i)) {\n        line = board.create(\"line\", [points[i], points[j]], {\n          straightFirst: false,\n          straightLast: false,\n          strokeColor: 'black',\n          highlightStrokeColor: 'black',\n          strokeWidth: 0.3,\n          fixed: true\n        });\n      }\n\n      row.push(line);\n    }\n\n    edges.push(row);\n  }\n\n  return edges;\n};\n\nvar createControllerEdges = function createControllerEdges(i, boardObjects, config) {\n  var points = boardObjects.points,\n      validEdges = boardObjects.validEdges,\n      treeEdges = boardObjects.treeEdges,\n      board = boardObjects.board;\n\n  for (var j = 0; j < points.length; j++) {\n    for (var k = j + 1; k < points.length; k++) {\n      var strokeWidth = 0.3;\n\n      if (!config.isValidMove(k, j)) {\n        continue;\n      } // This shows the available edges that can be traversed to, but it\n      // looks better without it.\n\n      /*\n      if ((_.dropRight(visitedNodes).indexOf(j) == -1 && k == i) ||\n          (_.dropRight(visitedNodes).indexOf(k) == -1 && j == i)) {\n          strokeWidth = 3\n      }\n      */\n\n\n      validEdges[j][k - j - 1].setAttribute({\n        strokeWidth: strokeWidth,\n        strokeColor: 'black',\n        highlightStrokeColor: 'black'\n      });\n    }\n  }\n\n  for (var _j = 0; _j < treeEdges.length; _j++) {\n    var edge = treeEdges[_j];\n    var x = Math.min(edge[0], edge[1]);\n    var y = Math.max(edge[0], edge[1]);\n    validEdges[x][y - x - 1].setAttribute({\n      strokeWidth: 4,\n      strokeColor: VISITABLE_NODE_COLOR_INTERIOR,\n      highlightStrokeColor: VISITABLE_NODE_COLOR_INTERIOR\n    });\n  }\n};\n/*********\n * Handling points:\n*********/\n\nvar createPoints = function createPoints(n, boardObjectGetter, config) {\n  var points = [];\n  var boardObjects = boardObjectGetter();\n\n  for (var i = 1; i <= n; i++) {\n    var angle = ((n - 1) / 2 + i) * 2 * Math.PI / n;\n\n    if (n % 2 == 1) {\n      angle = ((n - 1 / 2) / 2 + i) * 2 * Math.PI / n;\n    }\n\n    var x = Math.cos(angle);\n    var y = Math.sin(angle);\n    var p = boardObjects.board.create('point', [x, y], {\n      name: '',\n      size: 20,\n      fixed: true,\n      color: \"black\"\n    });\n    points.push(p);\n  }\n\n  var _loop = function _loop(_i) {\n    points[_i].on(\"mouseover\", function () {\n      proposeMove3d(_i, boardObjectGetter, config);\n    });\n\n    points[_i].on(\"mouseout\", function () {\n      unproposeMove3d(_i, boardObjectGetter, config);\n    });\n\n    points[_i].on(\"mousedown\", function () {\n      config.mover(_i, boardObjectGetter, config);\n    });\n  };\n\n  for (var _i = 0; _i < points.length; _i++) {\n    _loop(_i);\n  }\n\n  return points;\n};\n/*********\n * Redraw board\n*********/\n\nvar redrawBoard = function redrawBoard(i, boardObjects, config) {\n  var points = boardObjects.points,\n      treeEdges = boardObjects.treeEdges,\n      board = boardObjects.board;\n  points.forEach(function (point) {\n    (0,_jsxhelpers__WEBPACK_IMPORTED_MODULE_1__.setPointColor)(point, VISITABLE_NODE_COLOR);\n  });\n\n  for (var j = 0; j < points.length; j++) {\n    if (!config.isValidMove(i, j)) {\n      (0,_jsxhelpers__WEBPACK_IMPORTED_MODULE_1__.setPointColor)(points[j], UNVISITABLE_NODE_COLOR);\n    }\n  }\n\n  var validNodes = [];\n  treeEdges.forEach(function (pair) {\n    var x = pair[0];\n    var y = pair[1];\n\n    if (x == i) {\n      (0,_jsxhelpers__WEBPACK_IMPORTED_MODULE_1__.setPointColor)(points[y], VISITABLE_NODE_COLOR_INTERIOR);\n      validNodes.push(y);\n    } else if (y == i) {\n      (0,_jsxhelpers__WEBPACK_IMPORTED_MODULE_1__.setPointColor)(points[x], VISITABLE_NODE_COLOR_INTERIOR);\n      validNodes.push(x);\n    } else {\n      if (validNodes.indexOf(x) == -1) {\n        (0,_jsxhelpers__WEBPACK_IMPORTED_MODULE_1__.setPointColor)(points[x], UNVISITABLE_NODE_COLOR_INTERIOR);\n      }\n\n      if (validNodes.indexOf(y) == -1) {\n        (0,_jsxhelpers__WEBPACK_IMPORTED_MODULE_1__.setPointColor)(points[y], UNVISITABLE_NODE_COLOR_INTERIOR);\n      }\n    }\n\n    console.log({\n      i: i,\n      x: x,\n      y: y,\n      validNodes: validNodes\n    });\n  });\n  (0,_jsxhelpers__WEBPACK_IMPORTED_MODULE_1__.setPointColor)(points[i], CURRENT_NODE_COLOR);\n  createControllerEdges(i, boardObjects, config);\n};\n/*********\n * Proposing, unproposing, and moving:\n*********/\n\nvar isUnorderedPairInArray = function isUnorderedPairInArray(pair, array) {\n  return lodash_find__WEBPACK_IMPORTED_MODULE_2___default()(array, function (edge) {\n    return Math.min(edge[0], edge[1]) == Math.min(pair[0], pair[1]) && Math.max(edge[0], edge[1]) == Math.max(pair[0], pair[1]);\n  });\n};\n\nvar unproposeMove3d = function unproposeMove3d(i, boardObjectGetter, config) {\n  var boardObjects = boardObjectGetter();\n  var points = boardObjects.points,\n      validEdges = boardObjects.validEdges,\n      treeEdges = boardObjects.treeEdges,\n      board = boardObjects.board,\n      boardState = boardObjects.boardState;\n\n  if (boardState.moved3d) {\n    boardState.moved3d = false;\n    return;\n  }\n\n  if (!boardState.proposed3d) {\n    return;\n  }\n\n  if (treeEdges.length == 0) {\n    return;\n  }\n\n  if (!boardState.internal) {\n    treeEdges.pop();\n  }\n\n  boardState.proposed3d = false;\n  config.undoUnfold(i, boardState);\n  redrawBoard(boardState.currentNode, boardObjects, config);\n};\nvar proposeMove3d = function proposeMove3d(i, boardObjectGetter, config) {\n  var boardObjects = boardObjectGetter();\n  var points = boardObjects.points,\n      validEdges = boardObjects.validEdges,\n      treeEdges = boardObjects.treeEdges,\n      board = boardObjects.board,\n      boardState = boardObjects.boardState,\n      visitedNodes = boardObjects.visitedNodes; // cannot double propose moves\n\n  if (boardState.proposed3d) {\n    return;\n  }\n\n  if (!config.isValidMove(i, boardState.currentNode)) {\n    return;\n  }\n\n  boardState.internal = false;\n\n  if (isUnorderedPairInArray([i, boardState.currentNode], treeEdges)) {\n    // okay, moving to another node in path\n    boardState.internal = true;\n  } else if (visitedNodes.indexOf(i) != -1) {\n    // cannot propose to visited node if it's not an internal move\n    return;\n  } else {\n    // making a totally new move:\n    treeEdges.push([boardState.currentNode, i]);\n  }\n\n  redrawBoard(i, boardObjects, config);\n  config.unfolder(i, boardState);\n  boardState.proposed3d = true;\n};\nvar makeMove3d = function makeMove3d(i, boardObjectGetter, config) {\n  var boardObjects = boardObjectGetter();\n  var points = boardObjects.points,\n      validEdges = boardObjects.validEdges,\n      treeEdges = boardObjects.treeEdges,\n      board = boardObjects.board,\n      boardState = boardObjects.boardState,\n      visitedNodes = boardObjects.visitedNodes;\n  boardState.proposed3d = false;\n\n  if (!config.isValidMove(i, boardState.currentNode)) {\n    return;\n  } // cannot move to non-internal \n\n\n  if (!boardState.internal && visitedNodes.indexOf(i) != -1) {\n    // otherwise, not allowed to visit other nodes on the path\n    return;\n  }\n\n  boardState.moved3d = true;\n\n  if (!boardState.internal) {\n    visitedNodes.push(i);\n  }\n\n  boardState.currentNode = i;\n};\n\n//# sourceURL=webpack://my-webpack-project/./src/shared-controls.js?");

/***/ }),

/***/ "./src/shared-three.js":
/*!*****************************!*\
  !*** ./src/shared-three.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"currentNodeMaterial\": () => (/* binding */ currentNodeMaterial),\n/* harmony export */   \"normalMaterial\": () => (/* binding */ normalMaterial),\n/* harmony export */   \"getThreeObjects\": () => (/* binding */ getThreeObjects),\n/* harmony export */   \"resetSceneObjects\": () => (/* binding */ resetSceneObjects),\n/* harmony export */   \"resizeCanvas\": () => (/* binding */ resizeCanvas),\n/* harmony export */   \"initializeCanvas\": () => (/* binding */ initializeCanvas)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls.js */ \"./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n\n\nvar canvas = document.querySelector(\"#viz\");\nvar container = document.querySelector(\"#vizcontainer\");\nvar scene, camera, renderer, controls;\nvar CURRENT_NODE_COLOR = 0x222222;\nvar transparent = true;\nvar opacity = 0.8;\nvar wireframe = false;\nvar currentNodeMaterial = new three__WEBPACK_IMPORTED_MODULE_1__.MeshLambertMaterial({\n  color: new three__WEBPACK_IMPORTED_MODULE_1__.Color(CURRENT_NODE_COLOR),\n  opacity: opacity,\n  wireframe: wireframe,\n  transparent: transparent\n});\nvar normalMaterial = new three__WEBPACK_IMPORTED_MODULE_1__.MeshLambertMaterial({\n  color: new three__WEBPACK_IMPORTED_MODULE_1__.Color(0x039be5),\n  opacity: opacity,\n  wireframe: wireframe,\n  transparent: transparent\n}); //export const normalMaterial = new MeshNormalMaterial({opacity, wireframe, transparent})\n\nvar getThreeObjects = function getThreeObjects() {\n  return {\n    scene: scene,\n    camera: camera,\n    renderer: renderer,\n    controls: controls\n  };\n};\nvar resetSceneObjects = function resetSceneObjects(sceneConfig) {\n  var cameraX = sceneConfig.cameraX,\n      cameraY = sceneConfig.cameraY,\n      cameraZ = sceneConfig.cameraZ;\n\n  while (scene.children.length > 0) {\n    scene.remove(scene.children[0]);\n  }\n\n  controls.target = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 0, 0);\n  camera.position.set(cameraX, cameraY, cameraZ);\n  camera.lookAt(0, 0, 0);\n  camera.zoom = 1;\n};\n\nvar render = function render() {\n  renderer.render(scene, camera);\n};\n\nvar resizeCanvas = function resizeCanvas() {\n  viz.width = container.scrollWidth * 2;\n  viz.height = container.scrollHeight * 2;\n};\nvar initializeCanvas = function initializeCanvas(sceneConfig) {\n  var cameraX = sceneConfig.cameraX,\n      cameraY = sceneConfig.cameraY,\n      cameraZ = sceneConfig.cameraZ;\n  resizeCanvas();\n  var width = canvas.width / 2;\n  var height = canvas.height / 2;\n  renderer = new three__WEBPACK_IMPORTED_MODULE_1__.WebGLRenderer({\n    canvas: canvas,\n    alpha: true,\n    antialias: true\n  });\n  renderer.setSize(width, height);\n  camera = new three__WEBPACK_IMPORTED_MODULE_1__.PerspectiveCamera(45, width / height, 1, 500);\n  controls = new three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_0__.OrbitControls(camera, canvas);\n  controls.rotateSpeed = 1.0;\n  controls.panSpeed = 0.8;\n  controls.enableZoom = true;\n  controls.staticMoving = true;\n  controls.dynamicDampingFactor = 0.3;\n  camera.position.set(cameraX, cameraY, cameraZ);\n  camera.lookAt(0, 0, 0);\n  controls.addEventListener('change', render);\n  scene = new three__WEBPACK_IMPORTED_MODULE_1__.Scene();\n  scene.background = null;\n  var light = new three__WEBPACK_IMPORTED_MODULE_1__.HemisphereLight(0xffffff, 0x080820, 1);\n  scene.add(light);\n};\n\n//# sourceURL=webpack://my-webpack-project/./src/shared-three.js?");

/***/ }),

/***/ "./src/three-cube.js":
/*!***************************!*\
  !*** ./src/three-cube.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"performUnfoldingCube\": () => (/* binding */ performUnfoldingCube),\n/* harmony export */   \"undoUnfoldingCube\": () => (/* binding */ undoUnfoldingCube),\n/* harmony export */   \"initializeCubeCanvas\": () => (/* binding */ initializeCubeCanvas),\n/* harmony export */   \"resetSceneCube\": () => (/* binding */ resetSceneCube)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _shared_three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared-three */ \"./src/shared-three.js\");\n\n\nvar canvas = document.querySelector(\"#viz\");\n/****************************\n * Cube-specific data structures\n****************************/\n\nvar centroid = {\n  x: 0,\n  y: 0,\n  z: 0\n};\nvar currentCube, lastCube; // move = {direction, sign, cube}\n\nvar renderedCubes = [];\nvar centroidToCubes = {};\n/****************************\n * Internal logic\n****************************/\n\nvar centroidToString = function centroidToString() {\n  return \"\".concat(centroid.x, \"-\").concat(centroid.y, \"-\").concat(centroid.z);\n};\n\nvar CUBE_SPACING = 1.1;\n\nvar updateCentroid = function updateCentroid(move) {\n  if (move.direction == 'x') {\n    centroid.x += move.sign * CUBE_SPACING;\n  } else if (move.direction == 'y') {\n    centroid.y += move.sign * CUBE_SPACING;\n  } else if (move.direction == 'z') {\n    centroid.z += move.sign * CUBE_SPACING;\n  }\n};\n\nvar undoUpdateCentroid = function undoUpdateCentroid(move) {\n  if (move.direction == 'x') {\n    centroid.x -= move.sign * CUBE_SPACING;\n  } else if (move.direction == 'y') {\n    centroid.y -= move.sign * CUBE_SPACING;\n  } else if (move.direction == 'z') {\n    centroid.z -= move.sign * CUBE_SPACING;\n  }\n};\n\nvar resetMaterialOnAllCubes = function resetMaterialOnAllCubes() {\n  renderedCubes.forEach(function (cube) {\n    cube.material = _shared_three__WEBPACK_IMPORTED_MODULE_0__.normalMaterial;\n  });\n};\n/****************************\n * Unfolding\n****************************/\n\n\nvar performUnfoldingCube = function performUnfoldingCube(move, internal) {\n  var _getThreeObjects = (0,_shared_three__WEBPACK_IMPORTED_MODULE_0__.getThreeObjects)(),\n      scene = _getThreeObjects.scene,\n      controls = _getThreeObjects.controls;\n\n  resetMaterialOnAllCubes();\n  updateCentroid(move);\n\n  if (internal) {\n    var cube = centroidToCubes[centroidToString()];\n    cube.material = _shared_three__WEBPACK_IMPORTED_MODULE_0__.currentNodeMaterial;\n    lastCube = currentCube;\n    currentCube = cube;\n  } else {\n    var boxGeom = new three__WEBPACK_IMPORTED_MODULE_1__.BoxGeometry(1, 1, 1); //const cube = new Mesh(boxGeom, new MeshLambertMaterial({color: new Color(0x0000ff)}))\n\n    var _cube = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(boxGeom, _shared_three__WEBPACK_IMPORTED_MODULE_0__.currentNodeMaterial);\n\n    _cube.position.set(centroid.x, centroid.y, centroid.z);\n\n    renderedCubes.push(_cube);\n    centroidToCubes[centroidToString()] = _cube;\n    lastCube = currentCube;\n    currentCube = _cube;\n    scene.add(_cube);\n    controls.target = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(centroid.x / 2, centroid.y / 2, centroid.z / 2);\n  }\n\n  render();\n};\nvar undoUnfoldingCube = function undoUnfoldingCube(lastMove, internal) {\n  var _getThreeObjects2 = (0,_shared_three__WEBPACK_IMPORTED_MODULE_0__.getThreeObjects)(),\n      scene = _getThreeObjects2.scene,\n      controls = _getThreeObjects2.controls;\n\n  if (!internal) {\n    var lastRenderedCube = renderedCubes.pop();\n    scene.remove(lastRenderedCube);\n  }\n\n  resetMaterialOnAllCubes();\n  lastCube.material = _shared_three__WEBPACK_IMPORTED_MODULE_0__.currentNodeMaterial;\n  currentCube = lastCube;\n  undoUpdateCentroid(lastMove);\n  controls.target = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(centroid.x / 2, centroid.y / 2, centroid.z / 2);\n  render();\n};\n/****************************\n * Rendering and resetting\n****************************/\n\nvar render = function render() {\n  var _getThreeObjects3 = (0,_shared_three__WEBPACK_IMPORTED_MODULE_0__.getThreeObjects)(),\n      scene = _getThreeObjects3.scene,\n      camera = _getThreeObjects3.camera,\n      renderer = _getThreeObjects3.renderer;\n\n  renderer.render(scene, camera);\n};\n\nvar initializeScene = function initializeScene() {\n  var _getThreeObjects4 = (0,_shared_three__WEBPACK_IMPORTED_MODULE_0__.getThreeObjects)(),\n      scene = _getThreeObjects4.scene;\n\n  var boxGeom = new three__WEBPACK_IMPORTED_MODULE_1__.BoxGeometry(1, 1, 1); //let cube = new Mesh(boxGeom, new MeshNormalMaterial(), {color: new Color(0x00ffff)});\n\n  var cube = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(boxGeom, _shared_three__WEBPACK_IMPORTED_MODULE_0__.currentNodeMaterial);\n  cube.position.set(centroid.x, centroid.y, centroid.z);\n  currentCube = cube;\n  lastCube = cube;\n  renderedCubes.push(cube);\n  scene.add(cube);\n  centroidToCubes[centroidToString()] = cube;\n  render();\n};\n\nvar initializeCubeCanvas = function initializeCubeCanvas(sceneConfig) {\n  (0,_shared_three__WEBPACK_IMPORTED_MODULE_0__.initializeCanvas)(sceneConfig);\n  initializeScene();\n};\nvar resetSceneCube = function resetSceneCube(sceneConfig) {\n  centroid = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  renderedCubes = [];\n  centroidToCubes = {};\n  (0,_shared_three__WEBPACK_IMPORTED_MODULE_0__.resetSceneObjects)(sceneConfig);\n  initializeScene();\n};\n\n//# sourceURL=webpack://my-webpack-project/./src/three-cube.js?");

/***/ }),

/***/ "./src/three-plex.js":
/*!***************************!*\
  !*** ./src/three-plex.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"performUnfoldingSimplex\": () => (/* binding */ performUnfoldingSimplex),\n/* harmony export */   \"undoUnfoldingSimplex\": () => (/* binding */ undoUnfoldingSimplex),\n/* harmony export */   \"initializeSimplexCanvas\": () => (/* binding */ initializeSimplexCanvas),\n/* harmony export */   \"resetSceneSimplex\": () => (/* binding */ resetSceneSimplex)\n/* harmony export */ });\n/* harmony import */ var lodash_flatten__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/flatten */ \"./node_modules/lodash/flatten.js\");\n/* harmony import */ var lodash_flatten__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_flatten__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_round__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/round */ \"./node_modules/lodash/round.js\");\n/* harmony import */ var lodash_round__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_round__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mathjs */ \"./node_modules/mathjs/lib/esm/entry/pureFunctionsAny.generated.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_geometries_ConvexGeometry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three/examples/jsm/geometries/ConvexGeometry.js */ \"./node_modules/three/examples/jsm/geometries/ConvexGeometry.js\");\n/* harmony import */ var _shared_three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shared-three */ \"./src/shared-three.js\");\n\n\n\n\n\n\nvar coordsToRendered = {};\nvar rendered = [];\nvar current, last, current4d, last4d;\n/****************************\n * Reflecting to make new simplices\n****************************/\n\nvar Ax = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.matrix)([[-1, 0, 0, 0], [2 / 3, 1, 0, 0], [2 / 3, 0, 1, 0], [2 / 3, 0, 0, 1]]);\nvar Ay = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.matrix)([[1, 2 / 3, 0, 0], [0, -1, 0, 0], [0, 2 / 3, 1, 0], [0, 2 / 3, 0, 1]]);\nvar Az = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.matrix)([[1, 0, 2 / 3, 0], [0, 1, 2 / 3, 0], [0, 0, -1, 0], [0, 0, 2 / 3, 1]]);\nvar Aw = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.matrix)([[1, 0, 0, 2 / 3], [0, 1, 0, 2 / 3], [0, 0, 1, 2 / 3], [0, 0, 0, -1]]);\n/****************************\n * Projecting from 4d coordinates to 3d\n****************************/\n\nvar s = -1 / 3; // (1 - sqrt(dim)) / (dim - 1), and dim=4\n//const s = 1/3 * (1 + Math.sqrt(3 * Math.sqrt(2) - 2))// (1 - sqrt(dim)) / (dim - 1), and dim=4\n\nvar FLATTENER = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.matrix)([[1, 0, 0, s], [0, 1, 0, s], [0, 0, 1, s]]);\n\nvar toThreeJsVectors = function toThreeJsVectors(vec3s) {\n  /* Takes a list of arrays with 3 elements.\n   * Returns a list of Vector3s constructed from those arrays*/\n  var result = [];\n  vec3s.forEach(function (arr3) {\n    result.push(new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(arr3[0], arr3[1], arr3[2]));\n  });\n  return result;\n};\n\nvar shrinkTowardOrthocenter = function shrinkTowardOrthocenter(x, orthX, factor) {\n  /* factor is between 0 and 1, and explains how much to shrink by */\n  return (x - orthX) * factor + orthX;\n};\n\nvar project = function project(mat, orthocenter) {\n  return toThreeJsVectors(flattenMatrixToVertexList(mat, orthocenter));\n};\n\nvar SHRINK_FACTOR = 1 / 1.2; //const SHRINK_FACTOR = 1\n\nvar flattenMatrixToVertexList = function flattenMatrixToVertexList(mat, orthocenter) {\n  var mat3 = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.multiply)(FLATTENER, mat)._data;\n\n  var verts = [[shrinkTowardOrthocenter(mat3[0][0], orthocenter[0], SHRINK_FACTOR), shrinkTowardOrthocenter(mat3[1][0], orthocenter[1], SHRINK_FACTOR), shrinkTowardOrthocenter(mat3[2][0], orthocenter[2], SHRINK_FACTOR)], [shrinkTowardOrthocenter(mat3[0][1], orthocenter[0], SHRINK_FACTOR), shrinkTowardOrthocenter(mat3[1][1], orthocenter[1], SHRINK_FACTOR), shrinkTowardOrthocenter(mat3[2][1], orthocenter[2], SHRINK_FACTOR)], [shrinkTowardOrthocenter(mat3[0][2], orthocenter[0], SHRINK_FACTOR), shrinkTowardOrthocenter(mat3[1][2], orthocenter[1], SHRINK_FACTOR), shrinkTowardOrthocenter(mat3[2][2], orthocenter[2], SHRINK_FACTOR)], [shrinkTowardOrthocenter(mat3[0][3], orthocenter[0], SHRINK_FACTOR), shrinkTowardOrthocenter(mat3[1][3], orthocenter[1], SHRINK_FACTOR), shrinkTowardOrthocenter(mat3[2][3], orthocenter[2], SHRINK_FACTOR)]];\n  return verts;\n};\n\nvar findOrthocenter = function findOrthocenter(mat) {\n  return (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.multiply)(FLATTENER, (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.multiply)(mat, [0.25, 0.25, 0.25, 0.25]))._data;\n};\n\nvar d = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.matrix)([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]);\ncurrent4d = d._data;\nlast4d = d._data; //const faces = [[0,1,2],[0,1,3],[0,2,3],[1,2,3]]\n\nvar faces = [[2, 1, 0], [0, 3, 2], [1, 3, 0], [2, 3, 1]];\n/****************************\n * Making and undoing moves\n****************************/\n\nvar performReflection = function performReflection(vertexMatrix, direction) {\n  var result;\n\n  if (direction == \"x\") {\n    result = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.multiply)(vertexMatrix, Ax)._data;\n  } else if (direction == \"y\") {\n    result = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.multiply)(vertexMatrix, Ay)._data;\n  } else if (direction == \"z\") {\n    result = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.multiply)(vertexMatrix, Az)._data;\n  } else if (direction == \"w\") {\n    result = (0,mathjs__WEBPACK_IMPORTED_MODULE_4__.multiply)(vertexMatrix, Aw)._data;\n  } else {\n    console.error(\"Invalid move direction: \", direction);\n  }\n\n  console.log({\n    direction: direction,\n    oldOrth: stringifyOrthocenter(vertexMatrix),\n    newOrth: stringifyOrthocenter(result)\n  });\n  return result;\n};\n\nvar performUnfoldingSimplex = function performUnfoldingSimplex(direction, internal) {\n  /* direction: one of \"x\", \"y\", \"z\", or \"w\" */\n  var _getThreeObjects = (0,_shared_three__WEBPACK_IMPORTED_MODULE_3__.getThreeObjects)(),\n      scene = _getThreeObjects.scene,\n      controls = _getThreeObjects.controls;\n\n  resetMaterial();\n  var newVerts = performReflection(current4d, direction);\n  var coordKey = stringifyOrthocenter(newVerts);\n  last = current;\n  last4d = current4d;\n  current4d = newVerts;\n\n  if (internal) {\n    var simplexRef = coordsToRendered[coordKey];\n    simplexRef.material = _shared_three__WEBPACK_IMPORTED_MODULE_3__.currentNodeMaterial;\n    current = simplexRef;\n    internal = true;\n  } else {\n    var orth = findOrthocenter(newVerts);\n    var simplexGeom = new three_examples_jsm_geometries_ConvexGeometry_js__WEBPACK_IMPORTED_MODULE_2__.ConvexGeometry(project(newVerts, orth));\n    var simplex = new three__WEBPACK_IMPORTED_MODULE_5__.Mesh(simplexGeom, _shared_three__WEBPACK_IMPORTED_MODULE_3__.currentNodeMaterial);\n    current = simplex;\n    rendered.push(simplex);\n    scene.add(simplex);\n    coordsToRendered[stringifyOrthocenter(newVerts)] = simplex;\n    render();\n    controls.target = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(orth[0] / 2, orth[1] / 2, orth[2] / 2); //controls.target = new Vector3(2*newVerts[0][0]/3, 2*newVerts[0][1]/3, 2*newVerts[0][2]/3)\n  }\n\n  render();\n};\nvar undoUnfoldingSimplex = function undoUnfoldingSimplex(lastDirection, internal) {\n  /*\n   * lastDirection: \"x\", \"y\", \"z\", or \"w\" (the last move that was made)\n   * internal: true or false, whether the last move was toward an already visited node\n   */\n  var _getThreeObjects2 = (0,_shared_three__WEBPACK_IMPORTED_MODULE_3__.getThreeObjects)(),\n      scene = _getThreeObjects2.scene,\n      controls = _getThreeObjects2.controls;\n\n  if (!internal) {\n    var lastRendered = rendered.pop();\n    scene.remove(lastRendered);\n  }\n\n  resetMaterial();\n  last.material = _shared_three__WEBPACK_IMPORTED_MODULE_3__.currentNodeMaterial;\n  current = last;\n  current4d = last4d;\n  var orth = findOrthocenter(current4d);\n  controls.target = new three__WEBPACK_IMPORTED_MODULE_5__.Vector3(orth[0] / 2, orth[1] / 2, orth[2] / 2); //controls.target = new Vector3(2*current4d[0][0]/3, 2*current4d[0][1]/3, 2*current4d[0][2]/3)\n\n  render();\n};\n/****************************\n * Rendering and resetting\n****************************/\n\nvar resetMaterial = function resetMaterial() {\n  rendered.forEach(function (obj) {\n    obj.material = _shared_three__WEBPACK_IMPORTED_MODULE_3__.normalMaterial;\n  });\n};\n\nvar stringifyOrthocenter = function stringifyOrthocenter(vertices) {\n  var orthocenter = findOrthocenter(vertices);\n  var stringified = \"\";\n  lodash_flatten__WEBPACK_IMPORTED_MODULE_0___default()(orthocenter).forEach(function (coord) {\n    stringified += \"\".concat(lodash_round__WEBPACK_IMPORTED_MODULE_1___default()(coord, 1), \",\");\n  });\n  return stringified;\n};\n\nvar render = function render() {\n  var _getThreeObjects3 = (0,_shared_three__WEBPACK_IMPORTED_MODULE_3__.getThreeObjects)(),\n      scene = _getThreeObjects3.scene,\n      camera = _getThreeObjects3.camera,\n      renderer = _getThreeObjects3.renderer;\n\n  renderer.render(scene, camera);\n};\n\nvar initializeSimplexScene = function initializeSimplexScene() {\n  var _getThreeObjects4 = (0,_shared_three__WEBPACK_IMPORTED_MODULE_3__.getThreeObjects)(),\n      scene = _getThreeObjects4.scene;\n\n  var orth = findOrthocenter(d);\n  var simplexGeom = new three_examples_jsm_geometries_ConvexGeometry_js__WEBPACK_IMPORTED_MODULE_2__.ConvexGeometry(project(d, orth));\n  var simplex = new three__WEBPACK_IMPORTED_MODULE_5__.Mesh(simplexGeom, _shared_three__WEBPACK_IMPORTED_MODULE_3__.currentNodeMaterial);\n  current4d = d._data;\n  last4d = d._data;\n  current = simplex;\n  last = simplex;\n  rendered.push(simplex);\n  scene.add(simplex);\n  coordsToRendered[stringifyOrthocenter(d._data)] = simplex;\n  render();\n};\n\nvar initializeSimplexCanvas = function initializeSimplexCanvas(sceneConfig) {\n  (0,_shared_three__WEBPACK_IMPORTED_MODULE_3__.initializeCanvas)(sceneConfig);\n  initializeSimplexScene();\n};\nvar resetSceneSimplex = function resetSceneSimplex(sceneConfig) {\n  rendered = [];\n  coordsToRendered = {};\n  (0,_shared_three__WEBPACK_IMPORTED_MODULE_3__.resetSceneObjects)(sceneConfig);\n  initializeSimplexScene();\n};\n\n//# sourceURL=webpack://my-webpack-project/./src/three-plex.js?");

/***/ }),

/***/ "./src/unfoldcube.js":
/*!***************************!*\
  !*** ./src/unfoldcube.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getOppositePoint\": () => (/* binding */ getOppositePoint),\n/* harmony export */   \"absoluteIndexToDirection2d\": () => (/* binding */ absoluteIndexToDirection2d),\n/* harmony export */   \"absoluteIndexToDirection3d\": () => (/* binding */ absoluteIndexToDirection3d),\n/* harmony export */   \"indicesAfterRidgeMove\": () => (/* binding */ indicesAfterRidgeMove)\n/* harmony export */ });\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/range */ \"./node_modules/lodash/range.js\");\n/* harmony import */ var lodash_range__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_range__WEBPACK_IMPORTED_MODULE_0__);\n\nvar N_2D = 3;\nvar N_3D = 4;\nvar getOppositePoint = function getOppositePoint(i, n) {\n  return (i + n) % (2 * n);\n};\nvar absoluteIndexToDirection2d = function absoluteIndexToDirection2d(i) {\n  // based off which ridge to unfold against,\n  // return the updates in coordinates\n  if (i == 1) {\n    return {\n      direction: 'x',\n      sign: 1\n    };\n  }\n\n  if (i == 2) {\n    return {\n      direction: 'y',\n      sign: -1\n    };\n  }\n\n  if (i == 4) {\n    return {\n      direction: 'x',\n      sign: -1\n    };\n  }\n\n  if (i == 5) {\n    return {\n      direction: 'y',\n      sign: 1\n    };\n  }\n};\nvar absoluteIndexToDirection3d = function absoluteIndexToDirection3d(i) {\n  // based off which ridge to unfold against,\n  // return the updates in coordinates\n  if (i == 1) {\n    return {\n      direction: 'x',\n      sign: 1\n    };\n  }\n\n  if (i == 2) {\n    return {\n      direction: 'y',\n      sign: 1\n    };\n  }\n\n  if (i == 3) {\n    return {\n      direction: 'z',\n      sign: 1\n    };\n  }\n\n  if (i == 5) {\n    return {\n      direction: 'x',\n      sign: -1\n    };\n  }\n\n  if (i == 6) {\n    return {\n      direction: 'y',\n      sign: -1\n    };\n  }\n\n  if (i == 7) {\n    return {\n      direction: 'z',\n      sign: -1\n    };\n  }\n};\nvar indicesAfterRidgeMove = function indicesAfterRidgeMove(i, dim) {\n  // returns array of indices after moving point. dim-dimensional cube\n  var indices = lodash_range__WEBPACK_IMPORTED_MODULE_0___default()(2 * dim);\n  var ix = getOppositePoint(i, dim);\n  indices[0] = i;\n  indices[i] = dim;\n  indices[dim] = ix;\n  indices[ix] = 0;\n  return indices;\n};\n\n//# sourceURL=webpack://my-webpack-project/./src/unfoldcube.js?");

/***/ }),

/***/ "./src/unfoldplex.js":
/*!***************************!*\
  !*** ./src/unfoldplex.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"directionsFromCenterSign\": () => (/* binding */ directionsFromCenterSign),\n/* harmony export */   \"directionFromCenterSign\": () => (/* binding */ directionFromCenterSign)\n/* harmony export */ });\nvar directionsFromCenterSign = function directionsFromCenterSign(center, sign) {\n  var arr = [\"i\", \"x\", \"y\", \"z\", \"w\"];\n\n  if (sign == -1) {\n    arr = [\"i\", \"w\", \"z\", \"y\", \"x\"];\n  }\n\n  for (var i = 0; i < center; i++) {\n    arr.unshift(arr.pop());\n  }\n\n  return arr;\n};\nvar directionFromCenterSign = function directionFromCenterSign(i, center, sign) {\n  var directions = directionsFromCenterSign(center, sign);\n  return directions[i];\n};\n\n//# sourceURL=webpack://my-webpack-project/./src/unfoldplex.js?");

/***/ }),

/***/ "?d4c0":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://my-webpack-project/crypto_(ignored)?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/amd define */
/******/ 	(() => {
/******/ 		__webpack_require__.amdD = function () {
/******/ 			throw new Error('define cannot be used indirect');
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/amd options */
/******/ 	(() => {
/******/ 		__webpack_require__.amdO = {};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;